// third_party/blink/public/mojom/webauthn/virtual_authenticator.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
blink.test.mojom.ClientToAuthenticatorProtocol = {};
blink.test.mojom.ClientToAuthenticatorProtocol.U2F;
blink.test.mojom.ClientToAuthenticatorProtocol.CTAP2;
goog.provide('blink.test.mojom.VirtualAuthenticator');
goog.provide('blink.test.mojom.VirtualAuthenticatorImpl');
goog.provide('blink.test.mojom.VirtualAuthenticatorPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
blink.test.mojom.VirtualAuthenticator;

/** @interface */
blink.test.mojom.VirtualAuthenticatorImpl = class {
  /**
   * @return {Promise}
   */
  getUniqueId() {}
  /**
   * @param { !blink.test.mojom.RegisteredKey } key
   * @return {Promise}
   */
  addRegistration(key) {}
  /**
   * @return {Promise}
   */
  getRegistrations() {}
  /**
   * @param { !Array<number> } keyHandle
   * @return {Promise}
   */
  removeRegistration(keyHandle) {}
  /**
   * @return {Promise}
   */
  clearRegistrations() {}
  /**
   * @param { !boolean } verified
   * @return {Promise}
   */
  setUserVerified(verified) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { blink.test.mojom.VirtualAuthenticatorImpl }
 */
blink.test.mojom.VirtualAuthenticatorPtr = class {
  /**
   * @return {Promise}
   */
  getUniqueId() {}
  /**
   * @param { !blink.test.mojom.RegisteredKey } key
   * @return {Promise}
   */
  addRegistration(key) {}
  /**
   * @return {Promise}
   */
  getRegistrations() {}
  /**
   * @param { !Array<number> } keyHandle
   * @return {Promise}
   */
  removeRegistration(keyHandle) {}
  /**
   * @return {Promise}
   */
  clearRegistrations() {}
  /**
   * @param { !boolean } verified
   * @return {Promise}
   */
  setUserVerified(verified) {}
};

goog.provide('blink.test.mojom.VirtualAuthenticatorManager');
goog.provide('blink.test.mojom.VirtualAuthenticatorManagerImpl');
goog.provide('blink.test.mojom.VirtualAuthenticatorManagerPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
blink.test.mojom.VirtualAuthenticatorManager;

/** @interface */
blink.test.mojom.VirtualAuthenticatorManagerImpl = class {
  /**
   * @param { !blink.test.mojom.VirtualAuthenticatorOptions } options
   * @return {Promise}
   */
  createAuthenticator(options) {}
  /**
   * @return {Promise}
   */
  getAuthenticators() {}
  /**
   * @param { !string } id
   * @return {Promise}
   */
  removeAuthenticator(id) {}
  /**
   * @return {Promise}
   */
  clearAuthenticators() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { blink.test.mojom.VirtualAuthenticatorManagerImpl }
 */
blink.test.mojom.VirtualAuthenticatorManagerPtr = class {
  /**
   * @param { !blink.test.mojom.VirtualAuthenticatorOptions } options
   * @return {Promise}
   */
  createAuthenticator(options) {}
  /**
   * @return {Promise}
   */
  getAuthenticators() {}
  /**
   * @param { !string } id
   * @return {Promise}
   */
  removeAuthenticator(id) {}
  /**
   * @return {Promise}
   */
  clearAuthenticators() {}
};

goog.provide('blink.test.mojom.VirtualAuthenticatorOptions');

blink.test.mojom.VirtualAuthenticatorOptions = class {
  constructor() {
    /** @type { !blink.test.mojom.ClientToAuthenticatorProtocol } */
    this.protocol;
    /** @type { !blink.mojom.AuthenticatorTransport } */
    this.transport;
    /** @type { !blink.mojom.AuthenticatorAttachment } */
    this.attachment;
    /** @type { !boolean } */
    this.hasResidentKey;
    /** @type { !boolean } */
    this.hasUserVerification;
    /** @type { !boolean } */
    this.isUserPresent;
  }
};

goog.provide('blink.test.mojom.RegisteredKey');

blink.test.mojom.RegisteredKey = class {
  constructor() {
    /** @type { !Array<number> } */
    this.keyHandle;
    /** @type { !string } */
    this.rpId;
    /** @type { !Array<number> } */
    this.privateKey;
    /** @type { !number } */
    this.counter;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_GetUniqueId_Params');

blink.test.mojom.VirtualAuthenticator_GetUniqueId_Params = class {
  constructor() {
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_GetUniqueId_ResponseParams');

blink.test.mojom.VirtualAuthenticator_GetUniqueId_ResponseParams = class {
  constructor() {
    /** @type { !string } */
    this.id;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_AddRegistration_Params');

blink.test.mojom.VirtualAuthenticator_AddRegistration_Params = class {
  constructor() {
    /** @type { !blink.test.mojom.RegisteredKey } */
    this.key;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_AddRegistration_ResponseParams');

blink.test.mojom.VirtualAuthenticator_AddRegistration_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.added;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_GetRegistrations_Params');

blink.test.mojom.VirtualAuthenticator_GetRegistrations_Params = class {
  constructor() {
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_GetRegistrations_ResponseParams');

blink.test.mojom.VirtualAuthenticator_GetRegistrations_ResponseParams = class {
  constructor() {
    /** @type { !Array<blink.test.mojom.RegisteredKey> } */
    this.keys;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_RemoveRegistration_Params');

blink.test.mojom.VirtualAuthenticator_RemoveRegistration_Params = class {
  constructor() {
    /** @type { !Array<number> } */
    this.keyHandle;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_RemoveRegistration_ResponseParams');

blink.test.mojom.VirtualAuthenticator_RemoveRegistration_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.removed;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_ClearRegistrations_Params');

blink.test.mojom.VirtualAuthenticator_ClearRegistrations_Params = class {
  constructor() {
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_ClearRegistrations_ResponseParams');

blink.test.mojom.VirtualAuthenticator_ClearRegistrations_ResponseParams = class {
  constructor() {
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_SetUserVerified_Params');

blink.test.mojom.VirtualAuthenticator_SetUserVerified_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.verified;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticator_SetUserVerified_ResponseParams');

blink.test.mojom.VirtualAuthenticator_SetUserVerified_ResponseParams = class {
  constructor() {
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticatorManager_CreateAuthenticator_Params');

blink.test.mojom.VirtualAuthenticatorManager_CreateAuthenticator_Params = class {
  constructor() {
    /** @type { !blink.test.mojom.VirtualAuthenticatorOptions } */
    this.options;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticatorManager_CreateAuthenticator_ResponseParams');

blink.test.mojom.VirtualAuthenticatorManager_CreateAuthenticator_ResponseParams = class {
  constructor() {
    /** @type { !blink.test.mojom.VirtualAuthenticatorPtr } */
    this.authenticator;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticatorManager_GetAuthenticators_Params');

blink.test.mojom.VirtualAuthenticatorManager_GetAuthenticators_Params = class {
  constructor() {
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticatorManager_GetAuthenticators_ResponseParams');

blink.test.mojom.VirtualAuthenticatorManager_GetAuthenticators_ResponseParams = class {
  constructor() {
    /** @type { !Array<blink.test.mojom.VirtualAuthenticatorPtr> } */
    this.authenticators;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticatorManager_RemoveAuthenticator_Params');

blink.test.mojom.VirtualAuthenticatorManager_RemoveAuthenticator_Params = class {
  constructor() {
    /** @type { !string } */
    this.id;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticatorManager_RemoveAuthenticator_ResponseParams');

blink.test.mojom.VirtualAuthenticatorManager_RemoveAuthenticator_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.removed;
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticatorManager_ClearAuthenticators_Params');

blink.test.mojom.VirtualAuthenticatorManager_ClearAuthenticators_Params = class {
  constructor() {
  }
};

goog.provide('blink.test.mojom.VirtualAuthenticatorManager_ClearAuthenticators_ResponseParams');

blink.test.mojom.VirtualAuthenticatorManager_ClearAuthenticators_ResponseParams = class {
  constructor() {
  }
};
