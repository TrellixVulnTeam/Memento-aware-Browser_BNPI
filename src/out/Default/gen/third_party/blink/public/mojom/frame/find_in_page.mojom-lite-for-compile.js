// third_party/blink/public/mojom/frame/find_in_page.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('gfx.mojom.Rect');
goog.require('gfx.mojom.RectF');
goog.require('gfx.mojom.PointF');




goog.provide('blink.mojom.StopFindAction');
goog.provide('blink.mojom.StopFindActionSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.StopFindActionSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.StopFindAction = {
  
  kStopFindActionClearSelection: 0,
  kStopFindActionKeepSelection: 1,
  kStopFindActionActivateSelection: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};

goog.provide('blink.mojom.FindMatchUpdateType');
goog.provide('blink.mojom.FindMatchUpdateTypeSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
blink.mojom.FindMatchUpdateTypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
blink.mojom.FindMatchUpdateType = {
  
  kFinalUpdate: 0,
  kMoreUpdatesComing: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};



goog.provide('blink.mojom.FindInPage');
goog.provide('blink.mojom.FindInPageReceiver');
goog.provide('blink.mojom.FindInPageCallbackRouter');
goog.provide('blink.mojom.FindInPageInterface');
goog.provide('blink.mojom.FindInPageRemote');
goog.provide('blink.mojom.FindInPagePendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.FindInPagePendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};

/** @interface */
blink.mojom.FindInPageInterface = class {
  
  /**
   * @param { !number } requestId
   * @param { !string } searchText
   * @param { !blink.mojom.FindOptions } options
   */

  find(requestId, searchText, options) {}
  
  /**
   * @param { !blink.mojom.StopFindAction } action
   */

  stopFinding(action) {}
  
  /**
   */

  clearActiveFindMatch() {}
  
  /**
   * @param { !gfx.mojom.PointF } point
   * @return {Promise<{
        distance: !number,
   *  }>}
   */

  getNearestFindResult(point) {}
  
  /**
   * @param { !number } requestId
   * @param { !gfx.mojom.PointF } point
   */

  activateNearestFindResult(requestId, point) {}
  
  /**
   * @param { !blink.mojom.FindInPageClientRemote } client
   */

  setClient(client) {}
  
  /**
   * @param { !number } currentVersion
   * @return {Promise<{
        version: !number,
        rects: !Array<!gfx.mojom.RectF>,
        activeMatchRect: !gfx.mojom.RectF,
   *  }>}
   */

  findMatchRects(currentVersion) {}
};

/**
 * @export
 * @implements { blink.mojom.FindInPageInterface }
 */
blink.mojom.FindInPageRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.FindInPagePendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.FindInPagePendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.FindInPagePendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } requestId
   * @param { !string } searchText
   * @param { !blink.mojom.FindOptions } options
   */

  find(
      requestId,
      searchText,
      options) {
    this.proxy.sendMessage(
        1032980260,
        blink.mojom.FindInPage_Find_ParamsSpec.$,
        null,
        [
          requestId,
          searchText,
          options
        ]);
  }

  
  /**
   * @param { !blink.mojom.StopFindAction } action
   */

  stopFinding(
      action) {
    this.proxy.sendMessage(
        2007969474,
        blink.mojom.FindInPage_StopFinding_ParamsSpec.$,
        null,
        [
          action
        ]);
  }

  
  /**
   */

  clearActiveFindMatch() {
    this.proxy.sendMessage(
        1272445113,
        blink.mojom.FindInPage_ClearActiveFindMatch_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   * @param { !gfx.mojom.PointF } point
   * @return {Promise<{
        distance: !number,
   *  }>}
   */

  getNearestFindResult(
      point) {
    return this.proxy.sendMessage(
        1565164702,
        blink.mojom.FindInPage_GetNearestFindResult_ParamsSpec.$,
        blink.mojom.FindInPage_GetNearestFindResult_ResponseParamsSpec.$,
        [
          point
        ]);
  }

  
  /**
   * @param { !number } requestId
   * @param { !gfx.mojom.PointF } point
   */

  activateNearestFindResult(
      requestId,
      point) {
    this.proxy.sendMessage(
        1859389563,
        blink.mojom.FindInPage_ActivateNearestFindResult_ParamsSpec.$,
        null,
        [
          requestId,
          point
        ]);
  }

  
  /**
   * @param { !blink.mojom.FindInPageClientRemote } client
   */

  setClient(
      client) {
    this.proxy.sendMessage(
        960212517,
        blink.mojom.FindInPage_SetClient_ParamsSpec.$,
        null,
        [
          client
        ]);
  }

  
  /**
   * @param { !number } currentVersion
   * @return {Promise<{
        version: !number,
        rects: !Array<!gfx.mojom.RectF>,
        activeMatchRect: !gfx.mojom.RectF,
   *  }>}
   */

  findMatchRects(
      currentVersion) {
    return this.proxy.sendMessage(
        429688327,
        blink.mojom.FindInPage_FindMatchRects_ParamsSpec.$,
        blink.mojom.FindInPage_FindMatchRects_ResponseParamsSpec.$,
        [
          currentVersion
        ]);
  }
};

/**
 * An object which receives request messages for the FindInPage
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.FindInPageReceiver = class {
  /**
   * @param {!blink.mojom.FindInPageInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.FindInPageRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.FindInPageRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.FindInPageRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1032980260,
        blink.mojom.FindInPage_Find_ParamsSpec.$,
        null,
        impl.find.bind(impl));
    this.helper_internal_.registerHandler(
        2007969474,
        blink.mojom.FindInPage_StopFinding_ParamsSpec.$,
        null,
        impl.stopFinding.bind(impl));
    this.helper_internal_.registerHandler(
        1272445113,
        blink.mojom.FindInPage_ClearActiveFindMatch_ParamsSpec.$,
        null,
        impl.clearActiveFindMatch.bind(impl));
    this.helper_internal_.registerHandler(
        1565164702,
        blink.mojom.FindInPage_GetNearestFindResult_ParamsSpec.$,
        blink.mojom.FindInPage_GetNearestFindResult_ResponseParamsSpec.$,
        impl.getNearestFindResult.bind(impl));
    this.helper_internal_.registerHandler(
        1859389563,
        blink.mojom.FindInPage_ActivateNearestFindResult_ParamsSpec.$,
        null,
        impl.activateNearestFindResult.bind(impl));
    this.helper_internal_.registerHandler(
        960212517,
        blink.mojom.FindInPage_SetClient_ParamsSpec.$,
        null,
        impl.setClient.bind(impl));
    this.helper_internal_.registerHandler(
        429688327,
        blink.mojom.FindInPage_FindMatchRects_ParamsSpec.$,
        blink.mojom.FindInPage_FindMatchRects_ResponseParamsSpec.$,
        impl.findMatchRects.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.FindInPage = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.FindInPage";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.FindInPageRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.FindInPageRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the FindInPage
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.FindInPageCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.FindInPageRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.FindInPageRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.find =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1032980260,
        blink.mojom.FindInPage_Find_ParamsSpec.$,
        null,
        this.find.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.stopFinding =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2007969474,
        blink.mojom.FindInPage_StopFinding_ParamsSpec.$,
        null,
        this.stopFinding.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearActiveFindMatch =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1272445113,
        blink.mojom.FindInPage_ClearActiveFindMatch_ParamsSpec.$,
        null,
        this.clearActiveFindMatch.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getNearestFindResult =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1565164702,
        blink.mojom.FindInPage_GetNearestFindResult_ParamsSpec.$,
        blink.mojom.FindInPage_GetNearestFindResult_ResponseParamsSpec.$,
        this.getNearestFindResult.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.activateNearestFindResult =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1859389563,
        blink.mojom.FindInPage_ActivateNearestFindResult_ParamsSpec.$,
        null,
        this.activateNearestFindResult.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setClient =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        960212517,
        blink.mojom.FindInPage_SetClient_ParamsSpec.$,
        null,
        this.setClient.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.findMatchRects =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        429688327,
        blink.mojom.FindInPage_FindMatchRects_ParamsSpec.$,
        blink.mojom.FindInPage_FindMatchRects_ResponseParamsSpec.$,
        this.findMatchRects.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.FindInPageClient');
goog.provide('blink.mojom.FindInPageClientReceiver');
goog.provide('blink.mojom.FindInPageClientCallbackRouter');
goog.provide('blink.mojom.FindInPageClientInterface');
goog.provide('blink.mojom.FindInPageClientRemote');
goog.provide('blink.mojom.FindInPageClientPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
blink.mojom.FindInPageClientPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};

/** @interface */
blink.mojom.FindInPageClientInterface = class {
  
  /**
   * @param { !number } requestId
   * @param { !number } numberOfMatches
   * @param { !blink.mojom.FindMatchUpdateType } updateType
   */

  setNumberOfMatches(requestId, numberOfMatches, updateType) {}
  
  /**
   * @param { !number } requestId
   * @param { !gfx.mojom.Rect } activeMatchRect
   * @param { !number } activeMatchOrdinal
   * @param { !blink.mojom.FindMatchUpdateType } updateType
   */

  setActiveMatch(requestId, activeMatchRect, activeMatchOrdinal, updateType) {}
};

/**
 * @export
 * @implements { blink.mojom.FindInPageClientInterface }
 */
blink.mojom.FindInPageClientRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!blink.mojom.FindInPageClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          blink.mojom.FindInPageClientPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!blink.mojom.FindInPageClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } requestId
   * @param { !number } numberOfMatches
   * @param { !blink.mojom.FindMatchUpdateType } updateType
   */

  setNumberOfMatches(
      requestId,
      numberOfMatches,
      updateType) {
    this.proxy.sendMessage(
        1013958339,
        blink.mojom.FindInPageClient_SetNumberOfMatches_ParamsSpec.$,
        null,
        [
          requestId,
          numberOfMatches,
          updateType
        ]);
  }

  
  /**
   * @param { !number } requestId
   * @param { !gfx.mojom.Rect } activeMatchRect
   * @param { !number } activeMatchOrdinal
   * @param { !blink.mojom.FindMatchUpdateType } updateType
   */

  setActiveMatch(
      requestId,
      activeMatchRect,
      activeMatchOrdinal,
      updateType) {
    this.proxy.sendMessage(
        1440334834,
        blink.mojom.FindInPageClient_SetActiveMatch_ParamsSpec.$,
        null,
        [
          requestId,
          activeMatchRect,
          activeMatchOrdinal,
          updateType
        ]);
  }
};

/**
 * An object which receives request messages for the FindInPageClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
blink.mojom.FindInPageClientReceiver = class {
  /**
   * @param {!blink.mojom.FindInPageClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!blink.mojom.FindInPageClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        blink.mojom.FindInPageClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.FindInPageClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1013958339,
        blink.mojom.FindInPageClient_SetNumberOfMatches_ParamsSpec.$,
        null,
        impl.setNumberOfMatches.bind(impl));
    this.helper_internal_.registerHandler(
        1440334834,
        blink.mojom.FindInPageClient_SetActiveMatch_ParamsSpec.$,
        null,
        impl.setActiveMatch.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
blink.mojom.FindInPageClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "blink.mojom.FindInPageClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!blink.mojom.FindInPageClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new blink.mojom.FindInPageClientRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the FindInPageClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
blink.mojom.FindInPageClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      blink.mojom.FindInPageClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!blink.mojom.FindInPageClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setNumberOfMatches =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1013958339,
        blink.mojom.FindInPageClient_SetNumberOfMatches_ParamsSpec.$,
        null,
        this.setNumberOfMatches.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setActiveMatch =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1440334834,
        blink.mojom.FindInPageClient_SetActiveMatch_ParamsSpec.$,
        null,
        this.setActiveMatch.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('blink.mojom.FindOptionsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindOptionsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPage_Find_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPage_Find_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPage_StopFinding_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPage_StopFinding_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPage_ClearActiveFindMatch_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPage_ClearActiveFindMatch_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPage_GetNearestFindResult_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPage_GetNearestFindResult_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPage_GetNearestFindResult_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPage_GetNearestFindResult_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPage_ActivateNearestFindResult_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPage_ActivateNearestFindResult_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPage_SetClient_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPage_SetClient_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPage_FindMatchRects_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPage_FindMatchRects_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPage_FindMatchRects_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPage_FindMatchRects_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPageClient_SetNumberOfMatches_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPageClient_SetNumberOfMatches_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('blink.mojom.FindInPageClient_SetActiveMatch_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
blink.mojom.FindInPageClient_SetActiveMatch_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    blink.mojom.FindOptionsSpec.$,
    'FindOptions',
    8,
    [
      mojo.internal.StructField(
        'forward', 0,
        0,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'matchCase', 0,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'newSession', 0,
        2,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'force', 0,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'findNextIfSelectionMatches', 0,
        4,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'runSynchronouslyForTesting', 0,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindOptions');

/** @record */
blink.mojom.FindOptions = class {
  constructor() {
    /** @type { !boolean } */
    this.forward;
    /** @type { !boolean } */
    this.matchCase;
    /** @type { !boolean } */
    this.newSession;
    /** @type { !boolean } */
    this.force;
    /** @type { !boolean } */
    this.findNextIfSelectionMatches;
    /** @type { !boolean } */
    this.runSynchronouslyForTesting;
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPage_Find_ParamsSpec.$,
    'FindInPage_Find_Params',
    24,
    [
      mojo.internal.StructField(
        'requestId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'searchText', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'options', 16,
        0,
        blink.mojom.FindOptionsSpec.$,
        null,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindInPage_Find_Params');

/** @record */
blink.mojom.FindInPage_Find_Params = class {
  constructor() {
    /** @type { !number } */
    this.requestId;
    /** @type { !string } */
    this.searchText;
    /** @type { !blink.mojom.FindOptions } */
    this.options;
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPage_StopFinding_ParamsSpec.$,
    'FindInPage_StopFinding_Params',
    8,
    [
      mojo.internal.StructField(
        'action', 0,
        0,
        blink.mojom.StopFindActionSpec.$,
        0,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindInPage_StopFinding_Params');

/** @record */
blink.mojom.FindInPage_StopFinding_Params = class {
  constructor() {
    /** @type { !blink.mojom.StopFindAction } */
    this.action;
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPage_ClearActiveFindMatch_ParamsSpec.$,
    'FindInPage_ClearActiveFindMatch_Params',
    0,
    [
    ]);



goog.provide('blink.mojom.FindInPage_ClearActiveFindMatch_Params');

/** @record */
blink.mojom.FindInPage_ClearActiveFindMatch_Params = class {
  constructor() {
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPage_GetNearestFindResult_ParamsSpec.$,
    'FindInPage_GetNearestFindResult_Params',
    8,
    [
      mojo.internal.StructField(
        'point', 0,
        0,
        gfx.mojom.PointFSpec.$,
        null,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindInPage_GetNearestFindResult_Params');

/** @record */
blink.mojom.FindInPage_GetNearestFindResult_Params = class {
  constructor() {
    /** @type { !gfx.mojom.PointF } */
    this.point;
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPage_GetNearestFindResult_ResponseParamsSpec.$,
    'FindInPage_GetNearestFindResult_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'distance', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindInPage_GetNearestFindResult_ResponseParams');

/** @record */
blink.mojom.FindInPage_GetNearestFindResult_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.distance;
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPage_ActivateNearestFindResult_ParamsSpec.$,
    'FindInPage_ActivateNearestFindResult_Params',
    16,
    [
      mojo.internal.StructField(
        'requestId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'point', 8,
        0,
        gfx.mojom.PointFSpec.$,
        null,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindInPage_ActivateNearestFindResult_Params');

/** @record */
blink.mojom.FindInPage_ActivateNearestFindResult_Params = class {
  constructor() {
    /** @type { !number } */
    this.requestId;
    /** @type { !gfx.mojom.PointF } */
    this.point;
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPage_SetClient_ParamsSpec.$,
    'FindInPage_SetClient_Params',
    8,
    [
      mojo.internal.StructField(
        'client', 0,
        0,
        mojo.internal.InterfaceProxy(blink.mojom.FindInPageClientRemote),
        null,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindInPage_SetClient_Params');

/** @record */
blink.mojom.FindInPage_SetClient_Params = class {
  constructor() {
    /** @type { !blink.mojom.FindInPageClientRemote } */
    this.client;
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPage_FindMatchRects_ParamsSpec.$,
    'FindInPage_FindMatchRects_Params',
    8,
    [
      mojo.internal.StructField(
        'currentVersion', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindInPage_FindMatchRects_Params');

/** @record */
blink.mojom.FindInPage_FindMatchRects_Params = class {
  constructor() {
    /** @type { !number } */
    this.currentVersion;
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPage_FindMatchRects_ResponseParamsSpec.$,
    'FindInPage_FindMatchRects_ResponseParams',
    24,
    [
      mojo.internal.StructField(
        'version', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'rects', 8,
        0,
        mojo.internal.Array(gfx.mojom.RectFSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'activeMatchRect', 16,
        0,
        gfx.mojom.RectFSpec.$,
        null,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindInPage_FindMatchRects_ResponseParams');

/** @record */
blink.mojom.FindInPage_FindMatchRects_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.version;
    /** @type { !Array<!gfx.mojom.RectF> } */
    this.rects;
    /** @type { !gfx.mojom.RectF } */
    this.activeMatchRect;
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPageClient_SetNumberOfMatches_ParamsSpec.$,
    'FindInPageClient_SetNumberOfMatches_Params',
    16,
    [
      mojo.internal.StructField(
        'requestId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'numberOfMatches', 4,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'updateType', 8,
        0,
        blink.mojom.FindMatchUpdateTypeSpec.$,
        0,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindInPageClient_SetNumberOfMatches_Params');

/** @record */
blink.mojom.FindInPageClient_SetNumberOfMatches_Params = class {
  constructor() {
    /** @type { !number } */
    this.requestId;
    /** @type { !number } */
    this.numberOfMatches;
    /** @type { !blink.mojom.FindMatchUpdateType } */
    this.updateType;
  }
};



mojo.internal.Struct(
    blink.mojom.FindInPageClient_SetActiveMatch_ParamsSpec.$,
    'FindInPageClient_SetActiveMatch_Params',
    24,
    [
      mojo.internal.StructField(
        'requestId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'activeMatchRect', 8,
        0,
        gfx.mojom.RectSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'activeMatchOrdinal', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'updateType', 16,
        0,
        blink.mojom.FindMatchUpdateTypeSpec.$,
        0,
        false /* nullable */),
    ]);



goog.provide('blink.mojom.FindInPageClient_SetActiveMatch_Params');

/** @record */
blink.mojom.FindInPageClient_SetActiveMatch_Params = class {
  constructor() {
    /** @type { !number } */
    this.requestId;
    /** @type { !number } */
    this.activeMatchOrdinal;
    /** @type { !gfx.mojom.Rect } */
    this.activeMatchRect;
    /** @type { !blink.mojom.FindMatchUpdateType } */
    this.updateType;
  }
};

