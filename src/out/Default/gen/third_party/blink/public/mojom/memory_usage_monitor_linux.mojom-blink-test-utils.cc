// third_party/blink/public/mojom/memory_usage_monitor_linux.mojom-blink-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif


#include "third_party/blink/public/mojom/memory_usage_monitor_linux.mojom-blink-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "mojo/public/cpp/bindings/lib/wtf_serialization.h"
#include "mojo/public/mojom/base/file.mojom-blink.h"


#ifndef THIRD_PARTY_BLINK_PUBLIC_MOJOM_MEMORY_USAGE_MONITOR_LINUX_MOJOM_BLINK_JUMBO_H_
#define THIRD_PARTY_BLINK_PUBLIC_MOJOM_MEMORY_USAGE_MONITOR_LINUX_MOJOM_BLINK_JUMBO_H_
#endif


namespace blink {
namespace mojom {
namespace blink {


void MemoryUsageMonitorLinuxInterceptorForTesting::SetProcFiles(::base::File statm_file, ::base::File status_file) {
  GetForwardingInterface()->SetProcFiles(std::move(statm_file), std::move(status_file));
}
MemoryUsageMonitorLinuxAsyncWaiter::MemoryUsageMonitorLinuxAsyncWaiter(
    MemoryUsageMonitorLinux* proxy) : proxy_(proxy) {}

MemoryUsageMonitorLinuxAsyncWaiter::~MemoryUsageMonitorLinuxAsyncWaiter() = default;






}  // namespace blink
}  // namespace mojom
}  // namespace blink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif