// skia/public/mojom/bitmap.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');

goog.require('skia.mojom.ImageInfo');
goog.require('mojoBase.mojom.BigBuffer');






goog.provide('skia.mojom.BitmapSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
skia.mojom.BitmapSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('skia.mojom.InlineBitmapSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
skia.mojom.InlineBitmapSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    skia.mojom.BitmapSpec.$,
    'Bitmap',
    32,
    [
      mojo.internal.StructField(
        'imageInfo', 0,
        0,
        skia.mojom.ImageInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'rowBytes', 8,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'pixelData', 16,
        0,
        mojoBase.mojom.BigBufferSpec.$,
        null,
        false /* nullable */),
    ]);



goog.provide('skia.mojom.Bitmap');

/** @record */
skia.mojom.Bitmap = class {
  constructor() {
    /** @type { !skia.mojom.ImageInfo } */
    this.imageInfo;
    /** @type { !number } */
    this.rowBytes;
    /** @type { !mojoBase.mojom.BigBuffer } */
    this.pixelData;
  }
};



mojo.internal.Struct(
    skia.mojom.InlineBitmapSpec.$,
    'InlineBitmap',
    24,
    [
      mojo.internal.StructField(
        'imageInfo', 0,
        0,
        skia.mojom.ImageInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'rowBytes', 8,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'pixelData', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ]);



goog.provide('skia.mojom.InlineBitmap');

/** @record */
skia.mojom.InlineBitmap = class {
  constructor() {
    /** @type { !skia.mojom.ImageInfo } */
    this.imageInfo;
    /** @type { !number } */
    this.rowBytes;
    /** @type { !Array<!number> } */
    this.pixelData;
  }
};

