// chrome/services/file_util/public/mojom/safe_archive_analyzer.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_SERVICES_FILE_UTIL_PUBLIC_MOJOM_SAFE_ARCHIVE_ANALYZER_MOJOM_FORWARD_H_
#define CHROME_SERVICES_FILE_UTIL_PUBLIC_MOJOM_SAFE_ARCHIVE_ANALYZER_MOJOM_FORWARD_H_



#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace chrome {
namespace mojom {
using SafeArchiveAnalyzerResultsDataView = mojo::native::NativeStructDataView;

using SafeArchiveAnalyzerResults = mojo::native::NativeStruct;
using SafeArchiveAnalyzerResultsPtr = mojo::native::NativeStructPtr;

class SafeArchiveAnalyzer;

using SafeArchiveAnalyzerPtr = mojo::InterfacePtr<SafeArchiveAnalyzer>;
using SafeArchiveAnalyzerPtrInfo = mojo::InterfacePtrInfo<SafeArchiveAnalyzer>;
using ThreadSafeSafeArchiveAnalyzerPtr =
    mojo::ThreadSafeInterfacePtr<SafeArchiveAnalyzer>;

using SafeArchiveAnalyzerRequest = mojo::InterfaceRequest<SafeArchiveAnalyzer>;

using SafeArchiveAnalyzerAssociatedPtr =
    mojo::AssociatedInterfacePtr<SafeArchiveAnalyzer>;
using ThreadSafeSafeArchiveAnalyzerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<SafeArchiveAnalyzer>;
using SafeArchiveAnalyzerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SafeArchiveAnalyzer>;

using SafeArchiveAnalyzerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SafeArchiveAnalyzer>;




}  // namespace mojom
}  // namespace chrome
#include "chrome/common/safe_browsing/zip_analyzer.h"

#endif  // CHROME_SERVICES_FILE_UTIL_PUBLIC_MOJOM_SAFE_ARCHIVE_ANALYZER_MOJOM_FORWARD_H_