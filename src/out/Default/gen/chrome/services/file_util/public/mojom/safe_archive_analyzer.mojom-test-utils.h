// chrome/services/file_util/public/mojom/safe_archive_analyzer.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_SERVICES_FILE_UTIL_PUBLIC_MOJOM_SAFE_ARCHIVE_ANALYZER_MOJOM_TEST_UTILS_H_
#define CHROME_SERVICES_FILE_UTIL_PUBLIC_MOJOM_SAFE_ARCHIVE_ANALYZER_MOJOM_TEST_UTILS_H_

#include "chrome/services/file_util/public/mojom/safe_archive_analyzer.mojom.h"


namespace chrome {
namespace mojom {


class  SafeArchiveAnalyzerInterceptorForTesting : public SafeArchiveAnalyzer {
  virtual SafeArchiveAnalyzer* GetForwardingInterface() = 0;
  void AnalyzeZipFile(::base::File zip_file, ::base::File temporary_file, AnalyzeZipFileCallback callback) override;
  void AnalyzeDmgFile(::base::File dmg_file, AnalyzeDmgFileCallback callback) override;
  void AnalyzeRarFile(::base::File rar_file, ::base::File temporary_file, AnalyzeRarFileCallback callback) override;
};
class  SafeArchiveAnalyzerAsyncWaiter {
 public:
  explicit SafeArchiveAnalyzerAsyncWaiter(SafeArchiveAnalyzer* proxy);
  ~SafeArchiveAnalyzerAsyncWaiter();
  void AnalyzeZipFile(
      ::base::File zip_file, ::base::File temporary_file, ::safe_browsing::ArchiveAnalyzerResults* out_results);
  void AnalyzeDmgFile(
      ::base::File dmg_file, ::safe_browsing::ArchiveAnalyzerResults* out_results);
  void AnalyzeRarFile(
      ::base::File rar_file, ::base::File temporary_file, ::safe_browsing::ArchiveAnalyzerResults* out_results);

 private:
  SafeArchiveAnalyzer* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(SafeArchiveAnalyzerAsyncWaiter);
};




}  // namespace mojom
}  // namespace chrome

#endif  // CHROME_SERVICES_FILE_UTIL_PUBLIC_MOJOM_SAFE_ARCHIVE_ANALYZER_MOJOM_TEST_UTILS_H_