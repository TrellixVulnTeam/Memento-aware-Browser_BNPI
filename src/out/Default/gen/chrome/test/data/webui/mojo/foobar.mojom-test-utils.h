// chrome/test/data/webui/mojo/foobar.mojom-test-utils.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_TEST_DATA_WEBUI_MOJO_FOOBAR_MOJOM_TEST_UTILS_H_
#define CHROME_TEST_DATA_WEBUI_MOJO_FOOBAR_MOJOM_TEST_UTILS_H_

#include "chrome/test/data/webui/mojo/foobar.mojom.h"


namespace test {
namespace mojom {


class  FooInterceptorForTesting : public Foo {
  virtual Foo* GetForwardingInterface() = 0;
  void GetFoo(GetFooCallback callback) override;
};
class  FooAsyncWaiter {
 public:
  explicit FooAsyncWaiter(Foo* proxy);
  ~FooAsyncWaiter();
  void GetFoo(
      std::string* out_value);

 private:
  Foo* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(FooAsyncWaiter);
};


class  BarInterceptorForTesting : public Bar {
  virtual Bar* GetForwardingInterface() = 0;
  void GetBar(GetBarCallback callback) override;
};
class  BarAsyncWaiter {
 public:
  explicit BarAsyncWaiter(Bar* proxy);
  ~BarAsyncWaiter();
  void GetBar(
      std::string* out_value);

 private:
  Bar* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(BarAsyncWaiter);
};


class  BazInterceptorForTesting : public Baz {
  virtual Baz* GetForwardingInterface() = 0;
  void GetBaz(GetBazCallback callback) override;
};
class  BazAsyncWaiter {
 public:
  explicit BazAsyncWaiter(Baz* proxy);
  ~BazAsyncWaiter();
  void GetBaz(
      std::string* out_value);

 private:
  Baz* const proxy_;

  DISALLOW_COPY_AND_ASSIGN(BazAsyncWaiter);
};




}  // namespace mojom
}  // namespace test

#endif  // CHROME_TEST_DATA_WEBUI_MOJO_FOOBAR_MOJOM_TEST_UTILS_H_