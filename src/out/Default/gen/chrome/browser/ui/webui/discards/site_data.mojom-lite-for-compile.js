// chrome/browser/ui/webui/discards/site_data.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');







goog.provide('discards.mojom.SiteDataProvider');
goog.provide('discards.mojom.SiteDataProviderReceiver');
goog.provide('discards.mojom.SiteDataProviderCallbackRouter');
goog.provide('discards.mojom.SiteDataProviderInterface');
goog.provide('discards.mojom.SiteDataProviderRemote');
goog.provide('discards.mojom.SiteDataProviderPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
discards.mojom.SiteDataProviderPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};

/** @interface */
discards.mojom.SiteDataProviderInterface = class {
  
  /**
   * @param { !Array<!string> } explicitlyRequestedOrigins
   * @return {Promise<{
        result: ?discards.mojom.SiteCharacteristicsDatabase,
   *  }>}
   */

  getSiteCharacteristicsDatabase(explicitlyRequestedOrigins) {}
  
  /**
   * @return {Promise<{
        dbSize: ?discards.mojom.SiteCharacteristicsDatabaseSize,
   *  }>}
   */

  getSiteCharacteristicsDatabaseSize() {}
};

/**
 * @export
 * @implements { discards.mojom.SiteDataProviderInterface }
 */
discards.mojom.SiteDataProviderRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!discards.mojom.SiteDataProviderPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          discards.mojom.SiteDataProviderPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!discards.mojom.SiteDataProviderPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !Array<!string> } explicitlyRequestedOrigins
   * @return {Promise<{
        result: ?discards.mojom.SiteCharacteristicsDatabase,
   *  }>}
   */

  getSiteCharacteristicsDatabase(
      explicitlyRequestedOrigins) {
    return this.proxy.sendMessage(
        2146316891,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ParamsSpec.$,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParamsSpec.$,
        [
          explicitlyRequestedOrigins
        ]);
  }

  
  /**
   * @return {Promise<{
        dbSize: ?discards.mojom.SiteCharacteristicsDatabaseSize,
   *  }>}
   */

  getSiteCharacteristicsDatabaseSize() {
    return this.proxy.sendMessage(
        1049270745,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ParamsSpec.$,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the SiteDataProvider
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
discards.mojom.SiteDataProviderReceiver = class {
  /**
   * @param {!discards.mojom.SiteDataProviderInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!discards.mojom.SiteDataProviderRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        discards.mojom.SiteDataProviderRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!discards.mojom.SiteDataProviderRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        2146316891,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ParamsSpec.$,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParamsSpec.$,
        impl.getSiteCharacteristicsDatabase.bind(impl));
    this.helper_internal_.registerHandler(
        1049270745,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ParamsSpec.$,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParamsSpec.$,
        impl.getSiteCharacteristicsDatabaseSize.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
discards.mojom.SiteDataProvider = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "discards.mojom.SiteDataProvider";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!discards.mojom.SiteDataProviderRemote}
   * @export
   */
  static getRemote() {
    let remote = new discards.mojom.SiteDataProviderRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the SiteDataProvider
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
discards.mojom.SiteDataProviderCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      discards.mojom.SiteDataProviderRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!discards.mojom.SiteDataProviderRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getSiteCharacteristicsDatabase =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2146316891,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ParamsSpec.$,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParamsSpec.$,
        this.getSiteCharacteristicsDatabase.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getSiteCharacteristicsDatabaseSize =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1049270745,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ParamsSpec.$,
        discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParamsSpec.$,
        this.getSiteCharacteristicsDatabaseSize.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('discards.mojom.SiteCharacteristicsFeatureSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
discards.mojom.SiteCharacteristicsFeatureSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('discards.mojom.SiteCharacteristicsPerformanceMeasurementSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
discards.mojom.SiteCharacteristicsPerformanceMeasurementSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('discards.mojom.SiteCharacteristicsDatabaseSizeSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
discards.mojom.SiteCharacteristicsDatabaseSizeSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('discards.mojom.SiteCharacteristicsDatabaseValueSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
discards.mojom.SiteCharacteristicsDatabaseValueSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('discards.mojom.SiteCharacteristicsDatabaseEntrySpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
discards.mojom.SiteCharacteristicsDatabaseEntrySpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('discards.mojom.SiteCharacteristicsDatabaseSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
discards.mojom.SiteCharacteristicsDatabaseSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    discards.mojom.SiteCharacteristicsFeatureSpec.$,
    'SiteCharacteristicsFeature',
    16,
    [
      mojo.internal.StructField(
        'observationDuration', 0,
        0,
        mojo.internal.Int64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'useTimestamp', 8,
        0,
        mojo.internal.Int64,
        0,
        false /* nullable */),
    ]);



goog.provide('discards.mojom.SiteCharacteristicsFeature');

/** @record */
discards.mojom.SiteCharacteristicsFeature = class {
  constructor() {
    /** @type { !number } */
    this.observationDuration;
    /** @type { !number } */
    this.useTimestamp;
  }
};



mojo.internal.Struct(
    discards.mojom.SiteCharacteristicsPerformanceMeasurementSpec.$,
    'SiteCharacteristicsPerformanceMeasurement',
    16,
    [
      mojo.internal.StructField(
        'avgCpuUsageUs', 0,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'avgFootprintKb', 4,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'avgLoadDurationUs', 8,
        0,
        mojo.internal.Float,
        0,
        false /* nullable */),
    ]);



goog.provide('discards.mojom.SiteCharacteristicsPerformanceMeasurement');

/** @record */
discards.mojom.SiteCharacteristicsPerformanceMeasurement = class {
  constructor() {
    /** @type { !number } */
    this.avgCpuUsageUs;
    /** @type { !number } */
    this.avgFootprintKb;
    /** @type { !number } */
    this.avgLoadDurationUs;
  }
};



mojo.internal.Struct(
    discards.mojom.SiteCharacteristicsDatabaseSizeSpec.$,
    'SiteCharacteristicsDatabaseSize',
    16,
    [
      mojo.internal.StructField(
        'numRows', 0,
        0,
        mojo.internal.Int64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'onDiskSizeKb', 8,
        0,
        mojo.internal.Int64,
        0,
        false /* nullable */),
    ]);



goog.provide('discards.mojom.SiteCharacteristicsDatabaseSize');

/** @record */
discards.mojom.SiteCharacteristicsDatabaseSize = class {
  constructor() {
    /** @type { !number } */
    this.numRows;
    /** @type { !number } */
    this.onDiskSizeKb;
  }
};



mojo.internal.Struct(
    discards.mojom.SiteCharacteristicsDatabaseValueSpec.$,
    'SiteCharacteristicsDatabaseValue',
    40,
    [
      mojo.internal.StructField(
        'lastLoaded', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'updatesFaviconInBackground', 8,
        0,
        discards.mojom.SiteCharacteristicsFeatureSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'updatesTitleInBackground', 16,
        0,
        discards.mojom.SiteCharacteristicsFeatureSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'usesAudioInBackground', 24,
        0,
        discards.mojom.SiteCharacteristicsFeatureSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'loadTimeEstimates', 32,
        0,
        discards.mojom.SiteCharacteristicsPerformanceMeasurementSpec.$,
        null,
        true /* nullable */),
    ]);



goog.provide('discards.mojom.SiteCharacteristicsDatabaseValue');

/** @record */
discards.mojom.SiteCharacteristicsDatabaseValue = class {
  constructor() {
    /** @type { !number } */
    this.lastLoaded;
    /** @type { !discards.mojom.SiteCharacteristicsFeature } */
    this.updatesFaviconInBackground;
    /** @type { !discards.mojom.SiteCharacteristicsFeature } */
    this.updatesTitleInBackground;
    /** @type { !discards.mojom.SiteCharacteristicsFeature } */
    this.usesAudioInBackground;
    /** @type { (discards.mojom.SiteCharacteristicsPerformanceMeasurement|undefined) } */
    this.loadTimeEstimates;
  }
};



mojo.internal.Struct(
    discards.mojom.SiteCharacteristicsDatabaseEntrySpec.$,
    'SiteCharacteristicsDatabaseEntry',
    24,
    [
      mojo.internal.StructField(
        'origin', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'isDirty', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'value', 16,
        0,
        discards.mojom.SiteCharacteristicsDatabaseValueSpec.$,
        null,
        true /* nullable */),
    ]);



goog.provide('discards.mojom.SiteCharacteristicsDatabaseEntry');

/** @record */
discards.mojom.SiteCharacteristicsDatabaseEntry = class {
  constructor() {
    /** @type { !string } */
    this.origin;
    /** @type { !boolean } */
    this.isDirty;
    /** @type { (discards.mojom.SiteCharacteristicsDatabaseValue|undefined) } */
    this.value;
  }
};



mojo.internal.Struct(
    discards.mojom.SiteCharacteristicsDatabaseSpec.$,
    'SiteCharacteristicsDatabase',
    8,
    [
      mojo.internal.StructField(
        'dbRows', 0,
        0,
        mojo.internal.Array(discards.mojom.SiteCharacteristicsDatabaseEntrySpec.$, false),
        null,
        false /* nullable */),
    ]);



goog.provide('discards.mojom.SiteCharacteristicsDatabase');

/** @record */
discards.mojom.SiteCharacteristicsDatabase = class {
  constructor() {
    /** @type { !Array<!discards.mojom.SiteCharacteristicsDatabaseEntry> } */
    this.dbRows;
  }
};



mojo.internal.Struct(
    discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ParamsSpec.$,
    'SiteDataProvider_GetSiteCharacteristicsDatabase_Params',
    8,
    [
      mojo.internal.StructField(
        'explicitlyRequestedOrigins', 0,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
    ]);



goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_Params');

/** @record */
discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_Params = class {
  constructor() {
    /** @type { !Array<!string> } */
    this.explicitlyRequestedOrigins;
  }
};



mojo.internal.Struct(
    discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParamsSpec.$,
    'SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        discards.mojom.SiteCharacteristicsDatabaseSpec.$,
        null,
        true /* nullable */),
    ]);



goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParams');

/** @record */
discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParams = class {
  constructor() {
    /** @type { (discards.mojom.SiteCharacteristicsDatabase|undefined) } */
    this.result;
  }
};



mojo.internal.Struct(
    discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ParamsSpec.$,
    'SiteDataProvider_GetSiteCharacteristicsDatabaseSize_Params',
    0,
    [
    ]);



goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_Params');

/** @record */
discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_Params = class {
  constructor() {
  }
};



mojo.internal.Struct(
    discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParamsSpec.$,
    'SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'dbSize', 0,
        0,
        discards.mojom.SiteCharacteristicsDatabaseSizeSpec.$,
        null,
        true /* nullable */),
    ]);



goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParams');

/** @record */
discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParams = class {
  constructor() {
    /** @type { (discards.mojom.SiteCharacteristicsDatabaseSize|undefined) } */
    this.dbSize;
  }
};

