// chrome/browser/ui/webui/discards/site_data.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



goog.provide('discards.mojom.SiteDataProvider');
goog.provide('discards.mojom.SiteDataProviderImpl');
goog.provide('discards.mojom.SiteDataProviderPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
discards.mojom.SiteDataProvider;

/** @interface */
discards.mojom.SiteDataProviderImpl = class {
  /**
   * @param { !Array<string> } explicitlyRequestedOrigins
   * @return {Promise}
   */
  getSiteCharacteristicsDatabase(explicitlyRequestedOrigins) {}
  /**
   * @return {Promise}
   */
  getSiteCharacteristicsDatabaseSize() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { discards.mojom.SiteDataProviderImpl }
 */
discards.mojom.SiteDataProviderPtr = class {
  /**
   * @param { !Array<string> } explicitlyRequestedOrigins
   * @return {Promise}
   */
  getSiteCharacteristicsDatabase(explicitlyRequestedOrigins) {}
  /**
   * @return {Promise}
   */
  getSiteCharacteristicsDatabaseSize() {}
};

goog.provide('discards.mojom.SiteCharacteristicsFeature');

discards.mojom.SiteCharacteristicsFeature = class {
  constructor() {
    /** @type { !number } */
    this.observationDuration;
    /** @type { !number } */
    this.useTimestamp;
  }
};

goog.provide('discards.mojom.SiteCharacteristicsPerformanceMeasurement');

discards.mojom.SiteCharacteristicsPerformanceMeasurement = class {
  constructor() {
    /** @type { !number } */
    this.avgCpuUsageUs;
    /** @type { !number } */
    this.avgFootprintKb;
    /** @type { !number } */
    this.avgLoadDurationUs;
  }
};

goog.provide('discards.mojom.SiteCharacteristicsDatabaseSize');

discards.mojom.SiteCharacteristicsDatabaseSize = class {
  constructor() {
    /** @type { !number } */
    this.numRows;
    /** @type { !number } */
    this.onDiskSizeKb;
  }
};

goog.provide('discards.mojom.SiteCharacteristicsDatabaseValue');

discards.mojom.SiteCharacteristicsDatabaseValue = class {
  constructor() {
    /** @type { !number } */
    this.lastLoaded;
    /** @type { !discards.mojom.SiteCharacteristicsFeature } */
    this.updatesFaviconInBackground;
    /** @type { !discards.mojom.SiteCharacteristicsFeature } */
    this.updatesTitleInBackground;
    /** @type { !discards.mojom.SiteCharacteristicsFeature } */
    this.usesAudioInBackground;
    /** @type { discards.mojom.SiteCharacteristicsPerformanceMeasurement } */
    this.loadTimeEstimates;
  }
};

goog.provide('discards.mojom.SiteCharacteristicsDatabaseEntry');

discards.mojom.SiteCharacteristicsDatabaseEntry = class {
  constructor() {
    /** @type { !string } */
    this.origin;
    /** @type { !boolean } */
    this.isDirty;
    /** @type { discards.mojom.SiteCharacteristicsDatabaseValue } */
    this.value;
  }
};

goog.provide('discards.mojom.SiteCharacteristicsDatabase');

discards.mojom.SiteCharacteristicsDatabase = class {
  constructor() {
    /** @type { !Array<discards.mojom.SiteCharacteristicsDatabaseEntry> } */
    this.dbRows;
  }
};

goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_Params');

discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_Params = class {
  constructor() {
    /** @type { !Array<string> } */
    this.explicitlyRequestedOrigins;
  }
};

goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParams');

discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabase_ResponseParams = class {
  constructor() {
    /** @type { discards.mojom.SiteCharacteristicsDatabase } */
    this.result;
  }
};

goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_Params');

discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_Params = class {
  constructor() {
  }
};

goog.provide('discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParams');

discards.mojom.SiteDataProvider_GetSiteCharacteristicsDatabaseSize_ResponseParams = class {
  constructor() {
    /** @type { discards.mojom.SiteCharacteristicsDatabaseSize } */
    this.dbSize;
  }
};
