// chrome/browser/ui/webui/discards/discards.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_BROWSER_UI_WEBUI_DISCARDS_DISCARDS_MOJOM_FORWARD_H_
#define CHROME_BROWSER_UI_WEBUI_DISCARDS_DISCARDS_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace discards {
namespace mojom {
class TabDiscardsInfoDataView;

class PageInfoDataView;

class FrameInfoDataView;

class ProcessInfoDataView;

class WorkerInfoDataView;

class FavIconInfoDataView;


enum class LifecycleUnitVisibility : int32_t;
class TabDiscardsInfo;
using TabDiscardsInfoPtr = mojo::StructPtr<TabDiscardsInfo>;

class PageInfo;
using PageInfoPtr = mojo::StructPtr<PageInfo>;

class FrameInfo;
using FrameInfoPtr = mojo::StructPtr<FrameInfo>;

class ProcessInfo;
using ProcessInfoPtr = mojo::StructPtr<ProcessInfo>;

class WorkerInfo;
using WorkerInfoPtr = mojo::StructPtr<WorkerInfo>;

class FavIconInfo;
using FavIconInfoPtr = mojo::InlinedStructPtr<FavIconInfo>;

class DetailsProvider;

using DetailsProviderPtr = mojo::InterfacePtr<DetailsProvider>;
using DetailsProviderPtrInfo = mojo::InterfacePtrInfo<DetailsProvider>;
using ThreadSafeDetailsProviderPtr =
    mojo::ThreadSafeInterfacePtr<DetailsProvider>;

using DetailsProviderRequest = mojo::InterfaceRequest<DetailsProvider>;

using DetailsProviderAssociatedPtr =
    mojo::AssociatedInterfacePtr<DetailsProvider>;
using ThreadSafeDetailsProviderAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<DetailsProvider>;
using DetailsProviderAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<DetailsProvider>;

using DetailsProviderAssociatedRequest =
    mojo::AssociatedInterfaceRequest<DetailsProvider>;

class GraphChangeStream;

using GraphChangeStreamPtr = mojo::InterfacePtr<GraphChangeStream>;
using GraphChangeStreamPtrInfo = mojo::InterfacePtrInfo<GraphChangeStream>;
using ThreadSafeGraphChangeStreamPtr =
    mojo::ThreadSafeInterfacePtr<GraphChangeStream>;

using GraphChangeStreamRequest = mojo::InterfaceRequest<GraphChangeStream>;

using GraphChangeStreamAssociatedPtr =
    mojo::AssociatedInterfacePtr<GraphChangeStream>;
using ThreadSafeGraphChangeStreamAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<GraphChangeStream>;
using GraphChangeStreamAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<GraphChangeStream>;

using GraphChangeStreamAssociatedRequest =
    mojo::AssociatedInterfaceRequest<GraphChangeStream>;

class GraphDump;

using GraphDumpPtr = mojo::InterfacePtr<GraphDump>;
using GraphDumpPtrInfo = mojo::InterfacePtrInfo<GraphDump>;
using ThreadSafeGraphDumpPtr =
    mojo::ThreadSafeInterfacePtr<GraphDump>;

using GraphDumpRequest = mojo::InterfaceRequest<GraphDump>;

using GraphDumpAssociatedPtr =
    mojo::AssociatedInterfacePtr<GraphDump>;
using ThreadSafeGraphDumpAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<GraphDump>;
using GraphDumpAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<GraphDump>;

using GraphDumpAssociatedRequest =
    mojo::AssociatedInterfaceRequest<GraphDump>;




}  // namespace mojom
}  // namespace discards

#endif  // CHROME_BROWSER_UI_WEBUI_DISCARDS_DISCARDS_MOJOM_FORWARD_H_