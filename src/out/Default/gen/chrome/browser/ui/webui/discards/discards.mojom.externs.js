// chrome/browser/ui/webui/discards/discards.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
discards.mojom.LifecycleUnitVisibility = {};
discards.mojom.LifecycleUnitVisibility.HIDDEN;
discards.mojom.LifecycleUnitVisibility.OCCLUDED;
discards.mojom.LifecycleUnitVisibility.VISIBLE;
goog.provide('discards.mojom.DetailsProvider');
goog.provide('discards.mojom.DetailsProviderImpl');
goog.provide('discards.mojom.DetailsProviderPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
discards.mojom.DetailsProvider;

/** @interface */
discards.mojom.DetailsProviderImpl = class {
  /**
   * @return {Promise}
   */
  getTabDiscardsInfo() {}
  /**
   * @param { !number } tabId
   * @param { !boolean } isAutoDiscardable
   * @return {Promise}
   */
  setAutoDiscardable(tabId, isAutoDiscardable) {}
  /**
   * @param { !number } tabId
   * @return {Promise}
   */
  discardById(tabId) {}
  /**
   * @param { !number } tabId
   */
  loadById(tabId) {}
  /**
   * @return {Promise}
   */
  discard() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { discards.mojom.DetailsProviderImpl }
 */
discards.mojom.DetailsProviderPtr = class {
  /**
   * @return {Promise}
   */
  getTabDiscardsInfo() {}
  /**
   * @param { !number } tabId
   * @param { !boolean } isAutoDiscardable
   * @return {Promise}
   */
  setAutoDiscardable(tabId, isAutoDiscardable) {}
  /**
   * @param { !number } tabId
   * @return {Promise}
   */
  discardById(tabId) {}
  /**
   * @param { !number } tabId
   */
  loadById(tabId) {}
  /**
   * @return {Promise}
   */
  discard() {}
};

goog.provide('discards.mojom.GraphChangeStream');
goog.provide('discards.mojom.GraphChangeStreamImpl');
goog.provide('discards.mojom.GraphChangeStreamPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
discards.mojom.GraphChangeStream;

/** @interface */
discards.mojom.GraphChangeStreamImpl = class {
  /**
   * @param { !discards.mojom.FrameInfo } frame
   */
  frameCreated(frame) {}
  /**
   * @param { !discards.mojom.PageInfo } pages
   */
  pageCreated(pages) {}
  /**
   * @param { !discards.mojom.ProcessInfo } process
   */
  processCreated(process) {}
  /**
   * @param { !discards.mojom.WorkerInfo } worker
   */
  workerCreated(worker) {}
  /**
   * @param { !discards.mojom.FrameInfo } frame
   */
  frameChanged(frame) {}
  /**
   * @param { !discards.mojom.PageInfo } page
   */
  pageChanged(page) {}
  /**
   * @param { !discards.mojom.ProcessInfo } process
   */
  processChanged(process) {}
  /**
   * @param { !discards.mojom.WorkerInfo } worker
   */
  workerChanged(worker) {}
  /**
   * @param { !discards.mojom.FavIconInfo } favicon
   */
  favIconDataAvailable(favicon) {}
  /**
   * @param { !number } nodeId
   */
  nodeDeleted(nodeId) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { discards.mojom.GraphChangeStreamImpl }
 */
discards.mojom.GraphChangeStreamPtr = class {
  /**
   * @param { !discards.mojom.FrameInfo } frame
   */
  frameCreated(frame) {}
  /**
   * @param { !discards.mojom.PageInfo } pages
   */
  pageCreated(pages) {}
  /**
   * @param { !discards.mojom.ProcessInfo } process
   */
  processCreated(process) {}
  /**
   * @param { !discards.mojom.WorkerInfo } worker
   */
  workerCreated(worker) {}
  /**
   * @param { !discards.mojom.FrameInfo } frame
   */
  frameChanged(frame) {}
  /**
   * @param { !discards.mojom.PageInfo } page
   */
  pageChanged(page) {}
  /**
   * @param { !discards.mojom.ProcessInfo } process
   */
  processChanged(process) {}
  /**
   * @param { !discards.mojom.WorkerInfo } worker
   */
  workerChanged(worker) {}
  /**
   * @param { !discards.mojom.FavIconInfo } favicon
   */
  favIconDataAvailable(favicon) {}
  /**
   * @param { !number } nodeId
   */
  nodeDeleted(nodeId) {}
};

goog.provide('discards.mojom.GraphDump');
goog.provide('discards.mojom.GraphDumpImpl');
goog.provide('discards.mojom.GraphDumpPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
discards.mojom.GraphDump;

/** @interface */
discards.mojom.GraphDumpImpl = class {
  /**
   * @param { !discards.mojom.GraphChangeStreamPtr } changeSubscriber
   */
  subscribeToChanges(changeSubscriber) {}
  /**
   * @param { !Array<number> } nodeIds
   * @return {Promise}
   */
  requestNodeDescriptions(nodeIds) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { discards.mojom.GraphDumpImpl }
 */
discards.mojom.GraphDumpPtr = class {
  /**
   * @param { !discards.mojom.GraphChangeStreamPtr } changeSubscriber
   */
  subscribeToChanges(changeSubscriber) {}
  /**
   * @param { !Array<number> } nodeIds
   * @return {Promise}
   */
  requestNodeDescriptions(nodeIds) {}
};

goog.provide('discards.mojom.TabDiscardsInfo');

discards.mojom.TabDiscardsInfo = class {
  constructor() {
    /** @type { !string } */
    this.tabUrl;
    /** @type { !string } */
    this.title;
    /** @type { !discards.mojom.LifecycleUnitVisibility } */
    this.visibility;
    /** @type { !mojom.LifecycleUnitLoadingState } */
    this.loadingState;
    /** @type { !mojom.LifecycleUnitState } */
    this.state;
    /** @type { !boolean } */
    this.canDiscard;
    /** @type { !boolean } */
    this.isAutoDiscardable;
    /** @type { !boolean } */
    this.hasReactivationScore;
    /** @type { !boolean } */
    this.hasFocus;
    /** @type { !Array<string> } */
    this.cannotDiscardReasons;
    /** @type { !number } */
    this.discardCount;
    /** @type { !mojom.LifecycleUnitDiscardReason } */
    this.discardReason;
    /** @type { !number } */
    this.utilityRank;
    /** @type { !number } */
    this.lastActiveSeconds;
    /** @type { !number } */
    this.id;
    /** @type { !number } */
    this.reactivationScore;
    /** @type { !number } */
    this.siteEngagementScore;
    /** @type { !mojoBase.mojom.TimeDelta } */
    this.stateChangeTime;
  }
};

goog.provide('discards.mojom.PageInfo');

discards.mojom.PageInfo = class {
  constructor() {
    /** @type { !number } */
    this.id;
    /** @type { !url.mojom.Url } */
    this.mainFrameUrl;
    /** @type { !number } */
    this.openerFrameId;
    /** @type { !string } */
    this.descriptionJson;
  }
};

goog.provide('discards.mojom.FrameInfo');

discards.mojom.FrameInfo = class {
  constructor() {
    /** @type { !number } */
    this.id;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !number } */
    this.pageId;
    /** @type { !number } */
    this.parentFrameId;
    /** @type { !number } */
    this.processId;
    /** @type { !string } */
    this.descriptionJson;
  }
};

goog.provide('discards.mojom.ProcessInfo');

discards.mojom.ProcessInfo = class {
  constructor() {
    /** @type { !number } */
    this.id;
    /** @type { !mojoBase.mojom.ProcessId } */
    this.pid;
    /** @type { !number } */
    this.privateFootprintKb;
    /** @type { !string } */
    this.descriptionJson;
  }
};

goog.provide('discards.mojom.WorkerInfo');

discards.mojom.WorkerInfo = class {
  constructor() {
    /** @type { !number } */
    this.id;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !number } */
    this.processId;
    /** @type { !Array<number> } */
    this.clientFrameIds;
    /** @type { !Array<number> } */
    this.clientWorkerIds;
    /** @type { !Array<number> } */
    this.childWorkerIds;
    /** @type { !string } */
    this.descriptionJson;
  }
};

goog.provide('discards.mojom.FavIconInfo');

discards.mojom.FavIconInfo = class {
  constructor() {
    /** @type { !number } */
    this.nodeId;
    /** @type { !string } */
    this.iconData;
  }
};

goog.provide('discards.mojom.DetailsProvider_GetTabDiscardsInfo_Params');

discards.mojom.DetailsProvider_GetTabDiscardsInfo_Params = class {
  constructor() {
  }
};

goog.provide('discards.mojom.DetailsProvider_GetTabDiscardsInfo_ResponseParams');

discards.mojom.DetailsProvider_GetTabDiscardsInfo_ResponseParams = class {
  constructor() {
    /** @type { !Array<discards.mojom.TabDiscardsInfo> } */
    this.infos;
  }
};

goog.provide('discards.mojom.DetailsProvider_SetAutoDiscardable_Params');

discards.mojom.DetailsProvider_SetAutoDiscardable_Params = class {
  constructor() {
    /** @type { !number } */
    this.tabId;
    /** @type { !boolean } */
    this.isAutoDiscardable;
  }
};

goog.provide('discards.mojom.DetailsProvider_SetAutoDiscardable_ResponseParams');

discards.mojom.DetailsProvider_SetAutoDiscardable_ResponseParams = class {
  constructor() {
  }
};

goog.provide('discards.mojom.DetailsProvider_DiscardById_Params');

discards.mojom.DetailsProvider_DiscardById_Params = class {
  constructor() {
    /** @type { !number } */
    this.tabId;
  }
};

goog.provide('discards.mojom.DetailsProvider_DiscardById_ResponseParams');

discards.mojom.DetailsProvider_DiscardById_ResponseParams = class {
  constructor() {
  }
};

goog.provide('discards.mojom.DetailsProvider_LoadById_Params');

discards.mojom.DetailsProvider_LoadById_Params = class {
  constructor() {
    /** @type { !number } */
    this.tabId;
  }
};

goog.provide('discards.mojom.DetailsProvider_Discard_Params');

discards.mojom.DetailsProvider_Discard_Params = class {
  constructor() {
  }
};

goog.provide('discards.mojom.DetailsProvider_Discard_ResponseParams');

discards.mojom.DetailsProvider_Discard_ResponseParams = class {
  constructor() {
  }
};

goog.provide('discards.mojom.GraphChangeStream_FrameCreated_Params');

discards.mojom.GraphChangeStream_FrameCreated_Params = class {
  constructor() {
    /** @type { !discards.mojom.FrameInfo } */
    this.frame;
  }
};

goog.provide('discards.mojom.GraphChangeStream_PageCreated_Params');

discards.mojom.GraphChangeStream_PageCreated_Params = class {
  constructor() {
    /** @type { !discards.mojom.PageInfo } */
    this.pages;
  }
};

goog.provide('discards.mojom.GraphChangeStream_ProcessCreated_Params');

discards.mojom.GraphChangeStream_ProcessCreated_Params = class {
  constructor() {
    /** @type { !discards.mojom.ProcessInfo } */
    this.process;
  }
};

goog.provide('discards.mojom.GraphChangeStream_WorkerCreated_Params');

discards.mojom.GraphChangeStream_WorkerCreated_Params = class {
  constructor() {
    /** @type { !discards.mojom.WorkerInfo } */
    this.worker;
  }
};

goog.provide('discards.mojom.GraphChangeStream_FrameChanged_Params');

discards.mojom.GraphChangeStream_FrameChanged_Params = class {
  constructor() {
    /** @type { !discards.mojom.FrameInfo } */
    this.frame;
  }
};

goog.provide('discards.mojom.GraphChangeStream_PageChanged_Params');

discards.mojom.GraphChangeStream_PageChanged_Params = class {
  constructor() {
    /** @type { !discards.mojom.PageInfo } */
    this.page;
  }
};

goog.provide('discards.mojom.GraphChangeStream_ProcessChanged_Params');

discards.mojom.GraphChangeStream_ProcessChanged_Params = class {
  constructor() {
    /** @type { !discards.mojom.ProcessInfo } */
    this.process;
  }
};

goog.provide('discards.mojom.GraphChangeStream_WorkerChanged_Params');

discards.mojom.GraphChangeStream_WorkerChanged_Params = class {
  constructor() {
    /** @type { !discards.mojom.WorkerInfo } */
    this.worker;
  }
};

goog.provide('discards.mojom.GraphChangeStream_FavIconDataAvailable_Params');

discards.mojom.GraphChangeStream_FavIconDataAvailable_Params = class {
  constructor() {
    /** @type { !discards.mojom.FavIconInfo } */
    this.favicon;
  }
};

goog.provide('discards.mojom.GraphChangeStream_NodeDeleted_Params');

discards.mojom.GraphChangeStream_NodeDeleted_Params = class {
  constructor() {
    /** @type { !number } */
    this.nodeId;
  }
};

goog.provide('discards.mojom.GraphDump_SubscribeToChanges_Params');

discards.mojom.GraphDump_SubscribeToChanges_Params = class {
  constructor() {
    /** @type { !discards.mojom.GraphChangeStreamPtr } */
    this.changeSubscriber;
  }
};

goog.provide('discards.mojom.GraphDump_RequestNodeDescriptions_Params');

discards.mojom.GraphDump_RequestNodeDescriptions_Params = class {
  constructor() {
    /** @type { !Array<number> } */
    this.nodeIds;
  }
};

goog.provide('discards.mojom.GraphDump_RequestNodeDescriptions_ResponseParams');

discards.mojom.GraphDump_RequestNodeDescriptions_ResponseParams = class {
  constructor() {
    /** @type { !Map<number, string> } */
    this.nodeDescriptionsJson;
  }
};
