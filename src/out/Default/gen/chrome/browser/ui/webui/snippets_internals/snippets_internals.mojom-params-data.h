// chrome/browser/ui/webui/snippets_internals/snippets_internals.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_BROWSER_UI_WEBUI_SNIPPETS_INTERNALS_SNIPPETS_INTERNALS_MOJOM_PARAMS_DATA_H_
#define CHROME_BROWSER_UI_WEBUI_SNIPPETS_INTERNALS_SNIPPETS_INTERNALS_MOJOM_PARAMS_DATA_H_

#include "base/logging.h"
#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace snippets_internals {
namespace mojom {
namespace internal {
class  PageHandlerFactory_CreatePageHandler_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandlerFactory_CreatePageHandler_Params_Data));
      new (data()) PageHandlerFactory_CreatePageHandler_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandlerFactory_CreatePageHandler_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandlerFactory_CreatePageHandler_Params_Data>(index_);
    }
    PageHandlerFactory_CreatePageHandler_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data page;

 private:
  PageHandlerFactory_CreatePageHandler_Params_Data();
  ~PageHandlerFactory_CreatePageHandler_Params_Data() = delete;
};
static_assert(sizeof(PageHandlerFactory_CreatePageHandler_Params_Data) == 16,
              "Bad sizeof(PageHandlerFactory_CreatePageHandler_Params_Data)");
class  PageHandlerFactory_CreatePageHandler_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandlerFactory_CreatePageHandler_ResponseParams_Data));
      new (data()) PageHandlerFactory_CreatePageHandler_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandlerFactory_CreatePageHandler_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandlerFactory_CreatePageHandler_ResponseParams_Data>(index_);
    }
    PageHandlerFactory_CreatePageHandler_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data handler;

 private:
  PageHandlerFactory_CreatePageHandler_ResponseParams_Data();
  ~PageHandlerFactory_CreatePageHandler_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandlerFactory_CreatePageHandler_ResponseParams_Data) == 16,
              "Bad sizeof(PageHandlerFactory_CreatePageHandler_ResponseParams_Data)");
class  PageHandler_GetGeneralProperties_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetGeneralProperties_Params_Data));
      new (data()) PageHandler_GetGeneralProperties_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetGeneralProperties_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetGeneralProperties_Params_Data>(index_);
    }
    PageHandler_GetGeneralProperties_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  PageHandler_GetGeneralProperties_Params_Data();
  ~PageHandler_GetGeneralProperties_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_GetGeneralProperties_Params_Data) == 8,
              "Bad sizeof(PageHandler_GetGeneralProperties_Params_Data)");
class  PageHandler_GetGeneralProperties_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetGeneralProperties_ResponseParams_Data));
      new (data()) PageHandler_GetGeneralProperties_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetGeneralProperties_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetGeneralProperties_ResponseParams_Data>(index_);
    }
    PageHandler_GetGeneralProperties_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, mojo::internal::Pointer<mojo::internal::String_Data>>> properties;

 private:
  PageHandler_GetGeneralProperties_ResponseParams_Data();
  ~PageHandler_GetGeneralProperties_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_GetGeneralProperties_ResponseParams_Data) == 16,
              "Bad sizeof(PageHandler_GetGeneralProperties_ResponseParams_Data)");
class  PageHandler_GetUserClassifierProperties_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetUserClassifierProperties_Params_Data));
      new (data()) PageHandler_GetUserClassifierProperties_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetUserClassifierProperties_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetUserClassifierProperties_Params_Data>(index_);
    }
    PageHandler_GetUserClassifierProperties_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  PageHandler_GetUserClassifierProperties_Params_Data();
  ~PageHandler_GetUserClassifierProperties_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_GetUserClassifierProperties_Params_Data) == 8,
              "Bad sizeof(PageHandler_GetUserClassifierProperties_Params_Data)");
class  PageHandler_GetUserClassifierProperties_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetUserClassifierProperties_ResponseParams_Data));
      new (data()) PageHandler_GetUserClassifierProperties_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetUserClassifierProperties_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetUserClassifierProperties_ResponseParams_Data>(index_);
    }
    PageHandler_GetUserClassifierProperties_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, mojo::internal::Pointer<mojo::internal::String_Data>>> properties;

 private:
  PageHandler_GetUserClassifierProperties_ResponseParams_Data();
  ~PageHandler_GetUserClassifierProperties_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_GetUserClassifierProperties_ResponseParams_Data) == 16,
              "Bad sizeof(PageHandler_GetUserClassifierProperties_ResponseParams_Data)");
class  PageHandler_ClearUserClassifierProperties_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_ClearUserClassifierProperties_Params_Data));
      new (data()) PageHandler_ClearUserClassifierProperties_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_ClearUserClassifierProperties_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_ClearUserClassifierProperties_Params_Data>(index_);
    }
    PageHandler_ClearUserClassifierProperties_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  PageHandler_ClearUserClassifierProperties_Params_Data();
  ~PageHandler_ClearUserClassifierProperties_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_ClearUserClassifierProperties_Params_Data) == 8,
              "Bad sizeof(PageHandler_ClearUserClassifierProperties_Params_Data)");
class  PageHandler_GetCategoryRankerProperties_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetCategoryRankerProperties_Params_Data));
      new (data()) PageHandler_GetCategoryRankerProperties_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetCategoryRankerProperties_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetCategoryRankerProperties_Params_Data>(index_);
    }
    PageHandler_GetCategoryRankerProperties_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  PageHandler_GetCategoryRankerProperties_Params_Data();
  ~PageHandler_GetCategoryRankerProperties_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_GetCategoryRankerProperties_Params_Data) == 8,
              "Bad sizeof(PageHandler_GetCategoryRankerProperties_Params_Data)");
class  PageHandler_GetCategoryRankerProperties_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetCategoryRankerProperties_ResponseParams_Data));
      new (data()) PageHandler_GetCategoryRankerProperties_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetCategoryRankerProperties_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetCategoryRankerProperties_ResponseParams_Data>(index_);
    }
    PageHandler_GetCategoryRankerProperties_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, mojo::internal::Pointer<mojo::internal::String_Data>>> properties;

 private:
  PageHandler_GetCategoryRankerProperties_ResponseParams_Data();
  ~PageHandler_GetCategoryRankerProperties_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_GetCategoryRankerProperties_ResponseParams_Data) == 16,
              "Bad sizeof(PageHandler_GetCategoryRankerProperties_ResponseParams_Data)");
class  PageHandler_ReloadSuggestions_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_ReloadSuggestions_Params_Data));
      new (data()) PageHandler_ReloadSuggestions_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_ReloadSuggestions_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_ReloadSuggestions_Params_Data>(index_);
    }
    PageHandler_ReloadSuggestions_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  PageHandler_ReloadSuggestions_Params_Data();
  ~PageHandler_ReloadSuggestions_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_ReloadSuggestions_Params_Data) == 8,
              "Bad sizeof(PageHandler_ReloadSuggestions_Params_Data)");
class  PageHandler_ClearCachedSuggestions_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_ClearCachedSuggestions_Params_Data));
      new (data()) PageHandler_ClearCachedSuggestions_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_ClearCachedSuggestions_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_ClearCachedSuggestions_Params_Data>(index_);
    }
    PageHandler_ClearCachedSuggestions_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  PageHandler_ClearCachedSuggestions_Params_Data();
  ~PageHandler_ClearCachedSuggestions_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_ClearCachedSuggestions_Params_Data) == 8,
              "Bad sizeof(PageHandler_ClearCachedSuggestions_Params_Data)");
class  PageHandler_GetRemoteContentSuggestionsProperties_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetRemoteContentSuggestionsProperties_Params_Data));
      new (data()) PageHandler_GetRemoteContentSuggestionsProperties_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetRemoteContentSuggestionsProperties_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetRemoteContentSuggestionsProperties_Params_Data>(index_);
    }
    PageHandler_GetRemoteContentSuggestionsProperties_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  PageHandler_GetRemoteContentSuggestionsProperties_Params_Data();
  ~PageHandler_GetRemoteContentSuggestionsProperties_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_GetRemoteContentSuggestionsProperties_Params_Data) == 8,
              "Bad sizeof(PageHandler_GetRemoteContentSuggestionsProperties_Params_Data)");
class  PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data));
      new (data()) PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data>(index_);
    }
    PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Map_Data<mojo::internal::Pointer<mojo::internal::String_Data>, mojo::internal::Pointer<mojo::internal::String_Data>>> properties;

 private:
  PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data();
  ~PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data) == 16,
              "Bad sizeof(PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data)");
class  PageHandler_FetchSuggestionsInBackground_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_FetchSuggestionsInBackground_Params_Data));
      new (data()) PageHandler_FetchSuggestionsInBackground_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_FetchSuggestionsInBackground_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_FetchSuggestionsInBackground_Params_Data>(index_);
    }
    PageHandler_FetchSuggestionsInBackground_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t delaySeconds;

 private:
  PageHandler_FetchSuggestionsInBackground_Params_Data();
  ~PageHandler_FetchSuggestionsInBackground_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_FetchSuggestionsInBackground_Params_Data) == 16,
              "Bad sizeof(PageHandler_FetchSuggestionsInBackground_Params_Data)");
class  PageHandler_FetchSuggestionsInBackground_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_FetchSuggestionsInBackground_ResponseParams_Data));
      new (data()) PageHandler_FetchSuggestionsInBackground_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_FetchSuggestionsInBackground_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_FetchSuggestionsInBackground_ResponseParams_Data>(index_);
    }
    PageHandler_FetchSuggestionsInBackground_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  PageHandler_FetchSuggestionsInBackground_ResponseParams_Data();
  ~PageHandler_FetchSuggestionsInBackground_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_FetchSuggestionsInBackground_ResponseParams_Data) == 8,
              "Bad sizeof(PageHandler_FetchSuggestionsInBackground_ResponseParams_Data)");
class  PageHandler_GetLastJson_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetLastJson_Params_Data));
      new (data()) PageHandler_GetLastJson_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetLastJson_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetLastJson_Params_Data>(index_);
    }
    PageHandler_GetLastJson_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  PageHandler_GetLastJson_Params_Data();
  ~PageHandler_GetLastJson_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_GetLastJson_Params_Data) == 8,
              "Bad sizeof(PageHandler_GetLastJson_Params_Data)");
class  PageHandler_GetLastJson_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetLastJson_ResponseParams_Data));
      new (data()) PageHandler_GetLastJson_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetLastJson_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetLastJson_ResponseParams_Data>(index_);
    }
    PageHandler_GetLastJson_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> json;

 private:
  PageHandler_GetLastJson_ResponseParams_Data();
  ~PageHandler_GetLastJson_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_GetLastJson_ResponseParams_Data) == 16,
              "Bad sizeof(PageHandler_GetLastJson_ResponseParams_Data)");
class  PageHandler_GetSuggestionsByCategory_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetSuggestionsByCategory_Params_Data));
      new (data()) PageHandler_GetSuggestionsByCategory_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetSuggestionsByCategory_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetSuggestionsByCategory_Params_Data>(index_);
    }
    PageHandler_GetSuggestionsByCategory_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  PageHandler_GetSuggestionsByCategory_Params_Data();
  ~PageHandler_GetSuggestionsByCategory_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_GetSuggestionsByCategory_Params_Data) == 8,
              "Bad sizeof(PageHandler_GetSuggestionsByCategory_Params_Data)");
class  PageHandler_GetSuggestionsByCategory_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_GetSuggestionsByCategory_ResponseParams_Data));
      new (data()) PageHandler_GetSuggestionsByCategory_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_GetSuggestionsByCategory_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_GetSuggestionsByCategory_ResponseParams_Data>(index_);
    }
    PageHandler_GetSuggestionsByCategory_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::SuggestionCategory_Data>>> categories;

 private:
  PageHandler_GetSuggestionsByCategory_ResponseParams_Data();
  ~PageHandler_GetSuggestionsByCategory_ResponseParams_Data() = delete;
};
static_assert(sizeof(PageHandler_GetSuggestionsByCategory_ResponseParams_Data) == 16,
              "Bad sizeof(PageHandler_GetSuggestionsByCategory_ResponseParams_Data)");
class  PageHandler_ClearDismissedSuggestions_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(PageHandler_ClearDismissedSuggestions_Params_Data));
      new (data()) PageHandler_ClearDismissedSuggestions_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    PageHandler_ClearDismissedSuggestions_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<PageHandler_ClearDismissedSuggestions_Params_Data>(index_);
    }
    PageHandler_ClearDismissedSuggestions_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int64_t category;

 private:
  PageHandler_ClearDismissedSuggestions_Params_Data();
  ~PageHandler_ClearDismissedSuggestions_Params_Data() = delete;
};
static_assert(sizeof(PageHandler_ClearDismissedSuggestions_Params_Data) == 16,
              "Bad sizeof(PageHandler_ClearDismissedSuggestions_Params_Data)");
class  Page_OnSuggestionsChanged_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(Page_OnSuggestionsChanged_Params_Data));
      new (data()) Page_OnSuggestionsChanged_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    Page_OnSuggestionsChanged_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<Page_OnSuggestionsChanged_Params_Data>(index_);
    }
    Page_OnSuggestionsChanged_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  Page_OnSuggestionsChanged_Params_Data();
  ~Page_OnSuggestionsChanged_Params_Data() = delete;
};
static_assert(sizeof(Page_OnSuggestionsChanged_Params_Data) == 8,
              "Bad sizeof(Page_OnSuggestionsChanged_Params_Data)");

}  // namespace internal
class PageHandlerFactory_CreatePageHandler_ParamsDataView {
 public:
  PageHandlerFactory_CreatePageHandler_ParamsDataView() {}

  PageHandlerFactory_CreatePageHandler_ParamsDataView(
      internal::PageHandlerFactory_CreatePageHandler_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakePage() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::snippets_internals::mojom::PageInterfaceBase>>(
            &data_->page, &result, context_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::PageHandlerFactory_CreatePageHandler_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PageHandlerFactory_CreatePageHandler_ResponseParamsDataView {
 public:
  PageHandlerFactory_CreatePageHandler_ResponseParamsDataView() {}

  PageHandlerFactory_CreatePageHandler_ResponseParamsDataView(
      internal::PageHandlerFactory_CreatePageHandler_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeHandler() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::snippets_internals::mojom::PageHandlerInterfaceBase>>(
            &data_->handler, &result, context_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::PageHandlerFactory_CreatePageHandler_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PageHandler_GetGeneralProperties_ParamsDataView {
 public:
  PageHandler_GetGeneralProperties_ParamsDataView() {}

  PageHandler_GetGeneralProperties_ParamsDataView(
      internal::PageHandler_GetGeneralProperties_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_GetGeneralProperties_Params_Data* data_ = nullptr;
};

class PageHandler_GetGeneralProperties_ResponseParamsDataView {
 public:
  PageHandler_GetGeneralProperties_ResponseParamsDataView() {}

  PageHandler_GetGeneralProperties_ResponseParamsDataView(
      internal::PageHandler_GetGeneralProperties_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetPropertiesDataView(
      mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadProperties(UserType* output) {
    auto* pointer = data_->properties.Get();
    return mojo::internal::Deserialize<mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>>(
        pointer, output, context_);
  }
 private:
  internal::PageHandler_GetGeneralProperties_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PageHandler_GetUserClassifierProperties_ParamsDataView {
 public:
  PageHandler_GetUserClassifierProperties_ParamsDataView() {}

  PageHandler_GetUserClassifierProperties_ParamsDataView(
      internal::PageHandler_GetUserClassifierProperties_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_GetUserClassifierProperties_Params_Data* data_ = nullptr;
};

class PageHandler_GetUserClassifierProperties_ResponseParamsDataView {
 public:
  PageHandler_GetUserClassifierProperties_ResponseParamsDataView() {}

  PageHandler_GetUserClassifierProperties_ResponseParamsDataView(
      internal::PageHandler_GetUserClassifierProperties_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetPropertiesDataView(
      mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadProperties(UserType* output) {
    auto* pointer = data_->properties.Get();
    return mojo::internal::Deserialize<mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>>(
        pointer, output, context_);
  }
 private:
  internal::PageHandler_GetUserClassifierProperties_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PageHandler_ClearUserClassifierProperties_ParamsDataView {
 public:
  PageHandler_ClearUserClassifierProperties_ParamsDataView() {}

  PageHandler_ClearUserClassifierProperties_ParamsDataView(
      internal::PageHandler_ClearUserClassifierProperties_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_ClearUserClassifierProperties_Params_Data* data_ = nullptr;
};

class PageHandler_GetCategoryRankerProperties_ParamsDataView {
 public:
  PageHandler_GetCategoryRankerProperties_ParamsDataView() {}

  PageHandler_GetCategoryRankerProperties_ParamsDataView(
      internal::PageHandler_GetCategoryRankerProperties_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_GetCategoryRankerProperties_Params_Data* data_ = nullptr;
};

class PageHandler_GetCategoryRankerProperties_ResponseParamsDataView {
 public:
  PageHandler_GetCategoryRankerProperties_ResponseParamsDataView() {}

  PageHandler_GetCategoryRankerProperties_ResponseParamsDataView(
      internal::PageHandler_GetCategoryRankerProperties_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetPropertiesDataView(
      mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadProperties(UserType* output) {
    auto* pointer = data_->properties.Get();
    return mojo::internal::Deserialize<mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>>(
        pointer, output, context_);
  }
 private:
  internal::PageHandler_GetCategoryRankerProperties_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PageHandler_ReloadSuggestions_ParamsDataView {
 public:
  PageHandler_ReloadSuggestions_ParamsDataView() {}

  PageHandler_ReloadSuggestions_ParamsDataView(
      internal::PageHandler_ReloadSuggestions_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_ReloadSuggestions_Params_Data* data_ = nullptr;
};

class PageHandler_ClearCachedSuggestions_ParamsDataView {
 public:
  PageHandler_ClearCachedSuggestions_ParamsDataView() {}

  PageHandler_ClearCachedSuggestions_ParamsDataView(
      internal::PageHandler_ClearCachedSuggestions_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_ClearCachedSuggestions_Params_Data* data_ = nullptr;
};

class PageHandler_GetRemoteContentSuggestionsProperties_ParamsDataView {
 public:
  PageHandler_GetRemoteContentSuggestionsProperties_ParamsDataView() {}

  PageHandler_GetRemoteContentSuggestionsProperties_ParamsDataView(
      internal::PageHandler_GetRemoteContentSuggestionsProperties_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_GetRemoteContentSuggestionsProperties_Params_Data* data_ = nullptr;
};

class PageHandler_GetRemoteContentSuggestionsProperties_ResponseParamsDataView {
 public:
  PageHandler_GetRemoteContentSuggestionsProperties_ResponseParamsDataView() {}

  PageHandler_GetRemoteContentSuggestionsProperties_ResponseParamsDataView(
      internal::PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetPropertiesDataView(
      mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadProperties(UserType* output) {
    auto* pointer = data_->properties.Get();
    return mojo::internal::Deserialize<mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>>(
        pointer, output, context_);
  }
 private:
  internal::PageHandler_GetRemoteContentSuggestionsProperties_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PageHandler_FetchSuggestionsInBackground_ParamsDataView {
 public:
  PageHandler_FetchSuggestionsInBackground_ParamsDataView() {}

  PageHandler_FetchSuggestionsInBackground_ParamsDataView(
      internal::PageHandler_FetchSuggestionsInBackground_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t delaySeconds() const {
    return data_->delaySeconds;
  }
 private:
  internal::PageHandler_FetchSuggestionsInBackground_Params_Data* data_ = nullptr;
};

class PageHandler_FetchSuggestionsInBackground_ResponseParamsDataView {
 public:
  PageHandler_FetchSuggestionsInBackground_ResponseParamsDataView() {}

  PageHandler_FetchSuggestionsInBackground_ResponseParamsDataView(
      internal::PageHandler_FetchSuggestionsInBackground_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_FetchSuggestionsInBackground_ResponseParams_Data* data_ = nullptr;
};

class PageHandler_GetLastJson_ParamsDataView {
 public:
  PageHandler_GetLastJson_ParamsDataView() {}

  PageHandler_GetLastJson_ParamsDataView(
      internal::PageHandler_GetLastJson_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_GetLastJson_Params_Data* data_ = nullptr;
};

class PageHandler_GetLastJson_ResponseParamsDataView {
 public:
  PageHandler_GetLastJson_ResponseParamsDataView() {}

  PageHandler_GetLastJson_ResponseParamsDataView(
      internal::PageHandler_GetLastJson_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetJsonDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadJson(UserType* output) {
    auto* pointer = data_->json.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
 private:
  internal::PageHandler_GetLastJson_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PageHandler_GetSuggestionsByCategory_ParamsDataView {
 public:
  PageHandler_GetSuggestionsByCategory_ParamsDataView() {}

  PageHandler_GetSuggestionsByCategory_ParamsDataView(
      internal::PageHandler_GetSuggestionsByCategory_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::PageHandler_GetSuggestionsByCategory_Params_Data* data_ = nullptr;
};

class PageHandler_GetSuggestionsByCategory_ResponseParamsDataView {
 public:
  PageHandler_GetSuggestionsByCategory_ResponseParamsDataView() {}

  PageHandler_GetSuggestionsByCategory_ResponseParamsDataView(
      internal::PageHandler_GetSuggestionsByCategory_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetCategoriesDataView(
      mojo::ArrayDataView<SuggestionCategoryDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadCategories(UserType* output) {
    auto* pointer = data_->categories.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::snippets_internals::mojom::SuggestionCategoryDataView>>(
        pointer, output, context_);
  }
 private:
  internal::PageHandler_GetSuggestionsByCategory_ResponseParams_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class PageHandler_ClearDismissedSuggestions_ParamsDataView {
 public:
  PageHandler_ClearDismissedSuggestions_ParamsDataView() {}

  PageHandler_ClearDismissedSuggestions_ParamsDataView(
      internal::PageHandler_ClearDismissedSuggestions_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int64_t category() const {
    return data_->category;
  }
 private:
  internal::PageHandler_ClearDismissedSuggestions_Params_Data* data_ = nullptr;
};

class Page_OnSuggestionsChanged_ParamsDataView {
 public:
  Page_OnSuggestionsChanged_ParamsDataView() {}

  Page_OnSuggestionsChanged_ParamsDataView(
      internal::Page_OnSuggestionsChanged_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::Page_OnSuggestionsChanged_Params_Data* data_ = nullptr;
};








inline void PageHandler_GetGeneralProperties_ResponseParamsDataView::GetPropertiesDataView(
    mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output) {
  auto pointer = data_->properties.Get();
  *output = mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>(pointer, context_);
}




inline void PageHandler_GetUserClassifierProperties_ResponseParamsDataView::GetPropertiesDataView(
    mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output) {
  auto pointer = data_->properties.Get();
  *output = mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>(pointer, context_);
}






inline void PageHandler_GetCategoryRankerProperties_ResponseParamsDataView::GetPropertiesDataView(
    mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output) {
  auto pointer = data_->properties.Get();
  *output = mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>(pointer, context_);
}








inline void PageHandler_GetRemoteContentSuggestionsProperties_ResponseParamsDataView::GetPropertiesDataView(
    mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>* output) {
  auto pointer = data_->properties.Get();
  *output = mojo::MapDataView<mojo::StringDataView, mojo::StringDataView>(pointer, context_);
}








inline void PageHandler_GetLastJson_ResponseParamsDataView::GetJsonDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->json.Get();
  *output = mojo::StringDataView(pointer, context_);
}




inline void PageHandler_GetSuggestionsByCategory_ResponseParamsDataView::GetCategoriesDataView(
    mojo::ArrayDataView<SuggestionCategoryDataView>* output) {
  auto pointer = data_->categories.Get();
  *output = mojo::ArrayDataView<SuggestionCategoryDataView>(pointer, context_);
}





}  // namespace mojom
}  // namespace snippets_internals

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CHROME_BROWSER_UI_WEBUI_SNIPPETS_INTERNALS_SNIPPETS_INTERNALS_MOJOM_PARAMS_DATA_H_