// chrome/browser/ui/webui/new_tab_page/new_tab_page.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
newTabPage.mojom.ThemeType = {};
newTabPage.mojom.ThemeType.DEFAULT;
newTabPage.mojom.ThemeType.AUTOGENERATED;
newTabPage.mojom.ThemeType.CHROME;
newTabPage.mojom.ThemeType.THIRD_PARTY;
/** @enum {number} */
newTabPage.mojom.DoodleImageType = {};
newTabPage.mojom.DoodleImageType.ANIMATION;
newTabPage.mojom.DoodleImageType.CTA;
newTabPage.mojom.DoodleImageType.STATIC;
/** @enum {number} */
newTabPage.mojom.DoodleShareChannel = {};
newTabPage.mojom.DoodleShareChannel.FACEBOOK;
newTabPage.mojom.DoodleShareChannel.TWITTER;
newTabPage.mojom.DoodleShareChannel.EMAIL;
newTabPage.mojom.DoodleShareChannel.LINK_COPY;
/** @enum {number} */
newTabPage.mojom.CustomizeDialogAction = {};
newTabPage.mojom.CustomizeDialogAction.CANCEL_CLICKED;
newTabPage.mojom.CustomizeDialogAction.DONE_CLICKED;
newTabPage.mojom.CustomizeDialogAction.OPEN_CLICKED;
newTabPage.mojom.CustomizeDialogAction.BACKGROUNDS_BACK_CLICKED;
newTabPage.mojom.CustomizeDialogAction.BACKGROUNDS_NO_BACKGROUND_SELECTED;
newTabPage.mojom.CustomizeDialogAction.BACKGROUNDS_COLLECTION_OPENED;
newTabPage.mojom.CustomizeDialogAction.BACKGROUNDS_REFRESH_TOGGLE_CLICKED;
newTabPage.mojom.CustomizeDialogAction.BACKGROUNDS_IMAGE_SELECTED;
newTabPage.mojom.CustomizeDialogAction.BACKGROUNDS_UPLOAD_FROM_DEVICE_CLICKED;
newTabPage.mojom.CustomizeDialogAction.SHORTCUTS_CUSTOM_LINKS_CLICKED;
newTabPage.mojom.CustomizeDialogAction.SHORTCUTS_MOST_VISITED_CLICKED;
newTabPage.mojom.CustomizeDialogAction.SHORTCUTS_VISIBILITY_TOGGLE_CLICKED;
/** @enum {number} */
newTabPage.mojom.VoiceSearchAction = {};
newTabPage.mojom.VoiceSearchAction.ACTIVATE_SEARCH_BOX;
newTabPage.mojom.VoiceSearchAction.ACTIVATE_KEYBOARD;
newTabPage.mojom.VoiceSearchAction.CLOSE_OVERLAY;
newTabPage.mojom.VoiceSearchAction.QUERY_SUBMITTED;
newTabPage.mojom.VoiceSearchAction.SUPPORT_LINK_CLICKED;
newTabPage.mojom.VoiceSearchAction.TRY_AGAIN_LINK;
newTabPage.mojom.VoiceSearchAction.TRY_AGAIN_MIC_BUTTON;
/** @enum {number} */
newTabPage.mojom.VoiceSearchError = {};
newTabPage.mojom.VoiceSearchError.ABORTED;
newTabPage.mojom.VoiceSearchError.NO_SPEECH;
newTabPage.mojom.VoiceSearchError.AUDIO_CAPTURE;
newTabPage.mojom.VoiceSearchError.NETWORK;
newTabPage.mojom.VoiceSearchError.NOT_ALLOWED;
newTabPage.mojom.VoiceSearchError.LANGUAGE_NOT_SUPPORTED;
newTabPage.mojom.VoiceSearchError.NO_MATCH;
newTabPage.mojom.VoiceSearchError.SERVICE_NOT_ALLOWED;
newTabPage.mojom.VoiceSearchError.BAD_GRAMMAR;
newTabPage.mojom.VoiceSearchError.OTHER;
goog.provide('newTabPage.mojom.PageHandlerFactory');
goog.provide('newTabPage.mojom.PageHandlerFactoryImpl');
goog.provide('newTabPage.mojom.PageHandlerFactoryPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
newTabPage.mojom.PageHandlerFactory;

/** @interface */
newTabPage.mojom.PageHandlerFactoryImpl = class {
  /**
   * @param { !newTabPage.mojom.PagePtr } page
   * @param { !mojo.InterfaceRequest } handler
   */
  createPageHandler(page, handler) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { newTabPage.mojom.PageHandlerFactoryImpl }
 */
newTabPage.mojom.PageHandlerFactoryPtr = class {
  /**
   * @param { !newTabPage.mojom.PagePtr } page
   * @param { !mojo.InterfaceRequest } handler
   */
  createPageHandler(page, handler) {}
};

goog.provide('newTabPage.mojom.PageHandler');
goog.provide('newTabPage.mojom.PageHandlerImpl');
goog.provide('newTabPage.mojom.PageHandlerPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
newTabPage.mojom.PageHandler;

/** @interface */
newTabPage.mojom.PageHandlerImpl = class {
  /**
   * @param { !url.mojom.Url } url
   * @param { !string } title
   * @return {Promise}
   */
  addMostVisitedTile(url, title) {}
  /**
   * @param { !url.mojom.Url } url
   */
  deleteMostVisitedTile(url) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !number } newPos
   */
  reorderMostVisitedTile(url, newPos) {}
  /**
   */
  restoreMostVisitedDefaults() {}
  /**
   * @param { !string } attribution1
   * @param { !string } attribution2
   * @param { !url.mojom.Url } attributionUrl
   * @param { !url.mojom.Url } imageUrl
   */
  setBackgroundImage(attribution1, attribution2, attributionUrl, imageUrl) {}
  /**
   * @param { !string } collectionId
   */
  setDailyRefreshCollectionId(collectionId) {}
  /**
   */
  setNoBackgroundImage() {}
  /**
   * @param { !boolean } customLinksEnabled
   * @param { !boolean } visible
   */
  setMostVisitedSettings(customLinksEnabled, visible) {}
  /**
   */
  undoMostVisitedTileAction() {}
  /**
   */
  updateMostVisitedInfo() {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !url.mojom.Url } newUrl
   * @param { !string } newTitle
   * @return {Promise}
   */
  updateMostVisitedTile(url, newUrl, newTitle) {}
  /**
   * @return {Promise}
   */
  getChromeThemes() {}
  /**
   */
  applyDefaultTheme() {}
  /**
   * @param { !skia.mojom.SkColor } frameColor
   */
  applyAutogeneratedTheme(frameColor) {}
  /**
   * @param { !number } id
   */
  applyChromeTheme(id) {}
  /**
   */
  confirmThemeChanges() {}
  /**
   */
  revertThemeChanges() {}
  /**
   * @return {Promise}
   */
  getBackgroundCollections() {}
  /**
   * @param { !string } collectionId
   * @return {Promise}
   */
  getBackgroundImages(collectionId) {}
  /**
   */
  focusOmnibox() {}
  /**
   * @param { !string } text
   */
  pasteIntoOmnibox(text) {}
  /**
   * @return {Promise}
   */
  getDoodle() {}
  /**
   * @return {Promise}
   */
  chooseLocalCustomBackground() {}
  /**
   * @param { !string } queryParams
   * @return {Promise}
   */
  getOneGoogleBarParts(queryParams) {}
  /**
   * @param { !Array<newTabPage.mojom.MostVisitedTile> } tiles
   * @param { !number } time
   */
  onMostVisitedTilesRendered(tiles, time) {}
  /**
   * @param { !number } time
   */
  onOneGoogleBarRendered(time) {}
  /**
   * @param { !number } time
   */
  onPromoRendered(time) {}
  /**
   * @param { !newTabPage.mojom.MostVisitedTile } tile
   * @param { !number } index
   */
  onMostVisitedTileNavigation(tile, index) {}
  /**
   * @param { !newTabPage.mojom.CustomizeDialogAction } action
   */
  onCustomizeDialogAction(action) {}
  /**
   * @param { !newTabPage.mojom.DoodleImageType } type
   * @param { url.mojom.Url } logUrl
   */
  onDoodleImageClicked(type, logUrl) {}
  /**
   * @param { !newTabPage.mojom.DoodleImageType } type
   * @param { !number } time
   * @param { !url.mojom.Url } logUrl
   * @return {Promise}
   */
  onDoodleImageRendered(type, time, logUrl) {}
  /**
   * @param { !newTabPage.mojom.DoodleShareChannel } channel
   * @param { !string } doodleId
   * @param { string } shareId
   */
  onDoodleShared(channel, doodleId, shareId) {}
  /**
   */
  onPromoLinkClicked() {}
  /**
   * @param { !newTabPage.mojom.VoiceSearchAction } action
   */
  onVoiceSearchAction(action) {}
  /**
   * @param { !newTabPage.mojom.VoiceSearchError } error
   */
  onVoiceSearchError(error) {}
  /**
   * @param { !mojoBase.mojom.String16 } input
   * @param { !boolean } preventInlineAutocomplete
   */
  queryAutocomplete(input, preventInlineAutocomplete) {}
  /**
   * @param { !boolean } clearResult
   */
  stopAutocomplete(clearResult) {}
  /**
   * @param { !number } line
   * @param { !url.mojom.Url } url
   * @param { !boolean } areMatchesShowing
   * @param { !mojoBase.mojom.TimeDelta } timeElapsedSinceLastFocus
   * @param { !number } mouseButton
   * @param { !boolean } altKey
   * @param { !boolean } ctrlKey
   * @param { !boolean } metaKey
   * @param { !boolean } shiftKey
   */
  openAutocompleteMatch(line, url, areMatchesShowing, timeElapsedSinceLastFocus, mouseButton, altKey, ctrlKey, metaKey, shiftKey) {}
  /**
   * @param { !number } line
   */
  deleteAutocompleteMatch(line) {}
  /**
   * @param { !number } suggestionGroupId
   */
  toggleSuggestionGroupIdVisibility(suggestionGroupId) {}
  /**
   * @param { !mojoBase.mojom.TimeDelta } latency
   */
  logCharTypedToRepaintLatency(latency) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { newTabPage.mojom.PageHandlerImpl }
 */
newTabPage.mojom.PageHandlerPtr = class {
  /**
   * @param { !url.mojom.Url } url
   * @param { !string } title
   * @return {Promise}
   */
  addMostVisitedTile(url, title) {}
  /**
   * @param { !url.mojom.Url } url
   */
  deleteMostVisitedTile(url) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !number } newPos
   */
  reorderMostVisitedTile(url, newPos) {}
  /**
   */
  restoreMostVisitedDefaults() {}
  /**
   * @param { !string } attribution1
   * @param { !string } attribution2
   * @param { !url.mojom.Url } attributionUrl
   * @param { !url.mojom.Url } imageUrl
   */
  setBackgroundImage(attribution1, attribution2, attributionUrl, imageUrl) {}
  /**
   * @param { !string } collectionId
   */
  setDailyRefreshCollectionId(collectionId) {}
  /**
   */
  setNoBackgroundImage() {}
  /**
   * @param { !boolean } customLinksEnabled
   * @param { !boolean } visible
   */
  setMostVisitedSettings(customLinksEnabled, visible) {}
  /**
   */
  undoMostVisitedTileAction() {}
  /**
   */
  updateMostVisitedInfo() {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !url.mojom.Url } newUrl
   * @param { !string } newTitle
   * @return {Promise}
   */
  updateMostVisitedTile(url, newUrl, newTitle) {}
  /**
   * @return {Promise}
   */
  getChromeThemes() {}
  /**
   */
  applyDefaultTheme() {}
  /**
   * @param { !skia.mojom.SkColor } frameColor
   */
  applyAutogeneratedTheme(frameColor) {}
  /**
   * @param { !number } id
   */
  applyChromeTheme(id) {}
  /**
   */
  confirmThemeChanges() {}
  /**
   */
  revertThemeChanges() {}
  /**
   * @return {Promise}
   */
  getBackgroundCollections() {}
  /**
   * @param { !string } collectionId
   * @return {Promise}
   */
  getBackgroundImages(collectionId) {}
  /**
   */
  focusOmnibox() {}
  /**
   * @param { !string } text
   */
  pasteIntoOmnibox(text) {}
  /**
   * @return {Promise}
   */
  getDoodle() {}
  /**
   * @return {Promise}
   */
  chooseLocalCustomBackground() {}
  /**
   * @param { !string } queryParams
   * @return {Promise}
   */
  getOneGoogleBarParts(queryParams) {}
  /**
   * @param { !Array<newTabPage.mojom.MostVisitedTile> } tiles
   * @param { !number } time
   */
  onMostVisitedTilesRendered(tiles, time) {}
  /**
   * @param { !number } time
   */
  onOneGoogleBarRendered(time) {}
  /**
   * @param { !number } time
   */
  onPromoRendered(time) {}
  /**
   * @param { !newTabPage.mojom.MostVisitedTile } tile
   * @param { !number } index
   */
  onMostVisitedTileNavigation(tile, index) {}
  /**
   * @param { !newTabPage.mojom.CustomizeDialogAction } action
   */
  onCustomizeDialogAction(action) {}
  /**
   * @param { !newTabPage.mojom.DoodleImageType } type
   * @param { url.mojom.Url } logUrl
   */
  onDoodleImageClicked(type, logUrl) {}
  /**
   * @param { !newTabPage.mojom.DoodleImageType } type
   * @param { !number } time
   * @param { !url.mojom.Url } logUrl
   * @return {Promise}
   */
  onDoodleImageRendered(type, time, logUrl) {}
  /**
   * @param { !newTabPage.mojom.DoodleShareChannel } channel
   * @param { !string } doodleId
   * @param { string } shareId
   */
  onDoodleShared(channel, doodleId, shareId) {}
  /**
   */
  onPromoLinkClicked() {}
  /**
   * @param { !newTabPage.mojom.VoiceSearchAction } action
   */
  onVoiceSearchAction(action) {}
  /**
   * @param { !newTabPage.mojom.VoiceSearchError } error
   */
  onVoiceSearchError(error) {}
  /**
   * @param { !mojoBase.mojom.String16 } input
   * @param { !boolean } preventInlineAutocomplete
   */
  queryAutocomplete(input, preventInlineAutocomplete) {}
  /**
   * @param { !boolean } clearResult
   */
  stopAutocomplete(clearResult) {}
  /**
   * @param { !number } line
   * @param { !url.mojom.Url } url
   * @param { !boolean } areMatchesShowing
   * @param { !mojoBase.mojom.TimeDelta } timeElapsedSinceLastFocus
   * @param { !number } mouseButton
   * @param { !boolean } altKey
   * @param { !boolean } ctrlKey
   * @param { !boolean } metaKey
   * @param { !boolean } shiftKey
   */
  openAutocompleteMatch(line, url, areMatchesShowing, timeElapsedSinceLastFocus, mouseButton, altKey, ctrlKey, metaKey, shiftKey) {}
  /**
   * @param { !number } line
   */
  deleteAutocompleteMatch(line) {}
  /**
   * @param { !number } suggestionGroupId
   */
  toggleSuggestionGroupIdVisibility(suggestionGroupId) {}
  /**
   * @param { !mojoBase.mojom.TimeDelta } latency
   */
  logCharTypedToRepaintLatency(latency) {}
};

goog.provide('newTabPage.mojom.Page');
goog.provide('newTabPage.mojom.PageImpl');
goog.provide('newTabPage.mojom.PagePtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
newTabPage.mojom.Page;

/** @interface */
newTabPage.mojom.PageImpl = class {
  /**
   * @param { !newTabPage.mojom.MostVisitedInfo } info
   */
  setMostVisitedInfo(info) {}
  /**
   * @param { !newTabPage.mojom.Theme } theme
   */
  setTheme(theme) {}
  /**
   * @param { !boolean } focused
   */
  setFakeboxFocused(focused) {}
  /**
   * @param { !boolean } visible
   */
  setFakeboxVisible(visible) {}
  /**
   * @param { !search.mojom.AutocompleteResult } result
   */
  autocompleteResultChanged(result) {}
  /**
   * @param { !number } matchIndex
   * @param { !url.mojom.Url } url
   * @param { !string } dataUrl
   */
  autocompleteMatchImageAvailable(matchIndex, url, dataUrl) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { newTabPage.mojom.PageImpl }
 */
newTabPage.mojom.PagePtr = class {
  /**
   * @param { !newTabPage.mojom.MostVisitedInfo } info
   */
  setMostVisitedInfo(info) {}
  /**
   * @param { !newTabPage.mojom.Theme } theme
   */
  setTheme(theme) {}
  /**
   * @param { !boolean } focused
   */
  setFakeboxFocused(focused) {}
  /**
   * @param { !boolean } visible
   */
  setFakeboxVisible(visible) {}
  /**
   * @param { !search.mojom.AutocompleteResult } result
   */
  autocompleteResultChanged(result) {}
  /**
   * @param { !number } matchIndex
   * @param { !url.mojom.Url } url
   * @param { !string } dataUrl
   */
  autocompleteMatchImageAvailable(matchIndex, url, dataUrl) {}
};

goog.provide('newTabPage.mojom.OneGoogleBarParts');

newTabPage.mojom.OneGoogleBarParts = class {
  constructor() {
    /** @type { !string } */
    this.barHtml;
    /** @type { !string } */
    this.inHeadScript;
    /** @type { !string } */
    this.inHeadStyle;
    /** @type { !string } */
    this.afterBarScript;
    /** @type { !string } */
    this.endOfBodyHtml;
    /** @type { !string } */
    this.endOfBodyScript;
  }
};

goog.provide('newTabPage.mojom.MostVisitedTile');

newTabPage.mojom.MostVisitedTile = class {
  constructor() {
    /** @type { !string } */
    this.title;
    /** @type { !mojoBase.mojom.TextDirection } */
    this.titleDirection;
    /** @type { !number } */
    this.source;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !number } */
    this.titleSource;
    /** @type { !mojoBase.mojom.Time } */
    this.dataGenerationTime;
  }
};

goog.provide('newTabPage.mojom.MostVisitedInfo');

newTabPage.mojom.MostVisitedInfo = class {
  constructor() {
    /** @type { !boolean } */
    this.customLinksEnabled;
    /** @type { !boolean } */
    this.visible;
    /** @type { !Array<newTabPage.mojom.MostVisitedTile> } */
    this.tiles;
  }
};

goog.provide('newTabPage.mojom.ThemeColors');

newTabPage.mojom.ThemeColors = class {
  constructor() {
    /** @type { !skia.mojom.SkColor } */
    this.frame;
    /** @type { !skia.mojom.SkColor } */
    this.activeTab;
  }
};

goog.provide('newTabPage.mojom.BackgroundCollection');

newTabPage.mojom.BackgroundCollection = class {
  constructor() {
    /** @type { !string } */
    this.id;
    /** @type { !string } */
    this.label;
    /** @type { !url.mojom.Url } */
    this.previewImageUrl;
  }
};

goog.provide('newTabPage.mojom.CollectionImage');

newTabPage.mojom.CollectionImage = class {
  constructor() {
    /** @type { !string } */
    this.attribution1;
    /** @type { !string } */
    this.attribution2;
    /** @type { !url.mojom.Url } */
    this.attributionUrl;
    /** @type { !url.mojom.Url } */
    this.imageUrl;
    /** @type { !url.mojom.Url } */
    this.previewImageUrl;
  }
};

goog.provide('newTabPage.mojom.ChromeTheme');

newTabPage.mojom.ChromeTheme = class {
  constructor() {
    /** @type { !number } */
    this.id;
    /** @type { !string } */
    this.label;
    /** @type { !newTabPage.mojom.ThemeColors } */
    this.colors;
  }
};

goog.provide('newTabPage.mojom.ThirdPartyThemeInfo');

newTabPage.mojom.ThirdPartyThemeInfo = class {
  constructor() {
    /** @type { !string } */
    this.id;
    /** @type { !string } */
    this.name;
  }
};

goog.provide('newTabPage.mojom.SearchBoxTheme');

newTabPage.mojom.SearchBoxTheme = class {
  constructor() {
    /** @type { !skia.mojom.SkColor } */
    this.bg;
    /** @type { !skia.mojom.SkColor } */
    this.icon;
    /** @type { !skia.mojom.SkColor } */
    this.iconSelected;
    /** @type { !skia.mojom.SkColor } */
    this.placeholder;
    /** @type { !skia.mojom.SkColor } */
    this.resultsBg;
    /** @type { !skia.mojom.SkColor } */
    this.resultsBgHovered;
    /** @type { !skia.mojom.SkColor } */
    this.resultsBgSelected;
    /** @type { !skia.mojom.SkColor } */
    this.resultsDim;
    /** @type { !skia.mojom.SkColor } */
    this.resultsDimSelected;
    /** @type { !skia.mojom.SkColor } */
    this.resultsText;
    /** @type { !skia.mojom.SkColor } */
    this.resultsTextSelected;
    /** @type { !skia.mojom.SkColor } */
    this.resultsUrl;
    /** @type { !skia.mojom.SkColor } */
    this.resultsUrlSelected;
    /** @type { !skia.mojom.SkColor } */
    this.text;
  }
};

goog.provide('newTabPage.mojom.BackgroundImage');

newTabPage.mojom.BackgroundImage = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { url.mojom.Url } */
    this.url2x;
    /** @type { url.mojom.Url } */
    this.attributionUrl;
    /** @type { string } */
    this.size;
    /** @type { string } */
    this.repeatX;
    /** @type { string } */
    this.repeatY;
    /** @type { string } */
    this.positionX;
    /** @type { string } */
    this.positionY;
  }
};

goog.provide('newTabPage.mojom.Theme');

newTabPage.mojom.Theme = class {
  constructor() {
    /** @type { !newTabPage.mojom.ThemeType } */
    this.type;
    /** @type { !boolean } */
    this.shortcutUseWhiteAddIcon;
    /** @type { !boolean } */
    this.shortcutUseTitlePill;
    /** @type { !boolean } */
    this.isDark;
    /** @type { !skia.mojom.SkColor } */
    this.backgroundColor;
    /** @type { !skia.mojom.SkColor } */
    this.shortcutBackgroundColor;
    /** @type { !skia.mojom.SkColor } */
    this.shortcutTextColor;
    /** @type { skia.mojom.SkColor } */
    this.logoColor;
    /** @type { string } */
    this.dailyRefreshCollectionId;
    /** @type { newTabPage.mojom.BackgroundImage } */
    this.backgroundImage;
    /** @type { string } */
    this.backgroundImageAttribution1;
    /** @type { string } */
    this.backgroundImageAttribution2;
    /** @type { url.mojom.Url } */
    this.backgroundImageAttributionUrl;
    /** @type { !Object } */
    this.info;
    /** @type { !newTabPage.mojom.SearchBoxTheme } */
    this.searchBox;
  }
};

goog.provide('newTabPage.mojom.DoodleShareButton');

newTabPage.mojom.DoodleShareButton = class {
  constructor() {
    /** @type { !number } */
    this.x;
    /** @type { !number } */
    this.y;
    /** @type { !skia.mojom.SkColor } */
    this.backgroundColor;
    /** @type { !url.mojom.Url } */
    this.iconUrl;
  }
};

goog.provide('newTabPage.mojom.ImageDoodleContent');

newTabPage.mojom.ImageDoodleContent = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.imageUrl;
    /** @type { !url.mojom.Url } */
    this.onClickUrl;
    /** @type { url.mojom.Url } */
    this.animationUrl;
    /** @type { !number } */
    this.width;
    /** @type { !number } */
    this.height;
    /** @type { !skia.mojom.SkColor } */
    this.backgroundColor;
    /** @type { !newTabPage.mojom.DoodleShareButton } */
    this.shareButton;
    /** @type { !url.mojom.Url } */
    this.shareUrl;
    /** @type { !url.mojom.Url } */
    this.imageImpressionLogUrl;
    /** @type { url.mojom.Url } */
    this.animationImpressionLogUrl;
  }
};

goog.provide('newTabPage.mojom.InteractiveDoodleContent');

newTabPage.mojom.InteractiveDoodleContent = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !number } */
    this.width;
    /** @type { !number } */
    this.height;
  }
};

goog.provide('newTabPage.mojom.Doodle');

newTabPage.mojom.Doodle = class {
  constructor() {
    /** @type { !Object } */
    this.content;
    /** @type { !string } */
    this.description;
  }
};

goog.provide('newTabPage.mojom.PageHandlerFactory_CreatePageHandler_Params');

newTabPage.mojom.PageHandlerFactory_CreatePageHandler_Params = class {
  constructor() {
    /** @type { !newTabPage.mojom.PagePtr } */
    this.page;
    /** @type { !mojo.InterfaceRequest } */
    this.handler;
  }
};

goog.provide('newTabPage.mojom.PageHandler_AddMostVisitedTile_Params');

newTabPage.mojom.PageHandler_AddMostVisitedTile_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !string } */
    this.title;
  }
};

goog.provide('newTabPage.mojom.PageHandler_AddMostVisitedTile_ResponseParams');

newTabPage.mojom.PageHandler_AddMostVisitedTile_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('newTabPage.mojom.PageHandler_DeleteMostVisitedTile_Params');

newTabPage.mojom.PageHandler_DeleteMostVisitedTile_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
  }
};

goog.provide('newTabPage.mojom.PageHandler_ReorderMostVisitedTile_Params');

newTabPage.mojom.PageHandler_ReorderMostVisitedTile_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !number } */
    this.newPos;
  }
};

goog.provide('newTabPage.mojom.PageHandler_RestoreMostVisitedDefaults_Params');

newTabPage.mojom.PageHandler_RestoreMostVisitedDefaults_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_SetBackgroundImage_Params');

newTabPage.mojom.PageHandler_SetBackgroundImage_Params = class {
  constructor() {
    /** @type { !string } */
    this.attribution1;
    /** @type { !string } */
    this.attribution2;
    /** @type { !url.mojom.Url } */
    this.attributionUrl;
    /** @type { !url.mojom.Url } */
    this.imageUrl;
  }
};

goog.provide('newTabPage.mojom.PageHandler_SetDailyRefreshCollectionId_Params');

newTabPage.mojom.PageHandler_SetDailyRefreshCollectionId_Params = class {
  constructor() {
    /** @type { !string } */
    this.collectionId;
  }
};

goog.provide('newTabPage.mojom.PageHandler_SetNoBackgroundImage_Params');

newTabPage.mojom.PageHandler_SetNoBackgroundImage_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_SetMostVisitedSettings_Params');

newTabPage.mojom.PageHandler_SetMostVisitedSettings_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.customLinksEnabled;
    /** @type { !boolean } */
    this.visible;
  }
};

goog.provide('newTabPage.mojom.PageHandler_UndoMostVisitedTileAction_Params');

newTabPage.mojom.PageHandler_UndoMostVisitedTileAction_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_UpdateMostVisitedInfo_Params');

newTabPage.mojom.PageHandler_UpdateMostVisitedInfo_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_UpdateMostVisitedTile_Params');

newTabPage.mojom.PageHandler_UpdateMostVisitedTile_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !url.mojom.Url } */
    this.newUrl;
    /** @type { !string } */
    this.newTitle;
  }
};

goog.provide('newTabPage.mojom.PageHandler_UpdateMostVisitedTile_ResponseParams');

newTabPage.mojom.PageHandler_UpdateMostVisitedTile_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('newTabPage.mojom.PageHandler_GetChromeThemes_Params');

newTabPage.mojom.PageHandler_GetChromeThemes_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_GetChromeThemes_ResponseParams');

newTabPage.mojom.PageHandler_GetChromeThemes_ResponseParams = class {
  constructor() {
    /** @type { !Array<newTabPage.mojom.ChromeTheme> } */
    this.chromeThemes;
  }
};

goog.provide('newTabPage.mojom.PageHandler_ApplyDefaultTheme_Params');

newTabPage.mojom.PageHandler_ApplyDefaultTheme_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_ApplyAutogeneratedTheme_Params');

newTabPage.mojom.PageHandler_ApplyAutogeneratedTheme_Params = class {
  constructor() {
    /** @type { !skia.mojom.SkColor } */
    this.frameColor;
  }
};

goog.provide('newTabPage.mojom.PageHandler_ApplyChromeTheme_Params');

newTabPage.mojom.PageHandler_ApplyChromeTheme_Params = class {
  constructor() {
    /** @type { !number } */
    this.id;
  }
};

goog.provide('newTabPage.mojom.PageHandler_ConfirmThemeChanges_Params');

newTabPage.mojom.PageHandler_ConfirmThemeChanges_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_RevertThemeChanges_Params');

newTabPage.mojom.PageHandler_RevertThemeChanges_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_GetBackgroundCollections_Params');

newTabPage.mojom.PageHandler_GetBackgroundCollections_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_GetBackgroundCollections_ResponseParams');

newTabPage.mojom.PageHandler_GetBackgroundCollections_ResponseParams = class {
  constructor() {
    /** @type { !Array<newTabPage.mojom.BackgroundCollection> } */
    this.collections;
  }
};

goog.provide('newTabPage.mojom.PageHandler_GetBackgroundImages_Params');

newTabPage.mojom.PageHandler_GetBackgroundImages_Params = class {
  constructor() {
    /** @type { !string } */
    this.collectionId;
  }
};

goog.provide('newTabPage.mojom.PageHandler_GetBackgroundImages_ResponseParams');

newTabPage.mojom.PageHandler_GetBackgroundImages_ResponseParams = class {
  constructor() {
    /** @type { !Array<newTabPage.mojom.CollectionImage> } */
    this.images;
  }
};

goog.provide('newTabPage.mojom.PageHandler_FocusOmnibox_Params');

newTabPage.mojom.PageHandler_FocusOmnibox_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_PasteIntoOmnibox_Params');

newTabPage.mojom.PageHandler_PasteIntoOmnibox_Params = class {
  constructor() {
    /** @type { !string } */
    this.text;
  }
};

goog.provide('newTabPage.mojom.PageHandler_GetDoodle_Params');

newTabPage.mojom.PageHandler_GetDoodle_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_GetDoodle_ResponseParams');

newTabPage.mojom.PageHandler_GetDoodle_ResponseParams = class {
  constructor() {
    /** @type { newTabPage.mojom.Doodle } */
    this.doodle;
  }
};

goog.provide('newTabPage.mojom.PageHandler_ChooseLocalCustomBackground_Params');

newTabPage.mojom.PageHandler_ChooseLocalCustomBackground_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_ChooseLocalCustomBackground_ResponseParams');

newTabPage.mojom.PageHandler_ChooseLocalCustomBackground_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('newTabPage.mojom.PageHandler_GetOneGoogleBarParts_Params');

newTabPage.mojom.PageHandler_GetOneGoogleBarParts_Params = class {
  constructor() {
    /** @type { !string } */
    this.queryParams;
  }
};

goog.provide('newTabPage.mojom.PageHandler_GetOneGoogleBarParts_ResponseParams');

newTabPage.mojom.PageHandler_GetOneGoogleBarParts_ResponseParams = class {
  constructor() {
    /** @type { newTabPage.mojom.OneGoogleBarParts } */
    this.parts;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnMostVisitedTilesRendered_Params');

newTabPage.mojom.PageHandler_OnMostVisitedTilesRendered_Params = class {
  constructor() {
    /** @type { !Array<newTabPage.mojom.MostVisitedTile> } */
    this.tiles;
    /** @type { !number } */
    this.time;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnOneGoogleBarRendered_Params');

newTabPage.mojom.PageHandler_OnOneGoogleBarRendered_Params = class {
  constructor() {
    /** @type { !number } */
    this.time;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnPromoRendered_Params');

newTabPage.mojom.PageHandler_OnPromoRendered_Params = class {
  constructor() {
    /** @type { !number } */
    this.time;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnMostVisitedTileNavigation_Params');

newTabPage.mojom.PageHandler_OnMostVisitedTileNavigation_Params = class {
  constructor() {
    /** @type { !newTabPage.mojom.MostVisitedTile } */
    this.tile;
    /** @type { !number } */
    this.index;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnCustomizeDialogAction_Params');

newTabPage.mojom.PageHandler_OnCustomizeDialogAction_Params = class {
  constructor() {
    /** @type { !newTabPage.mojom.CustomizeDialogAction } */
    this.action;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnDoodleImageClicked_Params');

newTabPage.mojom.PageHandler_OnDoodleImageClicked_Params = class {
  constructor() {
    /** @type { !newTabPage.mojom.DoodleImageType } */
    this.type;
    /** @type { url.mojom.Url } */
    this.logUrl;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnDoodleImageRendered_Params');

newTabPage.mojom.PageHandler_OnDoodleImageRendered_Params = class {
  constructor() {
    /** @type { !newTabPage.mojom.DoodleImageType } */
    this.type;
    /** @type { !number } */
    this.time;
    /** @type { !url.mojom.Url } */
    this.logUrl;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnDoodleImageRendered_ResponseParams');

newTabPage.mojom.PageHandler_OnDoodleImageRendered_ResponseParams = class {
  constructor() {
    /** @type { string } */
    this.imageClickParams;
    /** @type { url.mojom.Url } */
    this.interactionLogUrl;
    /** @type { string } */
    this.shareId;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnDoodleShared_Params');

newTabPage.mojom.PageHandler_OnDoodleShared_Params = class {
  constructor() {
    /** @type { !newTabPage.mojom.DoodleShareChannel } */
    this.channel;
    /** @type { !string } */
    this.doodleId;
    /** @type { string } */
    this.shareId;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnPromoLinkClicked_Params');

newTabPage.mojom.PageHandler_OnPromoLinkClicked_Params = class {
  constructor() {
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnVoiceSearchAction_Params');

newTabPage.mojom.PageHandler_OnVoiceSearchAction_Params = class {
  constructor() {
    /** @type { !newTabPage.mojom.VoiceSearchAction } */
    this.action;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OnVoiceSearchError_Params');

newTabPage.mojom.PageHandler_OnVoiceSearchError_Params = class {
  constructor() {
    /** @type { !newTabPage.mojom.VoiceSearchError } */
    this.error;
  }
};

goog.provide('newTabPage.mojom.PageHandler_QueryAutocomplete_Params');

newTabPage.mojom.PageHandler_QueryAutocomplete_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.String16 } */
    this.input;
    /** @type { !boolean } */
    this.preventInlineAutocomplete;
  }
};

goog.provide('newTabPage.mojom.PageHandler_StopAutocomplete_Params');

newTabPage.mojom.PageHandler_StopAutocomplete_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.clearResult;
  }
};

goog.provide('newTabPage.mojom.PageHandler_OpenAutocompleteMatch_Params');

newTabPage.mojom.PageHandler_OpenAutocompleteMatch_Params = class {
  constructor() {
    /** @type { !number } */
    this.line;
    /** @type { !boolean } */
    this.areMatchesShowing;
    /** @type { !boolean } */
    this.altKey;
    /** @type { !boolean } */
    this.ctrlKey;
    /** @type { !boolean } */
    this.metaKey;
    /** @type { !boolean } */
    this.shiftKey;
    /** @type { !number } */
    this.mouseButton;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !mojoBase.mojom.TimeDelta } */
    this.timeElapsedSinceLastFocus;
  }
};

goog.provide('newTabPage.mojom.PageHandler_DeleteAutocompleteMatch_Params');

newTabPage.mojom.PageHandler_DeleteAutocompleteMatch_Params = class {
  constructor() {
    /** @type { !number } */
    this.line;
  }
};

goog.provide('newTabPage.mojom.PageHandler_ToggleSuggestionGroupIdVisibility_Params');

newTabPage.mojom.PageHandler_ToggleSuggestionGroupIdVisibility_Params = class {
  constructor() {
    /** @type { !number } */
    this.suggestionGroupId;
  }
};

goog.provide('newTabPage.mojom.PageHandler_LogCharTypedToRepaintLatency_Params');

newTabPage.mojom.PageHandler_LogCharTypedToRepaintLatency_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.TimeDelta } */
    this.latency;
  }
};

goog.provide('newTabPage.mojom.Page_SetMostVisitedInfo_Params');

newTabPage.mojom.Page_SetMostVisitedInfo_Params = class {
  constructor() {
    /** @type { !newTabPage.mojom.MostVisitedInfo } */
    this.info;
  }
};

goog.provide('newTabPage.mojom.Page_SetTheme_Params');

newTabPage.mojom.Page_SetTheme_Params = class {
  constructor() {
    /** @type { !newTabPage.mojom.Theme } */
    this.theme;
  }
};

goog.provide('newTabPage.mojom.Page_SetFakeboxFocused_Params');

newTabPage.mojom.Page_SetFakeboxFocused_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.focused;
  }
};

goog.provide('newTabPage.mojom.Page_SetFakeboxVisible_Params');

newTabPage.mojom.Page_SetFakeboxVisible_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.visible;
  }
};

goog.provide('newTabPage.mojom.Page_AutocompleteResultChanged_Params');

newTabPage.mojom.Page_AutocompleteResultChanged_Params = class {
  constructor() {
    /** @type { !search.mojom.AutocompleteResult } */
    this.result;
  }
};

goog.provide('newTabPage.mojom.Page_AutocompleteMatchImageAvailable_Params');

newTabPage.mojom.Page_AutocompleteMatchImageAvailable_Params = class {
  constructor() {
    /** @type { !number } */
    this.matchIndex;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !string } */
    this.dataUrl;
  }
};
