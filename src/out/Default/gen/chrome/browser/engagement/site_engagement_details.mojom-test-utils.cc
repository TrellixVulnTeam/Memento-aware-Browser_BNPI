// chrome/browser/engagement/site_engagement_details.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif


#include "chrome/browser/engagement/site_engagement_details.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "url/mojom/url.mojom.h"


#ifndef CHROME_BROWSER_ENGAGEMENT_SITE_ENGAGEMENT_DETAILS_MOJOM_JUMBO_H_
#define CHROME_BROWSER_ENGAGEMENT_SITE_ENGAGEMENT_DETAILS_MOJOM_JUMBO_H_
#endif


namespace mojom {


void SiteEngagementDetailsProviderInterceptorForTesting::GetSiteEngagementDetails(GetSiteEngagementDetailsCallback callback) {
  GetForwardingInterface()->GetSiteEngagementDetails(std::move(callback));
}
void SiteEngagementDetailsProviderInterceptorForTesting::SetSiteEngagementBaseScoreForUrl(const ::GURL& url, double score) {
  GetForwardingInterface()->SetSiteEngagementBaseScoreForUrl(std::move(url), std::move(score));
}
SiteEngagementDetailsProviderAsyncWaiter::SiteEngagementDetailsProviderAsyncWaiter(
    SiteEngagementDetailsProvider* proxy) : proxy_(proxy) {}

SiteEngagementDetailsProviderAsyncWaiter::~SiteEngagementDetailsProviderAsyncWaiter() = default;

void SiteEngagementDetailsProviderAsyncWaiter::GetSiteEngagementDetails(
    std::vector<SiteEngagementDetailsPtr>* out_info) {
  base::RunLoop loop;
  proxy_->GetSiteEngagementDetails(
      base::BindOnce(
          [](base::RunLoop* loop,
             std::vector<SiteEngagementDetailsPtr>* out_info
,
             std::vector<SiteEngagementDetailsPtr> info) {*out_info = std::move(info);
            loop->Quit();
          },
          &loop,
          out_info));
  loop.Run();
}





}  // namespace mojom

#if defined(__clang__)
#pragma clang diagnostic pop
#endif