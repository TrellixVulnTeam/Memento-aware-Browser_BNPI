// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: intervention_policy_database.proto

#include "intervention_policy_database.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_intervention_5fpolicy_5fdatabase_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OriginInterventions_intervention_5fpolicy_5fdatabase_2eproto;
class OriginInterventionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OriginInterventions> _instance;
} _OriginInterventions_default_instance_;
class OriginInterventionsDatabaseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OriginInterventionsDatabase> _instance;
} _OriginInterventionsDatabase_default_instance_;
static void InitDefaultsscc_info_OriginInterventions_intervention_5fpolicy_5fdatabase_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_OriginInterventions_default_instance_;
    new (ptr) ::OriginInterventions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OriginInterventions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OriginInterventions_intervention_5fpolicy_5fdatabase_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_OriginInterventions_intervention_5fpolicy_5fdatabase_2eproto}, {}};

static void InitDefaultsscc_info_OriginInterventionsDatabase_intervention_5fpolicy_5fdatabase_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_OriginInterventionsDatabase_default_instance_;
    new (ptr) ::OriginInterventionsDatabase();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OriginInterventionsDatabase::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OriginInterventionsDatabase_intervention_5fpolicy_5fdatabase_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_OriginInterventionsDatabase_intervention_5fpolicy_5fdatabase_2eproto}, {
      &scc_info_OriginInterventions_intervention_5fpolicy_5fdatabase_2eproto.base,}};

bool OriginInterventions_InterventionPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> OriginInterventions_InterventionPolicy_strings[3] = {};

static const char OriginInterventions_InterventionPolicy_names[] =
  "DEFAULT"
  "OPT_IN"
  "OPT_OUT";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry OriginInterventions_InterventionPolicy_entries[] = {
  { {OriginInterventions_InterventionPolicy_names + 0, 7}, 2 },
  { {OriginInterventions_InterventionPolicy_names + 7, 6}, 0 },
  { {OriginInterventions_InterventionPolicy_names + 13, 7}, 1 },
};

static const int OriginInterventions_InterventionPolicy_entries_by_number[] = {
  1, // 0 -> OPT_IN
  2, // 1 -> OPT_OUT
  0, // 2 -> DEFAULT
};

const std::string& OriginInterventions_InterventionPolicy_Name(
    OriginInterventions_InterventionPolicy value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          OriginInterventions_InterventionPolicy_entries,
          OriginInterventions_InterventionPolicy_entries_by_number,
          3, OriginInterventions_InterventionPolicy_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      OriginInterventions_InterventionPolicy_entries,
      OriginInterventions_InterventionPolicy_entries_by_number,
      3, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     OriginInterventions_InterventionPolicy_strings[idx].get();
}
bool OriginInterventions_InterventionPolicy_Parse(
    const std::string& name, OriginInterventions_InterventionPolicy* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      OriginInterventions_InterventionPolicy_entries, 3, name, &int_value);
  if (success) {
    *value = static_cast<OriginInterventions_InterventionPolicy>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr OriginInterventions_InterventionPolicy OriginInterventions::OPT_IN;
constexpr OriginInterventions_InterventionPolicy OriginInterventions::OPT_OUT;
constexpr OriginInterventions_InterventionPolicy OriginInterventions::DEFAULT;
constexpr OriginInterventions_InterventionPolicy OriginInterventions::InterventionPolicy_MIN;
constexpr OriginInterventions_InterventionPolicy OriginInterventions::InterventionPolicy_MAX;
constexpr int OriginInterventions::InterventionPolicy_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void OriginInterventions::InitAsDefaultInstance() {
}
class OriginInterventions::_Internal {
 public:
  using HasBits = decltype(std::declval<OriginInterventions>()._has_bits_);
  static void set_has_host_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_discarding_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_freezing_policy(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

OriginInterventions::OriginInterventions()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OriginInterventions)
}
OriginInterventions::OriginInterventions(const OriginInterventions& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_hash()) {
    host_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.host_hash_);
  }
  ::memcpy(&discarding_policy_, &from.discarding_policy_,
    static_cast<size_t>(reinterpret_cast<char*>(&freezing_policy_) -
    reinterpret_cast<char*>(&discarding_policy_)) + sizeof(freezing_policy_));
  // @@protoc_insertion_point(copy_constructor:OriginInterventions)
}

void OriginInterventions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OriginInterventions_intervention_5fpolicy_5fdatabase_2eproto.base);
  host_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&discarding_policy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&freezing_policy_) -
      reinterpret_cast<char*>(&discarding_policy_)) + sizeof(freezing_policy_));
}

OriginInterventions::~OriginInterventions() {
  // @@protoc_insertion_point(destructor:OriginInterventions)
  SharedDtor();
}

void OriginInterventions::SharedDtor() {
  host_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OriginInterventions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OriginInterventions& OriginInterventions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OriginInterventions_intervention_5fpolicy_5fdatabase_2eproto.base);
  return *internal_default_instance();
}


void OriginInterventions::Clear() {
// @@protoc_insertion_point(message_clear_start:OriginInterventions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    host_hash_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&discarding_policy_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&freezing_policy_) -
        reinterpret_cast<char*>(&discarding_policy_)) + sizeof(freezing_policy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OriginInterventions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required string host_hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_host_hash(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .OriginInterventions.InterventionPolicy discarding_policy = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::OriginInterventions_InterventionPolicy_IsValid(val))) {
            set_discarding_policy(static_cast<::OriginInterventions_InterventionPolicy>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required .OriginInterventions.InterventionPolicy freezing_policy = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::OriginInterventions_InterventionPolicy_IsValid(val))) {
            set_freezing_policy(static_cast<::OriginInterventions_InterventionPolicy>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OriginInterventions::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:OriginInterventions)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string host_hash = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_host_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .OriginInterventions.InterventionPolicy discarding_policy = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OriginInterventions_InterventionPolicy_IsValid(value)) {
            set_discarding_policy(static_cast< ::OriginInterventions_InterventionPolicy >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .OriginInterventions.InterventionPolicy freezing_policy = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OriginInterventions_InterventionPolicy_IsValid(value)) {
            set_freezing_policy(static_cast< ::OriginInterventions_InterventionPolicy >(value));
          } else {
            unknown_fields_stream.WriteVarint32(24u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OriginInterventions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OriginInterventions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OriginInterventions::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OriginInterventions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string host_hash = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host_hash(), output);
  }

  // required .OriginInterventions.InterventionPolicy discarding_policy = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->discarding_policy(), output);
  }

  // required .OriginInterventions.InterventionPolicy freezing_policy = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      3, this->freezing_policy(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:OriginInterventions)
}

size_t OriginInterventions::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:OriginInterventions)
  size_t total_size = 0;

  if (has_host_hash()) {
    // required string host_hash = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->host_hash());
  }

  if (has_discarding_policy()) {
    // required .OriginInterventions.InterventionPolicy discarding_policy = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->discarding_policy());
  }

  if (has_freezing_policy()) {
    // required .OriginInterventions.InterventionPolicy freezing_policy = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->freezing_policy());
  }

  return total_size;
}
size_t OriginInterventions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OriginInterventions)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string host_hash = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->host_hash());

    // required .OriginInterventions.InterventionPolicy discarding_policy = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->discarding_policy());

    // required .OriginInterventions.InterventionPolicy freezing_policy = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->freezing_policy());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OriginInterventions::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const OriginInterventions*>(
      &from));
}

void OriginInterventions::MergeFrom(const OriginInterventions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OriginInterventions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      host_hash_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.host_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      discarding_policy_ = from.discarding_policy_;
    }
    if (cached_has_bits & 0x00000004u) {
      freezing_policy_ = from.freezing_policy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OriginInterventions::CopyFrom(const OriginInterventions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OriginInterventions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OriginInterventions::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void OriginInterventions::InternalSwap(OriginInterventions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  host_hash_.Swap(&other->host_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(discarding_policy_, other->discarding_policy_);
  swap(freezing_policy_, other->freezing_policy_);
}

std::string OriginInterventions::GetTypeName() const {
  return "OriginInterventions";
}


// ===================================================================

void OriginInterventionsDatabase::InitAsDefaultInstance() {
}
class OriginInterventionsDatabase::_Internal {
 public:
  using HasBits = decltype(std::declval<OriginInterventionsDatabase>()._has_bits_);
};

OriginInterventionsDatabase::OriginInterventionsDatabase()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OriginInterventionsDatabase)
}
OriginInterventionsDatabase::OriginInterventionsDatabase(const OriginInterventionsDatabase& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      origin_interventions_(from.origin_interventions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:OriginInterventionsDatabase)
}

void OriginInterventionsDatabase::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OriginInterventionsDatabase_intervention_5fpolicy_5fdatabase_2eproto.base);
}

OriginInterventionsDatabase::~OriginInterventionsDatabase() {
  // @@protoc_insertion_point(destructor:OriginInterventionsDatabase)
  SharedDtor();
}

void OriginInterventionsDatabase::SharedDtor() {
}

void OriginInterventionsDatabase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OriginInterventionsDatabase& OriginInterventionsDatabase::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OriginInterventionsDatabase_intervention_5fpolicy_5fdatabase_2eproto.base);
  return *internal_default_instance();
}


void OriginInterventionsDatabase::Clear() {
// @@protoc_insertion_point(message_clear_start:OriginInterventionsDatabase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  origin_interventions_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OriginInterventionsDatabase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .OriginInterventions origin_interventions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_origin_interventions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OriginInterventionsDatabase::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:OriginInterventionsDatabase)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .OriginInterventions origin_interventions = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_origin_interventions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OriginInterventionsDatabase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OriginInterventionsDatabase)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OriginInterventionsDatabase::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OriginInterventionsDatabase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .OriginInterventions origin_interventions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->origin_interventions_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->origin_interventions(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:OriginInterventionsDatabase)
}

size_t OriginInterventionsDatabase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OriginInterventionsDatabase)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .OriginInterventions origin_interventions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->origin_interventions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->origin_interventions(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OriginInterventionsDatabase::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const OriginInterventionsDatabase*>(
      &from));
}

void OriginInterventionsDatabase::MergeFrom(const OriginInterventionsDatabase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OriginInterventionsDatabase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  origin_interventions_.MergeFrom(from.origin_interventions_);
}

void OriginInterventionsDatabase::CopyFrom(const OriginInterventionsDatabase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OriginInterventionsDatabase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OriginInterventionsDatabase::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(this->origin_interventions())) return false;
  return true;
}

void OriginInterventionsDatabase::InternalSwap(OriginInterventionsDatabase* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&origin_interventions_)->InternalSwap(CastToBase(&other->origin_interventions_));
}

std::string OriginInterventionsDatabase::GetTypeName() const {
  return "OriginInterventionsDatabase";
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::OriginInterventions* Arena::CreateMaybeMessage< ::OriginInterventions >(Arena* arena) {
  return Arena::CreateInternal< ::OriginInterventions >(arena);
}
template<> PROTOBUF_NOINLINE ::OriginInterventionsDatabase* Arena::CreateMaybeMessage< ::OriginInterventionsDatabase >(Arena* arena) {
  return Arena::CreateInternal< ::OriginInterventionsDatabase >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
