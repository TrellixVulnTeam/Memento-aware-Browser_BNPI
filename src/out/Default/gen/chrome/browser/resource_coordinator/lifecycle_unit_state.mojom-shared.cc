// chrome/browser/resource_coordinator/lifecycle_unit_state.mojom-shared.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "chrome/browser/resource_coordinator/lifecycle_unit_state.mojom-shared.h"

#include <utility>

#include "base/logging.h"
#include "base/stl_util.h"  // for base::size()
#include "mojo/public/cpp/bindings/lib/validate_params.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"
#include "mojo/public/cpp/bindings/lib/validation_errors.h"
#include "mojo/public/cpp/bindings/lib/validation_util.h"

#include "chrome/browser/resource_coordinator/lifecycle_unit_state.mojom-params-data.h"
namespace mojom {

std::ostream& operator<<(std::ostream& os, LifecycleUnitState value) {
  switch(value) {
    case LifecycleUnitState::ACTIVE:
      return os << "LifecycleUnitState::ACTIVE";
    case LifecycleUnitState::THROTTLED:
      return os << "LifecycleUnitState::THROTTLED";
    case LifecycleUnitState::FROZEN:
      return os << "LifecycleUnitState::FROZEN";
    case LifecycleUnitState::DISCARDED:
      return os << "LifecycleUnitState::DISCARDED";
    default:
      return os << "Unknown LifecycleUnitState value: " << static_cast<int32_t>(value);
  }
}

std::ostream& operator<<(std::ostream& os, LifecycleUnitLoadingState value) {
  switch(value) {
    case LifecycleUnitLoadingState::UNLOADED:
      return os << "LifecycleUnitLoadingState::UNLOADED";
    case LifecycleUnitLoadingState::LOADING:
      return os << "LifecycleUnitLoadingState::LOADING";
    case LifecycleUnitLoadingState::LOADED:
      return os << "LifecycleUnitLoadingState::LOADED";
    default:
      return os << "Unknown LifecycleUnitLoadingState value: " << static_cast<int32_t>(value);
  }
}

std::ostream& operator<<(std::ostream& os, LifecycleUnitStateChangeReason value) {
  switch(value) {
    case LifecycleUnitStateChangeReason::BROWSER_INITIATED:
      return os << "LifecycleUnitStateChangeReason::BROWSER_INITIATED";
    case LifecycleUnitStateChangeReason::RENDERER_INITIATED:
      return os << "LifecycleUnitStateChangeReason::RENDERER_INITIATED";
    case LifecycleUnitStateChangeReason::SYSTEM_MEMORY_PRESSURE:
      return os << "LifecycleUnitStateChangeReason::SYSTEM_MEMORY_PRESSURE";
    case LifecycleUnitStateChangeReason::EXTENSION_INITIATED:
      return os << "LifecycleUnitStateChangeReason::EXTENSION_INITIATED";
    case LifecycleUnitStateChangeReason::USER_INITIATED:
      return os << "LifecycleUnitStateChangeReason::USER_INITIATED";
    default:
      return os << "Unknown LifecycleUnitStateChangeReason value: " << static_cast<int32_t>(value);
  }
}

std::ostream& operator<<(std::ostream& os, LifecycleUnitDiscardReason value) {
  switch(value) {
    case LifecycleUnitDiscardReason::EXTERNAL:
      return os << "LifecycleUnitDiscardReason::EXTERNAL";
    case LifecycleUnitDiscardReason::URGENT:
      return os << "LifecycleUnitDiscardReason::URGENT";
    default:
      return os << "Unknown LifecycleUnitDiscardReason value: " << static_cast<int32_t>(value);
  }
}

namespace internal {

}  // namespace internal
}  // namespace mojom