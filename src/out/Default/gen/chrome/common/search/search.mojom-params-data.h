// chrome/common/search/search.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_COMMON_SEARCH_SEARCH_MOJOM_PARAMS_DATA_H_
#define CHROME_COMMON_SEARCH_SEARCH_MOJOM_PARAMS_DATA_H_

#include "base/logging.h"
#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace search {
namespace mojom {
namespace internal {
class  EmbeddedSearchConnector_Connect_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearchConnector_Connect_Params_Data));
      new (data()) EmbeddedSearchConnector_Connect_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearchConnector_Connect_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearchConnector_Connect_Params_Data>(index_);
    }
    EmbeddedSearchConnector_Connect_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::AssociatedEndpointHandle_Data embedded_search;
  mojo::internal::AssociatedInterface_Data client;
  uint8_t padfinal_[4];

 private:
  EmbeddedSearchConnector_Connect_Params_Data();
  ~EmbeddedSearchConnector_Connect_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearchConnector_Connect_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearchConnector_Connect_Params_Data)");
class  EmbeddedSearch_FocusOmnibox_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_FocusOmnibox_Params_Data));
      new (data()) EmbeddedSearch_FocusOmnibox_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_FocusOmnibox_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_FocusOmnibox_Params_Data>(index_);
    }
    EmbeddedSearch_FocusOmnibox_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t focus : 1;
  uint8_t padfinal_[3];

 private:
  EmbeddedSearch_FocusOmnibox_Params_Data();
  ~EmbeddedSearch_FocusOmnibox_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_FocusOmnibox_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_FocusOmnibox_Params_Data)");
class  EmbeddedSearch_DeleteMostVisitedItem_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_DeleteMostVisitedItem_Params_Data));
      new (data()) EmbeddedSearch_DeleteMostVisitedItem_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_DeleteMostVisitedItem_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_DeleteMostVisitedItem_Params_Data>(index_);
    }
    EmbeddedSearch_DeleteMostVisitedItem_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;

 private:
  EmbeddedSearch_DeleteMostVisitedItem_Params_Data();
  ~EmbeddedSearch_DeleteMostVisitedItem_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_DeleteMostVisitedItem_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_DeleteMostVisitedItem_Params_Data)");
class  EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data));
      new (data()) EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data>(index_);
    }
    EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t padfinal_[4];

 private:
  EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data();
  ~EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data)");
class  EmbeddedSearch_UndoMostVisitedDeletion_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_UndoMostVisitedDeletion_Params_Data));
      new (data()) EmbeddedSearch_UndoMostVisitedDeletion_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_UndoMostVisitedDeletion_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_UndoMostVisitedDeletion_Params_Data>(index_);
    }
    EmbeddedSearch_UndoMostVisitedDeletion_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;

 private:
  EmbeddedSearch_UndoMostVisitedDeletion_Params_Data();
  ~EmbeddedSearch_UndoMostVisitedDeletion_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_UndoMostVisitedDeletion_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_UndoMostVisitedDeletion_Params_Data)");
class  EmbeddedSearch_AddCustomLink_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_AddCustomLink_Params_Data));
      new (data()) EmbeddedSearch_AddCustomLink_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_AddCustomLink_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_AddCustomLink_Params_Data>(index_);
    }
    EmbeddedSearch_AddCustomLink_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;
  mojo::internal::Pointer<mojo::internal::String_Data> title;

 private:
  EmbeddedSearch_AddCustomLink_Params_Data();
  ~EmbeddedSearch_AddCustomLink_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_AddCustomLink_Params_Data) == 32,
              "Bad sizeof(EmbeddedSearch_AddCustomLink_Params_Data)");
class  EmbeddedSearch_AddCustomLink_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_AddCustomLink_ResponseParams_Data));
      new (data()) EmbeddedSearch_AddCustomLink_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_AddCustomLink_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_AddCustomLink_ResponseParams_Data>(index_);
    }
    EmbeddedSearch_AddCustomLink_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t padfinal_[7];

 private:
  EmbeddedSearch_AddCustomLink_ResponseParams_Data();
  ~EmbeddedSearch_AddCustomLink_ResponseParams_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_AddCustomLink_ResponseParams_Data) == 16,
              "Bad sizeof(EmbeddedSearch_AddCustomLink_ResponseParams_Data)");
class  EmbeddedSearch_UpdateCustomLink_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_UpdateCustomLink_Params_Data));
      new (data()) EmbeddedSearch_UpdateCustomLink_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_UpdateCustomLink_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_UpdateCustomLink_Params_Data>(index_);
    }
    EmbeddedSearch_UpdateCustomLink_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> new_url;
  mojo::internal::Pointer<mojo::internal::String_Data> new_title;

 private:
  EmbeddedSearch_UpdateCustomLink_Params_Data();
  ~EmbeddedSearch_UpdateCustomLink_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_UpdateCustomLink_Params_Data) == 40,
              "Bad sizeof(EmbeddedSearch_UpdateCustomLink_Params_Data)");
class  EmbeddedSearch_UpdateCustomLink_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_UpdateCustomLink_ResponseParams_Data));
      new (data()) EmbeddedSearch_UpdateCustomLink_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_UpdateCustomLink_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_UpdateCustomLink_ResponseParams_Data>(index_);
    }
    EmbeddedSearch_UpdateCustomLink_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t padfinal_[7];

 private:
  EmbeddedSearch_UpdateCustomLink_ResponseParams_Data();
  ~EmbeddedSearch_UpdateCustomLink_ResponseParams_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_UpdateCustomLink_ResponseParams_Data) == 16,
              "Bad sizeof(EmbeddedSearch_UpdateCustomLink_ResponseParams_Data)");
class  EmbeddedSearch_ReorderCustomLink_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_ReorderCustomLink_Params_Data));
      new (data()) EmbeddedSearch_ReorderCustomLink_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_ReorderCustomLink_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_ReorderCustomLink_Params_Data>(index_);
    }
    EmbeddedSearch_ReorderCustomLink_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  int32_t new_pos;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;

 private:
  EmbeddedSearch_ReorderCustomLink_Params_Data();
  ~EmbeddedSearch_ReorderCustomLink_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_ReorderCustomLink_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_ReorderCustomLink_Params_Data)");
class  EmbeddedSearch_DeleteCustomLink_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_DeleteCustomLink_Params_Data));
      new (data()) EmbeddedSearch_DeleteCustomLink_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_DeleteCustomLink_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_DeleteCustomLink_Params_Data>(index_);
    }
    EmbeddedSearch_DeleteCustomLink_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;

 private:
  EmbeddedSearch_DeleteCustomLink_Params_Data();
  ~EmbeddedSearch_DeleteCustomLink_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_DeleteCustomLink_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_DeleteCustomLink_Params_Data)");
class  EmbeddedSearch_DeleteCustomLink_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_DeleteCustomLink_ResponseParams_Data));
      new (data()) EmbeddedSearch_DeleteCustomLink_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_DeleteCustomLink_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_DeleteCustomLink_ResponseParams_Data>(index_);
    }
    EmbeddedSearch_DeleteCustomLink_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t padfinal_[7];

 private:
  EmbeddedSearch_DeleteCustomLink_ResponseParams_Data();
  ~EmbeddedSearch_DeleteCustomLink_ResponseParams_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_DeleteCustomLink_ResponseParams_Data) == 16,
              "Bad sizeof(EmbeddedSearch_DeleteCustomLink_ResponseParams_Data)");
class  EmbeddedSearch_UndoCustomLinkAction_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_UndoCustomLinkAction_Params_Data));
      new (data()) EmbeddedSearch_UndoCustomLinkAction_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_UndoCustomLinkAction_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_UndoCustomLinkAction_Params_Data>(index_);
    }
    EmbeddedSearch_UndoCustomLinkAction_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t padfinal_[4];

 private:
  EmbeddedSearch_UndoCustomLinkAction_Params_Data();
  ~EmbeddedSearch_UndoCustomLinkAction_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_UndoCustomLinkAction_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_UndoCustomLinkAction_Params_Data)");
class  EmbeddedSearch_ResetCustomLinks_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_ResetCustomLinks_Params_Data));
      new (data()) EmbeddedSearch_ResetCustomLinks_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_ResetCustomLinks_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_ResetCustomLinks_Params_Data>(index_);
    }
    EmbeddedSearch_ResetCustomLinks_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t padfinal_[4];

 private:
  EmbeddedSearch_ResetCustomLinks_Params_Data();
  ~EmbeddedSearch_ResetCustomLinks_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_ResetCustomLinks_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_ResetCustomLinks_Params_Data)");
class  EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data));
      new (data()) EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data>(index_);
    }
    EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t padfinal_[4];

 private:
  EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data();
  ~EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data)");
class  EmbeddedSearch_ToggleShortcutsVisibility_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_ToggleShortcutsVisibility_Params_Data));
      new (data()) EmbeddedSearch_ToggleShortcutsVisibility_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_ToggleShortcutsVisibility_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_ToggleShortcutsVisibility_Params_Data>(index_);
    }
    EmbeddedSearch_ToggleShortcutsVisibility_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t do_notify : 1;
  uint8_t padfinal_[3];

 private:
  EmbeddedSearch_ToggleShortcutsVisibility_Params_Data();
  ~EmbeddedSearch_ToggleShortcutsVisibility_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_ToggleShortcutsVisibility_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_ToggleShortcutsVisibility_Params_Data)");
class  EmbeddedSearch_LogEvent_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_LogEvent_Params_Data));
      new (data()) EmbeddedSearch_LogEvent_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_LogEvent_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_LogEvent_Params_Data>(index_);
    }
    EmbeddedSearch_LogEvent_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  int32_t event;
  mojo::internal::Pointer<::mojo_base::mojom::internal::TimeDelta_Data> time;

 private:
  EmbeddedSearch_LogEvent_Params_Data();
  ~EmbeddedSearch_LogEvent_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_LogEvent_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_LogEvent_Params_Data)");
class  EmbeddedSearch_LogSuggestionEventWithValue_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_LogSuggestionEventWithValue_Params_Data));
      new (data()) EmbeddedSearch_LogSuggestionEventWithValue_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_LogSuggestionEventWithValue_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_LogSuggestionEventWithValue_Params_Data>(index_);
    }
    EmbeddedSearch_LogSuggestionEventWithValue_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  int32_t event;
  int32_t data;
  uint8_t pad2_[4];
  mojo::internal::Pointer<::mojo_base::mojom::internal::TimeDelta_Data> time;

 private:
  EmbeddedSearch_LogSuggestionEventWithValue_Params_Data();
  ~EmbeddedSearch_LogSuggestionEventWithValue_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_LogSuggestionEventWithValue_Params_Data) == 32,
              "Bad sizeof(EmbeddedSearch_LogSuggestionEventWithValue_Params_Data)");
class  EmbeddedSearch_LogMostVisitedImpression_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_LogMostVisitedImpression_Params_Data));
      new (data()) EmbeddedSearch_LogMostVisitedImpression_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_LogMostVisitedImpression_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_LogMostVisitedImpression_Params_Data>(index_);
    }
    EmbeddedSearch_LogMostVisitedImpression_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t pad0_[4];
  mojo::internal::Pointer<internal::NTPTileImpression_Data> impression;

 private:
  EmbeddedSearch_LogMostVisitedImpression_Params_Data();
  ~EmbeddedSearch_LogMostVisitedImpression_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_LogMostVisitedImpression_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_LogMostVisitedImpression_Params_Data)");
class  EmbeddedSearch_LogMostVisitedNavigation_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_LogMostVisitedNavigation_Params_Data));
      new (data()) EmbeddedSearch_LogMostVisitedNavigation_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_LogMostVisitedNavigation_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_LogMostVisitedNavigation_Params_Data>(index_);
    }
    EmbeddedSearch_LogMostVisitedNavigation_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t pad0_[4];
  mojo::internal::Pointer<internal::NTPTileImpression_Data> impression;

 private:
  EmbeddedSearch_LogMostVisitedNavigation_Params_Data();
  ~EmbeddedSearch_LogMostVisitedNavigation_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_LogMostVisitedNavigation_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_LogMostVisitedNavigation_Params_Data)");
class  EmbeddedSearch_PasteAndOpenDropdown_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_PasteAndOpenDropdown_Params_Data));
      new (data()) EmbeddedSearch_PasteAndOpenDropdown_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_PasteAndOpenDropdown_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_PasteAndOpenDropdown_Params_Data>(index_);
    }
    EmbeddedSearch_PasteAndOpenDropdown_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t pad0_[4];
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> text_to_be_pasted;

 private:
  EmbeddedSearch_PasteAndOpenDropdown_Params_Data();
  ~EmbeddedSearch_PasteAndOpenDropdown_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_PasteAndOpenDropdown_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_PasteAndOpenDropdown_Params_Data)");
class  EmbeddedSearch_SetCustomBackgroundInfo_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_SetCustomBackgroundInfo_Params_Data));
      new (data()) EmbeddedSearch_SetCustomBackgroundInfo_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_SetCustomBackgroundInfo_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_SetCustomBackgroundInfo_Params_Data>(index_);
    }
    EmbeddedSearch_SetCustomBackgroundInfo_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> background_url;
  mojo::internal::Pointer<mojo::internal::String_Data> attribution_line_1;
  mojo::internal::Pointer<mojo::internal::String_Data> attribution_line_2;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> action_url;
  mojo::internal::Pointer<mojo::internal::String_Data> collection_id;

 private:
  EmbeddedSearch_SetCustomBackgroundInfo_Params_Data();
  ~EmbeddedSearch_SetCustomBackgroundInfo_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_SetCustomBackgroundInfo_Params_Data) == 48,
              "Bad sizeof(EmbeddedSearch_SetCustomBackgroundInfo_Params_Data)");
class  EmbeddedSearch_SelectLocalBackgroundImage_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_SelectLocalBackgroundImage_Params_Data));
      new (data()) EmbeddedSearch_SelectLocalBackgroundImage_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_SelectLocalBackgroundImage_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_SelectLocalBackgroundImage_Params_Data>(index_);
    }
    EmbeddedSearch_SelectLocalBackgroundImage_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  EmbeddedSearch_SelectLocalBackgroundImage_Params_Data();
  ~EmbeddedSearch_SelectLocalBackgroundImage_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_SelectLocalBackgroundImage_Params_Data) == 8,
              "Bad sizeof(EmbeddedSearch_SelectLocalBackgroundImage_Params_Data)");
class  EmbeddedSearch_BlocklistSearchSuggestion_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_BlocklistSearchSuggestion_Params_Data));
      new (data()) EmbeddedSearch_BlocklistSearchSuggestion_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_BlocklistSearchSuggestion_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_BlocklistSearchSuggestion_Params_Data>(index_);
    }
    EmbeddedSearch_BlocklistSearchSuggestion_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t task_version;
  uint8_t pad0_[4];
  int64_t task_id;

 private:
  EmbeddedSearch_BlocklistSearchSuggestion_Params_Data();
  ~EmbeddedSearch_BlocklistSearchSuggestion_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_BlocklistSearchSuggestion_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_BlocklistSearchSuggestion_Params_Data)");
class  EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data));
      new (data()) EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data>(index_);
    }
    EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t task_version;
  uint8_t pad0_[4];
  int64_t task_id;
  mojo::internal::Pointer<mojo::internal::Array_Data<uint8_t>> hash;

 private:
  EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data();
  ~EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data) == 32,
              "Bad sizeof(EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data)");
class  EmbeddedSearch_SearchSuggestionSelected_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_SearchSuggestionSelected_Params_Data));
      new (data()) EmbeddedSearch_SearchSuggestionSelected_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_SearchSuggestionSelected_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_SearchSuggestionSelected_Params_Data>(index_);
    }
    EmbeddedSearch_SearchSuggestionSelected_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t task_version;
  uint8_t pad0_[4];
  int64_t task_id;
  mojo::internal::Pointer<mojo::internal::Array_Data<uint8_t>> hash;

 private:
  EmbeddedSearch_SearchSuggestionSelected_Params_Data();
  ~EmbeddedSearch_SearchSuggestionSelected_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_SearchSuggestionSelected_Params_Data) == 32,
              "Bad sizeof(EmbeddedSearch_SearchSuggestionSelected_Params_Data)");
class  EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data));
      new (data()) EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data>(index_);
    }
    EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data();
  ~EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data) == 8,
              "Bad sizeof(EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data)");
class  EmbeddedSearch_ApplyDefaultTheme_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_ApplyDefaultTheme_Params_Data));
      new (data()) EmbeddedSearch_ApplyDefaultTheme_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_ApplyDefaultTheme_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_ApplyDefaultTheme_Params_Data>(index_);
    }
    EmbeddedSearch_ApplyDefaultTheme_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  EmbeddedSearch_ApplyDefaultTheme_Params_Data();
  ~EmbeddedSearch_ApplyDefaultTheme_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_ApplyDefaultTheme_Params_Data) == 8,
              "Bad sizeof(EmbeddedSearch_ApplyDefaultTheme_Params_Data)");
class  EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data));
      new (data()) EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data>(index_);
    }
    EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t color;
  uint8_t padfinal_[4];

 private:
  EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data();
  ~EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data)");
class  EmbeddedSearch_RevertThemeChanges_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_RevertThemeChanges_Params_Data));
      new (data()) EmbeddedSearch_RevertThemeChanges_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_RevertThemeChanges_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_RevertThemeChanges_Params_Data>(index_);
    }
    EmbeddedSearch_RevertThemeChanges_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  EmbeddedSearch_RevertThemeChanges_Params_Data();
  ~EmbeddedSearch_RevertThemeChanges_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_RevertThemeChanges_Params_Data) == 8,
              "Bad sizeof(EmbeddedSearch_RevertThemeChanges_Params_Data)");
class  EmbeddedSearch_ConfirmThemeChanges_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_ConfirmThemeChanges_Params_Data));
      new (data()) EmbeddedSearch_ConfirmThemeChanges_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_ConfirmThemeChanges_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_ConfirmThemeChanges_Params_Data>(index_);
    }
    EmbeddedSearch_ConfirmThemeChanges_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  EmbeddedSearch_ConfirmThemeChanges_Params_Data();
  ~EmbeddedSearch_ConfirmThemeChanges_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_ConfirmThemeChanges_Params_Data) == 8,
              "Bad sizeof(EmbeddedSearch_ConfirmThemeChanges_Params_Data)");
class  EmbeddedSearch_QueryAutocomplete_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_QueryAutocomplete_Params_Data));
      new (data()) EmbeddedSearch_QueryAutocomplete_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_QueryAutocomplete_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_QueryAutocomplete_Params_Data>(index_);
    }
    EmbeddedSearch_QueryAutocomplete_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> input;
  uint8_t prevent_inline_autocomplete : 1;
  uint8_t padfinal_[7];

 private:
  EmbeddedSearch_QueryAutocomplete_Params_Data();
  ~EmbeddedSearch_QueryAutocomplete_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_QueryAutocomplete_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_QueryAutocomplete_Params_Data)");
class  EmbeddedSearch_DeleteAutocompleteMatch_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_DeleteAutocompleteMatch_Params_Data));
      new (data()) EmbeddedSearch_DeleteAutocompleteMatch_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_DeleteAutocompleteMatch_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_DeleteAutocompleteMatch_Params_Data>(index_);
    }
    EmbeddedSearch_DeleteAutocompleteMatch_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t line;
  uint8_t padfinal_[7];

 private:
  EmbeddedSearch_DeleteAutocompleteMatch_Params_Data();
  ~EmbeddedSearch_DeleteAutocompleteMatch_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_DeleteAutocompleteMatch_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_DeleteAutocompleteMatch_Params_Data)");
class  EmbeddedSearch_StopAutocomplete_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_StopAutocomplete_Params_Data));
      new (data()) EmbeddedSearch_StopAutocomplete_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_StopAutocomplete_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_StopAutocomplete_Params_Data>(index_);
    }
    EmbeddedSearch_StopAutocomplete_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t clear_result : 1;
  uint8_t padfinal_[7];

 private:
  EmbeddedSearch_StopAutocomplete_Params_Data();
  ~EmbeddedSearch_StopAutocomplete_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_StopAutocomplete_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_StopAutocomplete_Params_Data)");
class  EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data));
      new (data()) EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data>(index_);
    }
    EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t latency_ms;
  uint8_t padfinal_[4];

 private:
  EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data();
  ~EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data)");
class  EmbeddedSearch_BlocklistPromo_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_BlocklistPromo_Params_Data));
      new (data()) EmbeddedSearch_BlocklistPromo_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_BlocklistPromo_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_BlocklistPromo_Params_Data>(index_);
    }
    EmbeddedSearch_BlocklistPromo_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> promo_id;

 private:
  EmbeddedSearch_BlocklistPromo_Params_Data();
  ~EmbeddedSearch_BlocklistPromo_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_BlocklistPromo_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_BlocklistPromo_Params_Data)");
class  EmbeddedSearch_OpenExtensionsPage_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_OpenExtensionsPage_Params_Data));
      new (data()) EmbeddedSearch_OpenExtensionsPage_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_OpenExtensionsPage_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_OpenExtensionsPage_Params_Data>(index_);
    }
    EmbeddedSearch_OpenExtensionsPage_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  double button;
  uint8_t alt_key : 1;
  uint8_t ctrl_key : 1;
  uint8_t meta_key : 1;
  uint8_t shift_key : 1;
  uint8_t padfinal_[7];

 private:
  EmbeddedSearch_OpenExtensionsPage_Params_Data();
  ~EmbeddedSearch_OpenExtensionsPage_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_OpenExtensionsPage_Params_Data) == 24,
              "Bad sizeof(EmbeddedSearch_OpenExtensionsPage_Params_Data)");
class  EmbeddedSearch_OpenAutocompleteMatch_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_OpenAutocompleteMatch_Params_Data));
      new (data()) EmbeddedSearch_OpenAutocompleteMatch_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_OpenAutocompleteMatch_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_OpenAutocompleteMatch_Params_Data>(index_);
    }
    EmbeddedSearch_OpenAutocompleteMatch_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t line;
  uint8_t are_matches_showing : 1;
  uint8_t alt_key : 1;
  uint8_t ctrl_key : 1;
  uint8_t meta_key : 1;
  uint8_t shift_key : 1;
  uint8_t pad5_[6];
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;
  double time_elapsed_since_last_focus;
  double button;

 private:
  EmbeddedSearch_OpenAutocompleteMatch_Params_Data();
  ~EmbeddedSearch_OpenAutocompleteMatch_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_OpenAutocompleteMatch_Params_Data) == 40,
              "Bad sizeof(EmbeddedSearch_OpenAutocompleteMatch_Params_Data)");
class  EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data));
      new (data()) EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data>(index_);
    }
    EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t suggestion_group_id;
  uint8_t padfinal_[4];

 private:
  EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data();
  ~EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data)");
class  EmbeddedSearchClient_AutocompleteResultChanged_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearchClient_AutocompleteResultChanged_Params_Data));
      new (data()) EmbeddedSearchClient_AutocompleteResultChanged_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearchClient_AutocompleteResultChanged_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearchClient_AutocompleteResultChanged_Params_Data>(index_);
    }
    EmbeddedSearchClient_AutocompleteResultChanged_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::search::mojom::internal::AutocompleteResult_Data> result;

 private:
  EmbeddedSearchClient_AutocompleteResultChanged_Params_Data();
  ~EmbeddedSearchClient_AutocompleteResultChanged_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearchClient_AutocompleteResultChanged_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearchClient_AutocompleteResultChanged_Params_Data)");
class  EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data));
      new (data()) EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data>(index_);
    }
    EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t match_index;
  uint8_t pad0_[4];
  mojo::internal::Pointer<mojo::internal::String_Data> url;
  mojo::internal::Pointer<mojo::internal::String_Data> data_url;

 private:
  EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data();
  ~EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data) == 32,
              "Bad sizeof(EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data)");
class  EmbeddedSearchClient_SetPageSequenceNumber_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearchClient_SetPageSequenceNumber_Params_Data));
      new (data()) EmbeddedSearchClient_SetPageSequenceNumber_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearchClient_SetPageSequenceNumber_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearchClient_SetPageSequenceNumber_Params_Data>(index_);
    }
    EmbeddedSearchClient_SetPageSequenceNumber_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t page_seq_no;
  uint8_t padfinal_[4];

 private:
  EmbeddedSearchClient_SetPageSequenceNumber_Params_Data();
  ~EmbeddedSearchClient_SetPageSequenceNumber_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearchClient_SetPageSequenceNumber_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearchClient_SetPageSequenceNumber_Params_Data)");
class  EmbeddedSearchClient_FocusChanged_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearchClient_FocusChanged_Params_Data));
      new (data()) EmbeddedSearchClient_FocusChanged_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearchClient_FocusChanged_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearchClient_FocusChanged_Params_Data>(index_);
    }
    EmbeddedSearchClient_FocusChanged_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t new_focus_state;
  int32_t reason;

 private:
  EmbeddedSearchClient_FocusChanged_Params_Data();
  ~EmbeddedSearchClient_FocusChanged_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearchClient_FocusChanged_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearchClient_FocusChanged_Params_Data)");
class  EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data));
      new (data()) EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data>(index_);
    }
    EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::InstantMostVisitedInfo_Data> most_visited_info;

 private:
  EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data();
  ~EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data)");
class  EmbeddedSearchClient_SetInputInProgress_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearchClient_SetInputInProgress_Params_Data));
      new (data()) EmbeddedSearchClient_SetInputInProgress_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearchClient_SetInputInProgress_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearchClient_SetInputInProgress_Params_Data>(index_);
    }
    EmbeddedSearchClient_SetInputInProgress_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t input_in_progress : 1;
  uint8_t padfinal_[7];

 private:
  EmbeddedSearchClient_SetInputInProgress_Params_Data();
  ~EmbeddedSearchClient_SetInputInProgress_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearchClient_SetInputInProgress_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearchClient_SetInputInProgress_Params_Data)");
class  EmbeddedSearchClient_ThemeChanged_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearchClient_ThemeChanged_Params_Data));
      new (data()) EmbeddedSearchClient_ThemeChanged_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearchClient_ThemeChanged_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearchClient_ThemeChanged_Params_Data>(index_);
    }
    EmbeddedSearchClient_ThemeChanged_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::NtpTheme_Data> theme;

 private:
  EmbeddedSearchClient_ThemeChanged_Params_Data();
  ~EmbeddedSearchClient_ThemeChanged_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearchClient_ThemeChanged_Params_Data) == 16,
              "Bad sizeof(EmbeddedSearchClient_ThemeChanged_Params_Data)");
class  EmbeddedSearchClient_LocalBackgroundSelected_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(EmbeddedSearchClient_LocalBackgroundSelected_Params_Data));
      new (data()) EmbeddedSearchClient_LocalBackgroundSelected_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    EmbeddedSearchClient_LocalBackgroundSelected_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<EmbeddedSearchClient_LocalBackgroundSelected_Params_Data>(index_);
    }
    EmbeddedSearchClient_LocalBackgroundSelected_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  EmbeddedSearchClient_LocalBackgroundSelected_Params_Data();
  ~EmbeddedSearchClient_LocalBackgroundSelected_Params_Data() = delete;
};
static_assert(sizeof(EmbeddedSearchClient_LocalBackgroundSelected_Params_Data) == 8,
              "Bad sizeof(EmbeddedSearchClient_LocalBackgroundSelected_Params_Data)");
class  SearchBouncer_SetNewTabPageURL_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(SearchBouncer_SetNewTabPageURL_Params_Data));
      new (data()) SearchBouncer_SetNewTabPageURL_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    SearchBouncer_SetNewTabPageURL_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<SearchBouncer_SetNewTabPageURL_Params_Data>(index_);
    }
    SearchBouncer_SetNewTabPageURL_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> new_tab_page_url;

 private:
  SearchBouncer_SetNewTabPageURL_Params_Data();
  ~SearchBouncer_SetNewTabPageURL_Params_Data() = delete;
};
static_assert(sizeof(SearchBouncer_SetNewTabPageURL_Params_Data) == 16,
              "Bad sizeof(SearchBouncer_SetNewTabPageURL_Params_Data)");

}  // namespace internal
class EmbeddedSearchConnector_Connect_ParamsDataView {
 public:
  EmbeddedSearchConnector_Connect_ParamsDataView() {}

  EmbeddedSearchConnector_Connect_ParamsDataView(
      internal::EmbeddedSearchConnector_Connect_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeEmbeddedSearch() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::search::mojom::EmbeddedSearchAssociatedRequestDataView>(
            &data_->embedded_search, &result, context_);
    DCHECK(ret);
    return result;
  }
  template <typename UserType>
  UserType TakeClient() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<::search::mojom::EmbeddedSearchClientAssociatedPtrInfoDataView>(
            &data_->client, &result, context_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::EmbeddedSearchConnector_Connect_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_FocusOmnibox_ParamsDataView {
 public:
  EmbeddedSearch_FocusOmnibox_ParamsDataView() {}

  EmbeddedSearch_FocusOmnibox_ParamsDataView(
      internal::EmbeddedSearch_FocusOmnibox_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  bool focus() const {
    return data_->focus;
  }
 private:
  internal::EmbeddedSearch_FocusOmnibox_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_DeleteMostVisitedItem_ParamsDataView {
 public:
  EmbeddedSearch_DeleteMostVisitedItem_ParamsDataView() {}

  EmbeddedSearch_DeleteMostVisitedItem_ParamsDataView(
      internal::EmbeddedSearch_DeleteMostVisitedItem_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUrl(UserType* output) {
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_DeleteMostVisitedItem_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_UndoAllMostVisitedDeletions_ParamsDataView {
 public:
  EmbeddedSearch_UndoAllMostVisitedDeletions_ParamsDataView() {}

  EmbeddedSearch_UndoAllMostVisitedDeletions_ParamsDataView(
      internal::EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
 private:
  internal::EmbeddedSearch_UndoAllMostVisitedDeletions_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_UndoMostVisitedDeletion_ParamsDataView {
 public:
  EmbeddedSearch_UndoMostVisitedDeletion_ParamsDataView() {}

  EmbeddedSearch_UndoMostVisitedDeletion_ParamsDataView(
      internal::EmbeddedSearch_UndoMostVisitedDeletion_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUrl(UserType* output) {
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_UndoMostVisitedDeletion_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_AddCustomLink_ParamsDataView {
 public:
  EmbeddedSearch_AddCustomLink_ParamsDataView() {}

  EmbeddedSearch_AddCustomLink_ParamsDataView(
      internal::EmbeddedSearch_AddCustomLink_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUrl(UserType* output) {
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetTitleDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadTitle(UserType* output) {
    auto* pointer = data_->title.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_AddCustomLink_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_AddCustomLink_ResponseParamsDataView {
 public:
  EmbeddedSearch_AddCustomLink_ResponseParamsDataView() {}

  EmbeddedSearch_AddCustomLink_ResponseParamsDataView(
      internal::EmbeddedSearch_AddCustomLink_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
 private:
  internal::EmbeddedSearch_AddCustomLink_ResponseParams_Data* data_ = nullptr;
};

class EmbeddedSearch_UpdateCustomLink_ParamsDataView {
 public:
  EmbeddedSearch_UpdateCustomLink_ParamsDataView() {}

  EmbeddedSearch_UpdateCustomLink_ParamsDataView(
      internal::EmbeddedSearch_UpdateCustomLink_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUrl(UserType* output) {
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetNewUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadNewUrl(UserType* output) {
    auto* pointer = data_->new_url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetNewTitleDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadNewTitle(UserType* output) {
    auto* pointer = data_->new_title.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_UpdateCustomLink_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_UpdateCustomLink_ResponseParamsDataView {
 public:
  EmbeddedSearch_UpdateCustomLink_ResponseParamsDataView() {}

  EmbeddedSearch_UpdateCustomLink_ResponseParamsDataView(
      internal::EmbeddedSearch_UpdateCustomLink_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
 private:
  internal::EmbeddedSearch_UpdateCustomLink_ResponseParams_Data* data_ = nullptr;
};

class EmbeddedSearch_ReorderCustomLink_ParamsDataView {
 public:
  EmbeddedSearch_ReorderCustomLink_ParamsDataView() {}

  EmbeddedSearch_ReorderCustomLink_ParamsDataView(
      internal::EmbeddedSearch_ReorderCustomLink_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUrl(UserType* output) {
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  int32_t new_pos() const {
    return data_->new_pos;
  }
 private:
  internal::EmbeddedSearch_ReorderCustomLink_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_DeleteCustomLink_ParamsDataView {
 public:
  EmbeddedSearch_DeleteCustomLink_ParamsDataView() {}

  EmbeddedSearch_DeleteCustomLink_ParamsDataView(
      internal::EmbeddedSearch_DeleteCustomLink_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUrl(UserType* output) {
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_DeleteCustomLink_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_DeleteCustomLink_ResponseParamsDataView {
 public:
  EmbeddedSearch_DeleteCustomLink_ResponseParamsDataView() {}

  EmbeddedSearch_DeleteCustomLink_ResponseParamsDataView(
      internal::EmbeddedSearch_DeleteCustomLink_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool success() const {
    return data_->success;
  }
 private:
  internal::EmbeddedSearch_DeleteCustomLink_ResponseParams_Data* data_ = nullptr;
};

class EmbeddedSearch_UndoCustomLinkAction_ParamsDataView {
 public:
  EmbeddedSearch_UndoCustomLinkAction_ParamsDataView() {}

  EmbeddedSearch_UndoCustomLinkAction_ParamsDataView(
      internal::EmbeddedSearch_UndoCustomLinkAction_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
 private:
  internal::EmbeddedSearch_UndoCustomLinkAction_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_ResetCustomLinks_ParamsDataView {
 public:
  EmbeddedSearch_ResetCustomLinks_ParamsDataView() {}

  EmbeddedSearch_ResetCustomLinks_ParamsDataView(
      internal::EmbeddedSearch_ResetCustomLinks_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
 private:
  internal::EmbeddedSearch_ResetCustomLinks_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_ToggleMostVisitedOrCustomLinks_ParamsDataView {
 public:
  EmbeddedSearch_ToggleMostVisitedOrCustomLinks_ParamsDataView() {}

  EmbeddedSearch_ToggleMostVisitedOrCustomLinks_ParamsDataView(
      internal::EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
 private:
  internal::EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_ToggleShortcutsVisibility_ParamsDataView {
 public:
  EmbeddedSearch_ToggleShortcutsVisibility_ParamsDataView() {}

  EmbeddedSearch_ToggleShortcutsVisibility_ParamsDataView(
      internal::EmbeddedSearch_ToggleShortcutsVisibility_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  bool do_notify() const {
    return data_->do_notify;
  }
 private:
  internal::EmbeddedSearch_ToggleShortcutsVisibility_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_LogEvent_ParamsDataView {
 public:
  EmbeddedSearch_LogEvent_ParamsDataView() {}

  EmbeddedSearch_LogEvent_ParamsDataView(
      internal::EmbeddedSearch_LogEvent_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadEvent(UserType* output) const {
    auto data_value = data_->event;
    return mojo::internal::Deserialize<::search::mojom::NTPLoggingEventType>(
        data_value, output);
  }

  NTPLoggingEventType event() const {
    return static_cast<NTPLoggingEventType>(data_->event);
  }
  inline void GetTimeDataView(
      ::mojo_base::mojom::TimeDeltaDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadTime(UserType* output) {
    auto* pointer = data_->time.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDeltaDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_LogEvent_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_LogSuggestionEventWithValue_ParamsDataView {
 public:
  EmbeddedSearch_LogSuggestionEventWithValue_ParamsDataView() {}

  EmbeddedSearch_LogSuggestionEventWithValue_ParamsDataView(
      internal::EmbeddedSearch_LogSuggestionEventWithValue_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadEvent(UserType* output) const {
    auto data_value = data_->event;
    return mojo::internal::Deserialize<::search::mojom::NTPSuggestionsLoggingEventType>(
        data_value, output);
  }

  NTPSuggestionsLoggingEventType event() const {
    return static_cast<NTPSuggestionsLoggingEventType>(data_->event);
  }
  int32_t data() const {
    return data_->data;
  }
  inline void GetTimeDataView(
      ::mojo_base::mojom::TimeDeltaDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadTime(UserType* output) {
    auto* pointer = data_->time.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::TimeDeltaDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_LogSuggestionEventWithValue_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_LogMostVisitedImpression_ParamsDataView {
 public:
  EmbeddedSearch_LogMostVisitedImpression_ParamsDataView() {}

  EmbeddedSearch_LogMostVisitedImpression_ParamsDataView(
      internal::EmbeddedSearch_LogMostVisitedImpression_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  inline void GetImpressionDataView(
      NTPTileImpressionDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadImpression(UserType* output) {
    auto* pointer = data_->impression.Get();
    return mojo::internal::Deserialize<::search::mojom::NTPTileImpressionDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_LogMostVisitedImpression_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_LogMostVisitedNavigation_ParamsDataView {
 public:
  EmbeddedSearch_LogMostVisitedNavigation_ParamsDataView() {}

  EmbeddedSearch_LogMostVisitedNavigation_ParamsDataView(
      internal::EmbeddedSearch_LogMostVisitedNavigation_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  inline void GetImpressionDataView(
      NTPTileImpressionDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadImpression(UserType* output) {
    auto* pointer = data_->impression.Get();
    return mojo::internal::Deserialize<::search::mojom::NTPTileImpressionDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_LogMostVisitedNavigation_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_PasteAndOpenDropdown_ParamsDataView {
 public:
  EmbeddedSearch_PasteAndOpenDropdown_ParamsDataView() {}

  EmbeddedSearch_PasteAndOpenDropdown_ParamsDataView(
      internal::EmbeddedSearch_PasteAndOpenDropdown_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
  inline void GetTextToBePastedDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadTextToBePasted(UserType* output) {
    auto* pointer = data_->text_to_be_pasted.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_PasteAndOpenDropdown_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_SetCustomBackgroundInfo_ParamsDataView {
 public:
  EmbeddedSearch_SetCustomBackgroundInfo_ParamsDataView() {}

  EmbeddedSearch_SetCustomBackgroundInfo_ParamsDataView(
      internal::EmbeddedSearch_SetCustomBackgroundInfo_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetBackgroundUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadBackgroundUrl(UserType* output) {
    auto* pointer = data_->background_url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetAttributionLine1DataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAttributionLine1(UserType* output) {
    auto* pointer = data_->attribution_line_1.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetAttributionLine2DataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAttributionLine2(UserType* output) {
    auto* pointer = data_->attribution_line_2.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetActionUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadActionUrl(UserType* output) {
    auto* pointer = data_->action_url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  inline void GetCollectionIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadCollectionId(UserType* output) {
    auto* pointer = data_->collection_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_SetCustomBackgroundInfo_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_SelectLocalBackgroundImage_ParamsDataView {
 public:
  EmbeddedSearch_SelectLocalBackgroundImage_ParamsDataView() {}

  EmbeddedSearch_SelectLocalBackgroundImage_ParamsDataView(
      internal::EmbeddedSearch_SelectLocalBackgroundImage_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::EmbeddedSearch_SelectLocalBackgroundImage_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_BlocklistSearchSuggestion_ParamsDataView {
 public:
  EmbeddedSearch_BlocklistSearchSuggestion_ParamsDataView() {}

  EmbeddedSearch_BlocklistSearchSuggestion_ParamsDataView(
      internal::EmbeddedSearch_BlocklistSearchSuggestion_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t task_version() const {
    return data_->task_version;
  }
  int64_t task_id() const {
    return data_->task_id;
  }
 private:
  internal::EmbeddedSearch_BlocklistSearchSuggestion_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_BlocklistSearchSuggestionWithHash_ParamsDataView {
 public:
  EmbeddedSearch_BlocklistSearchSuggestionWithHash_ParamsDataView() {}

  EmbeddedSearch_BlocklistSearchSuggestionWithHash_ParamsDataView(
      internal::EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t task_version() const {
    return data_->task_version;
  }
  int64_t task_id() const {
    return data_->task_id;
  }
  inline void GetHashDataView(
      mojo::ArrayDataView<uint8_t>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadHash(UserType* output) {
    auto* pointer = data_->hash.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<uint8_t>>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_SearchSuggestionSelected_ParamsDataView {
 public:
  EmbeddedSearch_SearchSuggestionSelected_ParamsDataView() {}

  EmbeddedSearch_SearchSuggestionSelected_ParamsDataView(
      internal::EmbeddedSearch_SearchSuggestionSelected_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  int32_t task_version() const {
    return data_->task_version;
  }
  int64_t task_id() const {
    return data_->task_id;
  }
  inline void GetHashDataView(
      mojo::ArrayDataView<uint8_t>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadHash(UserType* output) {
    auto* pointer = data_->hash.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<uint8_t>>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_SearchSuggestionSelected_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_OptOutOfSearchSuggestions_ParamsDataView {
 public:
  EmbeddedSearch_OptOutOfSearchSuggestions_ParamsDataView() {}

  EmbeddedSearch_OptOutOfSearchSuggestions_ParamsDataView(
      internal::EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::EmbeddedSearch_OptOutOfSearchSuggestions_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_ApplyDefaultTheme_ParamsDataView {
 public:
  EmbeddedSearch_ApplyDefaultTheme_ParamsDataView() {}

  EmbeddedSearch_ApplyDefaultTheme_ParamsDataView(
      internal::EmbeddedSearch_ApplyDefaultTheme_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::EmbeddedSearch_ApplyDefaultTheme_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_ApplyAutogeneratedTheme_ParamsDataView {
 public:
  EmbeddedSearch_ApplyAutogeneratedTheme_ParamsDataView() {}

  EmbeddedSearch_ApplyAutogeneratedTheme_ParamsDataView(
      internal::EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t color() const {
    return data_->color;
  }
 private:
  internal::EmbeddedSearch_ApplyAutogeneratedTheme_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_RevertThemeChanges_ParamsDataView {
 public:
  EmbeddedSearch_RevertThemeChanges_ParamsDataView() {}

  EmbeddedSearch_RevertThemeChanges_ParamsDataView(
      internal::EmbeddedSearch_RevertThemeChanges_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::EmbeddedSearch_RevertThemeChanges_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_ConfirmThemeChanges_ParamsDataView {
 public:
  EmbeddedSearch_ConfirmThemeChanges_ParamsDataView() {}

  EmbeddedSearch_ConfirmThemeChanges_ParamsDataView(
      internal::EmbeddedSearch_ConfirmThemeChanges_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::EmbeddedSearch_ConfirmThemeChanges_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_QueryAutocomplete_ParamsDataView {
 public:
  EmbeddedSearch_QueryAutocomplete_ParamsDataView() {}

  EmbeddedSearch_QueryAutocomplete_ParamsDataView(
      internal::EmbeddedSearch_QueryAutocomplete_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetInputDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadInput(UserType* output) {
    auto* pointer = data_->input.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  bool prevent_inline_autocomplete() const {
    return data_->prevent_inline_autocomplete;
  }
 private:
  internal::EmbeddedSearch_QueryAutocomplete_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_DeleteAutocompleteMatch_ParamsDataView {
 public:
  EmbeddedSearch_DeleteAutocompleteMatch_ParamsDataView() {}

  EmbeddedSearch_DeleteAutocompleteMatch_ParamsDataView(
      internal::EmbeddedSearch_DeleteAutocompleteMatch_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint8_t line() const {
    return data_->line;
  }
 private:
  internal::EmbeddedSearch_DeleteAutocompleteMatch_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_StopAutocomplete_ParamsDataView {
 public:
  EmbeddedSearch_StopAutocomplete_ParamsDataView() {}

  EmbeddedSearch_StopAutocomplete_ParamsDataView(
      internal::EmbeddedSearch_StopAutocomplete_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool clear_result() const {
    return data_->clear_result;
  }
 private:
  internal::EmbeddedSearch_StopAutocomplete_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_LogCharTypedToRepaintLatency_ParamsDataView {
 public:
  EmbeddedSearch_LogCharTypedToRepaintLatency_ParamsDataView() {}

  EmbeddedSearch_LogCharTypedToRepaintLatency_ParamsDataView(
      internal::EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t latency_ms() const {
    return data_->latency_ms;
  }
 private:
  internal::EmbeddedSearch_LogCharTypedToRepaintLatency_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_BlocklistPromo_ParamsDataView {
 public:
  EmbeddedSearch_BlocklistPromo_ParamsDataView() {}

  EmbeddedSearch_BlocklistPromo_ParamsDataView(
      internal::EmbeddedSearch_BlocklistPromo_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetPromoIdDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadPromoId(UserType* output) {
    auto* pointer = data_->promo_id.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearch_BlocklistPromo_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_OpenExtensionsPage_ParamsDataView {
 public:
  EmbeddedSearch_OpenExtensionsPage_ParamsDataView() {}

  EmbeddedSearch_OpenExtensionsPage_ParamsDataView(
      internal::EmbeddedSearch_OpenExtensionsPage_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  double button() const {
    return data_->button;
  }
  bool alt_key() const {
    return data_->alt_key;
  }
  bool ctrl_key() const {
    return data_->ctrl_key;
  }
  bool meta_key() const {
    return data_->meta_key;
  }
  bool shift_key() const {
    return data_->shift_key;
  }
 private:
  internal::EmbeddedSearch_OpenExtensionsPage_Params_Data* data_ = nullptr;
};

class EmbeddedSearch_OpenAutocompleteMatch_ParamsDataView {
 public:
  EmbeddedSearch_OpenAutocompleteMatch_ParamsDataView() {}

  EmbeddedSearch_OpenAutocompleteMatch_ParamsDataView(
      internal::EmbeddedSearch_OpenAutocompleteMatch_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  uint8_t line() const {
    return data_->line;
  }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUrl(UserType* output) {
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
  bool are_matches_showing() const {
    return data_->are_matches_showing;
  }
  double time_elapsed_since_last_focus() const {
    return data_->time_elapsed_since_last_focus;
  }
  double button() const {
    return data_->button;
  }
  bool alt_key() const {
    return data_->alt_key;
  }
  bool ctrl_key() const {
    return data_->ctrl_key;
  }
  bool meta_key() const {
    return data_->meta_key;
  }
  bool shift_key() const {
    return data_->shift_key;
  }
 private:
  internal::EmbeddedSearch_OpenAutocompleteMatch_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearch_ToggleSuggestionGroupIdVisibility_ParamsDataView {
 public:
  EmbeddedSearch_ToggleSuggestionGroupIdVisibility_ParamsDataView() {}

  EmbeddedSearch_ToggleSuggestionGroupIdVisibility_ParamsDataView(
      internal::EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t suggestion_group_id() const {
    return data_->suggestion_group_id;
  }
 private:
  internal::EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params_Data* data_ = nullptr;
};

class EmbeddedSearchClient_AutocompleteResultChanged_ParamsDataView {
 public:
  EmbeddedSearchClient_AutocompleteResultChanged_ParamsDataView() {}

  EmbeddedSearchClient_AutocompleteResultChanged_ParamsDataView(
      internal::EmbeddedSearchClient_AutocompleteResultChanged_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetResultDataView(
      ::search::mojom::AutocompleteResultDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadResult(UserType* output) {
    auto* pointer = data_->result.Get();
    return mojo::internal::Deserialize<::search::mojom::AutocompleteResultDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearchClient_AutocompleteResultChanged_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearchClient_AutocompleteMatchImageAvailable_ParamsDataView {
 public:
  EmbeddedSearchClient_AutocompleteMatchImageAvailable_ParamsDataView() {}

  EmbeddedSearchClient_AutocompleteMatchImageAvailable_ParamsDataView(
      internal::EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  uint32_t match_index() const {
    return data_->match_index;
  }
  inline void GetUrlDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUrl(UserType* output) {
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  inline void GetDataUrlDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadDataUrl(UserType* output) {
    auto* pointer = data_->data_url.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearchClient_SetPageSequenceNumber_ParamsDataView {
 public:
  EmbeddedSearchClient_SetPageSequenceNumber_ParamsDataView() {}

  EmbeddedSearchClient_SetPageSequenceNumber_ParamsDataView(
      internal::EmbeddedSearchClient_SetPageSequenceNumber_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t page_seq_no() const {
    return data_->page_seq_no;
  }
 private:
  internal::EmbeddedSearchClient_SetPageSequenceNumber_Params_Data* data_ = nullptr;
};

class EmbeddedSearchClient_FocusChanged_ParamsDataView {
 public:
  EmbeddedSearchClient_FocusChanged_ParamsDataView() {}

  EmbeddedSearchClient_FocusChanged_ParamsDataView(
      internal::EmbeddedSearchClient_FocusChanged_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadNewFocusState(UserType* output) const {
    auto data_value = data_->new_focus_state;
    return mojo::internal::Deserialize<::search::mojom::OmniboxFocusState>(
        data_value, output);
  }

  OmniboxFocusState new_focus_state() const {
    return static_cast<OmniboxFocusState>(data_->new_focus_state);
  }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadReason(UserType* output) const {
    auto data_value = data_->reason;
    return mojo::internal::Deserialize<::search::mojom::OmniboxFocusChangeReason>(
        data_value, output);
  }

  OmniboxFocusChangeReason reason() const {
    return static_cast<OmniboxFocusChangeReason>(data_->reason);
  }
 private:
  internal::EmbeddedSearchClient_FocusChanged_Params_Data* data_ = nullptr;
};

class EmbeddedSearchClient_MostVisitedInfoChanged_ParamsDataView {
 public:
  EmbeddedSearchClient_MostVisitedInfoChanged_ParamsDataView() {}

  EmbeddedSearchClient_MostVisitedInfoChanged_ParamsDataView(
      internal::EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetMostVisitedInfoDataView(
      InstantMostVisitedInfoDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadMostVisitedInfo(UserType* output) {
    auto* pointer = data_->most_visited_info.Get();
    return mojo::internal::Deserialize<::search::mojom::InstantMostVisitedInfoDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearchClient_MostVisitedInfoChanged_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearchClient_SetInputInProgress_ParamsDataView {
 public:
  EmbeddedSearchClient_SetInputInProgress_ParamsDataView() {}

  EmbeddedSearchClient_SetInputInProgress_ParamsDataView(
      internal::EmbeddedSearchClient_SetInputInProgress_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool input_in_progress() const {
    return data_->input_in_progress;
  }
 private:
  internal::EmbeddedSearchClient_SetInputInProgress_Params_Data* data_ = nullptr;
};

class EmbeddedSearchClient_ThemeChanged_ParamsDataView {
 public:
  EmbeddedSearchClient_ThemeChanged_ParamsDataView() {}

  EmbeddedSearchClient_ThemeChanged_ParamsDataView(
      internal::EmbeddedSearchClient_ThemeChanged_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetThemeDataView(
      NtpThemeDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadTheme(UserType* output) {
    auto* pointer = data_->theme.Get();
    return mojo::internal::Deserialize<::search::mojom::NtpThemeDataView>(
        pointer, output, context_);
  }
 private:
  internal::EmbeddedSearchClient_ThemeChanged_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class EmbeddedSearchClient_LocalBackgroundSelected_ParamsDataView {
 public:
  EmbeddedSearchClient_LocalBackgroundSelected_ParamsDataView() {}

  EmbeddedSearchClient_LocalBackgroundSelected_ParamsDataView(
      internal::EmbeddedSearchClient_LocalBackgroundSelected_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::EmbeddedSearchClient_LocalBackgroundSelected_Params_Data* data_ = nullptr;
};

class SearchBouncer_SetNewTabPageURL_ParamsDataView {
 public:
  SearchBouncer_SetNewTabPageURL_ParamsDataView() {}

  SearchBouncer_SetNewTabPageURL_ParamsDataView(
      internal::SearchBouncer_SetNewTabPageURL_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetNewTabPageUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadNewTabPageUrl(UserType* output) {
    auto* pointer = data_->new_tab_page_url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
 private:
  internal::SearchBouncer_SetNewTabPageURL_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};






inline void EmbeddedSearch_DeleteMostVisitedItem_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}




inline void EmbeddedSearch_UndoMostVisitedDeletion_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}


inline void EmbeddedSearch_AddCustomLink_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void EmbeddedSearch_AddCustomLink_ParamsDataView::GetTitleDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->title.Get();
  *output = mojo::StringDataView(pointer, context_);
}




inline void EmbeddedSearch_UpdateCustomLink_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void EmbeddedSearch_UpdateCustomLink_ParamsDataView::GetNewUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->new_url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void EmbeddedSearch_UpdateCustomLink_ParamsDataView::GetNewTitleDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->new_title.Get();
  *output = mojo::StringDataView(pointer, context_);
}




inline void EmbeddedSearch_ReorderCustomLink_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}


inline void EmbeddedSearch_DeleteCustomLink_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}












inline void EmbeddedSearch_LogEvent_ParamsDataView::GetTimeDataView(
    ::mojo_base::mojom::TimeDeltaDataView* output) {
  auto pointer = data_->time.Get();
  *output = ::mojo_base::mojom::TimeDeltaDataView(pointer, context_);
}


inline void EmbeddedSearch_LogSuggestionEventWithValue_ParamsDataView::GetTimeDataView(
    ::mojo_base::mojom::TimeDeltaDataView* output) {
  auto pointer = data_->time.Get();
  *output = ::mojo_base::mojom::TimeDeltaDataView(pointer, context_);
}


inline void EmbeddedSearch_LogMostVisitedImpression_ParamsDataView::GetImpressionDataView(
    NTPTileImpressionDataView* output) {
  auto pointer = data_->impression.Get();
  *output = NTPTileImpressionDataView(pointer, context_);
}


inline void EmbeddedSearch_LogMostVisitedNavigation_ParamsDataView::GetImpressionDataView(
    NTPTileImpressionDataView* output) {
  auto pointer = data_->impression.Get();
  *output = NTPTileImpressionDataView(pointer, context_);
}


inline void EmbeddedSearch_PasteAndOpenDropdown_ParamsDataView::GetTextToBePastedDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->text_to_be_pasted.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}


inline void EmbeddedSearch_SetCustomBackgroundInfo_ParamsDataView::GetBackgroundUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->background_url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void EmbeddedSearch_SetCustomBackgroundInfo_ParamsDataView::GetAttributionLine1DataView(
    mojo::StringDataView* output) {
  auto pointer = data_->attribution_line_1.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void EmbeddedSearch_SetCustomBackgroundInfo_ParamsDataView::GetAttributionLine2DataView(
    mojo::StringDataView* output) {
  auto pointer = data_->attribution_line_2.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void EmbeddedSearch_SetCustomBackgroundInfo_ParamsDataView::GetActionUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->action_url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}
inline void EmbeddedSearch_SetCustomBackgroundInfo_ParamsDataView::GetCollectionIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->collection_id.Get();
  *output = mojo::StringDataView(pointer, context_);
}






inline void EmbeddedSearch_BlocklistSearchSuggestionWithHash_ParamsDataView::GetHashDataView(
    mojo::ArrayDataView<uint8_t>* output) {
  auto pointer = data_->hash.Get();
  *output = mojo::ArrayDataView<uint8_t>(pointer, context_);
}


inline void EmbeddedSearch_SearchSuggestionSelected_ParamsDataView::GetHashDataView(
    mojo::ArrayDataView<uint8_t>* output) {
  auto pointer = data_->hash.Get();
  *output = mojo::ArrayDataView<uint8_t>(pointer, context_);
}












inline void EmbeddedSearch_QueryAutocomplete_ParamsDataView::GetInputDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->input.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}








inline void EmbeddedSearch_BlocklistPromo_ParamsDataView::GetPromoIdDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->promo_id.Get();
  *output = mojo::StringDataView(pointer, context_);
}




inline void EmbeddedSearch_OpenAutocompleteMatch_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}




inline void EmbeddedSearchClient_AutocompleteResultChanged_ParamsDataView::GetResultDataView(
    ::search::mojom::AutocompleteResultDataView* output) {
  auto pointer = data_->result.Get();
  *output = ::search::mojom::AutocompleteResultDataView(pointer, context_);
}


inline void EmbeddedSearchClient_AutocompleteMatchImageAvailable_ParamsDataView::GetUrlDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->url.Get();
  *output = mojo::StringDataView(pointer, context_);
}
inline void EmbeddedSearchClient_AutocompleteMatchImageAvailable_ParamsDataView::GetDataUrlDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->data_url.Get();
  *output = mojo::StringDataView(pointer, context_);
}






inline void EmbeddedSearchClient_MostVisitedInfoChanged_ParamsDataView::GetMostVisitedInfoDataView(
    InstantMostVisitedInfoDataView* output) {
  auto pointer = data_->most_visited_info.Get();
  *output = InstantMostVisitedInfoDataView(pointer, context_);
}




inline void EmbeddedSearchClient_ThemeChanged_ParamsDataView::GetThemeDataView(
    NtpThemeDataView* output) {
  auto pointer = data_->theme.Get();
  *output = NtpThemeDataView(pointer, context_);
}




inline void SearchBouncer_SetNewTabPageURL_ParamsDataView::GetNewTabPageUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->new_tab_page_url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}

}  // namespace mojom
}  // namespace search

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CHROME_COMMON_SEARCH_SEARCH_MOJOM_PARAMS_DATA_H_