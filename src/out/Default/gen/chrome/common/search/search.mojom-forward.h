// chrome/common/search/search.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_COMMON_SEARCH_SEARCH_MOJOM_FORWARD_H_
#define CHROME_COMMON_SEARCH_SEARCH_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"



namespace mojo {
enum class NativeEnum;
}  // namespace mojo


namespace search {
namespace mojom {
using NTPTileImpressionDataView = mojo::native::NativeStructDataView;

using InstantMostVisitedInfoDataView = mojo::native::NativeStructDataView;

using NtpThemeDataView = mojo::native::NativeStructDataView;

using SearchBoxThemeDataView = mojo::native::NativeStructDataView;

using NTPLoggingEventType = mojo::NativeEnum;
using NTPSuggestionsLoggingEventType = mojo::NativeEnum;
using OmniboxFocusState = mojo::NativeEnum;
using OmniboxFocusChangeReason = mojo::NativeEnum;
using NTPTileImpression = mojo::native::NativeStruct;
using NTPTileImpressionPtr = mojo::native::NativeStructPtr;

using InstantMostVisitedInfo = mojo::native::NativeStruct;
using InstantMostVisitedInfoPtr = mojo::native::NativeStructPtr;

using NtpTheme = mojo::native::NativeStruct;
using NtpThemePtr = mojo::native::NativeStructPtr;

using SearchBoxTheme = mojo::native::NativeStruct;
using SearchBoxThemePtr = mojo::native::NativeStructPtr;

class EmbeddedSearchConnector;

using EmbeddedSearchConnectorPtr = mojo::InterfacePtr<EmbeddedSearchConnector>;
using EmbeddedSearchConnectorPtrInfo = mojo::InterfacePtrInfo<EmbeddedSearchConnector>;
using ThreadSafeEmbeddedSearchConnectorPtr =
    mojo::ThreadSafeInterfacePtr<EmbeddedSearchConnector>;

using EmbeddedSearchConnectorRequest = mojo::InterfaceRequest<EmbeddedSearchConnector>;

using EmbeddedSearchConnectorAssociatedPtr =
    mojo::AssociatedInterfacePtr<EmbeddedSearchConnector>;
using ThreadSafeEmbeddedSearchConnectorAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<EmbeddedSearchConnector>;
using EmbeddedSearchConnectorAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<EmbeddedSearchConnector>;

using EmbeddedSearchConnectorAssociatedRequest =
    mojo::AssociatedInterfaceRequest<EmbeddedSearchConnector>;

class EmbeddedSearch;

using EmbeddedSearchPtr = mojo::InterfacePtr<EmbeddedSearch>;
using EmbeddedSearchPtrInfo = mojo::InterfacePtrInfo<EmbeddedSearch>;
using ThreadSafeEmbeddedSearchPtr =
    mojo::ThreadSafeInterfacePtr<EmbeddedSearch>;

using EmbeddedSearchRequest = mojo::InterfaceRequest<EmbeddedSearch>;

using EmbeddedSearchAssociatedPtr =
    mojo::AssociatedInterfacePtr<EmbeddedSearch>;
using ThreadSafeEmbeddedSearchAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<EmbeddedSearch>;
using EmbeddedSearchAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<EmbeddedSearch>;

using EmbeddedSearchAssociatedRequest =
    mojo::AssociatedInterfaceRequest<EmbeddedSearch>;

class EmbeddedSearchClient;

using EmbeddedSearchClientPtr = mojo::InterfacePtr<EmbeddedSearchClient>;
using EmbeddedSearchClientPtrInfo = mojo::InterfacePtrInfo<EmbeddedSearchClient>;
using ThreadSafeEmbeddedSearchClientPtr =
    mojo::ThreadSafeInterfacePtr<EmbeddedSearchClient>;

using EmbeddedSearchClientRequest = mojo::InterfaceRequest<EmbeddedSearchClient>;

using EmbeddedSearchClientAssociatedPtr =
    mojo::AssociatedInterfacePtr<EmbeddedSearchClient>;
using ThreadSafeEmbeddedSearchClientAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<EmbeddedSearchClient>;
using EmbeddedSearchClientAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<EmbeddedSearchClient>;

using EmbeddedSearchClientAssociatedRequest =
    mojo::AssociatedInterfaceRequest<EmbeddedSearchClient>;

class SearchBouncer;

using SearchBouncerPtr = mojo::InterfacePtr<SearchBouncer>;
using SearchBouncerPtrInfo = mojo::InterfacePtrInfo<SearchBouncer>;
using ThreadSafeSearchBouncerPtr =
    mojo::ThreadSafeInterfacePtr<SearchBouncer>;

using SearchBouncerRequest = mojo::InterfaceRequest<SearchBouncer>;

using SearchBouncerAssociatedPtr =
    mojo::AssociatedInterfacePtr<SearchBouncer>;
using ThreadSafeSearchBouncerAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<SearchBouncer>;
using SearchBouncerAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<SearchBouncer>;

using SearchBouncerAssociatedRequest =
    mojo::AssociatedInterfaceRequest<SearchBouncer>;




}  // namespace mojom
}  // namespace search
#include "chrome/common/search/instant_types.h"
#include "chrome/common/search/ntp_logging_events.h"
#include "components/ntp_tiles/ntp_tile_impression.h"
#include "components/omnibox/common/omnibox_focus_state.h"

#endif  // CHROME_COMMON_SEARCH_SEARCH_MOJOM_FORWARD_H_