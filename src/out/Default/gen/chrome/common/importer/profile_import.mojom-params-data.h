// chrome/common/importer/profile_import.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef CHROME_COMMON_IMPORTER_PROFILE_IMPORT_MOJOM_PARAMS_DATA_H_
#define CHROME_COMMON_IMPORTER_PROFILE_IMPORT_MOJOM_PARAMS_DATA_H_

#include "base/logging.h"
#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace chrome {
namespace mojom {
namespace internal {
class  ProfileImportObserver_OnImportStart_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnImportStart_Params_Data));
      new (data()) ProfileImportObserver_OnImportStart_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnImportStart_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnImportStart_Params_Data>(index_);
    }
    ProfileImportObserver_OnImportStart_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  ProfileImportObserver_OnImportStart_Params_Data();
  ~ProfileImportObserver_OnImportStart_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnImportStart_Params_Data) == 8,
              "Bad sizeof(ProfileImportObserver_OnImportStart_Params_Data)");
class  ProfileImportObserver_OnImportFinished_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnImportFinished_Params_Data));
      new (data()) ProfileImportObserver_OnImportFinished_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnImportFinished_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnImportFinished_Params_Data>(index_);
    }
    ProfileImportObserver_OnImportFinished_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t succeeded : 1;
  uint8_t pad0_[7];
  mojo::internal::Pointer<mojo::internal::String_Data> error_msg;

 private:
  ProfileImportObserver_OnImportFinished_Params_Data();
  ~ProfileImportObserver_OnImportFinished_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnImportFinished_Params_Data) == 24,
              "Bad sizeof(ProfileImportObserver_OnImportFinished_Params_Data)");
class  ProfileImportObserver_OnImportItemStart_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnImportItemStart_Params_Data));
      new (data()) ProfileImportObserver_OnImportItemStart_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnImportItemStart_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnImportItemStart_Params_Data>(index_);
    }
    ProfileImportObserver_OnImportItemStart_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t item;
  uint8_t padfinal_[4];

 private:
  ProfileImportObserver_OnImportItemStart_Params_Data();
  ~ProfileImportObserver_OnImportItemStart_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnImportItemStart_Params_Data) == 16,
              "Bad sizeof(ProfileImportObserver_OnImportItemStart_Params_Data)");
class  ProfileImportObserver_OnImportItemFinished_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnImportItemFinished_Params_Data));
      new (data()) ProfileImportObserver_OnImportItemFinished_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnImportItemFinished_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnImportItemFinished_Params_Data>(index_);
    }
    ProfileImportObserver_OnImportItemFinished_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t item;
  uint8_t padfinal_[4];

 private:
  ProfileImportObserver_OnImportItemFinished_Params_Data();
  ~ProfileImportObserver_OnImportItemFinished_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnImportItemFinished_Params_Data) == 16,
              "Bad sizeof(ProfileImportObserver_OnImportItemFinished_Params_Data)");
class  ProfileImportObserver_OnHistoryImportStart_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnHistoryImportStart_Params_Data));
      new (data()) ProfileImportObserver_OnHistoryImportStart_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnHistoryImportStart_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnHistoryImportStart_Params_Data>(index_);
    }
    ProfileImportObserver_OnHistoryImportStart_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t total_history_rows_count;
  uint8_t padfinal_[4];

 private:
  ProfileImportObserver_OnHistoryImportStart_Params_Data();
  ~ProfileImportObserver_OnHistoryImportStart_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnHistoryImportStart_Params_Data) == 16,
              "Bad sizeof(ProfileImportObserver_OnHistoryImportStart_Params_Data)");
class  ProfileImportObserver_OnHistoryImportGroup_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnHistoryImportGroup_Params_Data));
      new (data()) ProfileImportObserver_OnHistoryImportGroup_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnHistoryImportGroup_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnHistoryImportGroup_Params_Data>(index_);
    }
    ProfileImportObserver_OnHistoryImportGroup_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::ImporterURLRow_Data>>> history_rows_group;
  int32_t visit_source;
  uint8_t padfinal_[4];

 private:
  ProfileImportObserver_OnHistoryImportGroup_Params_Data();
  ~ProfileImportObserver_OnHistoryImportGroup_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnHistoryImportGroup_Params_Data) == 24,
              "Bad sizeof(ProfileImportObserver_OnHistoryImportGroup_Params_Data)");
class  ProfileImportObserver_OnHomePageImportReady_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnHomePageImportReady_Params_Data));
      new (data()) ProfileImportObserver_OnHomePageImportReady_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnHomePageImportReady_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnHomePageImportReady_Params_Data>(index_);
    }
    ProfileImportObserver_OnHomePageImportReady_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> home_page;

 private:
  ProfileImportObserver_OnHomePageImportReady_Params_Data();
  ~ProfileImportObserver_OnHomePageImportReady_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnHomePageImportReady_Params_Data) == 16,
              "Bad sizeof(ProfileImportObserver_OnHomePageImportReady_Params_Data)");
class  ProfileImportObserver_OnBookmarksImportStart_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnBookmarksImportStart_Params_Data));
      new (data()) ProfileImportObserver_OnBookmarksImportStart_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnBookmarksImportStart_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnBookmarksImportStart_Params_Data>(index_);
    }
    ProfileImportObserver_OnBookmarksImportStart_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::mojo_base::mojom::internal::String16_Data> first_folder_name;
  uint32_t total_bookmarks_count;
  uint8_t padfinal_[4];

 private:
  ProfileImportObserver_OnBookmarksImportStart_Params_Data();
  ~ProfileImportObserver_OnBookmarksImportStart_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnBookmarksImportStart_Params_Data) == 24,
              "Bad sizeof(ProfileImportObserver_OnBookmarksImportStart_Params_Data)");
class  ProfileImportObserver_OnBookmarksImportGroup_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnBookmarksImportGroup_Params_Data));
      new (data()) ProfileImportObserver_OnBookmarksImportGroup_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnBookmarksImportGroup_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnBookmarksImportGroup_Params_Data>(index_);
    }
    ProfileImportObserver_OnBookmarksImportGroup_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::ImportedBookmarkEntry_Data>>> bookmarks_group;

 private:
  ProfileImportObserver_OnBookmarksImportGroup_Params_Data();
  ~ProfileImportObserver_OnBookmarksImportGroup_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnBookmarksImportGroup_Params_Data) == 16,
              "Bad sizeof(ProfileImportObserver_OnBookmarksImportGroup_Params_Data)");
class  ProfileImportObserver_OnFaviconsImportStart_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnFaviconsImportStart_Params_Data));
      new (data()) ProfileImportObserver_OnFaviconsImportStart_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnFaviconsImportStart_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnFaviconsImportStart_Params_Data>(index_);
    }
    ProfileImportObserver_OnFaviconsImportStart_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t total_favicons_count;
  uint8_t padfinal_[4];

 private:
  ProfileImportObserver_OnFaviconsImportStart_Params_Data();
  ~ProfileImportObserver_OnFaviconsImportStart_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnFaviconsImportStart_Params_Data) == 16,
              "Bad sizeof(ProfileImportObserver_OnFaviconsImportStart_Params_Data)");
class  ProfileImportObserver_OnFaviconsImportGroup_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnFaviconsImportGroup_Params_Data));
      new (data()) ProfileImportObserver_OnFaviconsImportGroup_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnFaviconsImportGroup_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnFaviconsImportGroup_Params_Data>(index_);
    }
    ProfileImportObserver_OnFaviconsImportGroup_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::FaviconUsageDataList_Data> favicons_group;

 private:
  ProfileImportObserver_OnFaviconsImportGroup_Params_Data();
  ~ProfileImportObserver_OnFaviconsImportGroup_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnFaviconsImportGroup_Params_Data) == 16,
              "Bad sizeof(ProfileImportObserver_OnFaviconsImportGroup_Params_Data)");
class  ProfileImportObserver_OnPasswordFormImportReady_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnPasswordFormImportReady_Params_Data));
      new (data()) ProfileImportObserver_OnPasswordFormImportReady_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnPasswordFormImportReady_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnPasswordFormImportReady_Params_Data>(index_);
    }
    ProfileImportObserver_OnPasswordFormImportReady_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::autofill::mojom::internal::PasswordForm_Data> form;

 private:
  ProfileImportObserver_OnPasswordFormImportReady_Params_Data();
  ~ProfileImportObserver_OnPasswordFormImportReady_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnPasswordFormImportReady_Params_Data) == 16,
              "Bad sizeof(ProfileImportObserver_OnPasswordFormImportReady_Params_Data)");
class  ProfileImportObserver_OnKeywordsImportReady_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnKeywordsImportReady_Params_Data));
      new (data()) ProfileImportObserver_OnKeywordsImportReady_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnKeywordsImportReady_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnKeywordsImportReady_Params_Data>(index_);
    }
    ProfileImportObserver_OnKeywordsImportReady_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::SearchEngineInfo_Data>>> search_engines;
  uint8_t unique_on_host_and_path : 1;
  uint8_t padfinal_[7];

 private:
  ProfileImportObserver_OnKeywordsImportReady_Params_Data();
  ~ProfileImportObserver_OnKeywordsImportReady_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnKeywordsImportReady_Params_Data) == 24,
              "Bad sizeof(ProfileImportObserver_OnKeywordsImportReady_Params_Data)");
class  ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data));
      new (data()) ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data>(index_);
    }
    ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint32_t total_autofill_form_data_entry_count;
  uint8_t padfinal_[4];

 private:
  ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data();
  ~ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data) == 16,
              "Bad sizeof(ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data)");
class  ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data));
      new (data()) ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data>(index_);
    }
    ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::Array_Data<mojo::internal::Pointer<internal::ImporterAutofillFormDataEntry_Data>>> autofill_form_data_entry_group;

 private:
  ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data();
  ~ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data() = delete;
};
static_assert(sizeof(ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data) == 16,
              "Bad sizeof(ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data)");
class  ProfileImport_StartImport_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImport_StartImport_Params_Data));
      new (data()) ProfileImport_StartImport_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImport_StartImport_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImport_StartImport_Params_Data>(index_);
    }
    ProfileImport_StartImport_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<internal::SourceProfile_Data> source_profile;
  uint16_t items;
  uint8_t pad1_[6];
  mojo::internal::Pointer<mojo::internal::Map_Data<uint32_t, mojo::internal::Pointer<mojo::internal::String_Data>>> localized_strings;
  mojo::internal::Interface_Data observer;

 private:
  ProfileImport_StartImport_Params_Data();
  ~ProfileImport_StartImport_Params_Data() = delete;
};
static_assert(sizeof(ProfileImport_StartImport_Params_Data) == 40,
              "Bad sizeof(ProfileImport_StartImport_Params_Data)");
class  ProfileImport_CancelImport_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImport_CancelImport_Params_Data));
      new (data()) ProfileImport_CancelImport_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImport_CancelImport_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImport_CancelImport_Params_Data>(index_);
    }
    ProfileImport_CancelImport_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  ProfileImport_CancelImport_Params_Data();
  ~ProfileImport_CancelImport_Params_Data() = delete;
};
static_assert(sizeof(ProfileImport_CancelImport_Params_Data) == 8,
              "Bad sizeof(ProfileImport_CancelImport_Params_Data)");
class  ProfileImport_ReportImportItemFinished_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ProfileImport_ReportImportItemFinished_Params_Data));
      new (data()) ProfileImport_ReportImportItemFinished_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ProfileImport_ReportImportItemFinished_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ProfileImport_ReportImportItemFinished_Params_Data>(index_);
    }
    ProfileImport_ReportImportItemFinished_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t item;
  uint8_t padfinal_[4];

 private:
  ProfileImport_ReportImportItemFinished_Params_Data();
  ~ProfileImport_ReportImportItemFinished_Params_Data() = delete;
};
static_assert(sizeof(ProfileImport_ReportImportItemFinished_Params_Data) == 16,
              "Bad sizeof(ProfileImport_ReportImportItemFinished_Params_Data)");

}  // namespace internal
class ProfileImportObserver_OnImportStart_ParamsDataView {
 public:
  ProfileImportObserver_OnImportStart_ParamsDataView() {}

  ProfileImportObserver_OnImportStart_ParamsDataView(
      internal::ProfileImportObserver_OnImportStart_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ProfileImportObserver_OnImportStart_Params_Data* data_ = nullptr;
};

class ProfileImportObserver_OnImportFinished_ParamsDataView {
 public:
  ProfileImportObserver_OnImportFinished_ParamsDataView() {}

  ProfileImportObserver_OnImportFinished_ParamsDataView(
      internal::ProfileImportObserver_OnImportFinished_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  bool succeeded() const {
    return data_->succeeded;
  }
  inline void GetErrorMsgDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadErrorMsg(UserType* output) {
    auto* pointer = data_->error_msg.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
 private:
  internal::ProfileImportObserver_OnImportFinished_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ProfileImportObserver_OnImportItemStart_ParamsDataView {
 public:
  ProfileImportObserver_OnImportItemStart_ParamsDataView() {}

  ProfileImportObserver_OnImportItemStart_ParamsDataView(
      internal::ProfileImportObserver_OnImportItemStart_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadItem(UserType* output) const {
    auto data_value = data_->item;
    return mojo::internal::Deserialize<::chrome::mojom::ImportItem>(
        data_value, output);
  }

  ImportItem item() const {
    return static_cast<ImportItem>(data_->item);
  }
 private:
  internal::ProfileImportObserver_OnImportItemStart_Params_Data* data_ = nullptr;
};

class ProfileImportObserver_OnImportItemFinished_ParamsDataView {
 public:
  ProfileImportObserver_OnImportItemFinished_ParamsDataView() {}

  ProfileImportObserver_OnImportItemFinished_ParamsDataView(
      internal::ProfileImportObserver_OnImportItemFinished_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadItem(UserType* output) const {
    auto data_value = data_->item;
    return mojo::internal::Deserialize<::chrome::mojom::ImportItem>(
        data_value, output);
  }

  ImportItem item() const {
    return static_cast<ImportItem>(data_->item);
  }
 private:
  internal::ProfileImportObserver_OnImportItemFinished_Params_Data* data_ = nullptr;
};

class ProfileImportObserver_OnHistoryImportStart_ParamsDataView {
 public:
  ProfileImportObserver_OnHistoryImportStart_ParamsDataView() {}

  ProfileImportObserver_OnHistoryImportStart_ParamsDataView(
      internal::ProfileImportObserver_OnHistoryImportStart_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t total_history_rows_count() const {
    return data_->total_history_rows_count;
  }
 private:
  internal::ProfileImportObserver_OnHistoryImportStart_Params_Data* data_ = nullptr;
};

class ProfileImportObserver_OnHistoryImportGroup_ParamsDataView {
 public:
  ProfileImportObserver_OnHistoryImportGroup_ParamsDataView() {}

  ProfileImportObserver_OnHistoryImportGroup_ParamsDataView(
      internal::ProfileImportObserver_OnHistoryImportGroup_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetHistoryRowsGroupDataView(
      mojo::ArrayDataView<ImporterURLRowDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadHistoryRowsGroup(UserType* output) {
    auto* pointer = data_->history_rows_group.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::chrome::mojom::ImporterURLRowDataView>>(
        pointer, output, context_);
  }
  int32_t visit_source() const {
    return data_->visit_source;
  }
 private:
  internal::ProfileImportObserver_OnHistoryImportGroup_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ProfileImportObserver_OnHomePageImportReady_ParamsDataView {
 public:
  ProfileImportObserver_OnHomePageImportReady_ParamsDataView() {}

  ProfileImportObserver_OnHomePageImportReady_ParamsDataView(
      internal::ProfileImportObserver_OnHomePageImportReady_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetHomePageDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadHomePage(UserType* output) {
    auto* pointer = data_->home_page.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
 private:
  internal::ProfileImportObserver_OnHomePageImportReady_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ProfileImportObserver_OnBookmarksImportStart_ParamsDataView {
 public:
  ProfileImportObserver_OnBookmarksImportStart_ParamsDataView() {}

  ProfileImportObserver_OnBookmarksImportStart_ParamsDataView(
      internal::ProfileImportObserver_OnBookmarksImportStart_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetFirstFolderNameDataView(
      ::mojo_base::mojom::String16DataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFirstFolderName(UserType* output) {
    auto* pointer = data_->first_folder_name.Get();
    return mojo::internal::Deserialize<::mojo_base::mojom::String16DataView>(
        pointer, output, context_);
  }
  uint32_t total_bookmarks_count() const {
    return data_->total_bookmarks_count;
  }
 private:
  internal::ProfileImportObserver_OnBookmarksImportStart_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ProfileImportObserver_OnBookmarksImportGroup_ParamsDataView {
 public:
  ProfileImportObserver_OnBookmarksImportGroup_ParamsDataView() {}

  ProfileImportObserver_OnBookmarksImportGroup_ParamsDataView(
      internal::ProfileImportObserver_OnBookmarksImportGroup_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetBookmarksGroupDataView(
      mojo::ArrayDataView<ImportedBookmarkEntryDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadBookmarksGroup(UserType* output) {
    auto* pointer = data_->bookmarks_group.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::chrome::mojom::ImportedBookmarkEntryDataView>>(
        pointer, output, context_);
  }
 private:
  internal::ProfileImportObserver_OnBookmarksImportGroup_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ProfileImportObserver_OnFaviconsImportStart_ParamsDataView {
 public:
  ProfileImportObserver_OnFaviconsImportStart_ParamsDataView() {}

  ProfileImportObserver_OnFaviconsImportStart_ParamsDataView(
      internal::ProfileImportObserver_OnFaviconsImportStart_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t total_favicons_count() const {
    return data_->total_favicons_count;
  }
 private:
  internal::ProfileImportObserver_OnFaviconsImportStart_Params_Data* data_ = nullptr;
};

class ProfileImportObserver_OnFaviconsImportGroup_ParamsDataView {
 public:
  ProfileImportObserver_OnFaviconsImportGroup_ParamsDataView() {}

  ProfileImportObserver_OnFaviconsImportGroup_ParamsDataView(
      internal::ProfileImportObserver_OnFaviconsImportGroup_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetFaviconsGroupDataView(
      FaviconUsageDataListDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadFaviconsGroup(UserType* output) {
    auto* pointer = data_->favicons_group.Get();
    return mojo::internal::Deserialize<::chrome::mojom::FaviconUsageDataListDataView>(
        pointer, output, context_);
  }
 private:
  internal::ProfileImportObserver_OnFaviconsImportGroup_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ProfileImportObserver_OnPasswordFormImportReady_ParamsDataView {
 public:
  ProfileImportObserver_OnPasswordFormImportReady_ParamsDataView() {}

  ProfileImportObserver_OnPasswordFormImportReady_ParamsDataView(
      internal::ProfileImportObserver_OnPasswordFormImportReady_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetFormDataView(
      ::autofill::mojom::PasswordFormDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadForm(UserType* output) {
    auto* pointer = data_->form.Get();
    return mojo::internal::Deserialize<::autofill::mojom::PasswordFormDataView>(
        pointer, output, context_);
  }
 private:
  internal::ProfileImportObserver_OnPasswordFormImportReady_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ProfileImportObserver_OnKeywordsImportReady_ParamsDataView {
 public:
  ProfileImportObserver_OnKeywordsImportReady_ParamsDataView() {}

  ProfileImportObserver_OnKeywordsImportReady_ParamsDataView(
      internal::ProfileImportObserver_OnKeywordsImportReady_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetSearchEnginesDataView(
      mojo::ArrayDataView<SearchEngineInfoDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadSearchEngines(UserType* output) {
    auto* pointer = data_->search_engines.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::chrome::mojom::SearchEngineInfoDataView>>(
        pointer, output, context_);
  }
  bool unique_on_host_and_path() const {
    return data_->unique_on_host_and_path;
  }
 private:
  internal::ProfileImportObserver_OnKeywordsImportReady_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ProfileImportObserver_OnAutofillFormDataImportStart_ParamsDataView {
 public:
  ProfileImportObserver_OnAutofillFormDataImportStart_ParamsDataView() {}

  ProfileImportObserver_OnAutofillFormDataImportStart_ParamsDataView(
      internal::ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  uint32_t total_autofill_form_data_entry_count() const {
    return data_->total_autofill_form_data_entry_count;
  }
 private:
  internal::ProfileImportObserver_OnAutofillFormDataImportStart_Params_Data* data_ = nullptr;
};

class ProfileImportObserver_OnAutofillFormDataImportGroup_ParamsDataView {
 public:
  ProfileImportObserver_OnAutofillFormDataImportGroup_ParamsDataView() {}

  ProfileImportObserver_OnAutofillFormDataImportGroup_ParamsDataView(
      internal::ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetAutofillFormDataEntryGroupDataView(
      mojo::ArrayDataView<ImporterAutofillFormDataEntryDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadAutofillFormDataEntryGroup(UserType* output) {
    auto* pointer = data_->autofill_form_data_entry_group.Get();
    return mojo::internal::Deserialize<mojo::ArrayDataView<::chrome::mojom::ImporterAutofillFormDataEntryDataView>>(
        pointer, output, context_);
  }
 private:
  internal::ProfileImportObserver_OnAutofillFormDataImportGroup_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ProfileImport_StartImport_ParamsDataView {
 public:
  ProfileImport_StartImport_ParamsDataView() {}

  ProfileImport_StartImport_ParamsDataView(
      internal::ProfileImport_StartImport_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetSourceProfileDataView(
      SourceProfileDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadSourceProfile(UserType* output) {
    auto* pointer = data_->source_profile.Get();
    return mojo::internal::Deserialize<::chrome::mojom::SourceProfileDataView>(
        pointer, output, context_);
  }
  uint16_t items() const {
    return data_->items;
  }
  inline void GetLocalizedStringsDataView(
      mojo::MapDataView<uint32_t, mojo::StringDataView>* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadLocalizedStrings(UserType* output) {
    auto* pointer = data_->localized_strings.Get();
    return mojo::internal::Deserialize<mojo::MapDataView<uint32_t, mojo::StringDataView>>(
        pointer, output, context_);
  }
  template <typename UserType>
  UserType TakeObserver() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::chrome::mojom::ProfileImportObserverInterfaceBase>>(
            &data_->observer, &result, context_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::ProfileImport_StartImport_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ProfileImport_CancelImport_ParamsDataView {
 public:
  ProfileImport_CancelImport_ParamsDataView() {}

  ProfileImport_CancelImport_ParamsDataView(
      internal::ProfileImport_CancelImport_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::ProfileImport_CancelImport_Params_Data* data_ = nullptr;
};

class ProfileImport_ReportImportItemFinished_ParamsDataView {
 public:
  ProfileImport_ReportImportItemFinished_ParamsDataView() {}

  ProfileImport_ReportImportItemFinished_ParamsDataView(
      internal::ProfileImport_ReportImportItemFinished_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadItem(UserType* output) const {
    auto data_value = data_->item;
    return mojo::internal::Deserialize<::chrome::mojom::ImportItem>(
        data_value, output);
  }

  ImportItem item() const {
    return static_cast<ImportItem>(data_->item);
  }
 private:
  internal::ProfileImport_ReportImportItemFinished_Params_Data* data_ = nullptr;
};




inline void ProfileImportObserver_OnImportFinished_ParamsDataView::GetErrorMsgDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->error_msg.Get();
  *output = mojo::StringDataView(pointer, context_);
}








inline void ProfileImportObserver_OnHistoryImportGroup_ParamsDataView::GetHistoryRowsGroupDataView(
    mojo::ArrayDataView<ImporterURLRowDataView>* output) {
  auto pointer = data_->history_rows_group.Get();
  *output = mojo::ArrayDataView<ImporterURLRowDataView>(pointer, context_);
}


inline void ProfileImportObserver_OnHomePageImportReady_ParamsDataView::GetHomePageDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->home_page.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}


inline void ProfileImportObserver_OnBookmarksImportStart_ParamsDataView::GetFirstFolderNameDataView(
    ::mojo_base::mojom::String16DataView* output) {
  auto pointer = data_->first_folder_name.Get();
  *output = ::mojo_base::mojom::String16DataView(pointer, context_);
}


inline void ProfileImportObserver_OnBookmarksImportGroup_ParamsDataView::GetBookmarksGroupDataView(
    mojo::ArrayDataView<ImportedBookmarkEntryDataView>* output) {
  auto pointer = data_->bookmarks_group.Get();
  *output = mojo::ArrayDataView<ImportedBookmarkEntryDataView>(pointer, context_);
}




inline void ProfileImportObserver_OnFaviconsImportGroup_ParamsDataView::GetFaviconsGroupDataView(
    FaviconUsageDataListDataView* output) {
  auto pointer = data_->favicons_group.Get();
  *output = FaviconUsageDataListDataView(pointer, context_);
}


inline void ProfileImportObserver_OnPasswordFormImportReady_ParamsDataView::GetFormDataView(
    ::autofill::mojom::PasswordFormDataView* output) {
  auto pointer = data_->form.Get();
  *output = ::autofill::mojom::PasswordFormDataView(pointer, context_);
}


inline void ProfileImportObserver_OnKeywordsImportReady_ParamsDataView::GetSearchEnginesDataView(
    mojo::ArrayDataView<SearchEngineInfoDataView>* output) {
  auto pointer = data_->search_engines.Get();
  *output = mojo::ArrayDataView<SearchEngineInfoDataView>(pointer, context_);
}




inline void ProfileImportObserver_OnAutofillFormDataImportGroup_ParamsDataView::GetAutofillFormDataEntryGroupDataView(
    mojo::ArrayDataView<ImporterAutofillFormDataEntryDataView>* output) {
  auto pointer = data_->autofill_form_data_entry_group.Get();
  *output = mojo::ArrayDataView<ImporterAutofillFormDataEntryDataView>(pointer, context_);
}


inline void ProfileImport_StartImport_ParamsDataView::GetSourceProfileDataView(
    SourceProfileDataView* output) {
  auto pointer = data_->source_profile.Get();
  *output = SourceProfileDataView(pointer, context_);
}
inline void ProfileImport_StartImport_ParamsDataView::GetLocalizedStringsDataView(
    mojo::MapDataView<uint32_t, mojo::StringDataView>* output) {
  auto pointer = data_->localized_strings.Get();
  *output = mojo::MapDataView<uint32_t, mojo::StringDataView>(pointer, context_);
}





}  // namespace mojom
}  // namespace chrome

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // CHROME_COMMON_IMPORTER_PROFILE_IMPORT_MOJOM_PARAMS_DATA_H_