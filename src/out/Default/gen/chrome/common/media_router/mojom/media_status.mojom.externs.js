// chrome/common/media_router/mojom/media_status.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



goog.provide('mediaRouter.mojom.MediaStatusObserver');
goog.provide('mediaRouter.mojom.MediaStatusObserverImpl');
goog.provide('mediaRouter.mojom.MediaStatusObserverPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
mediaRouter.mojom.MediaStatusObserver;

/** @interface */
mediaRouter.mojom.MediaStatusObserverImpl = class {
  /**
   * @param { !mediaRouter.mojom.MediaStatus } status
   */
  onMediaStatusUpdated(status) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { mediaRouter.mojom.MediaStatusObserverImpl }
 */
mediaRouter.mojom.MediaStatusObserverPtr = class {
  /**
   * @param { !mediaRouter.mojom.MediaStatus } status
   */
  onMediaStatusUpdated(status) {}
};

goog.provide('mediaRouter.mojom.MediaImage');

mediaRouter.mojom.MediaImage = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { gfx.mojom.Size } */
    this.size;
  }
};

goog.provide('mediaRouter.mojom.MediaStatus');

mediaRouter.mojom.MediaStatus = class {
  constructor() {
    /** @type { !string } */
    this.title;
    /** @type { !string } */
    this.secondaryTitle;
    /** @type { !boolean } */
    this.canPlayPause;
    /** @type { !boolean } */
    this.canMute;
    /** @type { !boolean } */
    this.canSetVolume;
    /** @type { !boolean } */
    this.canSeek;
    /** @type { !boolean } */
    this.canSkipToNextTrack;
    /** @type { !boolean } */
    this.canSkipToPreviousTrack;
    /** @type { !boolean } */
    this.isMuted;
    /** @type { !mediaRouter.mojom.PlayState } */
    this.playState;
    /** @type { !number } */
    this.volume;
    /** @type { !mojoBase.mojom.TimeDelta } */
    this.duration;
    /** @type { !mojoBase.mojom.TimeDelta } */
    this.currentTime;
    /** @type { !Array<mediaRouter.mojom.MediaImage> } */
    this.images;
  }
};

goog.provide('mediaRouter.mojom.MediaStatusObserver_OnMediaStatusUpdated_Params');

mediaRouter.mojom.MediaStatusObserver_OnMediaStatusUpdated_Params = class {
  constructor() {
    /** @type { !mediaRouter.mojom.MediaStatus } */
    this.status;
  }
};
