// components/contextual_search/content/common/mojom/contextual_search_js_api_service.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_CONTEXTUAL_SEARCH_CONTENT_COMMON_MOJOM_CONTEXTUAL_SEARCH_JS_API_SERVICE_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_CONTEXTUAL_SEARCH_CONTENT_COMMON_MOJOM_CONTEXTUAL_SEARCH_JS_API_SERVICE_MOJOM_PARAMS_DATA_H_

#include "base/logging.h"
#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace contextual_search {
namespace mojom {
namespace internal {
class  ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data));
      new (data()) ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data>(index_);
    }
    ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<::url::mojom::internal::Url_Data> url;

 private:
  ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data();
  ~ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data() = delete;
};
static_assert(sizeof(ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data) == 16,
              "Bad sizeof(ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data)");
class  ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data));
      new (data()) ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data>(index_);
    }
    ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  uint8_t should_enable : 1;
  uint8_t padfinal_[7];

 private:
  ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data();
  ~ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data() = delete;
};
static_assert(sizeof(ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data) == 16,
              "Bad sizeof(ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data)");
class  ContextualSearchJsApiService_HandleSetCaption_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ContextualSearchJsApiService_HandleSetCaption_Params_Data));
      new (data()) ContextualSearchJsApiService_HandleSetCaption_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ContextualSearchJsApiService_HandleSetCaption_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ContextualSearchJsApiService_HandleSetCaption_Params_Data>(index_);
    }
    ContextualSearchJsApiService_HandleSetCaption_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Pointer<mojo::internal::String_Data> message;
  uint8_t does_answer : 1;
  uint8_t padfinal_[7];

 private:
  ContextualSearchJsApiService_HandleSetCaption_Params_Data();
  ~ContextualSearchJsApiService_HandleSetCaption_Params_Data() = delete;
};
static_assert(sizeof(ContextualSearchJsApiService_HandleSetCaption_Params_Data) == 24,
              "Bad sizeof(ContextualSearchJsApiService_HandleSetCaption_Params_Data)");
class  ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data));
      new (data()) ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data>(index_);
    }
    ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t desired_position;
  uint8_t padfinal_[4];

 private:
  ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data();
  ~ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data() = delete;
};
static_assert(sizeof(ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data) == 16,
              "Bad sizeof(ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data)");

}  // namespace internal
class ContextualSearchJsApiService_ShouldEnableJsApi_ParamsDataView {
 public:
  ContextualSearchJsApiService_ShouldEnableJsApi_ParamsDataView() {}

  ContextualSearchJsApiService_ShouldEnableJsApi_ParamsDataView(
      internal::ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetUrlDataView(
      ::url::mojom::UrlDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadUrl(UserType* output) {
    auto* pointer = data_->url.Get();
    return mojo::internal::Deserialize<::url::mojom::UrlDataView>(
        pointer, output, context_);
  }
 private:
  internal::ContextualSearchJsApiService_ShouldEnableJsApi_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParamsDataView {
 public:
  ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParamsDataView() {}

  ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParamsDataView(
      internal::ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  bool should_enable() const {
    return data_->should_enable;
  }
 private:
  internal::ContextualSearchJsApiService_ShouldEnableJsApi_ResponseParams_Data* data_ = nullptr;
};

class ContextualSearchJsApiService_HandleSetCaption_ParamsDataView {
 public:
  ContextualSearchJsApiService_HandleSetCaption_ParamsDataView() {}

  ContextualSearchJsApiService_HandleSetCaption_ParamsDataView(
      internal::ContextualSearchJsApiService_HandleSetCaption_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  inline void GetMessageDataView(
      mojo::StringDataView* output);

  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadMessage(UserType* output) {
    auto* pointer = data_->message.Get();
    return mojo::internal::Deserialize<mojo::StringDataView>(
        pointer, output, context_);
  }
  bool does_answer() const {
    return data_->does_answer;
  }
 private:
  internal::ContextualSearchJsApiService_HandleSetCaption_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};

class ContextualSearchJsApiService_HandleChangeOverlayPosition_ParamsDataView {
 public:
  ContextualSearchJsApiService_HandleChangeOverlayPosition_ParamsDataView() {}

  ContextualSearchJsApiService_HandleChangeOverlayPosition_ParamsDataView(
      internal::ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadDesiredPosition(UserType* output) const {
    auto data_value = data_->desired_position;
    return mojo::internal::Deserialize<::contextual_search::mojom::OverlayPosition>(
        data_value, output);
  }

  OverlayPosition desired_position() const {
    return static_cast<OverlayPosition>(data_->desired_position);
  }
 private:
  internal::ContextualSearchJsApiService_HandleChangeOverlayPosition_Params_Data* data_ = nullptr;
};


inline void ContextualSearchJsApiService_ShouldEnableJsApi_ParamsDataView::GetUrlDataView(
    ::url::mojom::UrlDataView* output) {
  auto pointer = data_->url.Get();
  *output = ::url::mojom::UrlDataView(pointer, context_);
}




inline void ContextualSearchJsApiService_HandleSetCaption_ParamsDataView::GetMessageDataView(
    mojo::StringDataView* output) {
  auto pointer = data_->message.Get();
  *output = mojo::StringDataView(pointer, context_);
}



}  // namespace mojom
}  // namespace contextual_search

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_CONTEXTUAL_SEARCH_CONTENT_COMMON_MOJOM_CONTEXTUAL_SEARCH_JS_API_SERVICE_MOJOM_PARAMS_DATA_H_