// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adaboost.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_adaboost_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_adaboost_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_adaboost_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_adaboost_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace dom_distiller {
class AdaBoostProto;
class AdaBoostProtoDefaultTypeInternal;
extern AdaBoostProtoDefaultTypeInternal _AdaBoostProto_default_instance_;
class StumpProto;
class StumpProtoDefaultTypeInternal;
extern StumpProtoDefaultTypeInternal _StumpProto_default_instance_;
}  // namespace dom_distiller
PROTOBUF_NAMESPACE_OPEN
template<> ::dom_distiller::AdaBoostProto* Arena::CreateMaybeMessage<::dom_distiller::AdaBoostProto>(Arena*);
template<> ::dom_distiller::StumpProto* Arena::CreateMaybeMessage<::dom_distiller::StumpProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace dom_distiller {

// ===================================================================

class AdaBoostProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dom_distiller.AdaBoostProto) */ {
 public:
  AdaBoostProto();
  virtual ~AdaBoostProto();

  AdaBoostProto(const AdaBoostProto& from);
  AdaBoostProto(AdaBoostProto&& from) noexcept
    : AdaBoostProto() {
    *this = ::std::move(from);
  }

  inline AdaBoostProto& operator=(const AdaBoostProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdaBoostProto& operator=(AdaBoostProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const AdaBoostProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdaBoostProto* internal_default_instance() {
    return reinterpret_cast<const AdaBoostProto*>(
               &_AdaBoostProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AdaBoostProto& a, AdaBoostProto& b) {
    a.Swap(&b);
  }
  inline void Swap(AdaBoostProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AdaBoostProto* New() const final {
    return CreateMaybeMessage<AdaBoostProto>(nullptr);
  }

  AdaBoostProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AdaBoostProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const AdaBoostProto& from);
  void MergeFrom(const AdaBoostProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdaBoostProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dom_distiller.AdaBoostProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStumpFieldNumber = 3,
    kNumStumpsFieldNumber = 1,
    kNumFeaturesFieldNumber = 2,
  };
  // repeated .dom_distiller.StumpProto stump = 3;
  int stump_size() const;
  void clear_stump();
  ::dom_distiller::StumpProto* mutable_stump(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dom_distiller::StumpProto >*
      mutable_stump();
  const ::dom_distiller::StumpProto& stump(int index) const;
  ::dom_distiller::StumpProto* add_stump();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dom_distiller::StumpProto >&
      stump() const;

  // required int32 num_stumps = 1;
  bool has_num_stumps() const;
  void clear_num_stumps();
  ::PROTOBUF_NAMESPACE_ID::int32 num_stumps() const;
  void set_num_stumps(::PROTOBUF_NAMESPACE_ID::int32 value);

  // required int32 num_features = 2;
  bool has_num_features() const;
  void clear_num_features();
  ::PROTOBUF_NAMESPACE_ID::int32 num_features() const;
  void set_num_features(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:dom_distiller.AdaBoostProto)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dom_distiller::StumpProto > stump_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_stumps_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_features_;
  friend struct ::TableStruct_adaboost_2eproto;
};
// -------------------------------------------------------------------

class StumpProto :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:dom_distiller.StumpProto) */ {
 public:
  StumpProto();
  virtual ~StumpProto();

  StumpProto(const StumpProto& from);
  StumpProto(StumpProto&& from) noexcept
    : StumpProto() {
    *this = ::std::move(from);
  }

  inline StumpProto& operator=(const StumpProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline StumpProto& operator=(StumpProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StumpProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StumpProto* internal_default_instance() {
    return reinterpret_cast<const StumpProto*>(
               &_StumpProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(StumpProto& a, StumpProto& b) {
    a.Swap(&b);
  }
  inline void Swap(StumpProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StumpProto* New() const final {
    return CreateMaybeMessage<StumpProto>(nullptr);
  }

  StumpProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StumpProto>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StumpProto& from);
  void MergeFrom(const StumpProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StumpProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dom_distiller.StumpProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSplitFieldNumber = 2,
    kWeightFieldNumber = 3,
    kFeatureNumberFieldNumber = 1,
  };
  // required double split = 2;
  bool has_split() const;
  void clear_split();
  double split() const;
  void set_split(double value);

  // required double weight = 3;
  bool has_weight() const;
  void clear_weight();
  double weight() const;
  void set_weight(double value);

  // required int32 feature_number = 1;
  bool has_feature_number() const;
  void clear_feature_number();
  ::PROTOBUF_NAMESPACE_ID::int32 feature_number() const;
  void set_feature_number(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:dom_distiller.StumpProto)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double split_;
  double weight_;
  ::PROTOBUF_NAMESPACE_ID::int32 feature_number_;
  friend struct ::TableStruct_adaboost_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AdaBoostProto

// required int32 num_stumps = 1;
inline bool AdaBoostProto::has_num_stumps() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdaBoostProto::clear_num_stumps() {
  num_stumps_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AdaBoostProto::num_stumps() const {
  // @@protoc_insertion_point(field_get:dom_distiller.AdaBoostProto.num_stumps)
  return num_stumps_;
}
inline void AdaBoostProto::set_num_stumps(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  num_stumps_ = value;
  // @@protoc_insertion_point(field_set:dom_distiller.AdaBoostProto.num_stumps)
}

// required int32 num_features = 2;
inline bool AdaBoostProto::has_num_features() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdaBoostProto::clear_num_features() {
  num_features_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AdaBoostProto::num_features() const {
  // @@protoc_insertion_point(field_get:dom_distiller.AdaBoostProto.num_features)
  return num_features_;
}
inline void AdaBoostProto::set_num_features(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_features_ = value;
  // @@protoc_insertion_point(field_set:dom_distiller.AdaBoostProto.num_features)
}

// repeated .dom_distiller.StumpProto stump = 3;
inline int AdaBoostProto::stump_size() const {
  return stump_.size();
}
inline void AdaBoostProto::clear_stump() {
  stump_.Clear();
}
inline ::dom_distiller::StumpProto* AdaBoostProto::mutable_stump(int index) {
  // @@protoc_insertion_point(field_mutable:dom_distiller.AdaBoostProto.stump)
  return stump_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dom_distiller::StumpProto >*
AdaBoostProto::mutable_stump() {
  // @@protoc_insertion_point(field_mutable_list:dom_distiller.AdaBoostProto.stump)
  return &stump_;
}
inline const ::dom_distiller::StumpProto& AdaBoostProto::stump(int index) const {
  // @@protoc_insertion_point(field_get:dom_distiller.AdaBoostProto.stump)
  return stump_.Get(index);
}
inline ::dom_distiller::StumpProto* AdaBoostProto::add_stump() {
  // @@protoc_insertion_point(field_add:dom_distiller.AdaBoostProto.stump)
  return stump_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dom_distiller::StumpProto >&
AdaBoostProto::stump() const {
  // @@protoc_insertion_point(field_list:dom_distiller.AdaBoostProto.stump)
  return stump_;
}

// -------------------------------------------------------------------

// StumpProto

// required int32 feature_number = 1;
inline bool StumpProto::has_feature_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StumpProto::clear_feature_number() {
  feature_number_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StumpProto::feature_number() const {
  // @@protoc_insertion_point(field_get:dom_distiller.StumpProto.feature_number)
  return feature_number_;
}
inline void StumpProto::set_feature_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  feature_number_ = value;
  // @@protoc_insertion_point(field_set:dom_distiller.StumpProto.feature_number)
}

// required double split = 2;
inline bool StumpProto::has_split() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StumpProto::clear_split() {
  split_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double StumpProto::split() const {
  // @@protoc_insertion_point(field_get:dom_distiller.StumpProto.split)
  return split_;
}
inline void StumpProto::set_split(double value) {
  _has_bits_[0] |= 0x00000001u;
  split_ = value;
  // @@protoc_insertion_point(field_set:dom_distiller.StumpProto.split)
}

// required double weight = 3;
inline bool StumpProto::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StumpProto::clear_weight() {
  weight_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double StumpProto::weight() const {
  // @@protoc_insertion_point(field_get:dom_distiller.StumpProto.weight)
  return weight_;
}
inline void StumpProto::set_weight(double value) {
  _has_bits_[0] |= 0x00000002u;
  weight_ = value;
  // @@protoc_insertion_point(field_set:dom_distiller.StumpProto.weight)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dom_distiller

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_adaboost_2eproto
