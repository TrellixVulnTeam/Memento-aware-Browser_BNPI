// components/dom_distiller/content/common/mojom/distiller_javascript_service.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif


#include "components/dom_distiller/content/common/mojom/distiller_javascript_service.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "components/dom_distiller/core/mojom/distilled_page_prefs.mojom.h"


#ifndef COMPONENTS_DOM_DISTILLER_CONTENT_COMMON_MOJOM_DISTILLER_JAVASCRIPT_SERVICE_MOJOM_JUMBO_H_
#define COMPONENTS_DOM_DISTILLER_CONTENT_COMMON_MOJOM_DISTILLER_JAVASCRIPT_SERVICE_MOJOM_JUMBO_H_
#endif


namespace dom_distiller {
namespace mojom {


void DistillerJavaScriptServiceInterceptorForTesting::HandleDistillerOpenSettingsCall() {
  GetForwardingInterface()->HandleDistillerOpenSettingsCall();
}
void DistillerJavaScriptServiceInterceptorForTesting::HandleStoreThemePref(::dom_distiller::mojom::Theme theme) {
  GetForwardingInterface()->HandleStoreThemePref(std::move(theme));
}
void DistillerJavaScriptServiceInterceptorForTesting::HandleStoreFontFamilyPref(::dom_distiller::mojom::FontFamily font_family) {
  GetForwardingInterface()->HandleStoreFontFamilyPref(std::move(font_family));
}
DistillerJavaScriptServiceAsyncWaiter::DistillerJavaScriptServiceAsyncWaiter(
    DistillerJavaScriptService* proxy) : proxy_(proxy) {}

DistillerJavaScriptServiceAsyncWaiter::~DistillerJavaScriptServiceAsyncWaiter() = default;






}  // namespace mojom
}  // namespace dom_distiller

#if defined(__clang__)
#pragma clang diagnostic pop
#endif