// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hint_cache.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_hint_5fcache_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_hint_5fcache_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
#include "hints.pb.h"
#include "models.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_hint_5fcache_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_hint_5fcache_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace optimization_guide {
namespace proto {
class StoreEntry;
class StoreEntryDefaultTypeInternal;
extern StoreEntryDefaultTypeInternal _StoreEntry_default_instance_;
}  // namespace proto
}  // namespace optimization_guide
PROTOBUF_NAMESPACE_OPEN
template<> ::optimization_guide::proto::StoreEntry* Arena::CreateMaybeMessage<::optimization_guide::proto::StoreEntry>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace optimization_guide {
namespace proto {

enum StoreEntryType : int {
  EMPTY = 0,
  METADATA = 1,
  COMPONENT_HINT = 2,
  FETCHED_HINT = 3,
  PREDICTION_MODEL = 4,
  HOST_MODEL_FEATURES = 5
};
bool StoreEntryType_IsValid(int value);
constexpr StoreEntryType StoreEntryType_MIN = EMPTY;
constexpr StoreEntryType StoreEntryType_MAX = HOST_MODEL_FEATURES;
constexpr int StoreEntryType_ARRAYSIZE = StoreEntryType_MAX + 1;

const std::string& StoreEntryType_Name(StoreEntryType value);
template<typename T>
inline const std::string& StoreEntryType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, StoreEntryType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function StoreEntryType_Name.");
  return StoreEntryType_Name(static_cast<StoreEntryType>(enum_t_value));
}
bool StoreEntryType_Parse(
    const std::string& name, StoreEntryType* value);
// ===================================================================

class StoreEntry :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:optimization_guide.proto.StoreEntry) */ {
 public:
  StoreEntry();
  virtual ~StoreEntry();

  StoreEntry(const StoreEntry& from);
  StoreEntry(StoreEntry&& from) noexcept
    : StoreEntry() {
    *this = ::std::move(from);
  }

  inline StoreEntry& operator=(const StoreEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreEntry& operator=(StoreEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StoreEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StoreEntry* internal_default_instance() {
    return reinterpret_cast<const StoreEntry*>(
               &_StoreEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StoreEntry& a, StoreEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(StoreEntry* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StoreEntry* New() const final {
    return CreateMaybeMessage<StoreEntry>(nullptr);
  }

  StoreEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StoreEntry>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const StoreEntry& from);
  void MergeFrom(const StoreEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoreEntry* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "optimization_guide.proto.StoreEntry";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kHintFieldNumber = 2,
    kPredictionModelFieldNumber = 6,
    kHostModelFeaturesFieldNumber = 7,
    kUpdateTimeSecsFieldNumber = 3,
    kExpiryTimeSecsFieldNumber = 5,
    kEntryTypeFieldNumber = 4,
  };
  // optional string version = 1;
  bool has_version() const;
  void clear_version();
  const std::string& version() const;
  void set_version(const std::string& value);
  void set_version(std::string&& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  std::string* mutable_version();
  std::string* release_version();
  void set_allocated_version(std::string* version);

  // optional .optimization_guide.proto.Hint hint = 2;
  bool has_hint() const;
  void clear_hint();
  const ::optimization_guide::proto::Hint& hint() const;
  ::optimization_guide::proto::Hint* release_hint();
  ::optimization_guide::proto::Hint* mutable_hint();
  void set_allocated_hint(::optimization_guide::proto::Hint* hint);

  // optional .optimization_guide.proto.PredictionModel prediction_model = 6;
  bool has_prediction_model() const;
  void clear_prediction_model();
  const ::optimization_guide::proto::PredictionModel& prediction_model() const;
  ::optimization_guide::proto::PredictionModel* release_prediction_model();
  ::optimization_guide::proto::PredictionModel* mutable_prediction_model();
  void set_allocated_prediction_model(::optimization_guide::proto::PredictionModel* prediction_model);

  // optional .optimization_guide.proto.HostModelFeatures host_model_features = 7;
  bool has_host_model_features() const;
  void clear_host_model_features();
  const ::optimization_guide::proto::HostModelFeatures& host_model_features() const;
  ::optimization_guide::proto::HostModelFeatures* release_host_model_features();
  ::optimization_guide::proto::HostModelFeatures* mutable_host_model_features();
  void set_allocated_host_model_features(::optimization_guide::proto::HostModelFeatures* host_model_features);

  // optional int64 update_time_secs = 3;
  bool has_update_time_secs() const;
  void clear_update_time_secs();
  ::PROTOBUF_NAMESPACE_ID::int64 update_time_secs() const;
  void set_update_time_secs(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional int64 expiry_time_secs = 5;
  bool has_expiry_time_secs() const;
  void clear_expiry_time_secs();
  ::PROTOBUF_NAMESPACE_ID::int64 expiry_time_secs() const;
  void set_expiry_time_secs(::PROTOBUF_NAMESPACE_ID::int64 value);

  // optional .optimization_guide.proto.StoreEntryType entry_type = 4;
  bool has_entry_type() const;
  void clear_entry_type();
  ::optimization_guide::proto::StoreEntryType entry_type() const;
  void set_entry_type(::optimization_guide::proto::StoreEntryType value);

  // @@protoc_insertion_point(class_scope:optimization_guide.proto.StoreEntry)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr version_;
  ::optimization_guide::proto::Hint* hint_;
  ::optimization_guide::proto::PredictionModel* prediction_model_;
  ::optimization_guide::proto::HostModelFeatures* host_model_features_;
  ::PROTOBUF_NAMESPACE_ID::int64 update_time_secs_;
  ::PROTOBUF_NAMESPACE_ID::int64 expiry_time_secs_;
  int entry_type_;
  friend struct ::TableStruct_hint_5fcache_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StoreEntry

// optional string version = 1;
inline bool StoreEntry::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreEntry::clear_version() {
  version_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& StoreEntry::version() const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.StoreEntry.version)
  return version_.GetNoArena();
}
inline void StoreEntry::set_version(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:optimization_guide.proto.StoreEntry.version)
}
inline void StoreEntry::set_version(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  version_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:optimization_guide.proto.StoreEntry.version)
}
inline void StoreEntry::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:optimization_guide.proto.StoreEntry.version)
}
inline void StoreEntry::set_version(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:optimization_guide.proto.StoreEntry.version)
}
inline std::string* StoreEntry::mutable_version() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:optimization_guide.proto.StoreEntry.version)
  return version_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* StoreEntry::release_version() {
  // @@protoc_insertion_point(field_release:optimization_guide.proto.StoreEntry.version)
  if (!has_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return version_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void StoreEntry::set_allocated_version(std::string* version) {
  if (version != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  version_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:optimization_guide.proto.StoreEntry.version)
}

// optional .optimization_guide.proto.Hint hint = 2;
inline bool StoreEntry::has_hint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::optimization_guide::proto::Hint& StoreEntry::hint() const {
  const ::optimization_guide::proto::Hint* p = hint_;
  // @@protoc_insertion_point(field_get:optimization_guide.proto.StoreEntry.hint)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimization_guide::proto::Hint*>(
      &::optimization_guide::proto::_Hint_default_instance_);
}
inline ::optimization_guide::proto::Hint* StoreEntry::release_hint() {
  // @@protoc_insertion_point(field_release:optimization_guide.proto.StoreEntry.hint)
  _has_bits_[0] &= ~0x00000002u;
  ::optimization_guide::proto::Hint* temp = hint_;
  hint_ = nullptr;
  return temp;
}
inline ::optimization_guide::proto::Hint* StoreEntry::mutable_hint() {
  _has_bits_[0] |= 0x00000002u;
  if (hint_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimization_guide::proto::Hint>(GetArenaNoVirtual());
    hint_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimization_guide.proto.StoreEntry.hint)
  return hint_;
}
inline void StoreEntry::set_allocated_hint(::optimization_guide::proto::Hint* hint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hint_);
  }
  if (hint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      hint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hint, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  hint_ = hint;
  // @@protoc_insertion_point(field_set_allocated:optimization_guide.proto.StoreEntry.hint)
}

// optional int64 update_time_secs = 3;
inline bool StoreEntry::has_update_time_secs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StoreEntry::clear_update_time_secs() {
  update_time_secs_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StoreEntry::update_time_secs() const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.StoreEntry.update_time_secs)
  return update_time_secs_;
}
inline void StoreEntry::set_update_time_secs(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  update_time_secs_ = value;
  // @@protoc_insertion_point(field_set:optimization_guide.proto.StoreEntry.update_time_secs)
}

// optional .optimization_guide.proto.StoreEntryType entry_type = 4;
inline bool StoreEntry::has_entry_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StoreEntry::clear_entry_type() {
  entry_type_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::optimization_guide::proto::StoreEntryType StoreEntry::entry_type() const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.StoreEntry.entry_type)
  return static_cast< ::optimization_guide::proto::StoreEntryType >(entry_type_);
}
inline void StoreEntry::set_entry_type(::optimization_guide::proto::StoreEntryType value) {
  assert(::optimization_guide::proto::StoreEntryType_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  entry_type_ = value;
  // @@protoc_insertion_point(field_set:optimization_guide.proto.StoreEntry.entry_type)
}

// optional int64 expiry_time_secs = 5;
inline bool StoreEntry::has_expiry_time_secs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StoreEntry::clear_expiry_time_secs() {
  expiry_time_secs_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 StoreEntry::expiry_time_secs() const {
  // @@protoc_insertion_point(field_get:optimization_guide.proto.StoreEntry.expiry_time_secs)
  return expiry_time_secs_;
}
inline void StoreEntry::set_expiry_time_secs(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  expiry_time_secs_ = value;
  // @@protoc_insertion_point(field_set:optimization_guide.proto.StoreEntry.expiry_time_secs)
}

// optional .optimization_guide.proto.PredictionModel prediction_model = 6;
inline bool StoreEntry::has_prediction_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::optimization_guide::proto::PredictionModel& StoreEntry::prediction_model() const {
  const ::optimization_guide::proto::PredictionModel* p = prediction_model_;
  // @@protoc_insertion_point(field_get:optimization_guide.proto.StoreEntry.prediction_model)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimization_guide::proto::PredictionModel*>(
      &::optimization_guide::proto::_PredictionModel_default_instance_);
}
inline ::optimization_guide::proto::PredictionModel* StoreEntry::release_prediction_model() {
  // @@protoc_insertion_point(field_release:optimization_guide.proto.StoreEntry.prediction_model)
  _has_bits_[0] &= ~0x00000004u;
  ::optimization_guide::proto::PredictionModel* temp = prediction_model_;
  prediction_model_ = nullptr;
  return temp;
}
inline ::optimization_guide::proto::PredictionModel* StoreEntry::mutable_prediction_model() {
  _has_bits_[0] |= 0x00000004u;
  if (prediction_model_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimization_guide::proto::PredictionModel>(GetArenaNoVirtual());
    prediction_model_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimization_guide.proto.StoreEntry.prediction_model)
  return prediction_model_;
}
inline void StoreEntry::set_allocated_prediction_model(::optimization_guide::proto::PredictionModel* prediction_model) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(prediction_model_);
  }
  if (prediction_model) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      prediction_model = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, prediction_model, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  prediction_model_ = prediction_model;
  // @@protoc_insertion_point(field_set_allocated:optimization_guide.proto.StoreEntry.prediction_model)
}

// optional .optimization_guide.proto.HostModelFeatures host_model_features = 7;
inline bool StoreEntry::has_host_model_features() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::optimization_guide::proto::HostModelFeatures& StoreEntry::host_model_features() const {
  const ::optimization_guide::proto::HostModelFeatures* p = host_model_features_;
  // @@protoc_insertion_point(field_get:optimization_guide.proto.StoreEntry.host_model_features)
  return p != nullptr ? *p : *reinterpret_cast<const ::optimization_guide::proto::HostModelFeatures*>(
      &::optimization_guide::proto::_HostModelFeatures_default_instance_);
}
inline ::optimization_guide::proto::HostModelFeatures* StoreEntry::release_host_model_features() {
  // @@protoc_insertion_point(field_release:optimization_guide.proto.StoreEntry.host_model_features)
  _has_bits_[0] &= ~0x00000008u;
  ::optimization_guide::proto::HostModelFeatures* temp = host_model_features_;
  host_model_features_ = nullptr;
  return temp;
}
inline ::optimization_guide::proto::HostModelFeatures* StoreEntry::mutable_host_model_features() {
  _has_bits_[0] |= 0x00000008u;
  if (host_model_features_ == nullptr) {
    auto* p = CreateMaybeMessage<::optimization_guide::proto::HostModelFeatures>(GetArenaNoVirtual());
    host_model_features_ = p;
  }
  // @@protoc_insertion_point(field_mutable:optimization_guide.proto.StoreEntry.host_model_features)
  return host_model_features_;
}
inline void StoreEntry::set_allocated_host_model_features(::optimization_guide::proto::HostModelFeatures* host_model_features) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(host_model_features_);
  }
  if (host_model_features) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host_model_features = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, host_model_features, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  host_model_features_ = host_model_features;
  // @@protoc_insertion_point(field_set_allocated:optimization_guide.proto.StoreEntry.host_model_features)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace optimization_guide

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::optimization_guide::proto::StoreEntryType> : ::std::true_type {};

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_hint_5fcache_2eproto
