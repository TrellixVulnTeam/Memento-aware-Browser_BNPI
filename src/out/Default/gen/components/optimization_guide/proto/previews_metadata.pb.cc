// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: previews_metadata.proto

#include "previews_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_previews_5fmetadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResourceLoadingHint_previews_5fmetadata_2eproto;
namespace optimization_guide {
namespace proto {
class ResourceLoadingHintDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceLoadingHint> _instance;
} _ResourceLoadingHint_default_instance_;
class PreviewsMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreviewsMetadata> _instance;
} _PreviewsMetadata_default_instance_;
}  // namespace proto
}  // namespace optimization_guide
static void InitDefaultsscc_info_PreviewsMetadata_previews_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimization_guide::proto::_PreviewsMetadata_default_instance_;
    new (ptr) ::optimization_guide::proto::PreviewsMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimization_guide::proto::PreviewsMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PreviewsMetadata_previews_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_PreviewsMetadata_previews_5fmetadata_2eproto}, {
      &scc_info_ResourceLoadingHint_previews_5fmetadata_2eproto.base,}};

static void InitDefaultsscc_info_ResourceLoadingHint_previews_5fmetadata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::optimization_guide::proto::_ResourceLoadingHint_default_instance_;
    new (ptr) ::optimization_guide::proto::ResourceLoadingHint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::optimization_guide::proto::ResourceLoadingHint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResourceLoadingHint_previews_5fmetadata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ResourceLoadingHint_previews_5fmetadata_2eproto}, {}};

namespace optimization_guide {
namespace proto {
bool LoadingOptimizationType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> LoadingOptimizationType_strings[2] = {};

static const char LoadingOptimizationType_names[] =
  "LOADING_BLOCK_RESOURCE"
  "LOADING_UNSPECIFIED";

static const ::PROTOBUF_NAMESPACE_ID::internal::EnumEntry LoadingOptimizationType_entries[] = {
  { {LoadingOptimizationType_names + 0, 22}, 1 },
  { {LoadingOptimizationType_names + 22, 19}, 0 },
};

static const int LoadingOptimizationType_entries_by_number[] = {
  1, // 0 -> LOADING_UNSPECIFIED
  0, // 1 -> LOADING_BLOCK_RESOURCE
};

const std::string& LoadingOptimizationType_Name(
    LoadingOptimizationType value) {
  static const bool dummy =
      ::PROTOBUF_NAMESPACE_ID::internal::InitializeEnumStrings(
          LoadingOptimizationType_entries,
          LoadingOptimizationType_entries_by_number,
          2, LoadingOptimizationType_strings);
  (void) dummy;
  int idx = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumName(
      LoadingOptimizationType_entries,
      LoadingOptimizationType_entries_by_number,
      2, value);
  return idx == -1 ? ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyString() :
                     LoadingOptimizationType_strings[idx].get();
}
bool LoadingOptimizationType_Parse(
    const std::string& name, LoadingOptimizationType* value) {
  int int_value;
  bool success = ::PROTOBUF_NAMESPACE_ID::internal::LookUpEnumValue(
      LoadingOptimizationType_entries, 2, name, &int_value);
  if (success) {
    *value = static_cast<LoadingOptimizationType>(int_value);
  }
  return success;
}

// ===================================================================

void ResourceLoadingHint::InitAsDefaultInstance() {
}
class ResourceLoadingHint::_Internal {
 public:
  using HasBits = decltype(std::declval<ResourceLoadingHint>()._has_bits_);
  static void set_has_resource_pattern(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_loading_optimization_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ResourceLoadingHint::ResourceLoadingHint()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimization_guide.proto.ResourceLoadingHint)
}
ResourceLoadingHint::ResourceLoadingHint(const ResourceLoadingHint& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resource_pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_resource_pattern()) {
    resource_pattern_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.resource_pattern_);
  }
  loading_optimization_type_ = from.loading_optimization_type_;
  // @@protoc_insertion_point(copy_constructor:optimization_guide.proto.ResourceLoadingHint)
}

void ResourceLoadingHint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResourceLoadingHint_previews_5fmetadata_2eproto.base);
  resource_pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  loading_optimization_type_ = 0;
}

ResourceLoadingHint::~ResourceLoadingHint() {
  // @@protoc_insertion_point(destructor:optimization_guide.proto.ResourceLoadingHint)
  SharedDtor();
}

void ResourceLoadingHint::SharedDtor() {
  resource_pattern_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResourceLoadingHint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceLoadingHint& ResourceLoadingHint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResourceLoadingHint_previews_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void ResourceLoadingHint::Clear() {
// @@protoc_insertion_point(message_clear_start:optimization_guide.proto.ResourceLoadingHint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    resource_pattern_.ClearNonDefaultToEmptyNoArena();
  }
  loading_optimization_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ResourceLoadingHint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string resource_pattern = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_resource_pattern(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .optimization_guide.proto.LoadingOptimizationType loading_optimization_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::optimization_guide::proto::LoadingOptimizationType_IsValid(val))) {
            set_loading_optimization_type(static_cast<::optimization_guide::proto::LoadingOptimizationType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ResourceLoadingHint::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:optimization_guide.proto.ResourceLoadingHint)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string resource_pattern = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_pattern()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .optimization_guide.proto.LoadingOptimizationType loading_optimization_type = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::optimization_guide::proto::LoadingOptimizationType_IsValid(value)) {
            set_loading_optimization_type(static_cast< ::optimization_guide::proto::LoadingOptimizationType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimization_guide.proto.ResourceLoadingHint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimization_guide.proto.ResourceLoadingHint)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ResourceLoadingHint::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimization_guide.proto.ResourceLoadingHint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string resource_pattern = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_pattern(), output);
  }

  // optional .optimization_guide.proto.LoadingOptimizationType loading_optimization_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->loading_optimization_type(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:optimization_guide.proto.ResourceLoadingHint)
}

size_t ResourceLoadingHint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimization_guide.proto.ResourceLoadingHint)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string resource_pattern = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->resource_pattern());
    }

    // optional .optimization_guide.proto.LoadingOptimizationType loading_optimization_type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->loading_optimization_type());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceLoadingHint::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ResourceLoadingHint*>(
      &from));
}

void ResourceLoadingHint::MergeFrom(const ResourceLoadingHint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimization_guide.proto.ResourceLoadingHint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      resource_pattern_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.resource_pattern_);
    }
    if (cached_has_bits & 0x00000002u) {
      loading_optimization_type_ = from.loading_optimization_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResourceLoadingHint::CopyFrom(const ResourceLoadingHint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimization_guide.proto.ResourceLoadingHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceLoadingHint::IsInitialized() const {
  return true;
}

void ResourceLoadingHint::InternalSwap(ResourceLoadingHint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  resource_pattern_.Swap(&other->resource_pattern_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(loading_optimization_type_, other->loading_optimization_type_);
}

std::string ResourceLoadingHint::GetTypeName() const {
  return "optimization_guide.proto.ResourceLoadingHint";
}


// ===================================================================

void PreviewsMetadata::InitAsDefaultInstance() {
}
class PreviewsMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<PreviewsMetadata>()._has_bits_);
  static void set_has_inflation_percent(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_max_ect_trigger(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PreviewsMetadata::PreviewsMetadata()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:optimization_guide.proto.PreviewsMetadata)
}
PreviewsMetadata::PreviewsMetadata(const PreviewsMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      resource_loading_hints_(from.resource_loading_hints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&inflation_percent_, &from.inflation_percent_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_ect_trigger_) -
    reinterpret_cast<char*>(&inflation_percent_)) + sizeof(max_ect_trigger_));
  // @@protoc_insertion_point(copy_constructor:optimization_guide.proto.PreviewsMetadata)
}

void PreviewsMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreviewsMetadata_previews_5fmetadata_2eproto.base);
  ::memset(&inflation_percent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_ect_trigger_) -
      reinterpret_cast<char*>(&inflation_percent_)) + sizeof(max_ect_trigger_));
}

PreviewsMetadata::~PreviewsMetadata() {
  // @@protoc_insertion_point(destructor:optimization_guide.proto.PreviewsMetadata)
  SharedDtor();
}

void PreviewsMetadata::SharedDtor() {
}

void PreviewsMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreviewsMetadata& PreviewsMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreviewsMetadata_previews_5fmetadata_2eproto.base);
  return *internal_default_instance();
}


void PreviewsMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:optimization_guide.proto.PreviewsMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_loading_hints_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&inflation_percent_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_ect_trigger_) -
        reinterpret_cast<char*>(&inflation_percent_)) + sizeof(max_ect_trigger_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PreviewsMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int64 inflation_percent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_inflation_percent(&has_bits);
          inflation_percent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .optimization_guide.proto.EffectiveConnectionType max_ect_trigger = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::optimization_guide::proto::EffectiveConnectionType_IsValid(val))) {
            set_max_ect_trigger(static_cast<::optimization_guide::proto::EffectiveConnectionType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .optimization_guide.proto.ResourceLoadingHint resource_loading_hints = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_resource_loading_hints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PreviewsMetadata::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:optimization_guide.proto.PreviewsMetadata)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 inflation_percent = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_inflation_percent(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &inflation_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .optimization_guide.proto.EffectiveConnectionType max_ect_trigger = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::optimization_guide::proto::EffectiveConnectionType_IsValid(value)) {
            set_max_ect_trigger(static_cast< ::optimization_guide::proto::EffectiveConnectionType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast<::PROTOBUF_NAMESPACE_ID::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .optimization_guide.proto.ResourceLoadingHint resource_loading_hints = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_resource_loading_hints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:optimization_guide.proto.PreviewsMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:optimization_guide.proto.PreviewsMetadata)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PreviewsMetadata::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:optimization_guide.proto.PreviewsMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 inflation_percent = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->inflation_percent(), output);
  }

  // optional .optimization_guide.proto.EffectiveConnectionType max_ect_trigger = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->max_ect_trigger(), output);
  }

  // repeated .optimization_guide.proto.ResourceLoadingHint resource_loading_hints = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resource_loading_hints_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      3,
      this->resource_loading_hints(static_cast<int>(i)),
      output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:optimization_guide.proto.PreviewsMetadata)
}

size_t PreviewsMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:optimization_guide.proto.PreviewsMetadata)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .optimization_guide.proto.ResourceLoadingHint resource_loading_hints = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->resource_loading_hints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->resource_loading_hints(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 inflation_percent = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->inflation_percent());
    }

    // optional .optimization_guide.proto.EffectiveConnectionType max_ect_trigger = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->max_ect_trigger());
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreviewsMetadata::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const PreviewsMetadata*>(
      &from));
}

void PreviewsMetadata::MergeFrom(const PreviewsMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:optimization_guide.proto.PreviewsMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_loading_hints_.MergeFrom(from.resource_loading_hints_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      inflation_percent_ = from.inflation_percent_;
    }
    if (cached_has_bits & 0x00000002u) {
      max_ect_trigger_ = from.max_ect_trigger_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PreviewsMetadata::CopyFrom(const PreviewsMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:optimization_guide.proto.PreviewsMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewsMetadata::IsInitialized() const {
  return true;
}

void PreviewsMetadata::InternalSwap(PreviewsMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&resource_loading_hints_)->InternalSwap(CastToBase(&other->resource_loading_hints_));
  swap(inflation_percent_, other->inflation_percent_);
  swap(max_ect_trigger_, other->max_ect_trigger_);
}

std::string PreviewsMetadata::GetTypeName() const {
  return "optimization_guide.proto.PreviewsMetadata";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace optimization_guide
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::optimization_guide::proto::ResourceLoadingHint* Arena::CreateMaybeMessage< ::optimization_guide::proto::ResourceLoadingHint >(Arena* arena) {
  return Arena::CreateInternal< ::optimization_guide::proto::ResourceLoadingHint >(arena);
}
template<> PROTOBUF_NOINLINE ::optimization_guide::proto::PreviewsMetadata* Arena::CreateMaybeMessage< ::optimization_guide::proto::PreviewsMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::optimization_guide::proto::PreviewsMetadata >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
