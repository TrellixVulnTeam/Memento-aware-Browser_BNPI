// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/sync_invalidations_payload.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace sync_pb {
class SyncInvalidationsPayload;
class SyncInvalidationsPayloadDefaultTypeInternal;
extern SyncInvalidationsPayloadDefaultTypeInternal _SyncInvalidationsPayload_default_instance_;
class SyncInvalidationsPayload_DataTypeInvalidation;
class SyncInvalidationsPayload_DataTypeInvalidationDefaultTypeInternal;
extern SyncInvalidationsPayload_DataTypeInvalidationDefaultTypeInternal _SyncInvalidationsPayload_DataTypeInvalidation_default_instance_;
}  // namespace sync_pb
PROTOBUF_NAMESPACE_OPEN
template<> ::sync_pb::SyncInvalidationsPayload* Arena::CreateMaybeMessage<::sync_pb::SyncInvalidationsPayload>(Arena*);
template<> ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation* Arena::CreateMaybeMessage<::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace sync_pb {

// ===================================================================

class SyncInvalidationsPayload_DataTypeInvalidation :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation) */ {
 public:
  SyncInvalidationsPayload_DataTypeInvalidation();
  virtual ~SyncInvalidationsPayload_DataTypeInvalidation();

  SyncInvalidationsPayload_DataTypeInvalidation(const SyncInvalidationsPayload_DataTypeInvalidation& from);
  SyncInvalidationsPayload_DataTypeInvalidation(SyncInvalidationsPayload_DataTypeInvalidation&& from) noexcept
    : SyncInvalidationsPayload_DataTypeInvalidation() {
    *this = ::std::move(from);
  }

  inline SyncInvalidationsPayload_DataTypeInvalidation& operator=(const SyncInvalidationsPayload_DataTypeInvalidation& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncInvalidationsPayload_DataTypeInvalidation& operator=(SyncInvalidationsPayload_DataTypeInvalidation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SyncInvalidationsPayload_DataTypeInvalidation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncInvalidationsPayload_DataTypeInvalidation* internal_default_instance() {
    return reinterpret_cast<const SyncInvalidationsPayload_DataTypeInvalidation*>(
               &_SyncInvalidationsPayload_DataTypeInvalidation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SyncInvalidationsPayload_DataTypeInvalidation& a, SyncInvalidationsPayload_DataTypeInvalidation& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncInvalidationsPayload_DataTypeInvalidation* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncInvalidationsPayload_DataTypeInvalidation* New() const final {
    return CreateMaybeMessage<SyncInvalidationsPayload_DataTypeInvalidation>(nullptr);
  }

  SyncInvalidationsPayload_DataTypeInvalidation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncInvalidationsPayload_DataTypeInvalidation>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SyncInvalidationsPayload_DataTypeInvalidation& from);
  void MergeFrom(const SyncInvalidationsPayload_DataTypeInvalidation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SyncInvalidationsPayload_DataTypeInvalidation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.SyncInvalidationsPayload.DataTypeInvalidation";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataTypeIdFieldNumber = 1,
  };
  // optional int32 data_type_id = 1;
  bool has_data_type_id() const;
  void clear_data_type_id();
  ::PROTOBUF_NAMESPACE_ID::int32 data_type_id() const;
  void set_data_type_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 data_type_id_;
  friend struct ::TableStruct_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto;
};
// -------------------------------------------------------------------

class SyncInvalidationsPayload :
    public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:sync_pb.SyncInvalidationsPayload) */ {
 public:
  SyncInvalidationsPayload();
  virtual ~SyncInvalidationsPayload();

  SyncInvalidationsPayload(const SyncInvalidationsPayload& from);
  SyncInvalidationsPayload(SyncInvalidationsPayload&& from) noexcept
    : SyncInvalidationsPayload() {
    *this = ::std::move(from);
  }

  inline SyncInvalidationsPayload& operator=(const SyncInvalidationsPayload& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncInvalidationsPayload& operator=(SyncInvalidationsPayload&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const SyncInvalidationsPayload& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncInvalidationsPayload* internal_default_instance() {
    return reinterpret_cast<const SyncInvalidationsPayload*>(
               &_SyncInvalidationsPayload_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SyncInvalidationsPayload& a, SyncInvalidationsPayload& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncInvalidationsPayload* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncInvalidationsPayload* New() const final {
    return CreateMaybeMessage<SyncInvalidationsPayload>(nullptr);
  }

  SyncInvalidationsPayload* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncInvalidationsPayload>(arena);
  }
  void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
    final;
  void CopyFrom(const SyncInvalidationsPayload& from);
  void MergeFrom(const SyncInvalidationsPayload& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SyncInvalidationsPayload* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "sync_pb.SyncInvalidationsPayload";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef SyncInvalidationsPayload_DataTypeInvalidation DataTypeInvalidation;

  // accessors -------------------------------------------------------

  enum : int {
    kDataTypeInvalidationsFieldNumber = 1,
    kHintFieldNumber = 2,
  };
  // repeated .sync_pb.SyncInvalidationsPayload.DataTypeInvalidation data_type_invalidations = 1;
  int data_type_invalidations_size() const;
  void clear_data_type_invalidations();
  ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation* mutable_data_type_invalidations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation >*
      mutable_data_type_invalidations();
  const ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation& data_type_invalidations(int index) const;
  ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation* add_data_type_invalidations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation >&
      data_type_invalidations() const;

  // optional bytes hint = 2;
  bool has_hint() const;
  void clear_hint();
  const std::string& hint() const;
  void set_hint(const std::string& value);
  void set_hint(std::string&& value);
  void set_hint(const char* value);
  void set_hint(const void* value, size_t size);
  std::string* mutable_hint();
  std::string* release_hint();
  void set_allocated_hint(std::string* hint);

  // @@protoc_insertion_point(class_scope:sync_pb.SyncInvalidationsPayload)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation > data_type_invalidations_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hint_;
  friend struct ::TableStruct_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SyncInvalidationsPayload_DataTypeInvalidation

// optional int32 data_type_id = 1;
inline bool SyncInvalidationsPayload_DataTypeInvalidation::has_data_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncInvalidationsPayload_DataTypeInvalidation::clear_data_type_id() {
  data_type_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SyncInvalidationsPayload_DataTypeInvalidation::data_type_id() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation.data_type_id)
  return data_type_id_;
}
inline void SyncInvalidationsPayload_DataTypeInvalidation::set_data_type_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  data_type_id_ = value;
  // @@protoc_insertion_point(field_set:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation.data_type_id)
}

// -------------------------------------------------------------------

// SyncInvalidationsPayload

// repeated .sync_pb.SyncInvalidationsPayload.DataTypeInvalidation data_type_invalidations = 1;
inline int SyncInvalidationsPayload::data_type_invalidations_size() const {
  return data_type_invalidations_.size();
}
inline void SyncInvalidationsPayload::clear_data_type_invalidations() {
  data_type_invalidations_.Clear();
}
inline ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation* SyncInvalidationsPayload::mutable_data_type_invalidations(int index) {
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncInvalidationsPayload.data_type_invalidations)
  return data_type_invalidations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation >*
SyncInvalidationsPayload::mutable_data_type_invalidations() {
  // @@protoc_insertion_point(field_mutable_list:sync_pb.SyncInvalidationsPayload.data_type_invalidations)
  return &data_type_invalidations_;
}
inline const ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation& SyncInvalidationsPayload::data_type_invalidations(int index) const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncInvalidationsPayload.data_type_invalidations)
  return data_type_invalidations_.Get(index);
}
inline ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation* SyncInvalidationsPayload::add_data_type_invalidations() {
  // @@protoc_insertion_point(field_add:sync_pb.SyncInvalidationsPayload.data_type_invalidations)
  return data_type_invalidations_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation >&
SyncInvalidationsPayload::data_type_invalidations() const {
  // @@protoc_insertion_point(field_list:sync_pb.SyncInvalidationsPayload.data_type_invalidations)
  return data_type_invalidations_;
}

// optional bytes hint = 2;
inline bool SyncInvalidationsPayload::has_hint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncInvalidationsPayload::clear_hint() {
  hint_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SyncInvalidationsPayload::hint() const {
  // @@protoc_insertion_point(field_get:sync_pb.SyncInvalidationsPayload.hint)
  return hint_.GetNoArena();
}
inline void SyncInvalidationsPayload::set_hint(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  hint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sync_pb.SyncInvalidationsPayload.hint)
}
inline void SyncInvalidationsPayload::set_hint(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  hint_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sync_pb.SyncInvalidationsPayload.hint)
}
inline void SyncInvalidationsPayload::set_hint(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  hint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sync_pb.SyncInvalidationsPayload.hint)
}
inline void SyncInvalidationsPayload::set_hint(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  hint_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sync_pb.SyncInvalidationsPayload.hint)
}
inline std::string* SyncInvalidationsPayload::mutable_hint() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:sync_pb.SyncInvalidationsPayload.hint)
  return hint_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncInvalidationsPayload::release_hint() {
  // @@protoc_insertion_point(field_release:sync_pb.SyncInvalidationsPayload.hint)
  if (!has_hint()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return hint_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncInvalidationsPayload::set_allocated_hint(std::string* hint) {
  if (hint != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hint_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hint);
  // @@protoc_insertion_point(field_set_allocated:sync_pb.SyncInvalidationsPayload.hint)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace sync_pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto
