// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/sync_invalidations_payload.proto

#include "components/sync/protocol/sync_invalidations_payload.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncInvalidationsPayload_DataTypeInvalidation_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto;
namespace sync_pb {
class SyncInvalidationsPayload_DataTypeInvalidationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncInvalidationsPayload_DataTypeInvalidation> _instance;
} _SyncInvalidationsPayload_DataTypeInvalidation_default_instance_;
class SyncInvalidationsPayloadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SyncInvalidationsPayload> _instance;
} _SyncInvalidationsPayload_default_instance_;
}  // namespace sync_pb
static void InitDefaultsscc_info_SyncInvalidationsPayload_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sync_pb::_SyncInvalidationsPayload_default_instance_;
    new (ptr) ::sync_pb::SyncInvalidationsPayload();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sync_pb::SyncInvalidationsPayload::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SyncInvalidationsPayload_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SyncInvalidationsPayload_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto}, {
      &scc_info_SyncInvalidationsPayload_DataTypeInvalidation_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto.base,}};

static void InitDefaultsscc_info_SyncInvalidationsPayload_DataTypeInvalidation_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sync_pb::_SyncInvalidationsPayload_DataTypeInvalidation_default_instance_;
    new (ptr) ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SyncInvalidationsPayload_DataTypeInvalidation_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SyncInvalidationsPayload_DataTypeInvalidation_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto}, {}};

namespace sync_pb {

// ===================================================================

void SyncInvalidationsPayload_DataTypeInvalidation::InitAsDefaultInstance() {
}
class SyncInvalidationsPayload_DataTypeInvalidation::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncInvalidationsPayload_DataTypeInvalidation>()._has_bits_);
  static void set_has_data_type_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SyncInvalidationsPayload_DataTypeInvalidation::SyncInvalidationsPayload_DataTypeInvalidation()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
}
SyncInvalidationsPayload_DataTypeInvalidation::SyncInvalidationsPayload_DataTypeInvalidation(const SyncInvalidationsPayload_DataTypeInvalidation& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_type_id_ = from.data_type_id_;
  // @@protoc_insertion_point(copy_constructor:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
}

void SyncInvalidationsPayload_DataTypeInvalidation::SharedCtor() {
  data_type_id_ = 0;
}

SyncInvalidationsPayload_DataTypeInvalidation::~SyncInvalidationsPayload_DataTypeInvalidation() {
  // @@protoc_insertion_point(destructor:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
  SharedDtor();
}

void SyncInvalidationsPayload_DataTypeInvalidation::SharedDtor() {
}

void SyncInvalidationsPayload_DataTypeInvalidation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncInvalidationsPayload_DataTypeInvalidation& SyncInvalidationsPayload_DataTypeInvalidation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncInvalidationsPayload_DataTypeInvalidation_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto.base);
  return *internal_default_instance();
}


void SyncInvalidationsPayload_DataTypeInvalidation::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_type_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SyncInvalidationsPayload_DataTypeInvalidation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 data_type_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_data_type_id(&has_bits);
          data_type_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SyncInvalidationsPayload_DataTypeInvalidation::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 data_type_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          _Internal::set_has_data_type_id(&_has_bits_);
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SyncInvalidationsPayload_DataTypeInvalidation::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 data_type_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->data_type_id(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
}

size_t SyncInvalidationsPayload_DataTypeInvalidation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 data_type_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->data_type_id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncInvalidationsPayload_DataTypeInvalidation::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const SyncInvalidationsPayload_DataTypeInvalidation*>(
      &from));
}

void SyncInvalidationsPayload_DataTypeInvalidation::MergeFrom(const SyncInvalidationsPayload_DataTypeInvalidation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data_type_id()) {
    set_data_type_id(from.data_type_id());
  }
}

void SyncInvalidationsPayload_DataTypeInvalidation::CopyFrom(const SyncInvalidationsPayload_DataTypeInvalidation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.SyncInvalidationsPayload.DataTypeInvalidation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncInvalidationsPayload_DataTypeInvalidation::IsInitialized() const {
  return true;
}

void SyncInvalidationsPayload_DataTypeInvalidation::InternalSwap(SyncInvalidationsPayload_DataTypeInvalidation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(data_type_id_, other->data_type_id_);
}

std::string SyncInvalidationsPayload_DataTypeInvalidation::GetTypeName() const {
  return "sync_pb.SyncInvalidationsPayload.DataTypeInvalidation";
}


// ===================================================================

void SyncInvalidationsPayload::InitAsDefaultInstance() {
}
class SyncInvalidationsPayload::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncInvalidationsPayload>()._has_bits_);
  static void set_has_hint(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SyncInvalidationsPayload::SyncInvalidationsPayload()
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sync_pb.SyncInvalidationsPayload)
}
SyncInvalidationsPayload::SyncInvalidationsPayload(const SyncInvalidationsPayload& from)
  : ::PROTOBUF_NAMESPACE_ID::MessageLite(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      data_type_invalidations_(from.data_type_invalidations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_hint()) {
    hint_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.hint_);
  }
  // @@protoc_insertion_point(copy_constructor:sync_pb.SyncInvalidationsPayload)
}

void SyncInvalidationsPayload::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SyncInvalidationsPayload_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto.base);
  hint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SyncInvalidationsPayload::~SyncInvalidationsPayload() {
  // @@protoc_insertion_point(destructor:sync_pb.SyncInvalidationsPayload)
  SharedDtor();
}

void SyncInvalidationsPayload::SharedDtor() {
  hint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SyncInvalidationsPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SyncInvalidationsPayload& SyncInvalidationsPayload::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SyncInvalidationsPayload_components_2fsync_2fprotocol_2fsync_5finvalidations_5fpayload_2eproto.base);
  return *internal_default_instance();
}


void SyncInvalidationsPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:sync_pb.SyncInvalidationsPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_type_invalidations_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    hint_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SyncInvalidationsPayload::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .sync_pb.SyncInvalidationsPayload.DataTypeInvalidation data_type_invalidations = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_data_type_invalidations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // optional bytes hint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_hint(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SyncInvalidationsPayload::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  ::PROTOBUF_NAMESPACE_ID::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:sync_pb.SyncInvalidationsPayload)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .sync_pb.SyncInvalidationsPayload.DataTypeInvalidation data_type_invalidations = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_data_type_invalidations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes hint = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sync_pb.SyncInvalidationsPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sync_pb.SyncInvalidationsPayload)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SyncInvalidationsPayload::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sync_pb.SyncInvalidationsPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sync_pb.SyncInvalidationsPayload.DataTypeInvalidation data_type_invalidations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_type_invalidations_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessage(
      1,
      this->data_type_invalidations(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bytes hint = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->hint(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:sync_pb.SyncInvalidationsPayload)
}

size_t SyncInvalidationsPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sync_pb.SyncInvalidationsPayload)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sync_pb.SyncInvalidationsPayload.DataTypeInvalidation data_type_invalidations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_type_invalidations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->data_type_invalidations(static_cast<int>(i)));
    }
  }

  // optional bytes hint = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->hint());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncInvalidationsPayload::CheckTypeAndMergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::MessageLite& from) {
  MergeFrom(*::PROTOBUF_NAMESPACE_ID::internal::DownCast<const SyncInvalidationsPayload*>(
      &from));
}

void SyncInvalidationsPayload::MergeFrom(const SyncInvalidationsPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sync_pb.SyncInvalidationsPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_type_invalidations_.MergeFrom(from.data_type_invalidations_);
  if (from.has_hint()) {
    _has_bits_[0] |= 0x00000001u;
    hint_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.hint_);
  }
}

void SyncInvalidationsPayload::CopyFrom(const SyncInvalidationsPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sync_pb.SyncInvalidationsPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncInvalidationsPayload::IsInitialized() const {
  return true;
}

void SyncInvalidationsPayload::InternalSwap(SyncInvalidationsPayload* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&data_type_invalidations_)->InternalSwap(CastToBase(&other->data_type_invalidations_));
  hint_.Swap(&other->hint_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

std::string SyncInvalidationsPayload::GetTypeName() const {
  return "sync_pb.SyncInvalidationsPayload";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sync_pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation* Arena::CreateMaybeMessage< ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation >(Arena* arena) {
  return Arena::CreateInternal< ::sync_pb::SyncInvalidationsPayload_DataTypeInvalidation >(arena);
}
template<> PROTOBUF_NOINLINE ::sync_pb::SyncInvalidationsPayload* Arena::CreateMaybeMessage< ::sync_pb::SyncInvalidationsPayload >(Arena* arena) {
  return Arena::CreateInternal< ::sync_pb::SyncInvalidationsPayload >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
