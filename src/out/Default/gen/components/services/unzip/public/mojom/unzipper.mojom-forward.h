// components/services/unzip/public/mojom/unzipper.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SERVICES_UNZIP_PUBLIC_MOJOM_UNZIPPER_MOJOM_FORWARD_H_
#define COMPONENTS_SERVICES_UNZIP_PUBLIC_MOJOM_UNZIPPER_MOJOM_FORWARD_H_





#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"








namespace unzip {
namespace mojom {
class UnzipFilter;

using UnzipFilterPtr = mojo::InterfacePtr<UnzipFilter>;
using UnzipFilterPtrInfo = mojo::InterfacePtrInfo<UnzipFilter>;
using ThreadSafeUnzipFilterPtr =
    mojo::ThreadSafeInterfacePtr<UnzipFilter>;

using UnzipFilterRequest = mojo::InterfaceRequest<UnzipFilter>;

using UnzipFilterAssociatedPtr =
    mojo::AssociatedInterfacePtr<UnzipFilter>;
using ThreadSafeUnzipFilterAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<UnzipFilter>;
using UnzipFilterAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<UnzipFilter>;

using UnzipFilterAssociatedRequest =
    mojo::AssociatedInterfaceRequest<UnzipFilter>;

class Unzipper;

using UnzipperPtr = mojo::InterfacePtr<Unzipper>;
using UnzipperPtrInfo = mojo::InterfacePtrInfo<Unzipper>;
using ThreadSafeUnzipperPtr =
    mojo::ThreadSafeInterfacePtr<Unzipper>;

using UnzipperRequest = mojo::InterfaceRequest<Unzipper>;

using UnzipperAssociatedPtr =
    mojo::AssociatedInterfacePtr<Unzipper>;
using ThreadSafeUnzipperAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<Unzipper>;
using UnzipperAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<Unzipper>;

using UnzipperAssociatedRequest =
    mojo::AssociatedInterfaceRequest<Unzipper>;




}  // namespace mojom
}  // namespace unzip

#endif  // COMPONENTS_SERVICES_UNZIP_PUBLIC_MOJOM_UNZIPPER_MOJOM_FORWARD_H_