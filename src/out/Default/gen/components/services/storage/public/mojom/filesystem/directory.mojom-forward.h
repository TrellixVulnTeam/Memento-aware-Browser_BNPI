// components/services/storage/public/mojom/filesystem/directory.mojom-forward.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_FILESYSTEM_DIRECTORY_MOJOM_FORWARD_H_
#define COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_FILESYSTEM_DIRECTORY_MOJOM_FORWARD_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/struct_forward.h"

#include "mojo/public/cpp/bindings/deprecated_interface_types_forward.h"


#include "mojo/public/interfaces/bindings/native_struct.mojom-forward.h"






namespace storage {
namespace mojom {
class StrictRelativePathDataView;


enum class GetEntriesMode : int32_t;

enum class FileOpenMode : int32_t;

enum class FileReadAccess : int32_t;

enum class FileWriteAccess : int32_t;
class StrictRelativePath;
using StrictRelativePathPtr = mojo::StructPtr<StrictRelativePath>;

class FileLock;

using FileLockPtr = mojo::InterfacePtr<FileLock>;
using FileLockPtrInfo = mojo::InterfacePtrInfo<FileLock>;
using ThreadSafeFileLockPtr =
    mojo::ThreadSafeInterfacePtr<FileLock>;

using FileLockRequest = mojo::InterfaceRequest<FileLock>;

using FileLockAssociatedPtr =
    mojo::AssociatedInterfacePtr<FileLock>;
using ThreadSafeFileLockAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<FileLock>;
using FileLockAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<FileLock>;

using FileLockAssociatedRequest =
    mojo::AssociatedInterfaceRequest<FileLock>;

class Directory;

using DirectoryPtr = mojo::InterfacePtr<Directory>;
using DirectoryPtrInfo = mojo::InterfacePtrInfo<Directory>;
using ThreadSafeDirectoryPtr =
    mojo::ThreadSafeInterfacePtr<Directory>;

using DirectoryRequest = mojo::InterfaceRequest<Directory>;

using DirectoryAssociatedPtr =
    mojo::AssociatedInterfacePtr<Directory>;
using ThreadSafeDirectoryAssociatedPtr =
    mojo::ThreadSafeAssociatedInterfacePtr<Directory>;
using DirectoryAssociatedPtrInfo =
    mojo::AssociatedInterfacePtrInfo<Directory>;

using DirectoryAssociatedRequest =
    mojo::AssociatedInterfaceRequest<Directory>;




}  // namespace mojom
}  // namespace storage
#include "base/files/file_path.h"

#endif  // COMPONENTS_SERVICES_STORAGE_PUBLIC_MOJOM_FILESYSTEM_DIRECTORY_MOJOM_FORWARD_H_