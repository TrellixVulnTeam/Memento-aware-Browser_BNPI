// components/nacl/common/nacl.mojom-params-data.h is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef COMPONENTS_NACL_COMMON_NACL_MOJOM_PARAMS_DATA_H_
#define COMPONENTS_NACL_COMMON_NACL_MOJOM_PARAMS_DATA_H_

#include "base/logging.h"
#include "base/macros.h"
#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/validation_context.h"

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif
namespace nacl {
namespace mojom {
namespace internal {
class  NaClRendererHost_ReportExitStatus_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(NaClRendererHost_ReportExitStatus_Params_Data));
      new (data()) NaClRendererHost_ReportExitStatus_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    NaClRendererHost_ReportExitStatus_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<NaClRendererHost_ReportExitStatus_Params_Data>(index_);
    }
    NaClRendererHost_ReportExitStatus_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t exit_status;
  uint8_t padfinal_[4];

 private:
  NaClRendererHost_ReportExitStatus_Params_Data();
  ~NaClRendererHost_ReportExitStatus_Params_Data() = delete;
};
static_assert(sizeof(NaClRendererHost_ReportExitStatus_Params_Data) == 16,
              "Bad sizeof(NaClRendererHost_ReportExitStatus_Params_Data)");
class  NaClRendererHost_ReportExitStatus_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(NaClRendererHost_ReportExitStatus_ResponseParams_Data));
      new (data()) NaClRendererHost_ReportExitStatus_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    NaClRendererHost_ReportExitStatus_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<NaClRendererHost_ReportExitStatus_ResponseParams_Data>(index_);
    }
    NaClRendererHost_ReportExitStatus_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  NaClRendererHost_ReportExitStatus_ResponseParams_Data();
  ~NaClRendererHost_ReportExitStatus_ResponseParams_Data() = delete;
};
static_assert(sizeof(NaClRendererHost_ReportExitStatus_ResponseParams_Data) == 8,
              "Bad sizeof(NaClRendererHost_ReportExitStatus_ResponseParams_Data)");
class  NaClRendererHost_ReportLoadStatus_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(NaClRendererHost_ReportLoadStatus_Params_Data));
      new (data()) NaClRendererHost_ReportLoadStatus_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    NaClRendererHost_ReportLoadStatus_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<NaClRendererHost_ReportLoadStatus_Params_Data>(index_);
    }
    NaClRendererHost_ReportLoadStatus_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  int32_t load_status;
  uint8_t padfinal_[4];

 private:
  NaClRendererHost_ReportLoadStatus_Params_Data();
  ~NaClRendererHost_ReportLoadStatus_Params_Data() = delete;
};
static_assert(sizeof(NaClRendererHost_ReportLoadStatus_Params_Data) == 16,
              "Bad sizeof(NaClRendererHost_ReportLoadStatus_Params_Data)");
class  NaClRendererHost_ReportLoadStatus_ResponseParams_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(NaClRendererHost_ReportLoadStatus_ResponseParams_Data));
      new (data()) NaClRendererHost_ReportLoadStatus_ResponseParams_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    NaClRendererHost_ReportLoadStatus_ResponseParams_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<NaClRendererHost_ReportLoadStatus_ResponseParams_Data>(index_);
    }
    NaClRendererHost_ReportLoadStatus_ResponseParams_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;

 private:
  NaClRendererHost_ReportLoadStatus_ResponseParams_Data();
  ~NaClRendererHost_ReportLoadStatus_ResponseParams_Data() = delete;
};
static_assert(sizeof(NaClRendererHost_ReportLoadStatus_ResponseParams_Data) == 8,
              "Bad sizeof(NaClRendererHost_ReportLoadStatus_ResponseParams_Data)");
class  NaClRendererHost_ProvideExitControl_Params_Data {
 public:
  class BufferWriter {
   public:
    BufferWriter() = default;

    void Allocate(mojo::internal::Buffer* serialization_buffer) {
      serialization_buffer_ = serialization_buffer;
      index_ = serialization_buffer_->Allocate(sizeof(NaClRendererHost_ProvideExitControl_Params_Data));
      new (data()) NaClRendererHost_ProvideExitControl_Params_Data();
    }

    bool is_null() const { return !serialization_buffer_; }
    NaClRendererHost_ProvideExitControl_Params_Data* data() {
      DCHECK(!is_null());
      return serialization_buffer_->Get<NaClRendererHost_ProvideExitControl_Params_Data>(index_);
    }
    NaClRendererHost_ProvideExitControl_Params_Data* operator->() { return data(); }

   private:
    mojo::internal::Buffer* serialization_buffer_ = nullptr;
    size_t index_ = 0;

    DISALLOW_COPY_AND_ASSIGN(BufferWriter);
  };

  static bool Validate(const void* data,
                       mojo::internal::ValidationContext* validation_context);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data exit_control;

 private:
  NaClRendererHost_ProvideExitControl_Params_Data();
  ~NaClRendererHost_ProvideExitControl_Params_Data() = delete;
};
static_assert(sizeof(NaClRendererHost_ProvideExitControl_Params_Data) == 16,
              "Bad sizeof(NaClRendererHost_ProvideExitControl_Params_Data)");

}  // namespace internal
class NaClRendererHost_ReportExitStatus_ParamsDataView {
 public:
  NaClRendererHost_ReportExitStatus_ParamsDataView() {}

  NaClRendererHost_ReportExitStatus_ParamsDataView(
      internal::NaClRendererHost_ReportExitStatus_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  int32_t exit_status() const {
    return data_->exit_status;
  }
 private:
  internal::NaClRendererHost_ReportExitStatus_Params_Data* data_ = nullptr;
};

class NaClRendererHost_ReportExitStatus_ResponseParamsDataView {
 public:
  NaClRendererHost_ReportExitStatus_ResponseParamsDataView() {}

  NaClRendererHost_ReportExitStatus_ResponseParamsDataView(
      internal::NaClRendererHost_ReportExitStatus_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::NaClRendererHost_ReportExitStatus_ResponseParams_Data* data_ = nullptr;
};

class NaClRendererHost_ReportLoadStatus_ParamsDataView {
 public:
  NaClRendererHost_ReportLoadStatus_ParamsDataView() {}

  NaClRendererHost_ReportLoadStatus_ParamsDataView(
      internal::NaClRendererHost_ReportLoadStatus_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  WARN_UNUSED_RESULT bool ReadLoadStatus(UserType* output) const {
    auto data_value = data_->load_status;
    return mojo::internal::Deserialize<::nacl::mojom::NaClErrorCode>(
        data_value, output);
  }

  NaClErrorCode load_status() const {
    return static_cast<NaClErrorCode>(data_->load_status);
  }
 private:
  internal::NaClRendererHost_ReportLoadStatus_Params_Data* data_ = nullptr;
};

class NaClRendererHost_ReportLoadStatus_ResponseParamsDataView {
 public:
  NaClRendererHost_ReportLoadStatus_ResponseParamsDataView() {}

  NaClRendererHost_ReportLoadStatus_ResponseParamsDataView(
      internal::NaClRendererHost_ReportLoadStatus_ResponseParams_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data) {}

  bool is_null() const { return !data_; }
 private:
  internal::NaClRendererHost_ReportLoadStatus_ResponseParams_Data* data_ = nullptr;
};

class NaClRendererHost_ProvideExitControl_ParamsDataView {
 public:
  NaClRendererHost_ProvideExitControl_ParamsDataView() {}

  NaClRendererHost_ProvideExitControl_ParamsDataView(
      internal::NaClRendererHost_ProvideExitControl_Params_Data* data,
      mojo::internal::SerializationContext* context)
      : data_(data), context_(context) {}

  bool is_null() const { return !data_; }
  template <typename UserType>
  UserType TakeExitControl() {
    UserType result;
    bool ret =
        mojo::internal::Deserialize<mojo::InterfacePtrDataView<::nacl::mojom::NaClExitControlInterfaceBase>>(
            &data_->exit_control, &result, context_);
    DCHECK(ret);
    return result;
  }
 private:
  internal::NaClRendererHost_ProvideExitControl_Params_Data* data_ = nullptr;
  mojo::internal::SerializationContext* context_ = nullptr;
};











}  // namespace mojom
}  // namespace nacl

#if defined(__clang__)
#pragma clang diagnostic pop
#endif

#endif  // COMPONENTS_NACL_COMMON_NACL_MOJOM_PARAMS_DATA_H_