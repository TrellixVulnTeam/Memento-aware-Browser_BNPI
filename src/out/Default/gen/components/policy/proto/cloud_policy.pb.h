// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_policy.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_cloud_5fpolicy_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_cloud_5fpolicy_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "policy_common_definitions.pb.h"
// @@protoc_insertion_point(includes)
#include "components/policy/proto/policy_proto_export.h"
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_cloud_5fpolicy_2eproto POLICY_PROTO_EXPORT
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct POLICY_PROTO_EXPORT TableStruct_cloud_5fpolicy_2eproto {
static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
PROTOBUF_SECTION_VARIABLE(protodesc_cold);
static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
PROTOBUF_SECTION_VARIABLE(protodesc_cold);
static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
PROTOBUF_SECTION_VARIABLE(protodesc_cold);
static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
namespace enterprise_management {
class CloudPolicySettings;
class CloudPolicySettingsDefaultTypeInternal;
POLICY_PROTO_EXPORT extern CloudPolicySettingsDefaultTypeInternal _CloudPolicySettings_default_instance_;
}  // namespace enterprise_management
PROTOBUF_NAMESPACE_OPEN
template<> POLICY_PROTO_EXPORT ::enterprise_management::CloudPolicySettings* Arena::CreateMaybeMessage<::enterprise_management::CloudPolicySettings>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace enterprise_management {

// ===================================================================

class POLICY_PROTO_EXPORT CloudPolicySettings :
public ::PROTOBUF_NAMESPACE_ID::MessageLite /* @@protoc_insertion_point(class_definition:enterprise_management.CloudPolicySettings) */ {
public:
CloudPolicySettings();
virtual ~CloudPolicySettings();

CloudPolicySettings(const CloudPolicySettings& from);
CloudPolicySettings(CloudPolicySettings&& from) noexcept
: CloudPolicySettings() {
*this = ::std::move(from);
}

inline CloudPolicySettings& operator=(const CloudPolicySettings& from) {
CopyFrom(from);
return *this;
}
inline CloudPolicySettings& operator=(CloudPolicySettings&& from) noexcept {
if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
if (this != &from) InternalSwap(&from);
} else {
CopyFrom(from);
}
return *this;
}

inline const std::string& unknown_fields() const {
return _internal_metadata_.unknown_fields();
}
inline std::string* mutable_unknown_fields() {
return _internal_metadata_.mutable_unknown_fields();
}

static const CloudPolicySettings& default_instance();

static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
static inline const CloudPolicySettings* internal_default_instance() {
return reinterpret_cast<const CloudPolicySettings*>(
&_CloudPolicySettings_default_instance_);
}
static constexpr int kIndexInFileMessages =
0;

friend void swap(CloudPolicySettings& a, CloudPolicySettings& b) {
a.Swap(&b);
}
inline void Swap(CloudPolicySettings* other) {
if (other == this) return;
InternalSwap(other);
}

// implements Message ----------------------------------------------

inline CloudPolicySettings* New() const final {
return CreateMaybeMessage<CloudPolicySettings>(nullptr);
}

CloudPolicySettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
return CreateMaybeMessage<CloudPolicySettings>(arena);
}
void CheckTypeAndMergeFrom(const ::PROTOBUF_NAMESPACE_ID::MessageLite& from)
final;
void CopyFrom(const CloudPolicySettings& from);
void MergeFrom(const CloudPolicySettings& from);
PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
bool IsInitialized() const final;

size_t ByteSizeLong() const final;
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
#else
bool MergePartialFromCodedStream(
::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
void SerializeWithCachedSizes(
::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
void DiscardUnknownFields();
int GetCachedSize() const final { return _cached_size_.Get(); }

private:
inline void SharedCtor();
inline void SharedDtor();
void SetCachedSize(int size) const;
void InternalSwap(CloudPolicySettings* other);
friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
return "enterprise_management.CloudPolicySettings";
}
private:
inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
return nullptr;
}
inline void* MaybeArenaPtr() const {
return nullptr;
}
public:

std::string GetTypeName() const final;

// nested types ----------------------------------------------------

// accessors -------------------------------------------------------

enum : int {
kHomepageLocationFieldNumber = 3,
kHomepageIsNewTabPageFieldNumber = 4,
kDefaultBrowserSettingEnabledFieldNumber = 5,
kAlternateErrorPagesEnabledFieldNumber = 7,
kSearchSuggestEnabledFieldNumber = 8,
kJavascriptEnabledFieldNumber = 11,
kIncognitoEnabledFieldNumber = 12,
kSavingBrowserHistoryDisabledFieldNumber = 13,
kPrintingEnabledFieldNumber = 14,
kCloudPrintProxyEnabledFieldNumber = 15,
kSafeBrowsingEnabledFieldNumber = 16,
kMetricsReportingEnabledFieldNumber = 17,
kPasswordManagerEnabledFieldNumber = 18,
kAutoFillEnabledFieldNumber = 20,
kDisabledPluginsFieldNumber = 21,
kSyncDisabledFieldNumber = 22,
kProxyModeFieldNumber = 23,
kProxyServerModeFieldNumber = 24,
kProxyServerFieldNumber = 25,
kProxyPacUrlFieldNumber = 26,
kProxyBypassListFieldNumber = 27,
kAuthSchemesFieldNumber = 28,
kDisableAuthNegotiateCnameLookupFieldNumber = 29,
kEnableAuthNegotiatePortFieldNumber = 30,
kAuthServerWhitelistFieldNumber = 31,
kAuthNegotiateDelegateWhitelistFieldNumber = 32,
kGSSAPILibraryNameFieldNumber = 33,
kExtensionInstallBlacklistFieldNumber = 34,
kExtensionInstallWhitelistFieldNumber = 35,
kExtensionInstallForcelistFieldNumber = 36,
kShowHomeButtonFieldNumber = 37,
kDeveloperToolsDisabledFieldNumber = 38,
kRestoreOnStartupFieldNumber = 39,
kRestoreOnStartupURLsFieldNumber = 40,
kBlockThirdPartyCookiesFieldNumber = 41,
kDefaultSearchProviderEnabledFieldNumber = 42,
kDefaultSearchProviderNameFieldNumber = 43,
kDefaultSearchProviderKeywordFieldNumber = 44,
kDefaultSearchProviderSearchURLFieldNumber = 45,
kDefaultSearchProviderSuggestURLFieldNumber = 46,
kDefaultSearchProviderIconURLFieldNumber = 48,
kDefaultSearchProviderEncodingsFieldNumber = 49,
kDefaultCookiesSettingFieldNumber = 50,
kDefaultImagesSettingFieldNumber = 51,
kDefaultJavaScriptSettingFieldNumber = 52,
kDefaultPluginsSettingFieldNumber = 53,
kDefaultPopupsSettingFieldNumber = 54,
kDefaultNotificationsSettingFieldNumber = 55,
kDefaultGeolocationSettingFieldNumber = 56,
kDisable3DAPIsFieldNumber = 57,
kPolicyRefreshRateFieldNumber = 58,
kDownloadDirectoryFieldNumber = 66,
kCookiesBlockedForUrlsFieldNumber = 69,
kCookiesSessionOnlyForUrlsFieldNumber = 70,
kImagesAllowedForUrlsFieldNumber = 71,
kImagesBlockedForUrlsFieldNumber = 72,
kJavaScriptAllowedForUrlsFieldNumber = 73,
kJavaScriptBlockedForUrlsFieldNumber = 74,
kPluginsAllowedForUrlsFieldNumber = 75,
kPluginsBlockedForUrlsFieldNumber = 76,
kPopupsAllowedForUrlsFieldNumber = 77,
kPopupsBlockedForUrlsFieldNumber = 78,
kCookiesAllowedForUrlsFieldNumber = 79,
kEnabledPluginsFieldNumber = 80,
kDisabledPluginsExceptionsFieldNumber = 81,
kTranslateEnabledFieldNumber = 82,
kAllowOutdatedPluginsFieldNumber = 83,
kBookmarkBarEnabledFieldNumber = 84,
kEditBookmarksEnabledFieldNumber = 85,
kAllowFileSelectionDialogsFieldNumber = 86,
kDisabledSchemesFieldNumber = 87,
kDiskCacheDirFieldNumber = 90,
kAllowCrossOriginAuthPromptFieldNumber = 91,
kMaxConnectionsPerProxyFieldNumber = 94,
kIncognitoModeAvailabilityFieldNumber = 95,
kRemoteAccessHostFirewallTraversalFieldNumber = 97,
kImportBookmarksFieldNumber = 99,
kImportHistoryFieldNumber = 100,
kImportHomepageFieldNumber = 101,
kImportSearchEngineFieldNumber = 102,
kImportSavedPasswordsFieldNumber = 103,
kAutoSelectCertificateForUrlsFieldNumber = 104,
kURLBlacklistFieldNumber = 105,
kURLWhitelistFieldNumber = 106,
kNotificationsAllowedForUrlsFieldNumber = 107,
kNotificationsBlockedForUrlsFieldNumber = 108,
kCloudPrintSubmitEnabledFieldNumber = 111,
kDiskCacheSizeFieldNumber = 112,
kProxySettingsFieldNumber = 118,
kDisablePrintPreviewFieldNumber = 119,
kEnableOnlineRevocationChecksFieldNumber = 131,
kBackgroundModeEnabledFieldNumber = 140,
kRestrictSigninToPatternFieldNumber = 149,
kExtensionInstallSourcesFieldNumber = 150,
kDefaultMediaStreamSettingFieldNumber = 151,
kDisableSafeBrowsingProceedAnywayFieldNumber = 152,
kSpellCheckServiceEnabledFieldNumber = 153,
kDisableScreenshotsFieldNumber = 155,
kRemoteAccessHostDomainFieldNumber = 156,
kRemoteAccessHostRequireCurtainFieldNumber = 159,
kAudioCaptureAllowedFieldNumber = 162,
kDefaultSearchProviderAlternateURLsFieldNumber = 163,
kForceSafeSearchFieldNumber = 164,
kBuiltInDnsClientEnabledFieldNumber = 167,
kVideoCaptureAllowedFieldNumber = 169,
kExtensionAllowedTypesFieldNumber = 170,
kAllowDeletingBrowserHistoryFieldNumber = 189,
kHideWebStoreIconFieldNumber = 191,
kSigninAllowedFieldNumber = 192,
kVariationsRestrictParameterFieldNumber = 198,
kContentPackDefaultFilteringBehaviorFieldNumber = 206,
kContentPackManualBehaviorHostsFieldNumber = 207,
kContentPackManualBehaviorURLsFieldNumber = 208,
kAudioCaptureAllowedUrlsFieldNumber = 210,
kVideoCaptureAllowedUrlsFieldNumber = 211,
kManagedBookmarksFieldNumber = 229,
kMaxInvalidationFetchDelayFieldNumber = 230,
kDefaultSearchProviderImageURLFieldNumber = 231,
kDefaultSearchProviderSearchURLPostParamsFieldNumber = 232,
kDefaultSearchProviderSuggestURLPostParamsFieldNumber = 233,
kDefaultSearchProviderImageURLPostParamsFieldNumber = 235,
kRemoteAccessHostAllowClientPairingFieldNumber = 236,
kRequireOnlineRevocationChecksForLocalAnchorsFieldNumber = 237,
kDefaultSearchProviderNewTabURLFieldNumber = 239,
kFullscreenAllowedFieldNumber = 242,
kForceEphemeralProfilesFieldNumber = 247,
kNativeMessagingBlacklistFieldNumber = 253,
kNativeMessagingWhitelistFieldNumber = 254,
kNativeMessagingUserLevelHostsFieldNumber = 255,
kRemoteAccessHostAllowGnubbyAuthFieldNumber = 259,
kWPADQuickCheckEnabledFieldNumber = 263,
kRemoteAccessHostAllowRelayedConnectionFieldNumber = 265,
kRemoteAccessHostUdpPortRangeFieldNumber = 266,
kShowAppsShortcutInBookmarkBarFieldNumber = 269,
kRegisteredProtocolHandlersFieldNumber = 270,
kEnableDeprecatedWebPlatformFeaturesFieldNumber = 272,
kNetworkPredictionOptionsFieldNumber = 275,
kBrowserGuestModeEnabledFieldNumber = 277,
kBrowserAddPersonEnabledFieldNumber = 278,
kImportAutofillFormDataFieldNumber = 279,
kExtensionSettingsFieldNumber = 280,
kSSLVersionMinFieldNumber = 281,
kForceGoogleSafeSearchFieldNumber = 284,
kForceYouTubeSafetyModeFieldNumber = 285,
kRemoteAccessHostMatchUsernameFieldNumber = 287,
kRemoteAccessHostTokenUrlFieldNumber = 288,
kRemoteAccessHostTokenValidationUrlFieldNumber = 289,
kRemoteAccessHostTokenValidationCertificateIssuerFieldNumber = 290,
kSSLErrorOverrideAllowedFieldNumber = 302,
kQuicAllowedFieldNumber = 303,
kHardwareAccelerationModeEnabledFieldNumber = 306,
kDefaultPrinterSelectionFieldNumber = 310,
kAllowDinosaurEasterEggFieldNumber = 311,
kRemoteAccessHostClientDomainFieldNumber = 318,
kDefaultWebBluetoothGuardSettingFieldNumber = 322,
kSuppressUnsupportedOSWarningFieldNumber = 326,
kTaskManagerEndProcessEnabledFieldNumber = 329,
kAllowedDomainsForAppsFieldNumber = 333,
kEnableMediaRouterFieldNumber = 335,
kCertificateTransparencyEnforcementDisabledForUrlsFieldNumber = 337,
kWebRtcUdpPortRangeFieldNumber = 341,
kComponentUpdatesEnabledFieldNumber = 344,
kAlwaysOpenPdfExternallyFieldNumber = 349,
kForceYouTubeRestrictFieldNumber = 350,
kNewTabPageLocationFieldNumber = 362,
kShowCastIconInToolbarFieldNumber = 364,
kRemoteAccessHostDomainListFieldNumber = 370,
kRemoteAccessHostClientDomainListFieldNumber = 371,
kBrowserNetworkTimeQueriesEnabledFieldNumber = 372,
kDownloadRestrictionsFieldNumber = 373,
kPrintPreviewUseSystemDefaultPrinterFieldNumber = 375,
kCloudPolicyOverridesPlatformPolicyFieldNumber = 383,
kRunAllFlashInAllowModeFieldNumber = 393,
kAutofillCreditCardEnabledFieldNumber = 394,
kNtlmV2EnabledFieldNumber = 395,
kPromptForDownloadLocationFieldNumber = 397,
kIsolateOriginsFieldNumber = 400,
kSitePerProcessFieldNumber = 401,
kUnsafelyTreatInsecureOriginAsSecureFieldNumber = 402,
kDefaultDownloadDirectoryFieldNumber = 403,
kSecurityKeyPermitAttestationFieldNumber = 404,
kAbusiveExperienceInterventionEnforceFieldNumber = 406,
kSpellcheckLanguageFieldNumber = 407,
kSpellcheckEnabledFieldNumber = 410,
kAdsSettingForIntrusiveAdsSitesFieldNumber = 411,
kPasswordProtectionWarningTriggerFieldNumber = 413,
kRelaunchNotificationFieldNumber = 421,
kRelaunchNotificationPeriodFieldNumber = 422,
kSafeBrowsingWhitelistDomainsFieldNumber = 424,
kPasswordProtectionLoginURLsFieldNumber = 425,
kPasswordProtectionChangePasswordURLFieldNumber = 426,
kSafeBrowsingExtendedReportingEnabledFieldNumber = 431,
kAutoplayAllowedFieldNumber = 432,
kAutoplayWhitelistFieldNumber = 433,
kDefaultWebUsbGuardSettingFieldNumber = 436,
kCertificateTransparencyEnforcementDisabledForCasFieldNumber = 437,
kCertificateTransparencyEnforcementDisabledForLegacyCasFieldNumber = 438,
kMediaRouterCastAllowAllIPsFieldNumber = 439,
kWebUsbAskForUrlsFieldNumber = 441,
kWebUsbBlockedForUrlsFieldNumber = 442,
kDeveloperToolsAvailabilityFieldNumber = 445,
kPromotionalTabsEnabledFieldNumber = 456,
kSafeSitesFilterBehaviorFieldNumber = 457,
kOverrideSecurityRestrictionsOnInsecureOriginFieldNumber = 459,
kAutofillAddressEnabledFieldNumber = 461,
kUrlKeyedAnonymizedDataCollectionEnabledFieldNumber = 463,
kWebRtcEventLogCollectionAllowedFieldNumber = 466,
kCoalesceH2ConnectionsWithClientCertificatesForHostsFieldNumber = 468,
kWebAppInstallForceListFieldNumber = 470,
kReportVersionDataFieldNumber = 472,
kReportPolicyDataFieldNumber = 473,
kReportMachineIDDataFieldNumber = 474,
kReportUserIDDataFieldNumber = 475,
kPrintingPaperSizeDefaultFieldNumber = 481,
kPrintHeaderFooterFieldNumber = 482,
kEnterpriseHardwarePlatformAPIEnabledFieldNumber = 485,
kWebUsbAllowDevicesForUrlsFieldNumber = 488,
kBrowserSigninFieldNumber = 489,
kCloudReportingEnabledFieldNumber = 495,
kAlternativeBrowserPathFieldNumber = 496,
kAlternativeBrowserParametersFieldNumber = 497,
kBrowserSwitcherUrlListFieldNumber = 498,
kBrowserSwitcherUrlGreylistFieldNumber = 499,
kReportExtensionsAndPluginsDataFieldNumber = 501,
kCloudManagementEnrollmentMandatoryFieldNumber = 507,
kCloudManagementEnrollmentTokenFieldNumber = 512,
kBrowserSwitcherExternalSitelistUrlFieldNumber = 513,
kBrowserSwitcherEnabledFieldNumber = 519,
kBrowserSwitcherKeepLastChromeTabFieldNumber = 521,
kBrowserSwitcherDelayFieldNumber = 526,
kAuthNegotiateDelegateByKdcPolicyFieldNumber = 530,
kAllowPopupsDuringPageUnloadFieldNumber = 535,
kRemoteAccessHostAllowFileTransferFieldNumber = 536,
kSpellcheckLanguageBlacklistFieldNumber = 538,
kSignedHTTPExchangeEnabledFieldNumber = 544,
kExtensionInstallListsMergeEnabledFieldNumber = 546,
kPolicyListMultipleSourceMergeListFieldNumber = 556,
kBrowserSwitcherExternalGreylistUrlFieldNumber = 566,
kPolicyDictionaryMultipleSourceMergeListFieldNumber = 567,
kCommandLineFlagSecurityWarningsEnabledFieldNumber = 568,
kUserFeedbackAllowedFieldNumber = 572,
kBrowserGuestModeEnforcedFieldNumber = 576,
kPasswordLeakDetectionEnabledFieldNumber = 582,
kDnsOverHttpsModeFieldNumber = 584,
kSendFilesForMalwareCheckFieldNumber = 585,
kPolicyAtomicGroupsEnabledFieldNumber = 586,
kUnsafeEventsReportingEnabledFieldNumber = 587,
kBlockLargeFileTransferFieldNumber = 588,
kDelayDeliveryUntilVerdictFieldNumber = 589,
kAllowPasswordProtectedFilesFieldNumber = 590,
kCheckContentComplianceFieldNumber = 591,
kURLsToCheckComplianceOfDownloadedContentFieldNumber = 592,
kURLsToNotCheckComplianceOfUploadedContentFieldNumber = 593,
kURLsToCheckForMalwareOfUploadedContentFieldNumber = 602,
kHSTSPolicyBypassListFieldNumber = 603,
kAllowSyncXHRInPageDismissalFieldNumber = 606,
kCloudExtensionRequestEnabledFieldNumber = 610,
kSharedClipboardEnabledFieldNumber = 612,
kPrintingAllowedBackgroundGraphicsModesFieldNumber = 623,
kPrintingBackgroundGraphicsDefaultFieldNumber = 624,
kLegacySameSiteCookieBehaviorEnabledFieldNumber = 625,
kLegacySameSiteCookieBehaviorEnabledForDomainListFieldNumber = 626,
kTLS13HardeningForLocalAnchorsEnabledFieldNumber = 628,
kAudioSandboxEnabledFieldNumber = 629,
kCorsMitigationListFieldNumber = 631,
kCorsLegacyModeEnabledFieldNumber = 632,
kExternalProtocolDialogShowAlwaysOpenCheckboxFieldNumber = 634,
kDefaultInsecureContentSettingFieldNumber = 635,
kInsecureContentAllowedForUrlsFieldNumber = 636,
kInsecureContentBlockedForUrlsFieldNumber = 637,
kBlockExternalExtensionsFieldNumber = 639,
kWebRtcLocalIpsAllowedUrlsFieldNumber = 642,
kDnsOverHttpsTemplatesFieldNumber = 644,
kGloballyScopeHTTPAuthCacheEnabledFieldNumber = 645,
kClickToCallEnabledFieldNumber = 647,
kPrinterTypeDenyListFieldNumber = 649,
kForceLegacyDefaultReferrerPolicyFieldNumber = 650,
kSyncTypesListDisabledFieldNumber = 651,
kAmbientAuthenticationInPrivateModesEnabledFieldNumber = 652,
kPaymentMethodQueryEnabledFieldNumber = 653,
kStricterMixedContentTreatmentEnabledFieldNumber = 654,
kNTPCustomBackgroundEnabledFieldNumber = 655,
kDNSInterceptionChecksEnabledFieldNumber = 656,
kLocalDiscoveryEnabledFieldNumber = 664,
kChromeVariationsFieldNumber = 665,
kScreenCaptureAllowedFieldNumber = 668,
kBlockUnsupportedFiletypesFieldNumber = 670,
kURLsToNotCheckForMalwareOfDownloadedContentFieldNumber = 671,
kUserDataSnapshotRetentionLimitFieldNumber = 675,
kAllowNativeNotificationsFieldNumber = 680,
kSafeBrowsingProtectionLevelFieldNumber = 686,
kAdvancedProtectionAllowedFieldNumber = 687,
kScrollToTextFragmentEnabledFieldNumber = 689,
kOnFileAttachedEnterpriseConnectorFieldNumber = 695,
kOnFileDownloadedEnterpriseConnectorFieldNumber = 698,
kOnBulkDataEntryEnterpriseConnectorFieldNumber = 699,
kOnSecurityEventEnterpriseConnectorFieldNumber = 701,
kAutoOpenFileTypesFieldNumber = 702,
kAccessibilityImageLabelsEnabledFieldNumber = 705,
kAppCacheForceEnabledFieldNumber = 706,
kAutoOpenAllowedForURLsFieldNumber = 709,
kEnableExperimentalPoliciesFieldNumber = 713,
kIntensiveWakeUpThrottlingEnabledFieldNumber = 715,
kDefaultSearchProviderContextMenuAccessAllowedFieldNumber = 717,
kAutoLaunchProtocolsFromOriginsFieldNumber = 724,
};
// optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
bool has_homepagelocation() const;
void clear_homepagelocation();
const ::enterprise_management::StringPolicyProto& homepagelocation() const;
::enterprise_management::StringPolicyProto* release_homepagelocation();
::enterprise_management::StringPolicyProto* mutable_homepagelocation();
void set_allocated_homepagelocation(::enterprise_management::StringPolicyProto* homepagelocation);

// optional .enterprise_management.BooleanPolicyProto HomepageIsNewTabPage = 4;
bool has_homepageisnewtabpage() const;
void clear_homepageisnewtabpage();
const ::enterprise_management::BooleanPolicyProto& homepageisnewtabpage() const;
::enterprise_management::BooleanPolicyProto* release_homepageisnewtabpage();
::enterprise_management::BooleanPolicyProto* mutable_homepageisnewtabpage();
void set_allocated_homepageisnewtabpage(::enterprise_management::BooleanPolicyProto* homepageisnewtabpage);

// optional .enterprise_management.BooleanPolicyProto DefaultBrowserSettingEnabled = 5;
bool has_defaultbrowsersettingenabled() const;
void clear_defaultbrowsersettingenabled();
const ::enterprise_management::BooleanPolicyProto& defaultbrowsersettingenabled() const;
::enterprise_management::BooleanPolicyProto* release_defaultbrowsersettingenabled();
::enterprise_management::BooleanPolicyProto* mutable_defaultbrowsersettingenabled();
void set_allocated_defaultbrowsersettingenabled(::enterprise_management::BooleanPolicyProto* defaultbrowsersettingenabled);

// optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
bool has_alternateerrorpagesenabled() const;
void clear_alternateerrorpagesenabled();
const ::enterprise_management::BooleanPolicyProto& alternateerrorpagesenabled() const;
::enterprise_management::BooleanPolicyProto* release_alternateerrorpagesenabled();
::enterprise_management::BooleanPolicyProto* mutable_alternateerrorpagesenabled();
void set_allocated_alternateerrorpagesenabled(::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled);

// optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
bool has_searchsuggestenabled() const;
void clear_searchsuggestenabled();
const ::enterprise_management::BooleanPolicyProto& searchsuggestenabled() const;
::enterprise_management::BooleanPolicyProto* release_searchsuggestenabled();
::enterprise_management::BooleanPolicyProto* mutable_searchsuggestenabled();
void set_allocated_searchsuggestenabled(::enterprise_management::BooleanPolicyProto* searchsuggestenabled);

// optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
bool has_javascriptenabled() const;
void clear_javascriptenabled();
const ::enterprise_management::BooleanPolicyProto& javascriptenabled() const;
::enterprise_management::BooleanPolicyProto* release_javascriptenabled();
::enterprise_management::BooleanPolicyProto* mutable_javascriptenabled();
void set_allocated_javascriptenabled(::enterprise_management::BooleanPolicyProto* javascriptenabled);

// optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
bool has_incognitoenabled() const;
void clear_incognitoenabled();
const ::enterprise_management::BooleanPolicyProto& incognitoenabled() const;
::enterprise_management::BooleanPolicyProto* release_incognitoenabled();
::enterprise_management::BooleanPolicyProto* mutable_incognitoenabled();
void set_allocated_incognitoenabled(::enterprise_management::BooleanPolicyProto* incognitoenabled);

// optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
bool has_savingbrowserhistorydisabled() const;
void clear_savingbrowserhistorydisabled();
const ::enterprise_management::BooleanPolicyProto& savingbrowserhistorydisabled() const;
::enterprise_management::BooleanPolicyProto* release_savingbrowserhistorydisabled();
::enterprise_management::BooleanPolicyProto* mutable_savingbrowserhistorydisabled();
void set_allocated_savingbrowserhistorydisabled(::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled);

// optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
bool has_printingenabled() const;
void clear_printingenabled();
const ::enterprise_management::BooleanPolicyProto& printingenabled() const;
::enterprise_management::BooleanPolicyProto* release_printingenabled();
::enterprise_management::BooleanPolicyProto* mutable_printingenabled();
void set_allocated_printingenabled(::enterprise_management::BooleanPolicyProto* printingenabled);

// optional .enterprise_management.BooleanPolicyProto CloudPrintProxyEnabled = 15;
bool has_cloudprintproxyenabled() const;
void clear_cloudprintproxyenabled();
const ::enterprise_management::BooleanPolicyProto& cloudprintproxyenabled() const;
::enterprise_management::BooleanPolicyProto* release_cloudprintproxyenabled();
::enterprise_management::BooleanPolicyProto* mutable_cloudprintproxyenabled();
void set_allocated_cloudprintproxyenabled(::enterprise_management::BooleanPolicyProto* cloudprintproxyenabled);

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
bool has_safebrowsingenabled() const;
void clear_safebrowsingenabled();
const ::enterprise_management::BooleanPolicyProto& safebrowsingenabled() const;
::enterprise_management::BooleanPolicyProto* release_safebrowsingenabled();
::enterprise_management::BooleanPolicyProto* mutable_safebrowsingenabled();
void set_allocated_safebrowsingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingenabled);

// optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
bool has_metricsreportingenabled() const;
void clear_metricsreportingenabled();
const ::enterprise_management::BooleanPolicyProto& metricsreportingenabled() const;
::enterprise_management::BooleanPolicyProto* release_metricsreportingenabled();
::enterprise_management::BooleanPolicyProto* mutable_metricsreportingenabled();
void set_allocated_metricsreportingenabled(::enterprise_management::BooleanPolicyProto* metricsreportingenabled);

// optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
bool has_passwordmanagerenabled() const;
void clear_passwordmanagerenabled();
const ::enterprise_management::BooleanPolicyProto& passwordmanagerenabled() const;
::enterprise_management::BooleanPolicyProto* release_passwordmanagerenabled();
::enterprise_management::BooleanPolicyProto* mutable_passwordmanagerenabled();
void set_allocated_passwordmanagerenabled(::enterprise_management::BooleanPolicyProto* passwordmanagerenabled);

// optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
bool has_autofillenabled() const;
void clear_autofillenabled();
const ::enterprise_management::BooleanPolicyProto& autofillenabled() const;
::enterprise_management::BooleanPolicyProto* release_autofillenabled();
::enterprise_management::BooleanPolicyProto* mutable_autofillenabled();
void set_allocated_autofillenabled(::enterprise_management::BooleanPolicyProto* autofillenabled);

// optional .enterprise_management.StringListPolicyProto DisabledPlugins = 21;
bool has_disabledplugins() const;
void clear_disabledplugins();
const ::enterprise_management::StringListPolicyProto& disabledplugins() const;
::enterprise_management::StringListPolicyProto* release_disabledplugins();
::enterprise_management::StringListPolicyProto* mutable_disabledplugins();
void set_allocated_disabledplugins(::enterprise_management::StringListPolicyProto* disabledplugins);

// optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
bool has_syncdisabled() const;
void clear_syncdisabled();
const ::enterprise_management::BooleanPolicyProto& syncdisabled() const;
::enterprise_management::BooleanPolicyProto* release_syncdisabled();
::enterprise_management::BooleanPolicyProto* mutable_syncdisabled();
void set_allocated_syncdisabled(::enterprise_management::BooleanPolicyProto* syncdisabled);

// optional .enterprise_management.StringPolicyProto ProxyMode = 23;
bool has_proxymode() const;
void clear_proxymode();
const ::enterprise_management::StringPolicyProto& proxymode() const;
::enterprise_management::StringPolicyProto* release_proxymode();
::enterprise_management::StringPolicyProto* mutable_proxymode();
void set_allocated_proxymode(::enterprise_management::StringPolicyProto* proxymode);

// optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
bool has_proxyservermode() const;
void clear_proxyservermode();
const ::enterprise_management::IntegerPolicyProto& proxyservermode() const;
::enterprise_management::IntegerPolicyProto* release_proxyservermode();
::enterprise_management::IntegerPolicyProto* mutable_proxyservermode();
void set_allocated_proxyservermode(::enterprise_management::IntegerPolicyProto* proxyservermode);

// optional .enterprise_management.StringPolicyProto ProxyServer = 25;
bool has_proxyserver() const;
void clear_proxyserver();
const ::enterprise_management::StringPolicyProto& proxyserver() const;
::enterprise_management::StringPolicyProto* release_proxyserver();
::enterprise_management::StringPolicyProto* mutable_proxyserver();
void set_allocated_proxyserver(::enterprise_management::StringPolicyProto* proxyserver);

// optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
bool has_proxypacurl() const;
void clear_proxypacurl();
const ::enterprise_management::StringPolicyProto& proxypacurl() const;
::enterprise_management::StringPolicyProto* release_proxypacurl();
::enterprise_management::StringPolicyProto* mutable_proxypacurl();
void set_allocated_proxypacurl(::enterprise_management::StringPolicyProto* proxypacurl);

// optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
bool has_proxybypasslist() const;
void clear_proxybypasslist();
const ::enterprise_management::StringPolicyProto& proxybypasslist() const;
::enterprise_management::StringPolicyProto* release_proxybypasslist();
::enterprise_management::StringPolicyProto* mutable_proxybypasslist();
void set_allocated_proxybypasslist(::enterprise_management::StringPolicyProto* proxybypasslist);

// optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
bool has_authschemes() const;
void clear_authschemes();
const ::enterprise_management::StringPolicyProto& authschemes() const;
::enterprise_management::StringPolicyProto* release_authschemes();
::enterprise_management::StringPolicyProto* mutable_authschemes();
void set_allocated_authschemes(::enterprise_management::StringPolicyProto* authschemes);

// optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
bool has_disableauthnegotiatecnamelookup() const;
void clear_disableauthnegotiatecnamelookup();
const ::enterprise_management::BooleanPolicyProto& disableauthnegotiatecnamelookup() const;
::enterprise_management::BooleanPolicyProto* release_disableauthnegotiatecnamelookup();
::enterprise_management::BooleanPolicyProto* mutable_disableauthnegotiatecnamelookup();
void set_allocated_disableauthnegotiatecnamelookup(::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup);

// optional .enterprise_management.BooleanPolicyProto EnableAuthNegotiatePort = 30;
bool has_enableauthnegotiateport() const;
void clear_enableauthnegotiateport();
const ::enterprise_management::BooleanPolicyProto& enableauthnegotiateport() const;
::enterprise_management::BooleanPolicyProto* release_enableauthnegotiateport();
::enterprise_management::BooleanPolicyProto* mutable_enableauthnegotiateport();
void set_allocated_enableauthnegotiateport(::enterprise_management::BooleanPolicyProto* enableauthnegotiateport);

// optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
bool has_authserverwhitelist() const;
void clear_authserverwhitelist();
const ::enterprise_management::StringPolicyProto& authserverwhitelist() const;
::enterprise_management::StringPolicyProto* release_authserverwhitelist();
::enterprise_management::StringPolicyProto* mutable_authserverwhitelist();
void set_allocated_authserverwhitelist(::enterprise_management::StringPolicyProto* authserverwhitelist);

// optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
bool has_authnegotiatedelegatewhitelist() const;
void clear_authnegotiatedelegatewhitelist();
const ::enterprise_management::StringPolicyProto& authnegotiatedelegatewhitelist() const;
::enterprise_management::StringPolicyProto* release_authnegotiatedelegatewhitelist();
::enterprise_management::StringPolicyProto* mutable_authnegotiatedelegatewhitelist();
void set_allocated_authnegotiatedelegatewhitelist(::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist);

// optional .enterprise_management.StringPolicyProto GSSAPILibraryName = 33;
bool has_gssapilibraryname() const;
void clear_gssapilibraryname();
const ::enterprise_management::StringPolicyProto& gssapilibraryname() const;
::enterprise_management::StringPolicyProto* release_gssapilibraryname();
::enterprise_management::StringPolicyProto* mutable_gssapilibraryname();
void set_allocated_gssapilibraryname(::enterprise_management::StringPolicyProto* gssapilibraryname);

// optional .enterprise_management.StringListPolicyProto ExtensionInstallBlacklist = 34;
bool has_extensioninstallblacklist() const;
void clear_extensioninstallblacklist();
const ::enterprise_management::StringListPolicyProto& extensioninstallblacklist() const;
::enterprise_management::StringListPolicyProto* release_extensioninstallblacklist();
::enterprise_management::StringListPolicyProto* mutable_extensioninstallblacklist();
void set_allocated_extensioninstallblacklist(::enterprise_management::StringListPolicyProto* extensioninstallblacklist);

// optional .enterprise_management.StringListPolicyProto ExtensionInstallWhitelist = 35;
bool has_extensioninstallwhitelist() const;
void clear_extensioninstallwhitelist();
const ::enterprise_management::StringListPolicyProto& extensioninstallwhitelist() const;
::enterprise_management::StringListPolicyProto* release_extensioninstallwhitelist();
::enterprise_management::StringListPolicyProto* mutable_extensioninstallwhitelist();
void set_allocated_extensioninstallwhitelist(::enterprise_management::StringListPolicyProto* extensioninstallwhitelist);

// optional .enterprise_management.StringListPolicyProto ExtensionInstallForcelist = 36;
bool has_extensioninstallforcelist() const;
void clear_extensioninstallforcelist();
const ::enterprise_management::StringListPolicyProto& extensioninstallforcelist() const;
::enterprise_management::StringListPolicyProto* release_extensioninstallforcelist();
::enterprise_management::StringListPolicyProto* mutable_extensioninstallforcelist();
void set_allocated_extensioninstallforcelist(::enterprise_management::StringListPolicyProto* extensioninstallforcelist);

// optional .enterprise_management.BooleanPolicyProto ShowHomeButton = 37;
bool has_showhomebutton() const;
void clear_showhomebutton();
const ::enterprise_management::BooleanPolicyProto& showhomebutton() const;
::enterprise_management::BooleanPolicyProto* release_showhomebutton();
::enterprise_management::BooleanPolicyProto* mutable_showhomebutton();
void set_allocated_showhomebutton(::enterprise_management::BooleanPolicyProto* showhomebutton);

// optional .enterprise_management.BooleanPolicyProto DeveloperToolsDisabled = 38;
bool has_developertoolsdisabled() const;
void clear_developertoolsdisabled();
const ::enterprise_management::BooleanPolicyProto& developertoolsdisabled() const;
::enterprise_management::BooleanPolicyProto* release_developertoolsdisabled();
::enterprise_management::BooleanPolicyProto* mutable_developertoolsdisabled();
void set_allocated_developertoolsdisabled(::enterprise_management::BooleanPolicyProto* developertoolsdisabled);

// optional .enterprise_management.IntegerPolicyProto RestoreOnStartup = 39;
bool has_restoreonstartup() const;
void clear_restoreonstartup();
const ::enterprise_management::IntegerPolicyProto& restoreonstartup() const;
::enterprise_management::IntegerPolicyProto* release_restoreonstartup();
::enterprise_management::IntegerPolicyProto* mutable_restoreonstartup();
void set_allocated_restoreonstartup(::enterprise_management::IntegerPolicyProto* restoreonstartup);

// optional .enterprise_management.StringListPolicyProto RestoreOnStartupURLs = 40;
bool has_restoreonstartupurls() const;
void clear_restoreonstartupurls();
const ::enterprise_management::StringListPolicyProto& restoreonstartupurls() const;
::enterprise_management::StringListPolicyProto* release_restoreonstartupurls();
::enterprise_management::StringListPolicyProto* mutable_restoreonstartupurls();
void set_allocated_restoreonstartupurls(::enterprise_management::StringListPolicyProto* restoreonstartupurls);

// optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
bool has_blockthirdpartycookies() const;
void clear_blockthirdpartycookies();
const ::enterprise_management::BooleanPolicyProto& blockthirdpartycookies() const;
::enterprise_management::BooleanPolicyProto* release_blockthirdpartycookies();
::enterprise_management::BooleanPolicyProto* mutable_blockthirdpartycookies();
void set_allocated_blockthirdpartycookies(::enterprise_management::BooleanPolicyProto* blockthirdpartycookies);

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
bool has_defaultsearchproviderenabled() const;
void clear_defaultsearchproviderenabled();
const ::enterprise_management::BooleanPolicyProto& defaultsearchproviderenabled() const;
::enterprise_management::BooleanPolicyProto* release_defaultsearchproviderenabled();
::enterprise_management::BooleanPolicyProto* mutable_defaultsearchproviderenabled();
void set_allocated_defaultsearchproviderenabled(::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
bool has_defaultsearchprovidername() const;
void clear_defaultsearchprovidername();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidername() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidername();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidername();
void set_allocated_defaultsearchprovidername(::enterprise_management::StringPolicyProto* defaultsearchprovidername);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
bool has_defaultsearchproviderkeyword() const;
void clear_defaultsearchproviderkeyword();
const ::enterprise_management::StringPolicyProto& defaultsearchproviderkeyword() const;
::enterprise_management::StringPolicyProto* release_defaultsearchproviderkeyword();
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderkeyword();
void set_allocated_defaultsearchproviderkeyword(::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
bool has_defaultsearchprovidersearchurl() const;
void clear_defaultsearchprovidersearchurl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersearchurl() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersearchurl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersearchurl();
void set_allocated_defaultsearchprovidersearchurl(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
bool has_defaultsearchprovidersuggesturl() const;
void clear_defaultsearchprovidersuggesturl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersuggesturl() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersuggesturl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersuggesturl();
void set_allocated_defaultsearchprovidersuggesturl(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
bool has_defaultsearchprovidericonurl() const;
void clear_defaultsearchprovidericonurl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidericonurl() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidericonurl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidericonurl();
void set_allocated_defaultsearchprovidericonurl(::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl);

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
bool has_defaultsearchproviderencodings() const;
void clear_defaultsearchproviderencodings();
const ::enterprise_management::StringListPolicyProto& defaultsearchproviderencodings() const;
::enterprise_management::StringListPolicyProto* release_defaultsearchproviderencodings();
::enterprise_management::StringListPolicyProto* mutable_defaultsearchproviderencodings();
void set_allocated_defaultsearchproviderencodings(::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings);

// optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
bool has_defaultcookiessetting() const;
void clear_defaultcookiessetting();
const ::enterprise_management::IntegerPolicyProto& defaultcookiessetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultcookiessetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultcookiessetting();
void set_allocated_defaultcookiessetting(::enterprise_management::IntegerPolicyProto* defaultcookiessetting);

// optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
bool has_defaultimagessetting() const;
void clear_defaultimagessetting();
const ::enterprise_management::IntegerPolicyProto& defaultimagessetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultimagessetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultimagessetting();
void set_allocated_defaultimagessetting(::enterprise_management::IntegerPolicyProto* defaultimagessetting);

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
bool has_defaultjavascriptsetting() const;
void clear_defaultjavascriptsetting();
const ::enterprise_management::IntegerPolicyProto& defaultjavascriptsetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultjavascriptsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultjavascriptsetting();
void set_allocated_defaultjavascriptsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting);

// optional .enterprise_management.IntegerPolicyProto DefaultPluginsSetting = 53;
bool has_defaultpluginssetting() const;
void clear_defaultpluginssetting();
const ::enterprise_management::IntegerPolicyProto& defaultpluginssetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultpluginssetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultpluginssetting();
void set_allocated_defaultpluginssetting(::enterprise_management::IntegerPolicyProto* defaultpluginssetting);

// optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
bool has_defaultpopupssetting() const;
void clear_defaultpopupssetting();
const ::enterprise_management::IntegerPolicyProto& defaultpopupssetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultpopupssetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultpopupssetting();
void set_allocated_defaultpopupssetting(::enterprise_management::IntegerPolicyProto* defaultpopupssetting);

// optional .enterprise_management.IntegerPolicyProto DefaultNotificationsSetting = 55;
bool has_defaultnotificationssetting() const;
void clear_defaultnotificationssetting();
const ::enterprise_management::IntegerPolicyProto& defaultnotificationssetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultnotificationssetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultnotificationssetting();
void set_allocated_defaultnotificationssetting(::enterprise_management::IntegerPolicyProto* defaultnotificationssetting);

// optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
bool has_defaultgeolocationsetting() const;
void clear_defaultgeolocationsetting();
const ::enterprise_management::IntegerPolicyProto& defaultgeolocationsetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultgeolocationsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultgeolocationsetting();
void set_allocated_defaultgeolocationsetting(::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting);

// optional .enterprise_management.BooleanPolicyProto Disable3DAPIs = 57;
bool has_disable3dapis() const;
void clear_disable3dapis();
const ::enterprise_management::BooleanPolicyProto& disable3dapis() const;
::enterprise_management::BooleanPolicyProto* release_disable3dapis();
::enterprise_management::BooleanPolicyProto* mutable_disable3dapis();
void set_allocated_disable3dapis(::enterprise_management::BooleanPolicyProto* disable3dapis);

// optional .enterprise_management.IntegerPolicyProto PolicyRefreshRate = 58;
bool has_policyrefreshrate() const;
void clear_policyrefreshrate();
const ::enterprise_management::IntegerPolicyProto& policyrefreshrate() const;
::enterprise_management::IntegerPolicyProto* release_policyrefreshrate();
::enterprise_management::IntegerPolicyProto* mutable_policyrefreshrate();
void set_allocated_policyrefreshrate(::enterprise_management::IntegerPolicyProto* policyrefreshrate);

// optional .enterprise_management.StringPolicyProto DownloadDirectory = 66;
bool has_downloaddirectory() const;
void clear_downloaddirectory();
const ::enterprise_management::StringPolicyProto& downloaddirectory() const;
::enterprise_management::StringPolicyProto* release_downloaddirectory();
::enterprise_management::StringPolicyProto* mutable_downloaddirectory();
void set_allocated_downloaddirectory(::enterprise_management::StringPolicyProto* downloaddirectory);

// optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
bool has_cookiesblockedforurls() const;
void clear_cookiesblockedforurls();
const ::enterprise_management::StringListPolicyProto& cookiesblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_cookiesblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_cookiesblockedforurls();
void set_allocated_cookiesblockedforurls(::enterprise_management::StringListPolicyProto* cookiesblockedforurls);

// optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
bool has_cookiessessiononlyforurls() const;
void clear_cookiessessiononlyforurls();
const ::enterprise_management::StringListPolicyProto& cookiessessiononlyforurls() const;
::enterprise_management::StringListPolicyProto* release_cookiessessiononlyforurls();
::enterprise_management::StringListPolicyProto* mutable_cookiessessiononlyforurls();
void set_allocated_cookiessessiononlyforurls(::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls);

// optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
bool has_imagesallowedforurls() const;
void clear_imagesallowedforurls();
const ::enterprise_management::StringListPolicyProto& imagesallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_imagesallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_imagesallowedforurls();
void set_allocated_imagesallowedforurls(::enterprise_management::StringListPolicyProto* imagesallowedforurls);

// optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
bool has_imagesblockedforurls() const;
void clear_imagesblockedforurls();
const ::enterprise_management::StringListPolicyProto& imagesblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_imagesblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_imagesblockedforurls();
void set_allocated_imagesblockedforurls(::enterprise_management::StringListPolicyProto* imagesblockedforurls);

// optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
bool has_javascriptallowedforurls() const;
void clear_javascriptallowedforurls();
const ::enterprise_management::StringListPolicyProto& javascriptallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_javascriptallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_javascriptallowedforurls();
void set_allocated_javascriptallowedforurls(::enterprise_management::StringListPolicyProto* javascriptallowedforurls);

// optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
bool has_javascriptblockedforurls() const;
void clear_javascriptblockedforurls();
const ::enterprise_management::StringListPolicyProto& javascriptblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_javascriptblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_javascriptblockedforurls();
void set_allocated_javascriptblockedforurls(::enterprise_management::StringListPolicyProto* javascriptblockedforurls);

// optional .enterprise_management.StringListPolicyProto PluginsAllowedForUrls = 75;
bool has_pluginsallowedforurls() const;
void clear_pluginsallowedforurls();
const ::enterprise_management::StringListPolicyProto& pluginsallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_pluginsallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_pluginsallowedforurls();
void set_allocated_pluginsallowedforurls(::enterprise_management::StringListPolicyProto* pluginsallowedforurls);

// optional .enterprise_management.StringListPolicyProto PluginsBlockedForUrls = 76;
bool has_pluginsblockedforurls() const;
void clear_pluginsblockedforurls();
const ::enterprise_management::StringListPolicyProto& pluginsblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_pluginsblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_pluginsblockedforurls();
void set_allocated_pluginsblockedforurls(::enterprise_management::StringListPolicyProto* pluginsblockedforurls);

// optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
bool has_popupsallowedforurls() const;
void clear_popupsallowedforurls();
const ::enterprise_management::StringListPolicyProto& popupsallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_popupsallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_popupsallowedforurls();
void set_allocated_popupsallowedforurls(::enterprise_management::StringListPolicyProto* popupsallowedforurls);

// optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
bool has_popupsblockedforurls() const;
void clear_popupsblockedforurls();
const ::enterprise_management::StringListPolicyProto& popupsblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_popupsblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_popupsblockedforurls();
void set_allocated_popupsblockedforurls(::enterprise_management::StringListPolicyProto* popupsblockedforurls);

// optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
bool has_cookiesallowedforurls() const;
void clear_cookiesallowedforurls();
const ::enterprise_management::StringListPolicyProto& cookiesallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_cookiesallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_cookiesallowedforurls();
void set_allocated_cookiesallowedforurls(::enterprise_management::StringListPolicyProto* cookiesallowedforurls);

// optional .enterprise_management.StringListPolicyProto EnabledPlugins = 80;
bool has_enabledplugins() const;
void clear_enabledplugins();
const ::enterprise_management::StringListPolicyProto& enabledplugins() const;
::enterprise_management::StringListPolicyProto* release_enabledplugins();
::enterprise_management::StringListPolicyProto* mutable_enabledplugins();
void set_allocated_enabledplugins(::enterprise_management::StringListPolicyProto* enabledplugins);

// optional .enterprise_management.StringListPolicyProto DisabledPluginsExceptions = 81;
bool has_disabledpluginsexceptions() const;
void clear_disabledpluginsexceptions();
const ::enterprise_management::StringListPolicyProto& disabledpluginsexceptions() const;
::enterprise_management::StringListPolicyProto* release_disabledpluginsexceptions();
::enterprise_management::StringListPolicyProto* mutable_disabledpluginsexceptions();
void set_allocated_disabledpluginsexceptions(::enterprise_management::StringListPolicyProto* disabledpluginsexceptions);

// optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
bool has_translateenabled() const;
void clear_translateenabled();
const ::enterprise_management::BooleanPolicyProto& translateenabled() const;
::enterprise_management::BooleanPolicyProto* release_translateenabled();
::enterprise_management::BooleanPolicyProto* mutable_translateenabled();
void set_allocated_translateenabled(::enterprise_management::BooleanPolicyProto* translateenabled);

// optional .enterprise_management.BooleanPolicyProto AllowOutdatedPlugins = 83;
bool has_allowoutdatedplugins() const;
void clear_allowoutdatedplugins();
const ::enterprise_management::BooleanPolicyProto& allowoutdatedplugins() const;
::enterprise_management::BooleanPolicyProto* release_allowoutdatedplugins();
::enterprise_management::BooleanPolicyProto* mutable_allowoutdatedplugins();
void set_allocated_allowoutdatedplugins(::enterprise_management::BooleanPolicyProto* allowoutdatedplugins);

// optional .enterprise_management.BooleanPolicyProto BookmarkBarEnabled = 84;
bool has_bookmarkbarenabled() const;
void clear_bookmarkbarenabled();
const ::enterprise_management::BooleanPolicyProto& bookmarkbarenabled() const;
::enterprise_management::BooleanPolicyProto* release_bookmarkbarenabled();
::enterprise_management::BooleanPolicyProto* mutable_bookmarkbarenabled();
void set_allocated_bookmarkbarenabled(::enterprise_management::BooleanPolicyProto* bookmarkbarenabled);

// optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
bool has_editbookmarksenabled() const;
void clear_editbookmarksenabled();
const ::enterprise_management::BooleanPolicyProto& editbookmarksenabled() const;
::enterprise_management::BooleanPolicyProto* release_editbookmarksenabled();
::enterprise_management::BooleanPolicyProto* mutable_editbookmarksenabled();
void set_allocated_editbookmarksenabled(::enterprise_management::BooleanPolicyProto* editbookmarksenabled);

// optional .enterprise_management.BooleanPolicyProto AllowFileSelectionDialogs = 86;
bool has_allowfileselectiondialogs() const;
void clear_allowfileselectiondialogs();
const ::enterprise_management::BooleanPolicyProto& allowfileselectiondialogs() const;
::enterprise_management::BooleanPolicyProto* release_allowfileselectiondialogs();
::enterprise_management::BooleanPolicyProto* mutable_allowfileselectiondialogs();
void set_allocated_allowfileselectiondialogs(::enterprise_management::BooleanPolicyProto* allowfileselectiondialogs);

// optional .enterprise_management.StringListPolicyProto DisabledSchemes = 87;
bool has_disabledschemes() const;
void clear_disabledschemes();
const ::enterprise_management::StringListPolicyProto& disabledschemes() const;
::enterprise_management::StringListPolicyProto* release_disabledschemes();
::enterprise_management::StringListPolicyProto* mutable_disabledschemes();
void set_allocated_disabledschemes(::enterprise_management::StringListPolicyProto* disabledschemes);

// optional .enterprise_management.StringPolicyProto DiskCacheDir = 90;
bool has_diskcachedir() const;
void clear_diskcachedir();
const ::enterprise_management::StringPolicyProto& diskcachedir() const;
::enterprise_management::StringPolicyProto* release_diskcachedir();
::enterprise_management::StringPolicyProto* mutable_diskcachedir();
void set_allocated_diskcachedir(::enterprise_management::StringPolicyProto* diskcachedir);

// optional .enterprise_management.BooleanPolicyProto AllowCrossOriginAuthPrompt = 91;
bool has_allowcrossoriginauthprompt() const;
void clear_allowcrossoriginauthprompt();
const ::enterprise_management::BooleanPolicyProto& allowcrossoriginauthprompt() const;
::enterprise_management::BooleanPolicyProto* release_allowcrossoriginauthprompt();
::enterprise_management::BooleanPolicyProto* mutable_allowcrossoriginauthprompt();
void set_allocated_allowcrossoriginauthprompt(::enterprise_management::BooleanPolicyProto* allowcrossoriginauthprompt);

// optional .enterprise_management.IntegerPolicyProto MaxConnectionsPerProxy = 94;
bool has_maxconnectionsperproxy() const;
void clear_maxconnectionsperproxy();
const ::enterprise_management::IntegerPolicyProto& maxconnectionsperproxy() const;
::enterprise_management::IntegerPolicyProto* release_maxconnectionsperproxy();
::enterprise_management::IntegerPolicyProto* mutable_maxconnectionsperproxy();
void set_allocated_maxconnectionsperproxy(::enterprise_management::IntegerPolicyProto* maxconnectionsperproxy);

// optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
bool has_incognitomodeavailability() const;
void clear_incognitomodeavailability();
const ::enterprise_management::IntegerPolicyProto& incognitomodeavailability() const;
::enterprise_management::IntegerPolicyProto* release_incognitomodeavailability();
::enterprise_management::IntegerPolicyProto* mutable_incognitomodeavailability();
void set_allocated_incognitomodeavailability(::enterprise_management::IntegerPolicyProto* incognitomodeavailability);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostFirewallTraversal = 97;
bool has_remoteaccesshostfirewalltraversal() const;
void clear_remoteaccesshostfirewalltraversal();
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostfirewalltraversal() const;
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostfirewalltraversal();
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostfirewalltraversal();
void set_allocated_remoteaccesshostfirewalltraversal(::enterprise_management::BooleanPolicyProto* remoteaccesshostfirewalltraversal);

// optional .enterprise_management.BooleanPolicyProto ImportBookmarks = 99;
bool has_importbookmarks() const;
void clear_importbookmarks();
const ::enterprise_management::BooleanPolicyProto& importbookmarks() const;
::enterprise_management::BooleanPolicyProto* release_importbookmarks();
::enterprise_management::BooleanPolicyProto* mutable_importbookmarks();
void set_allocated_importbookmarks(::enterprise_management::BooleanPolicyProto* importbookmarks);

// optional .enterprise_management.BooleanPolicyProto ImportHistory = 100;
bool has_importhistory() const;
void clear_importhistory();
const ::enterprise_management::BooleanPolicyProto& importhistory() const;
::enterprise_management::BooleanPolicyProto* release_importhistory();
::enterprise_management::BooleanPolicyProto* mutable_importhistory();
void set_allocated_importhistory(::enterprise_management::BooleanPolicyProto* importhistory);

// optional .enterprise_management.BooleanPolicyProto ImportHomepage = 101;
bool has_importhomepage() const;
void clear_importhomepage();
const ::enterprise_management::BooleanPolicyProto& importhomepage() const;
::enterprise_management::BooleanPolicyProto* release_importhomepage();
::enterprise_management::BooleanPolicyProto* mutable_importhomepage();
void set_allocated_importhomepage(::enterprise_management::BooleanPolicyProto* importhomepage);

// optional .enterprise_management.BooleanPolicyProto ImportSearchEngine = 102;
bool has_importsearchengine() const;
void clear_importsearchengine();
const ::enterprise_management::BooleanPolicyProto& importsearchengine() const;
::enterprise_management::BooleanPolicyProto* release_importsearchengine();
::enterprise_management::BooleanPolicyProto* mutable_importsearchengine();
void set_allocated_importsearchengine(::enterprise_management::BooleanPolicyProto* importsearchengine);

// optional .enterprise_management.BooleanPolicyProto ImportSavedPasswords = 103;
bool has_importsavedpasswords() const;
void clear_importsavedpasswords();
const ::enterprise_management::BooleanPolicyProto& importsavedpasswords() const;
::enterprise_management::BooleanPolicyProto* release_importsavedpasswords();
::enterprise_management::BooleanPolicyProto* mutable_importsavedpasswords();
void set_allocated_importsavedpasswords(::enterprise_management::BooleanPolicyProto* importsavedpasswords);

// optional .enterprise_management.StringListPolicyProto AutoSelectCertificateForUrls = 104;
bool has_autoselectcertificateforurls() const;
void clear_autoselectcertificateforurls();
const ::enterprise_management::StringListPolicyProto& autoselectcertificateforurls() const;
::enterprise_management::StringListPolicyProto* release_autoselectcertificateforurls();
::enterprise_management::StringListPolicyProto* mutable_autoselectcertificateforurls();
void set_allocated_autoselectcertificateforurls(::enterprise_management::StringListPolicyProto* autoselectcertificateforurls);

// optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
bool has_urlblacklist() const;
void clear_urlblacklist();
const ::enterprise_management::StringListPolicyProto& urlblacklist() const;
::enterprise_management::StringListPolicyProto* release_urlblacklist();
::enterprise_management::StringListPolicyProto* mutable_urlblacklist();
void set_allocated_urlblacklist(::enterprise_management::StringListPolicyProto* urlblacklist);

// optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
bool has_urlwhitelist() const;
void clear_urlwhitelist();
const ::enterprise_management::StringListPolicyProto& urlwhitelist() const;
::enterprise_management::StringListPolicyProto* release_urlwhitelist();
::enterprise_management::StringListPolicyProto* mutable_urlwhitelist();
void set_allocated_urlwhitelist(::enterprise_management::StringListPolicyProto* urlwhitelist);

// optional .enterprise_management.StringListPolicyProto NotificationsAllowedForUrls = 107;
bool has_notificationsallowedforurls() const;
void clear_notificationsallowedforurls();
const ::enterprise_management::StringListPolicyProto& notificationsallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_notificationsallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_notificationsallowedforurls();
void set_allocated_notificationsallowedforurls(::enterprise_management::StringListPolicyProto* notificationsallowedforurls);

// optional .enterprise_management.StringListPolicyProto NotificationsBlockedForUrls = 108;
bool has_notificationsblockedforurls() const;
void clear_notificationsblockedforurls();
const ::enterprise_management::StringListPolicyProto& notificationsblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_notificationsblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_notificationsblockedforurls();
void set_allocated_notificationsblockedforurls(::enterprise_management::StringListPolicyProto* notificationsblockedforurls);

// optional .enterprise_management.BooleanPolicyProto CloudPrintSubmitEnabled = 111;
bool has_cloudprintsubmitenabled() const;
void clear_cloudprintsubmitenabled();
const ::enterprise_management::BooleanPolicyProto& cloudprintsubmitenabled() const;
::enterprise_management::BooleanPolicyProto* release_cloudprintsubmitenabled();
::enterprise_management::BooleanPolicyProto* mutable_cloudprintsubmitenabled();
void set_allocated_cloudprintsubmitenabled(::enterprise_management::BooleanPolicyProto* cloudprintsubmitenabled);

// optional .enterprise_management.IntegerPolicyProto DiskCacheSize = 112;
bool has_diskcachesize() const;
void clear_diskcachesize();
const ::enterprise_management::IntegerPolicyProto& diskcachesize() const;
::enterprise_management::IntegerPolicyProto* release_diskcachesize();
::enterprise_management::IntegerPolicyProto* mutable_diskcachesize();
void set_allocated_diskcachesize(::enterprise_management::IntegerPolicyProto* diskcachesize);

// optional .enterprise_management.StringPolicyProto ProxySettings = 118;
bool has_proxysettings() const;
void clear_proxysettings();
const ::enterprise_management::StringPolicyProto& proxysettings() const;
::enterprise_management::StringPolicyProto* release_proxysettings();
::enterprise_management::StringPolicyProto* mutable_proxysettings();
void set_allocated_proxysettings(::enterprise_management::StringPolicyProto* proxysettings);

// optional .enterprise_management.BooleanPolicyProto DisablePrintPreview = 119;
bool has_disableprintpreview() const;
void clear_disableprintpreview();
const ::enterprise_management::BooleanPolicyProto& disableprintpreview() const;
::enterprise_management::BooleanPolicyProto* release_disableprintpreview();
::enterprise_management::BooleanPolicyProto* mutable_disableprintpreview();
void set_allocated_disableprintpreview(::enterprise_management::BooleanPolicyProto* disableprintpreview);

// optional .enterprise_management.BooleanPolicyProto EnableOnlineRevocationChecks = 131;
bool has_enableonlinerevocationchecks() const;
void clear_enableonlinerevocationchecks();
const ::enterprise_management::BooleanPolicyProto& enableonlinerevocationchecks() const;
::enterprise_management::BooleanPolicyProto* release_enableonlinerevocationchecks();
::enterprise_management::BooleanPolicyProto* mutable_enableonlinerevocationchecks();
void set_allocated_enableonlinerevocationchecks(::enterprise_management::BooleanPolicyProto* enableonlinerevocationchecks);

// optional .enterprise_management.BooleanPolicyProto BackgroundModeEnabled = 140;
bool has_backgroundmodeenabled() const;
void clear_backgroundmodeenabled();
const ::enterprise_management::BooleanPolicyProto& backgroundmodeenabled() const;
::enterprise_management::BooleanPolicyProto* release_backgroundmodeenabled();
::enterprise_management::BooleanPolicyProto* mutable_backgroundmodeenabled();
void set_allocated_backgroundmodeenabled(::enterprise_management::BooleanPolicyProto* backgroundmodeenabled);

// optional .enterprise_management.StringPolicyProto RestrictSigninToPattern = 149;
bool has_restrictsignintopattern() const;
void clear_restrictsignintopattern();
const ::enterprise_management::StringPolicyProto& restrictsignintopattern() const;
::enterprise_management::StringPolicyProto* release_restrictsignintopattern();
::enterprise_management::StringPolicyProto* mutable_restrictsignintopattern();
void set_allocated_restrictsignintopattern(::enterprise_management::StringPolicyProto* restrictsignintopattern);

// optional .enterprise_management.StringListPolicyProto ExtensionInstallSources = 150;
bool has_extensioninstallsources() const;
void clear_extensioninstallsources();
const ::enterprise_management::StringListPolicyProto& extensioninstallsources() const;
::enterprise_management::StringListPolicyProto* release_extensioninstallsources();
::enterprise_management::StringListPolicyProto* mutable_extensioninstallsources();
void set_allocated_extensioninstallsources(::enterprise_management::StringListPolicyProto* extensioninstallsources);

// optional .enterprise_management.IntegerPolicyProto DefaultMediaStreamSetting = 151;
bool has_defaultmediastreamsetting() const;
void clear_defaultmediastreamsetting();
const ::enterprise_management::IntegerPolicyProto& defaultmediastreamsetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultmediastreamsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultmediastreamsetting();
void set_allocated_defaultmediastreamsetting(::enterprise_management::IntegerPolicyProto* defaultmediastreamsetting);

// optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
bool has_disablesafebrowsingproceedanyway() const;
void clear_disablesafebrowsingproceedanyway();
const ::enterprise_management::BooleanPolicyProto& disablesafebrowsingproceedanyway() const;
::enterprise_management::BooleanPolicyProto* release_disablesafebrowsingproceedanyway();
::enterprise_management::BooleanPolicyProto* mutable_disablesafebrowsingproceedanyway();
void set_allocated_disablesafebrowsingproceedanyway(::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway);

// optional .enterprise_management.BooleanPolicyProto SpellCheckServiceEnabled = 153;
bool has_spellcheckserviceenabled() const;
void clear_spellcheckserviceenabled();
const ::enterprise_management::BooleanPolicyProto& spellcheckserviceenabled() const;
::enterprise_management::BooleanPolicyProto* release_spellcheckserviceenabled();
::enterprise_management::BooleanPolicyProto* mutable_spellcheckserviceenabled();
void set_allocated_spellcheckserviceenabled(::enterprise_management::BooleanPolicyProto* spellcheckserviceenabled);

// optional .enterprise_management.BooleanPolicyProto DisableScreenshots = 155;
bool has_disablescreenshots() const;
void clear_disablescreenshots();
const ::enterprise_management::BooleanPolicyProto& disablescreenshots() const;
::enterprise_management::BooleanPolicyProto* release_disablescreenshots();
::enterprise_management::BooleanPolicyProto* mutable_disablescreenshots();
void set_allocated_disablescreenshots(::enterprise_management::BooleanPolicyProto* disablescreenshots);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostDomain = 156;
bool has_remoteaccesshostdomain() const;
void clear_remoteaccesshostdomain();
const ::enterprise_management::StringPolicyProto& remoteaccesshostdomain() const;
::enterprise_management::StringPolicyProto* release_remoteaccesshostdomain();
::enterprise_management::StringPolicyProto* mutable_remoteaccesshostdomain();
void set_allocated_remoteaccesshostdomain(::enterprise_management::StringPolicyProto* remoteaccesshostdomain);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostRequireCurtain = 159;
bool has_remoteaccesshostrequirecurtain() const;
void clear_remoteaccesshostrequirecurtain();
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostrequirecurtain() const;
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostrequirecurtain();
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostrequirecurtain();
void set_allocated_remoteaccesshostrequirecurtain(::enterprise_management::BooleanPolicyProto* remoteaccesshostrequirecurtain);

// optional .enterprise_management.BooleanPolicyProto AudioCaptureAllowed = 162;
bool has_audiocaptureallowed() const;
void clear_audiocaptureallowed();
const ::enterprise_management::BooleanPolicyProto& audiocaptureallowed() const;
::enterprise_management::BooleanPolicyProto* release_audiocaptureallowed();
::enterprise_management::BooleanPolicyProto* mutable_audiocaptureallowed();
void set_allocated_audiocaptureallowed(::enterprise_management::BooleanPolicyProto* audiocaptureallowed);

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
bool has_defaultsearchprovideralternateurls() const;
void clear_defaultsearchprovideralternateurls();
const ::enterprise_management::StringListPolicyProto& defaultsearchprovideralternateurls() const;
::enterprise_management::StringListPolicyProto* release_defaultsearchprovideralternateurls();
::enterprise_management::StringListPolicyProto* mutable_defaultsearchprovideralternateurls();
void set_allocated_defaultsearchprovideralternateurls(::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls);

// optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
bool has_forcesafesearch() const;
void clear_forcesafesearch();
const ::enterprise_management::BooleanPolicyProto& forcesafesearch() const;
::enterprise_management::BooleanPolicyProto* release_forcesafesearch();
::enterprise_management::BooleanPolicyProto* mutable_forcesafesearch();
void set_allocated_forcesafesearch(::enterprise_management::BooleanPolicyProto* forcesafesearch);

// optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
bool has_builtindnsclientenabled() const;
void clear_builtindnsclientenabled();
const ::enterprise_management::BooleanPolicyProto& builtindnsclientenabled() const;
::enterprise_management::BooleanPolicyProto* release_builtindnsclientenabled();
::enterprise_management::BooleanPolicyProto* mutable_builtindnsclientenabled();
void set_allocated_builtindnsclientenabled(::enterprise_management::BooleanPolicyProto* builtindnsclientenabled);

// optional .enterprise_management.BooleanPolicyProto VideoCaptureAllowed = 169;
bool has_videocaptureallowed() const;
void clear_videocaptureallowed();
const ::enterprise_management::BooleanPolicyProto& videocaptureallowed() const;
::enterprise_management::BooleanPolicyProto* release_videocaptureallowed();
::enterprise_management::BooleanPolicyProto* mutable_videocaptureallowed();
void set_allocated_videocaptureallowed(::enterprise_management::BooleanPolicyProto* videocaptureallowed);

// optional .enterprise_management.StringListPolicyProto ExtensionAllowedTypes = 170;
bool has_extensionallowedtypes() const;
void clear_extensionallowedtypes();
const ::enterprise_management::StringListPolicyProto& extensionallowedtypes() const;
::enterprise_management::StringListPolicyProto* release_extensionallowedtypes();
::enterprise_management::StringListPolicyProto* mutable_extensionallowedtypes();
void set_allocated_extensionallowedtypes(::enterprise_management::StringListPolicyProto* extensionallowedtypes);

// optional .enterprise_management.BooleanPolicyProto AllowDeletingBrowserHistory = 189;
bool has_allowdeletingbrowserhistory() const;
void clear_allowdeletingbrowserhistory();
const ::enterprise_management::BooleanPolicyProto& allowdeletingbrowserhistory() const;
::enterprise_management::BooleanPolicyProto* release_allowdeletingbrowserhistory();
::enterprise_management::BooleanPolicyProto* mutable_allowdeletingbrowserhistory();
void set_allocated_allowdeletingbrowserhistory(::enterprise_management::BooleanPolicyProto* allowdeletingbrowserhistory);

// optional .enterprise_management.BooleanPolicyProto HideWebStoreIcon = 191;
bool has_hidewebstoreicon() const;
void clear_hidewebstoreicon();
const ::enterprise_management::BooleanPolicyProto& hidewebstoreicon() const;
::enterprise_management::BooleanPolicyProto* release_hidewebstoreicon();
::enterprise_management::BooleanPolicyProto* mutable_hidewebstoreicon();
void set_allocated_hidewebstoreicon(::enterprise_management::BooleanPolicyProto* hidewebstoreicon);

// optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
bool has_signinallowed() const;
void clear_signinallowed();
const ::enterprise_management::BooleanPolicyProto& signinallowed() const;
::enterprise_management::BooleanPolicyProto* release_signinallowed();
::enterprise_management::BooleanPolicyProto* mutable_signinallowed();
void set_allocated_signinallowed(::enterprise_management::BooleanPolicyProto* signinallowed);

// optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
bool has_variationsrestrictparameter() const;
void clear_variationsrestrictparameter();
const ::enterprise_management::StringPolicyProto& variationsrestrictparameter() const;
::enterprise_management::StringPolicyProto* release_variationsrestrictparameter();
::enterprise_management::StringPolicyProto* mutable_variationsrestrictparameter();
void set_allocated_variationsrestrictparameter(::enterprise_management::StringPolicyProto* variationsrestrictparameter);

// optional .enterprise_management.IntegerPolicyProto ContentPackDefaultFilteringBehavior = 206;
bool has_contentpackdefaultfilteringbehavior() const;
void clear_contentpackdefaultfilteringbehavior();
const ::enterprise_management::IntegerPolicyProto& contentpackdefaultfilteringbehavior() const;
::enterprise_management::IntegerPolicyProto* release_contentpackdefaultfilteringbehavior();
::enterprise_management::IntegerPolicyProto* mutable_contentpackdefaultfilteringbehavior();
void set_allocated_contentpackdefaultfilteringbehavior(::enterprise_management::IntegerPolicyProto* contentpackdefaultfilteringbehavior);

// optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorHosts = 207;
bool has_contentpackmanualbehaviorhosts() const;
void clear_contentpackmanualbehaviorhosts();
const ::enterprise_management::StringPolicyProto& contentpackmanualbehaviorhosts() const;
::enterprise_management::StringPolicyProto* release_contentpackmanualbehaviorhosts();
::enterprise_management::StringPolicyProto* mutable_contentpackmanualbehaviorhosts();
void set_allocated_contentpackmanualbehaviorhosts(::enterprise_management::StringPolicyProto* contentpackmanualbehaviorhosts);

// optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorURLs = 208;
bool has_contentpackmanualbehaviorurls() const;
void clear_contentpackmanualbehaviorurls();
const ::enterprise_management::StringPolicyProto& contentpackmanualbehaviorurls() const;
::enterprise_management::StringPolicyProto* release_contentpackmanualbehaviorurls();
::enterprise_management::StringPolicyProto* mutable_contentpackmanualbehaviorurls();
void set_allocated_contentpackmanualbehaviorurls(::enterprise_management::StringPolicyProto* contentpackmanualbehaviorurls);

// optional .enterprise_management.StringListPolicyProto AudioCaptureAllowedUrls = 210;
bool has_audiocaptureallowedurls() const;
void clear_audiocaptureallowedurls();
const ::enterprise_management::StringListPolicyProto& audiocaptureallowedurls() const;
::enterprise_management::StringListPolicyProto* release_audiocaptureallowedurls();
::enterprise_management::StringListPolicyProto* mutable_audiocaptureallowedurls();
void set_allocated_audiocaptureallowedurls(::enterprise_management::StringListPolicyProto* audiocaptureallowedurls);

// optional .enterprise_management.StringListPolicyProto VideoCaptureAllowedUrls = 211;
bool has_videocaptureallowedurls() const;
void clear_videocaptureallowedurls();
const ::enterprise_management::StringListPolicyProto& videocaptureallowedurls() const;
::enterprise_management::StringListPolicyProto* release_videocaptureallowedurls();
::enterprise_management::StringListPolicyProto* mutable_videocaptureallowedurls();
void set_allocated_videocaptureallowedurls(::enterprise_management::StringListPolicyProto* videocaptureallowedurls);

// optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
bool has_managedbookmarks() const;
void clear_managedbookmarks();
const ::enterprise_management::StringPolicyProto& managedbookmarks() const;
::enterprise_management::StringPolicyProto* release_managedbookmarks();
::enterprise_management::StringPolicyProto* mutable_managedbookmarks();
void set_allocated_managedbookmarks(::enterprise_management::StringPolicyProto* managedbookmarks);

// optional .enterprise_management.IntegerPolicyProto MaxInvalidationFetchDelay = 230;
bool has_maxinvalidationfetchdelay() const;
void clear_maxinvalidationfetchdelay();
const ::enterprise_management::IntegerPolicyProto& maxinvalidationfetchdelay() const;
::enterprise_management::IntegerPolicyProto* release_maxinvalidationfetchdelay();
::enterprise_management::IntegerPolicyProto* mutable_maxinvalidationfetchdelay();
void set_allocated_maxinvalidationfetchdelay(::enterprise_management::IntegerPolicyProto* maxinvalidationfetchdelay);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
bool has_defaultsearchproviderimageurl() const;
void clear_defaultsearchproviderimageurl();
const ::enterprise_management::StringPolicyProto& defaultsearchproviderimageurl() const;
::enterprise_management::StringPolicyProto* release_defaultsearchproviderimageurl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderimageurl();
void set_allocated_defaultsearchproviderimageurl(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
bool has_defaultsearchprovidersearchurlpostparams() const;
void clear_defaultsearchprovidersearchurlpostparams();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersearchurlpostparams() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersearchurlpostparams();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersearchurlpostparams();
void set_allocated_defaultsearchprovidersearchurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
bool has_defaultsearchprovidersuggesturlpostparams() const;
void clear_defaultsearchprovidersuggesturlpostparams();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidersuggesturlpostparams() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidersuggesturlpostparams();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidersuggesturlpostparams();
void set_allocated_defaultsearchprovidersuggesturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
bool has_defaultsearchproviderimageurlpostparams() const;
void clear_defaultsearchproviderimageurlpostparams();
const ::enterprise_management::StringPolicyProto& defaultsearchproviderimageurlpostparams() const;
::enterprise_management::StringPolicyProto* release_defaultsearchproviderimageurlpostparams();
::enterprise_management::StringPolicyProto* mutable_defaultsearchproviderimageurlpostparams();
void set_allocated_defaultsearchproviderimageurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowClientPairing = 236;
bool has_remoteaccesshostallowclientpairing() const;
void clear_remoteaccesshostallowclientpairing();
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostallowclientpairing() const;
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostallowclientpairing();
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostallowclientpairing();
void set_allocated_remoteaccesshostallowclientpairing(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowclientpairing);

// optional .enterprise_management.BooleanPolicyProto RequireOnlineRevocationChecksForLocalAnchors = 237;
bool has_requireonlinerevocationchecksforlocalanchors() const;
void clear_requireonlinerevocationchecksforlocalanchors();
const ::enterprise_management::BooleanPolicyProto& requireonlinerevocationchecksforlocalanchors() const;
::enterprise_management::BooleanPolicyProto* release_requireonlinerevocationchecksforlocalanchors();
::enterprise_management::BooleanPolicyProto* mutable_requireonlinerevocationchecksforlocalanchors();
void set_allocated_requireonlinerevocationchecksforlocalanchors(::enterprise_management::BooleanPolicyProto* requireonlinerevocationchecksforlocalanchors);

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
bool has_defaultsearchprovidernewtaburl() const;
void clear_defaultsearchprovidernewtaburl();
const ::enterprise_management::StringPolicyProto& defaultsearchprovidernewtaburl() const;
::enterprise_management::StringPolicyProto* release_defaultsearchprovidernewtaburl();
::enterprise_management::StringPolicyProto* mutable_defaultsearchprovidernewtaburl();
void set_allocated_defaultsearchprovidernewtaburl(::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl);

// optional .enterprise_management.BooleanPolicyProto FullscreenAllowed = 242;
bool has_fullscreenallowed() const;
void clear_fullscreenallowed();
const ::enterprise_management::BooleanPolicyProto& fullscreenallowed() const;
::enterprise_management::BooleanPolicyProto* release_fullscreenallowed();
::enterprise_management::BooleanPolicyProto* mutable_fullscreenallowed();
void set_allocated_fullscreenallowed(::enterprise_management::BooleanPolicyProto* fullscreenallowed);

// optional .enterprise_management.BooleanPolicyProto ForceEphemeralProfiles = 247;
bool has_forceephemeralprofiles() const;
void clear_forceephemeralprofiles();
const ::enterprise_management::BooleanPolicyProto& forceephemeralprofiles() const;
::enterprise_management::BooleanPolicyProto* release_forceephemeralprofiles();
::enterprise_management::BooleanPolicyProto* mutable_forceephemeralprofiles();
void set_allocated_forceephemeralprofiles(::enterprise_management::BooleanPolicyProto* forceephemeralprofiles);

// optional .enterprise_management.StringListPolicyProto NativeMessagingBlacklist = 253;
bool has_nativemessagingblacklist() const;
void clear_nativemessagingblacklist();
const ::enterprise_management::StringListPolicyProto& nativemessagingblacklist() const;
::enterprise_management::StringListPolicyProto* release_nativemessagingblacklist();
::enterprise_management::StringListPolicyProto* mutable_nativemessagingblacklist();
void set_allocated_nativemessagingblacklist(::enterprise_management::StringListPolicyProto* nativemessagingblacklist);

// optional .enterprise_management.StringListPolicyProto NativeMessagingWhitelist = 254;
bool has_nativemessagingwhitelist() const;
void clear_nativemessagingwhitelist();
const ::enterprise_management::StringListPolicyProto& nativemessagingwhitelist() const;
::enterprise_management::StringListPolicyProto* release_nativemessagingwhitelist();
::enterprise_management::StringListPolicyProto* mutable_nativemessagingwhitelist();
void set_allocated_nativemessagingwhitelist(::enterprise_management::StringListPolicyProto* nativemessagingwhitelist);

// optional .enterprise_management.BooleanPolicyProto NativeMessagingUserLevelHosts = 255;
bool has_nativemessaginguserlevelhosts() const;
void clear_nativemessaginguserlevelhosts();
const ::enterprise_management::BooleanPolicyProto& nativemessaginguserlevelhosts() const;
::enterprise_management::BooleanPolicyProto* release_nativemessaginguserlevelhosts();
::enterprise_management::BooleanPolicyProto* mutable_nativemessaginguserlevelhosts();
void set_allocated_nativemessaginguserlevelhosts(::enterprise_management::BooleanPolicyProto* nativemessaginguserlevelhosts);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowGnubbyAuth = 259;
bool has_remoteaccesshostallowgnubbyauth() const;
void clear_remoteaccesshostallowgnubbyauth();
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostallowgnubbyauth() const;
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostallowgnubbyauth();
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostallowgnubbyauth();
void set_allocated_remoteaccesshostallowgnubbyauth(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowgnubbyauth);

// optional .enterprise_management.BooleanPolicyProto WPADQuickCheckEnabled = 263;
bool has_wpadquickcheckenabled() const;
void clear_wpadquickcheckenabled();
const ::enterprise_management::BooleanPolicyProto& wpadquickcheckenabled() const;
::enterprise_management::BooleanPolicyProto* release_wpadquickcheckenabled();
::enterprise_management::BooleanPolicyProto* mutable_wpadquickcheckenabled();
void set_allocated_wpadquickcheckenabled(::enterprise_management::BooleanPolicyProto* wpadquickcheckenabled);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowRelayedConnection = 265;
bool has_remoteaccesshostallowrelayedconnection() const;
void clear_remoteaccesshostallowrelayedconnection();
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostallowrelayedconnection() const;
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostallowrelayedconnection();
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostallowrelayedconnection();
void set_allocated_remoteaccesshostallowrelayedconnection(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowrelayedconnection);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostUdpPortRange = 266;
bool has_remoteaccesshostudpportrange() const;
void clear_remoteaccesshostudpportrange();
const ::enterprise_management::StringPolicyProto& remoteaccesshostudpportrange() const;
::enterprise_management::StringPolicyProto* release_remoteaccesshostudpportrange();
::enterprise_management::StringPolicyProto* mutable_remoteaccesshostudpportrange();
void set_allocated_remoteaccesshostudpportrange(::enterprise_management::StringPolicyProto* remoteaccesshostudpportrange);

// optional .enterprise_management.BooleanPolicyProto ShowAppsShortcutInBookmarkBar = 269;
bool has_showappsshortcutinbookmarkbar() const;
void clear_showappsshortcutinbookmarkbar();
const ::enterprise_management::BooleanPolicyProto& showappsshortcutinbookmarkbar() const;
::enterprise_management::BooleanPolicyProto* release_showappsshortcutinbookmarkbar();
::enterprise_management::BooleanPolicyProto* mutable_showappsshortcutinbookmarkbar();
void set_allocated_showappsshortcutinbookmarkbar(::enterprise_management::BooleanPolicyProto* showappsshortcutinbookmarkbar);

// optional .enterprise_management.StringPolicyProto RegisteredProtocolHandlers = 270;
bool has_registeredprotocolhandlers() const;
void clear_registeredprotocolhandlers();
const ::enterprise_management::StringPolicyProto& registeredprotocolhandlers() const;
::enterprise_management::StringPolicyProto* release_registeredprotocolhandlers();
::enterprise_management::StringPolicyProto* mutable_registeredprotocolhandlers();
void set_allocated_registeredprotocolhandlers(::enterprise_management::StringPolicyProto* registeredprotocolhandlers);

// optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
bool has_enabledeprecatedwebplatformfeatures() const;
void clear_enabledeprecatedwebplatformfeatures();
const ::enterprise_management::StringListPolicyProto& enabledeprecatedwebplatformfeatures() const;
::enterprise_management::StringListPolicyProto* release_enabledeprecatedwebplatformfeatures();
::enterprise_management::StringListPolicyProto* mutable_enabledeprecatedwebplatformfeatures();
void set_allocated_enabledeprecatedwebplatformfeatures(::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures);

// optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
bool has_networkpredictionoptions() const;
void clear_networkpredictionoptions();
const ::enterprise_management::IntegerPolicyProto& networkpredictionoptions() const;
::enterprise_management::IntegerPolicyProto* release_networkpredictionoptions();
::enterprise_management::IntegerPolicyProto* mutable_networkpredictionoptions();
void set_allocated_networkpredictionoptions(::enterprise_management::IntegerPolicyProto* networkpredictionoptions);

// optional .enterprise_management.BooleanPolicyProto BrowserGuestModeEnabled = 277;
bool has_browserguestmodeenabled() const;
void clear_browserguestmodeenabled();
const ::enterprise_management::BooleanPolicyProto& browserguestmodeenabled() const;
::enterprise_management::BooleanPolicyProto* release_browserguestmodeenabled();
::enterprise_management::BooleanPolicyProto* mutable_browserguestmodeenabled();
void set_allocated_browserguestmodeenabled(::enterprise_management::BooleanPolicyProto* browserguestmodeenabled);

// optional .enterprise_management.BooleanPolicyProto BrowserAddPersonEnabled = 278;
bool has_browseraddpersonenabled() const;
void clear_browseraddpersonenabled();
const ::enterprise_management::BooleanPolicyProto& browseraddpersonenabled() const;
::enterprise_management::BooleanPolicyProto* release_browseraddpersonenabled();
::enterprise_management::BooleanPolicyProto* mutable_browseraddpersonenabled();
void set_allocated_browseraddpersonenabled(::enterprise_management::BooleanPolicyProto* browseraddpersonenabled);

// optional .enterprise_management.BooleanPolicyProto ImportAutofillFormData = 279;
bool has_importautofillformdata() const;
void clear_importautofillformdata();
const ::enterprise_management::BooleanPolicyProto& importautofillformdata() const;
::enterprise_management::BooleanPolicyProto* release_importautofillformdata();
::enterprise_management::BooleanPolicyProto* mutable_importautofillformdata();
void set_allocated_importautofillformdata(::enterprise_management::BooleanPolicyProto* importautofillformdata);

// optional .enterprise_management.StringPolicyProto ExtensionSettings = 280;
bool has_extensionsettings() const;
void clear_extensionsettings();
const ::enterprise_management::StringPolicyProto& extensionsettings() const;
::enterprise_management::StringPolicyProto* release_extensionsettings();
::enterprise_management::StringPolicyProto* mutable_extensionsettings();
void set_allocated_extensionsettings(::enterprise_management::StringPolicyProto* extensionsettings);

// optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
bool has_sslversionmin() const;
void clear_sslversionmin();
const ::enterprise_management::StringPolicyProto& sslversionmin() const;
::enterprise_management::StringPolicyProto* release_sslversionmin();
::enterprise_management::StringPolicyProto* mutable_sslversionmin();
void set_allocated_sslversionmin(::enterprise_management::StringPolicyProto* sslversionmin);

// optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
bool has_forcegooglesafesearch() const;
void clear_forcegooglesafesearch();
const ::enterprise_management::BooleanPolicyProto& forcegooglesafesearch() const;
::enterprise_management::BooleanPolicyProto* release_forcegooglesafesearch();
::enterprise_management::BooleanPolicyProto* mutable_forcegooglesafesearch();
void set_allocated_forcegooglesafesearch(::enterprise_management::BooleanPolicyProto* forcegooglesafesearch);

// optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
bool has_forceyoutubesafetymode() const;
void clear_forceyoutubesafetymode();
const ::enterprise_management::BooleanPolicyProto& forceyoutubesafetymode() const;
::enterprise_management::BooleanPolicyProto* release_forceyoutubesafetymode();
::enterprise_management::BooleanPolicyProto* mutable_forceyoutubesafetymode();
void set_allocated_forceyoutubesafetymode(::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostMatchUsername = 287;
bool has_remoteaccesshostmatchusername() const;
void clear_remoteaccesshostmatchusername();
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostmatchusername() const;
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostmatchusername();
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostmatchusername();
void set_allocated_remoteaccesshostmatchusername(::enterprise_management::BooleanPolicyProto* remoteaccesshostmatchusername);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenUrl = 288;
bool has_remoteaccesshosttokenurl() const;
void clear_remoteaccesshosttokenurl();
const ::enterprise_management::StringPolicyProto& remoteaccesshosttokenurl() const;
::enterprise_management::StringPolicyProto* release_remoteaccesshosttokenurl();
::enterprise_management::StringPolicyProto* mutable_remoteaccesshosttokenurl();
void set_allocated_remoteaccesshosttokenurl(::enterprise_management::StringPolicyProto* remoteaccesshosttokenurl);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationUrl = 289;
bool has_remoteaccesshosttokenvalidationurl() const;
void clear_remoteaccesshosttokenvalidationurl();
const ::enterprise_management::StringPolicyProto& remoteaccesshosttokenvalidationurl() const;
::enterprise_management::StringPolicyProto* release_remoteaccesshosttokenvalidationurl();
::enterprise_management::StringPolicyProto* mutable_remoteaccesshosttokenvalidationurl();
void set_allocated_remoteaccesshosttokenvalidationurl(::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationurl);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationCertificateIssuer = 290;
bool has_remoteaccesshosttokenvalidationcertificateissuer() const;
void clear_remoteaccesshosttokenvalidationcertificateissuer();
const ::enterprise_management::StringPolicyProto& remoteaccesshosttokenvalidationcertificateissuer() const;
::enterprise_management::StringPolicyProto* release_remoteaccesshosttokenvalidationcertificateissuer();
::enterprise_management::StringPolicyProto* mutable_remoteaccesshosttokenvalidationcertificateissuer();
void set_allocated_remoteaccesshosttokenvalidationcertificateissuer(::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationcertificateissuer);

// optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
bool has_sslerroroverrideallowed() const;
void clear_sslerroroverrideallowed();
const ::enterprise_management::BooleanPolicyProto& sslerroroverrideallowed() const;
::enterprise_management::BooleanPolicyProto* release_sslerroroverrideallowed();
::enterprise_management::BooleanPolicyProto* mutable_sslerroroverrideallowed();
void set_allocated_sslerroroverrideallowed(::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed);

// optional .enterprise_management.BooleanPolicyProto QuicAllowed = 303;
bool has_quicallowed() const;
void clear_quicallowed();
const ::enterprise_management::BooleanPolicyProto& quicallowed() const;
::enterprise_management::BooleanPolicyProto* release_quicallowed();
::enterprise_management::BooleanPolicyProto* mutable_quicallowed();
void set_allocated_quicallowed(::enterprise_management::BooleanPolicyProto* quicallowed);

// optional .enterprise_management.BooleanPolicyProto HardwareAccelerationModeEnabled = 306;
bool has_hardwareaccelerationmodeenabled() const;
void clear_hardwareaccelerationmodeenabled();
const ::enterprise_management::BooleanPolicyProto& hardwareaccelerationmodeenabled() const;
::enterprise_management::BooleanPolicyProto* release_hardwareaccelerationmodeenabled();
::enterprise_management::BooleanPolicyProto* mutable_hardwareaccelerationmodeenabled();
void set_allocated_hardwareaccelerationmodeenabled(::enterprise_management::BooleanPolicyProto* hardwareaccelerationmodeenabled);

// optional .enterprise_management.StringPolicyProto DefaultPrinterSelection = 310;
bool has_defaultprinterselection() const;
void clear_defaultprinterselection();
const ::enterprise_management::StringPolicyProto& defaultprinterselection() const;
::enterprise_management::StringPolicyProto* release_defaultprinterselection();
::enterprise_management::StringPolicyProto* mutable_defaultprinterselection();
void set_allocated_defaultprinterselection(::enterprise_management::StringPolicyProto* defaultprinterselection);

// optional .enterprise_management.BooleanPolicyProto AllowDinosaurEasterEgg = 311;
bool has_allowdinosaureasteregg() const;
void clear_allowdinosaureasteregg();
const ::enterprise_management::BooleanPolicyProto& allowdinosaureasteregg() const;
::enterprise_management::BooleanPolicyProto* release_allowdinosaureasteregg();
::enterprise_management::BooleanPolicyProto* mutable_allowdinosaureasteregg();
void set_allocated_allowdinosaureasteregg(::enterprise_management::BooleanPolicyProto* allowdinosaureasteregg);

// optional .enterprise_management.StringPolicyProto RemoteAccessHostClientDomain = 318;
bool has_remoteaccesshostclientdomain() const;
void clear_remoteaccesshostclientdomain();
const ::enterprise_management::StringPolicyProto& remoteaccesshostclientdomain() const;
::enterprise_management::StringPolicyProto* release_remoteaccesshostclientdomain();
::enterprise_management::StringPolicyProto* mutable_remoteaccesshostclientdomain();
void set_allocated_remoteaccesshostclientdomain(::enterprise_management::StringPolicyProto* remoteaccesshostclientdomain);

// optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
bool has_defaultwebbluetoothguardsetting() const;
void clear_defaultwebbluetoothguardsetting();
const ::enterprise_management::IntegerPolicyProto& defaultwebbluetoothguardsetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultwebbluetoothguardsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultwebbluetoothguardsetting();
void set_allocated_defaultwebbluetoothguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting);

// optional .enterprise_management.BooleanPolicyProto SuppressUnsupportedOSWarning = 326;
bool has_suppressunsupportedoswarning() const;
void clear_suppressunsupportedoswarning();
const ::enterprise_management::BooleanPolicyProto& suppressunsupportedoswarning() const;
::enterprise_management::BooleanPolicyProto* release_suppressunsupportedoswarning();
::enterprise_management::BooleanPolicyProto* mutable_suppressunsupportedoswarning();
void set_allocated_suppressunsupportedoswarning(::enterprise_management::BooleanPolicyProto* suppressunsupportedoswarning);

// optional .enterprise_management.BooleanPolicyProto TaskManagerEndProcessEnabled = 329;
bool has_taskmanagerendprocessenabled() const;
void clear_taskmanagerendprocessenabled();
const ::enterprise_management::BooleanPolicyProto& taskmanagerendprocessenabled() const;
::enterprise_management::BooleanPolicyProto* release_taskmanagerendprocessenabled();
::enterprise_management::BooleanPolicyProto* mutable_taskmanagerendprocessenabled();
void set_allocated_taskmanagerendprocessenabled(::enterprise_management::BooleanPolicyProto* taskmanagerendprocessenabled);

// optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
bool has_alloweddomainsforapps() const;
void clear_alloweddomainsforapps();
const ::enterprise_management::StringPolicyProto& alloweddomainsforapps() const;
::enterprise_management::StringPolicyProto* release_alloweddomainsforapps();
::enterprise_management::StringPolicyProto* mutable_alloweddomainsforapps();
void set_allocated_alloweddomainsforapps(::enterprise_management::StringPolicyProto* alloweddomainsforapps);

// optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
bool has_enablemediarouter() const;
void clear_enablemediarouter();
const ::enterprise_management::BooleanPolicyProto& enablemediarouter() const;
::enterprise_management::BooleanPolicyProto* release_enablemediarouter();
::enterprise_management::BooleanPolicyProto* mutable_enablemediarouter();
void set_allocated_enablemediarouter(::enterprise_management::BooleanPolicyProto* enablemediarouter);

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
bool has_certificatetransparencyenforcementdisabledforurls() const;
void clear_certificatetransparencyenforcementdisabledforurls();
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforurls() const;
::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforurls();
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforurls();
void set_allocated_certificatetransparencyenforcementdisabledforurls(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls);

// optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
bool has_webrtcudpportrange() const;
void clear_webrtcudpportrange();
const ::enterprise_management::StringPolicyProto& webrtcudpportrange() const;
::enterprise_management::StringPolicyProto* release_webrtcudpportrange();
::enterprise_management::StringPolicyProto* mutable_webrtcudpportrange();
void set_allocated_webrtcudpportrange(::enterprise_management::StringPolicyProto* webrtcudpportrange);

// optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
bool has_componentupdatesenabled() const;
void clear_componentupdatesenabled();
const ::enterprise_management::BooleanPolicyProto& componentupdatesenabled() const;
::enterprise_management::BooleanPolicyProto* release_componentupdatesenabled();
::enterprise_management::BooleanPolicyProto* mutable_componentupdatesenabled();
void set_allocated_componentupdatesenabled(::enterprise_management::BooleanPolicyProto* componentupdatesenabled);

// optional .enterprise_management.BooleanPolicyProto AlwaysOpenPdfExternally = 349;
bool has_alwaysopenpdfexternally() const;
void clear_alwaysopenpdfexternally();
const ::enterprise_management::BooleanPolicyProto& alwaysopenpdfexternally() const;
::enterprise_management::BooleanPolicyProto* release_alwaysopenpdfexternally();
::enterprise_management::BooleanPolicyProto* mutable_alwaysopenpdfexternally();
void set_allocated_alwaysopenpdfexternally(::enterprise_management::BooleanPolicyProto* alwaysopenpdfexternally);

// optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
bool has_forceyoutuberestrict() const;
void clear_forceyoutuberestrict();
const ::enterprise_management::IntegerPolicyProto& forceyoutuberestrict() const;
::enterprise_management::IntegerPolicyProto* release_forceyoutuberestrict();
::enterprise_management::IntegerPolicyProto* mutable_forceyoutuberestrict();
void set_allocated_forceyoutuberestrict(::enterprise_management::IntegerPolicyProto* forceyoutuberestrict);

// optional .enterprise_management.StringPolicyProto NewTabPageLocation = 362;
bool has_newtabpagelocation() const;
void clear_newtabpagelocation();
const ::enterprise_management::StringPolicyProto& newtabpagelocation() const;
::enterprise_management::StringPolicyProto* release_newtabpagelocation();
::enterprise_management::StringPolicyProto* mutable_newtabpagelocation();
void set_allocated_newtabpagelocation(::enterprise_management::StringPolicyProto* newtabpagelocation);

// optional .enterprise_management.BooleanPolicyProto ShowCastIconInToolbar = 364;
bool has_showcasticonintoolbar() const;
void clear_showcasticonintoolbar();
const ::enterprise_management::BooleanPolicyProto& showcasticonintoolbar() const;
::enterprise_management::BooleanPolicyProto* release_showcasticonintoolbar();
::enterprise_management::BooleanPolicyProto* mutable_showcasticonintoolbar();
void set_allocated_showcasticonintoolbar(::enterprise_management::BooleanPolicyProto* showcasticonintoolbar);

// optional .enterprise_management.StringListPolicyProto RemoteAccessHostDomainList = 370;
bool has_remoteaccesshostdomainlist() const;
void clear_remoteaccesshostdomainlist();
const ::enterprise_management::StringListPolicyProto& remoteaccesshostdomainlist() const;
::enterprise_management::StringListPolicyProto* release_remoteaccesshostdomainlist();
::enterprise_management::StringListPolicyProto* mutable_remoteaccesshostdomainlist();
void set_allocated_remoteaccesshostdomainlist(::enterprise_management::StringListPolicyProto* remoteaccesshostdomainlist);

// optional .enterprise_management.StringListPolicyProto RemoteAccessHostClientDomainList = 371;
bool has_remoteaccesshostclientdomainlist() const;
void clear_remoteaccesshostclientdomainlist();
const ::enterprise_management::StringListPolicyProto& remoteaccesshostclientdomainlist() const;
::enterprise_management::StringListPolicyProto* release_remoteaccesshostclientdomainlist();
::enterprise_management::StringListPolicyProto* mutable_remoteaccesshostclientdomainlist();
void set_allocated_remoteaccesshostclientdomainlist(::enterprise_management::StringListPolicyProto* remoteaccesshostclientdomainlist);

// optional .enterprise_management.BooleanPolicyProto BrowserNetworkTimeQueriesEnabled = 372;
bool has_browsernetworktimequeriesenabled() const;
void clear_browsernetworktimequeriesenabled();
const ::enterprise_management::BooleanPolicyProto& browsernetworktimequeriesenabled() const;
::enterprise_management::BooleanPolicyProto* release_browsernetworktimequeriesenabled();
::enterprise_management::BooleanPolicyProto* mutable_browsernetworktimequeriesenabled();
void set_allocated_browsernetworktimequeriesenabled(::enterprise_management::BooleanPolicyProto* browsernetworktimequeriesenabled);

// optional .enterprise_management.IntegerPolicyProto DownloadRestrictions = 373;
bool has_downloadrestrictions() const;
void clear_downloadrestrictions();
const ::enterprise_management::IntegerPolicyProto& downloadrestrictions() const;
::enterprise_management::IntegerPolicyProto* release_downloadrestrictions();
::enterprise_management::IntegerPolicyProto* mutable_downloadrestrictions();
void set_allocated_downloadrestrictions(::enterprise_management::IntegerPolicyProto* downloadrestrictions);

// optional .enterprise_management.BooleanPolicyProto PrintPreviewUseSystemDefaultPrinter = 375;
bool has_printpreviewusesystemdefaultprinter() const;
void clear_printpreviewusesystemdefaultprinter();
const ::enterprise_management::BooleanPolicyProto& printpreviewusesystemdefaultprinter() const;
::enterprise_management::BooleanPolicyProto* release_printpreviewusesystemdefaultprinter();
::enterprise_management::BooleanPolicyProto* mutable_printpreviewusesystemdefaultprinter();
void set_allocated_printpreviewusesystemdefaultprinter(::enterprise_management::BooleanPolicyProto* printpreviewusesystemdefaultprinter);

// optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesPlatformPolicy = 383;
bool has_cloudpolicyoverridesplatformpolicy() const;
void clear_cloudpolicyoverridesplatformpolicy();
const ::enterprise_management::BooleanPolicyProto& cloudpolicyoverridesplatformpolicy() const;
::enterprise_management::BooleanPolicyProto* release_cloudpolicyoverridesplatformpolicy();
::enterprise_management::BooleanPolicyProto* mutable_cloudpolicyoverridesplatformpolicy();
void set_allocated_cloudpolicyoverridesplatformpolicy(::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesplatformpolicy);

// optional .enterprise_management.BooleanPolicyProto RunAllFlashInAllowMode = 393;
bool has_runallflashinallowmode() const;
void clear_runallflashinallowmode();
const ::enterprise_management::BooleanPolicyProto& runallflashinallowmode() const;
::enterprise_management::BooleanPolicyProto* release_runallflashinallowmode();
::enterprise_management::BooleanPolicyProto* mutable_runallflashinallowmode();
void set_allocated_runallflashinallowmode(::enterprise_management::BooleanPolicyProto* runallflashinallowmode);

// optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
bool has_autofillcreditcardenabled() const;
void clear_autofillcreditcardenabled();
const ::enterprise_management::BooleanPolicyProto& autofillcreditcardenabled() const;
::enterprise_management::BooleanPolicyProto* release_autofillcreditcardenabled();
::enterprise_management::BooleanPolicyProto* mutable_autofillcreditcardenabled();
void set_allocated_autofillcreditcardenabled(::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled);

// optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
bool has_ntlmv2enabled() const;
void clear_ntlmv2enabled();
const ::enterprise_management::BooleanPolicyProto& ntlmv2enabled() const;
::enterprise_management::BooleanPolicyProto* release_ntlmv2enabled();
::enterprise_management::BooleanPolicyProto* mutable_ntlmv2enabled();
void set_allocated_ntlmv2enabled(::enterprise_management::BooleanPolicyProto* ntlmv2enabled);

// optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
bool has_promptfordownloadlocation() const;
void clear_promptfordownloadlocation();
const ::enterprise_management::BooleanPolicyProto& promptfordownloadlocation() const;
::enterprise_management::BooleanPolicyProto* release_promptfordownloadlocation();
::enterprise_management::BooleanPolicyProto* mutable_promptfordownloadlocation();
void set_allocated_promptfordownloadlocation(::enterprise_management::BooleanPolicyProto* promptfordownloadlocation);

// optional .enterprise_management.StringPolicyProto IsolateOrigins = 400;
bool has_isolateorigins() const;
void clear_isolateorigins();
const ::enterprise_management::StringPolicyProto& isolateorigins() const;
::enterprise_management::StringPolicyProto* release_isolateorigins();
::enterprise_management::StringPolicyProto* mutable_isolateorigins();
void set_allocated_isolateorigins(::enterprise_management::StringPolicyProto* isolateorigins);

// optional .enterprise_management.BooleanPolicyProto SitePerProcess = 401;
bool has_siteperprocess() const;
void clear_siteperprocess();
const ::enterprise_management::BooleanPolicyProto& siteperprocess() const;
::enterprise_management::BooleanPolicyProto* release_siteperprocess();
::enterprise_management::BooleanPolicyProto* mutable_siteperprocess();
void set_allocated_siteperprocess(::enterprise_management::BooleanPolicyProto* siteperprocess);

// optional .enterprise_management.StringListPolicyProto UnsafelyTreatInsecureOriginAsSecure = 402;
bool has_unsafelytreatinsecureoriginassecure() const;
void clear_unsafelytreatinsecureoriginassecure();
const ::enterprise_management::StringListPolicyProto& unsafelytreatinsecureoriginassecure() const;
::enterprise_management::StringListPolicyProto* release_unsafelytreatinsecureoriginassecure();
::enterprise_management::StringListPolicyProto* mutable_unsafelytreatinsecureoriginassecure();
void set_allocated_unsafelytreatinsecureoriginassecure(::enterprise_management::StringListPolicyProto* unsafelytreatinsecureoriginassecure);

// optional .enterprise_management.StringPolicyProto DefaultDownloadDirectory = 403;
bool has_defaultdownloaddirectory() const;
void clear_defaultdownloaddirectory();
const ::enterprise_management::StringPolicyProto& defaultdownloaddirectory() const;
::enterprise_management::StringPolicyProto* release_defaultdownloaddirectory();
::enterprise_management::StringPolicyProto* mutable_defaultdownloaddirectory();
void set_allocated_defaultdownloaddirectory(::enterprise_management::StringPolicyProto* defaultdownloaddirectory);

// optional .enterprise_management.StringListPolicyProto SecurityKeyPermitAttestation = 404;
bool has_securitykeypermitattestation() const;
void clear_securitykeypermitattestation();
const ::enterprise_management::StringListPolicyProto& securitykeypermitattestation() const;
::enterprise_management::StringListPolicyProto* release_securitykeypermitattestation();
::enterprise_management::StringListPolicyProto* mutable_securitykeypermitattestation();
void set_allocated_securitykeypermitattestation(::enterprise_management::StringListPolicyProto* securitykeypermitattestation);

// optional .enterprise_management.BooleanPolicyProto AbusiveExperienceInterventionEnforce = 406;
bool has_abusiveexperienceinterventionenforce() const;
void clear_abusiveexperienceinterventionenforce();
const ::enterprise_management::BooleanPolicyProto& abusiveexperienceinterventionenforce() const;
::enterprise_management::BooleanPolicyProto* release_abusiveexperienceinterventionenforce();
::enterprise_management::BooleanPolicyProto* mutable_abusiveexperienceinterventionenforce();
void set_allocated_abusiveexperienceinterventionenforce(::enterprise_management::BooleanPolicyProto* abusiveexperienceinterventionenforce);

// optional .enterprise_management.StringListPolicyProto SpellcheckLanguage = 407;
bool has_spellchecklanguage() const;
void clear_spellchecklanguage();
const ::enterprise_management::StringListPolicyProto& spellchecklanguage() const;
::enterprise_management::StringListPolicyProto* release_spellchecklanguage();
::enterprise_management::StringListPolicyProto* mutable_spellchecklanguage();
void set_allocated_spellchecklanguage(::enterprise_management::StringListPolicyProto* spellchecklanguage);

// optional .enterprise_management.BooleanPolicyProto SpellcheckEnabled = 410;
bool has_spellcheckenabled() const;
void clear_spellcheckenabled();
const ::enterprise_management::BooleanPolicyProto& spellcheckenabled() const;
::enterprise_management::BooleanPolicyProto* release_spellcheckenabled();
::enterprise_management::BooleanPolicyProto* mutable_spellcheckenabled();
void set_allocated_spellcheckenabled(::enterprise_management::BooleanPolicyProto* spellcheckenabled);

// optional .enterprise_management.IntegerPolicyProto AdsSettingForIntrusiveAdsSites = 411;
bool has_adssettingforintrusiveadssites() const;
void clear_adssettingforintrusiveadssites();
const ::enterprise_management::IntegerPolicyProto& adssettingforintrusiveadssites() const;
::enterprise_management::IntegerPolicyProto* release_adssettingforintrusiveadssites();
::enterprise_management::IntegerPolicyProto* mutable_adssettingforintrusiveadssites();
void set_allocated_adssettingforintrusiveadssites(::enterprise_management::IntegerPolicyProto* adssettingforintrusiveadssites);

// optional .enterprise_management.IntegerPolicyProto PasswordProtectionWarningTrigger = 413;
bool has_passwordprotectionwarningtrigger() const;
void clear_passwordprotectionwarningtrigger();
const ::enterprise_management::IntegerPolicyProto& passwordprotectionwarningtrigger() const;
::enterprise_management::IntegerPolicyProto* release_passwordprotectionwarningtrigger();
::enterprise_management::IntegerPolicyProto* mutable_passwordprotectionwarningtrigger();
void set_allocated_passwordprotectionwarningtrigger(::enterprise_management::IntegerPolicyProto* passwordprotectionwarningtrigger);

// optional .enterprise_management.IntegerPolicyProto RelaunchNotification = 421;
bool has_relaunchnotification() const;
void clear_relaunchnotification();
const ::enterprise_management::IntegerPolicyProto& relaunchnotification() const;
::enterprise_management::IntegerPolicyProto* release_relaunchnotification();
::enterprise_management::IntegerPolicyProto* mutable_relaunchnotification();
void set_allocated_relaunchnotification(::enterprise_management::IntegerPolicyProto* relaunchnotification);

// optional .enterprise_management.IntegerPolicyProto RelaunchNotificationPeriod = 422;
bool has_relaunchnotificationperiod() const;
void clear_relaunchnotificationperiod();
const ::enterprise_management::IntegerPolicyProto& relaunchnotificationperiod() const;
::enterprise_management::IntegerPolicyProto* release_relaunchnotificationperiod();
::enterprise_management::IntegerPolicyProto* mutable_relaunchnotificationperiod();
void set_allocated_relaunchnotificationperiod(::enterprise_management::IntegerPolicyProto* relaunchnotificationperiod);

// optional .enterprise_management.StringListPolicyProto SafeBrowsingWhitelistDomains = 424;
bool has_safebrowsingwhitelistdomains() const;
void clear_safebrowsingwhitelistdomains();
const ::enterprise_management::StringListPolicyProto& safebrowsingwhitelistdomains() const;
::enterprise_management::StringListPolicyProto* release_safebrowsingwhitelistdomains();
::enterprise_management::StringListPolicyProto* mutable_safebrowsingwhitelistdomains();
void set_allocated_safebrowsingwhitelistdomains(::enterprise_management::StringListPolicyProto* safebrowsingwhitelistdomains);

// optional .enterprise_management.StringListPolicyProto PasswordProtectionLoginURLs = 425;
bool has_passwordprotectionloginurls() const;
void clear_passwordprotectionloginurls();
const ::enterprise_management::StringListPolicyProto& passwordprotectionloginurls() const;
::enterprise_management::StringListPolicyProto* release_passwordprotectionloginurls();
::enterprise_management::StringListPolicyProto* mutable_passwordprotectionloginurls();
void set_allocated_passwordprotectionloginurls(::enterprise_management::StringListPolicyProto* passwordprotectionloginurls);

// optional .enterprise_management.StringPolicyProto PasswordProtectionChangePasswordURL = 426;
bool has_passwordprotectionchangepasswordurl() const;
void clear_passwordprotectionchangepasswordurl();
const ::enterprise_management::StringPolicyProto& passwordprotectionchangepasswordurl() const;
::enterprise_management::StringPolicyProto* release_passwordprotectionchangepasswordurl();
::enterprise_management::StringPolicyProto* mutable_passwordprotectionchangepasswordurl();
void set_allocated_passwordprotectionchangepasswordurl(::enterprise_management::StringPolicyProto* passwordprotectionchangepasswordurl);

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
bool has_safebrowsingextendedreportingenabled() const;
void clear_safebrowsingextendedreportingenabled();
const ::enterprise_management::BooleanPolicyProto& safebrowsingextendedreportingenabled() const;
::enterprise_management::BooleanPolicyProto* release_safebrowsingextendedreportingenabled();
::enterprise_management::BooleanPolicyProto* mutable_safebrowsingextendedreportingenabled();
void set_allocated_safebrowsingextendedreportingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled);

// optional .enterprise_management.BooleanPolicyProto AutoplayAllowed = 432;
bool has_autoplayallowed() const;
void clear_autoplayallowed();
const ::enterprise_management::BooleanPolicyProto& autoplayallowed() const;
::enterprise_management::BooleanPolicyProto* release_autoplayallowed();
::enterprise_management::BooleanPolicyProto* mutable_autoplayallowed();
void set_allocated_autoplayallowed(::enterprise_management::BooleanPolicyProto* autoplayallowed);

// optional .enterprise_management.StringListPolicyProto AutoplayWhitelist = 433;
bool has_autoplaywhitelist() const;
void clear_autoplaywhitelist();
const ::enterprise_management::StringListPolicyProto& autoplaywhitelist() const;
::enterprise_management::StringListPolicyProto* release_autoplaywhitelist();
::enterprise_management::StringListPolicyProto* mutable_autoplaywhitelist();
void set_allocated_autoplaywhitelist(::enterprise_management::StringListPolicyProto* autoplaywhitelist);

// optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
bool has_defaultwebusbguardsetting() const;
void clear_defaultwebusbguardsetting();
const ::enterprise_management::IntegerPolicyProto& defaultwebusbguardsetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultwebusbguardsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultwebusbguardsetting();
void set_allocated_defaultwebusbguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting);

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
bool has_certificatetransparencyenforcementdisabledforcas() const;
void clear_certificatetransparencyenforcementdisabledforcas();
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforcas() const;
::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforcas();
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforcas();
void set_allocated_certificatetransparencyenforcementdisabledforcas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas);

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
bool has_certificatetransparencyenforcementdisabledforlegacycas() const;
void clear_certificatetransparencyenforcementdisabledforlegacycas();
const ::enterprise_management::StringListPolicyProto& certificatetransparencyenforcementdisabledforlegacycas() const;
::enterprise_management::StringListPolicyProto* release_certificatetransparencyenforcementdisabledforlegacycas();
::enterprise_management::StringListPolicyProto* mutable_certificatetransparencyenforcementdisabledforlegacycas();
void set_allocated_certificatetransparencyenforcementdisabledforlegacycas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas);

// optional .enterprise_management.BooleanPolicyProto MediaRouterCastAllowAllIPs = 439;
bool has_mediaroutercastallowallips() const;
void clear_mediaroutercastallowallips();
const ::enterprise_management::BooleanPolicyProto& mediaroutercastallowallips() const;
::enterprise_management::BooleanPolicyProto* release_mediaroutercastallowallips();
::enterprise_management::BooleanPolicyProto* mutable_mediaroutercastallowallips();
void set_allocated_mediaroutercastallowallips(::enterprise_management::BooleanPolicyProto* mediaroutercastallowallips);

// optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
bool has_webusbaskforurls() const;
void clear_webusbaskforurls();
const ::enterprise_management::StringListPolicyProto& webusbaskforurls() const;
::enterprise_management::StringListPolicyProto* release_webusbaskforurls();
::enterprise_management::StringListPolicyProto* mutable_webusbaskforurls();
void set_allocated_webusbaskforurls(::enterprise_management::StringListPolicyProto* webusbaskforurls);

// optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
bool has_webusbblockedforurls() const;
void clear_webusbblockedforurls();
const ::enterprise_management::StringListPolicyProto& webusbblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_webusbblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_webusbblockedforurls();
void set_allocated_webusbblockedforurls(::enterprise_management::StringListPolicyProto* webusbblockedforurls);

// optional .enterprise_management.IntegerPolicyProto DeveloperToolsAvailability = 445;
bool has_developertoolsavailability() const;
void clear_developertoolsavailability();
const ::enterprise_management::IntegerPolicyProto& developertoolsavailability() const;
::enterprise_management::IntegerPolicyProto* release_developertoolsavailability();
::enterprise_management::IntegerPolicyProto* mutable_developertoolsavailability();
void set_allocated_developertoolsavailability(::enterprise_management::IntegerPolicyProto* developertoolsavailability);

// optional .enterprise_management.BooleanPolicyProto PromotionalTabsEnabled = 456;
bool has_promotionaltabsenabled() const;
void clear_promotionaltabsenabled();
const ::enterprise_management::BooleanPolicyProto& promotionaltabsenabled() const;
::enterprise_management::BooleanPolicyProto* release_promotionaltabsenabled();
::enterprise_management::BooleanPolicyProto* mutable_promotionaltabsenabled();
void set_allocated_promotionaltabsenabled(::enterprise_management::BooleanPolicyProto* promotionaltabsenabled);

// optional .enterprise_management.IntegerPolicyProto SafeSitesFilterBehavior = 457;
bool has_safesitesfilterbehavior() const;
void clear_safesitesfilterbehavior();
const ::enterprise_management::IntegerPolicyProto& safesitesfilterbehavior() const;
::enterprise_management::IntegerPolicyProto* release_safesitesfilterbehavior();
::enterprise_management::IntegerPolicyProto* mutable_safesitesfilterbehavior();
void set_allocated_safesitesfilterbehavior(::enterprise_management::IntegerPolicyProto* safesitesfilterbehavior);

// optional .enterprise_management.StringListPolicyProto OverrideSecurityRestrictionsOnInsecureOrigin = 459;
bool has_overridesecurityrestrictionsoninsecureorigin() const;
void clear_overridesecurityrestrictionsoninsecureorigin();
const ::enterprise_management::StringListPolicyProto& overridesecurityrestrictionsoninsecureorigin() const;
::enterprise_management::StringListPolicyProto* release_overridesecurityrestrictionsoninsecureorigin();
::enterprise_management::StringListPolicyProto* mutable_overridesecurityrestrictionsoninsecureorigin();
void set_allocated_overridesecurityrestrictionsoninsecureorigin(::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin);

// optional .enterprise_management.BooleanPolicyProto AutofillAddressEnabled = 461;
bool has_autofilladdressenabled() const;
void clear_autofilladdressenabled();
const ::enterprise_management::BooleanPolicyProto& autofilladdressenabled() const;
::enterprise_management::BooleanPolicyProto* release_autofilladdressenabled();
::enterprise_management::BooleanPolicyProto* mutable_autofilladdressenabled();
void set_allocated_autofilladdressenabled(::enterprise_management::BooleanPolicyProto* autofilladdressenabled);

// optional .enterprise_management.BooleanPolicyProto UrlKeyedAnonymizedDataCollectionEnabled = 463;
bool has_urlkeyedanonymizeddatacollectionenabled() const;
void clear_urlkeyedanonymizeddatacollectionenabled();
const ::enterprise_management::BooleanPolicyProto& urlkeyedanonymizeddatacollectionenabled() const;
::enterprise_management::BooleanPolicyProto* release_urlkeyedanonymizeddatacollectionenabled();
::enterprise_management::BooleanPolicyProto* mutable_urlkeyedanonymizeddatacollectionenabled();
void set_allocated_urlkeyedanonymizeddatacollectionenabled(::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled);

// optional .enterprise_management.BooleanPolicyProto WebRtcEventLogCollectionAllowed = 466;
bool has_webrtceventlogcollectionallowed() const;
void clear_webrtceventlogcollectionallowed();
const ::enterprise_management::BooleanPolicyProto& webrtceventlogcollectionallowed() const;
::enterprise_management::BooleanPolicyProto* release_webrtceventlogcollectionallowed();
::enterprise_management::BooleanPolicyProto* mutable_webrtceventlogcollectionallowed();
void set_allocated_webrtceventlogcollectionallowed(::enterprise_management::BooleanPolicyProto* webrtceventlogcollectionallowed);

// optional .enterprise_management.StringListPolicyProto CoalesceH2ConnectionsWithClientCertificatesForHosts = 468;
bool has_coalesceh2connectionswithclientcertificatesforhosts() const;
void clear_coalesceh2connectionswithclientcertificatesforhosts();
const ::enterprise_management::StringListPolicyProto& coalesceh2connectionswithclientcertificatesforhosts() const;
::enterprise_management::StringListPolicyProto* release_coalesceh2connectionswithclientcertificatesforhosts();
::enterprise_management::StringListPolicyProto* mutable_coalesceh2connectionswithclientcertificatesforhosts();
void set_allocated_coalesceh2connectionswithclientcertificatesforhosts(::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts);

// optional .enterprise_management.StringPolicyProto WebAppInstallForceList = 470;
bool has_webappinstallforcelist() const;
void clear_webappinstallforcelist();
const ::enterprise_management::StringPolicyProto& webappinstallforcelist() const;
::enterprise_management::StringPolicyProto* release_webappinstallforcelist();
::enterprise_management::StringPolicyProto* mutable_webappinstallforcelist();
void set_allocated_webappinstallforcelist(::enterprise_management::StringPolicyProto* webappinstallforcelist);

// optional .enterprise_management.BooleanPolicyProto ReportVersionData = 472;
bool has_reportversiondata() const;
void clear_reportversiondata();
const ::enterprise_management::BooleanPolicyProto& reportversiondata() const;
::enterprise_management::BooleanPolicyProto* release_reportversiondata();
::enterprise_management::BooleanPolicyProto* mutable_reportversiondata();
void set_allocated_reportversiondata(::enterprise_management::BooleanPolicyProto* reportversiondata);

// optional .enterprise_management.BooleanPolicyProto ReportPolicyData = 473;
bool has_reportpolicydata() const;
void clear_reportpolicydata();
const ::enterprise_management::BooleanPolicyProto& reportpolicydata() const;
::enterprise_management::BooleanPolicyProto* release_reportpolicydata();
::enterprise_management::BooleanPolicyProto* mutable_reportpolicydata();
void set_allocated_reportpolicydata(::enterprise_management::BooleanPolicyProto* reportpolicydata);

// optional .enterprise_management.BooleanPolicyProto ReportMachineIDData = 474;
bool has_reportmachineiddata() const;
void clear_reportmachineiddata();
const ::enterprise_management::BooleanPolicyProto& reportmachineiddata() const;
::enterprise_management::BooleanPolicyProto* release_reportmachineiddata();
::enterprise_management::BooleanPolicyProto* mutable_reportmachineiddata();
void set_allocated_reportmachineiddata(::enterprise_management::BooleanPolicyProto* reportmachineiddata);

// optional .enterprise_management.BooleanPolicyProto ReportUserIDData = 475;
bool has_reportuseriddata() const;
void clear_reportuseriddata();
const ::enterprise_management::BooleanPolicyProto& reportuseriddata() const;
::enterprise_management::BooleanPolicyProto* release_reportuseriddata();
::enterprise_management::BooleanPolicyProto* mutable_reportuseriddata();
void set_allocated_reportuseriddata(::enterprise_management::BooleanPolicyProto* reportuseriddata);

// optional .enterprise_management.StringPolicyProto PrintingPaperSizeDefault = 481;
bool has_printingpapersizedefault() const;
void clear_printingpapersizedefault();
const ::enterprise_management::StringPolicyProto& printingpapersizedefault() const;
::enterprise_management::StringPolicyProto* release_printingpapersizedefault();
::enterprise_management::StringPolicyProto* mutable_printingpapersizedefault();
void set_allocated_printingpapersizedefault(::enterprise_management::StringPolicyProto* printingpapersizedefault);

// optional .enterprise_management.BooleanPolicyProto PrintHeaderFooter = 482;
bool has_printheaderfooter() const;
void clear_printheaderfooter();
const ::enterprise_management::BooleanPolicyProto& printheaderfooter() const;
::enterprise_management::BooleanPolicyProto* release_printheaderfooter();
::enterprise_management::BooleanPolicyProto* mutable_printheaderfooter();
void set_allocated_printheaderfooter(::enterprise_management::BooleanPolicyProto* printheaderfooter);

// optional .enterprise_management.BooleanPolicyProto EnterpriseHardwarePlatformAPIEnabled = 485;
bool has_enterprisehardwareplatformapienabled() const;
void clear_enterprisehardwareplatformapienabled();
const ::enterprise_management::BooleanPolicyProto& enterprisehardwareplatformapienabled() const;
::enterprise_management::BooleanPolicyProto* release_enterprisehardwareplatformapienabled();
::enterprise_management::BooleanPolicyProto* mutable_enterprisehardwareplatformapienabled();
void set_allocated_enterprisehardwareplatformapienabled(::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled);

// optional .enterprise_management.StringPolicyProto WebUsbAllowDevicesForUrls = 488;
bool has_webusballowdevicesforurls() const;
void clear_webusballowdevicesforurls();
const ::enterprise_management::StringPolicyProto& webusballowdevicesforurls() const;
::enterprise_management::StringPolicyProto* release_webusballowdevicesforurls();
::enterprise_management::StringPolicyProto* mutable_webusballowdevicesforurls();
void set_allocated_webusballowdevicesforurls(::enterprise_management::StringPolicyProto* webusballowdevicesforurls);

// optional .enterprise_management.IntegerPolicyProto BrowserSignin = 489;
bool has_browsersignin() const;
void clear_browsersignin();
const ::enterprise_management::IntegerPolicyProto& browsersignin() const;
::enterprise_management::IntegerPolicyProto* release_browsersignin();
::enterprise_management::IntegerPolicyProto* mutable_browsersignin();
void set_allocated_browsersignin(::enterprise_management::IntegerPolicyProto* browsersignin);

// optional .enterprise_management.BooleanPolicyProto CloudReportingEnabled = 495;
bool has_cloudreportingenabled() const;
void clear_cloudreportingenabled();
const ::enterprise_management::BooleanPolicyProto& cloudreportingenabled() const;
::enterprise_management::BooleanPolicyProto* release_cloudreportingenabled();
::enterprise_management::BooleanPolicyProto* mutable_cloudreportingenabled();
void set_allocated_cloudreportingenabled(::enterprise_management::BooleanPolicyProto* cloudreportingenabled);

// optional .enterprise_management.StringPolicyProto AlternativeBrowserPath = 496;
bool has_alternativebrowserpath() const;
void clear_alternativebrowserpath();
const ::enterprise_management::StringPolicyProto& alternativebrowserpath() const;
::enterprise_management::StringPolicyProto* release_alternativebrowserpath();
::enterprise_management::StringPolicyProto* mutable_alternativebrowserpath();
void set_allocated_alternativebrowserpath(::enterprise_management::StringPolicyProto* alternativebrowserpath);

// optional .enterprise_management.StringListPolicyProto AlternativeBrowserParameters = 497;
bool has_alternativebrowserparameters() const;
void clear_alternativebrowserparameters();
const ::enterprise_management::StringListPolicyProto& alternativebrowserparameters() const;
::enterprise_management::StringListPolicyProto* release_alternativebrowserparameters();
::enterprise_management::StringListPolicyProto* mutable_alternativebrowserparameters();
void set_allocated_alternativebrowserparameters(::enterprise_management::StringListPolicyProto* alternativebrowserparameters);

// optional .enterprise_management.StringListPolicyProto BrowserSwitcherUrlList = 498;
bool has_browserswitcherurllist() const;
void clear_browserswitcherurllist();
const ::enterprise_management::StringListPolicyProto& browserswitcherurllist() const;
::enterprise_management::StringListPolicyProto* release_browserswitcherurllist();
::enterprise_management::StringListPolicyProto* mutable_browserswitcherurllist();
void set_allocated_browserswitcherurllist(::enterprise_management::StringListPolicyProto* browserswitcherurllist);

// optional .enterprise_management.StringListPolicyProto BrowserSwitcherUrlGreylist = 499;
bool has_browserswitcherurlgreylist() const;
void clear_browserswitcherurlgreylist();
const ::enterprise_management::StringListPolicyProto& browserswitcherurlgreylist() const;
::enterprise_management::StringListPolicyProto* release_browserswitcherurlgreylist();
::enterprise_management::StringListPolicyProto* mutable_browserswitcherurlgreylist();
void set_allocated_browserswitcherurlgreylist(::enterprise_management::StringListPolicyProto* browserswitcherurlgreylist);

// optional .enterprise_management.BooleanPolicyProto ReportExtensionsAndPluginsData = 501;
bool has_reportextensionsandpluginsdata() const;
void clear_reportextensionsandpluginsdata();
const ::enterprise_management::BooleanPolicyProto& reportextensionsandpluginsdata() const;
::enterprise_management::BooleanPolicyProto* release_reportextensionsandpluginsdata();
::enterprise_management::BooleanPolicyProto* mutable_reportextensionsandpluginsdata();
void set_allocated_reportextensionsandpluginsdata(::enterprise_management::BooleanPolicyProto* reportextensionsandpluginsdata);

// optional .enterprise_management.BooleanPolicyProto CloudManagementEnrollmentMandatory = 507;
bool has_cloudmanagementenrollmentmandatory() const;
void clear_cloudmanagementenrollmentmandatory();
const ::enterprise_management::BooleanPolicyProto& cloudmanagementenrollmentmandatory() const;
::enterprise_management::BooleanPolicyProto* release_cloudmanagementenrollmentmandatory();
::enterprise_management::BooleanPolicyProto* mutable_cloudmanagementenrollmentmandatory();
void set_allocated_cloudmanagementenrollmentmandatory(::enterprise_management::BooleanPolicyProto* cloudmanagementenrollmentmandatory);

// optional .enterprise_management.StringPolicyProto CloudManagementEnrollmentToken = 512;
bool has_cloudmanagementenrollmenttoken() const;
void clear_cloudmanagementenrollmenttoken();
const ::enterprise_management::StringPolicyProto& cloudmanagementenrollmenttoken() const;
::enterprise_management::StringPolicyProto* release_cloudmanagementenrollmenttoken();
::enterprise_management::StringPolicyProto* mutable_cloudmanagementenrollmenttoken();
void set_allocated_cloudmanagementenrollmenttoken(::enterprise_management::StringPolicyProto* cloudmanagementenrollmenttoken);

// optional .enterprise_management.StringPolicyProto BrowserSwitcherExternalSitelistUrl = 513;
bool has_browserswitcherexternalsitelisturl() const;
void clear_browserswitcherexternalsitelisturl();
const ::enterprise_management::StringPolicyProto& browserswitcherexternalsitelisturl() const;
::enterprise_management::StringPolicyProto* release_browserswitcherexternalsitelisturl();
::enterprise_management::StringPolicyProto* mutable_browserswitcherexternalsitelisturl();
void set_allocated_browserswitcherexternalsitelisturl(::enterprise_management::StringPolicyProto* browserswitcherexternalsitelisturl);

// optional .enterprise_management.BooleanPolicyProto BrowserSwitcherEnabled = 519;
bool has_browserswitcherenabled() const;
void clear_browserswitcherenabled();
const ::enterprise_management::BooleanPolicyProto& browserswitcherenabled() const;
::enterprise_management::BooleanPolicyProto* release_browserswitcherenabled();
::enterprise_management::BooleanPolicyProto* mutable_browserswitcherenabled();
void set_allocated_browserswitcherenabled(::enterprise_management::BooleanPolicyProto* browserswitcherenabled);

// optional .enterprise_management.BooleanPolicyProto BrowserSwitcherKeepLastChromeTab = 521;
bool has_browserswitcherkeeplastchrometab() const;
void clear_browserswitcherkeeplastchrometab();
const ::enterprise_management::BooleanPolicyProto& browserswitcherkeeplastchrometab() const;
::enterprise_management::BooleanPolicyProto* release_browserswitcherkeeplastchrometab();
::enterprise_management::BooleanPolicyProto* mutable_browserswitcherkeeplastchrometab();
void set_allocated_browserswitcherkeeplastchrometab(::enterprise_management::BooleanPolicyProto* browserswitcherkeeplastchrometab);

// optional .enterprise_management.IntegerPolicyProto BrowserSwitcherDelay = 526;
bool has_browserswitcherdelay() const;
void clear_browserswitcherdelay();
const ::enterprise_management::IntegerPolicyProto& browserswitcherdelay() const;
::enterprise_management::IntegerPolicyProto* release_browserswitcherdelay();
::enterprise_management::IntegerPolicyProto* mutable_browserswitcherdelay();
void set_allocated_browserswitcherdelay(::enterprise_management::IntegerPolicyProto* browserswitcherdelay);

// optional .enterprise_management.BooleanPolicyProto AuthNegotiateDelegateByKdcPolicy = 530;
bool has_authnegotiatedelegatebykdcpolicy() const;
void clear_authnegotiatedelegatebykdcpolicy();
const ::enterprise_management::BooleanPolicyProto& authnegotiatedelegatebykdcpolicy() const;
::enterprise_management::BooleanPolicyProto* release_authnegotiatedelegatebykdcpolicy();
::enterprise_management::BooleanPolicyProto* mutable_authnegotiatedelegatebykdcpolicy();
void set_allocated_authnegotiatedelegatebykdcpolicy(::enterprise_management::BooleanPolicyProto* authnegotiatedelegatebykdcpolicy);

// optional .enterprise_management.BooleanPolicyProto AllowPopupsDuringPageUnload = 535;
bool has_allowpopupsduringpageunload() const;
void clear_allowpopupsduringpageunload();
const ::enterprise_management::BooleanPolicyProto& allowpopupsduringpageunload() const;
::enterprise_management::BooleanPolicyProto* release_allowpopupsduringpageunload();
::enterprise_management::BooleanPolicyProto* mutable_allowpopupsduringpageunload();
void set_allocated_allowpopupsduringpageunload(::enterprise_management::BooleanPolicyProto* allowpopupsduringpageunload);

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowFileTransfer = 536;
bool has_remoteaccesshostallowfiletransfer() const;
void clear_remoteaccesshostallowfiletransfer();
const ::enterprise_management::BooleanPolicyProto& remoteaccesshostallowfiletransfer() const;
::enterprise_management::BooleanPolicyProto* release_remoteaccesshostallowfiletransfer();
::enterprise_management::BooleanPolicyProto* mutable_remoteaccesshostallowfiletransfer();
void set_allocated_remoteaccesshostallowfiletransfer(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowfiletransfer);

// optional .enterprise_management.StringListPolicyProto SpellcheckLanguageBlacklist = 538;
bool has_spellchecklanguageblacklist() const;
void clear_spellchecklanguageblacklist();
const ::enterprise_management::StringListPolicyProto& spellchecklanguageblacklist() const;
::enterprise_management::StringListPolicyProto* release_spellchecklanguageblacklist();
::enterprise_management::StringListPolicyProto* mutable_spellchecklanguageblacklist();
void set_allocated_spellchecklanguageblacklist(::enterprise_management::StringListPolicyProto* spellchecklanguageblacklist);

// optional .enterprise_management.BooleanPolicyProto SignedHTTPExchangeEnabled = 544;
bool has_signedhttpexchangeenabled() const;
void clear_signedhttpexchangeenabled();
const ::enterprise_management::BooleanPolicyProto& signedhttpexchangeenabled() const;
::enterprise_management::BooleanPolicyProto* release_signedhttpexchangeenabled();
::enterprise_management::BooleanPolicyProto* mutable_signedhttpexchangeenabled();
void set_allocated_signedhttpexchangeenabled(::enterprise_management::BooleanPolicyProto* signedhttpexchangeenabled);

// optional .enterprise_management.BooleanPolicyProto ExtensionInstallListsMergeEnabled = 546;
bool has_extensioninstalllistsmergeenabled() const;
void clear_extensioninstalllistsmergeenabled();
const ::enterprise_management::BooleanPolicyProto& extensioninstalllistsmergeenabled() const;
::enterprise_management::BooleanPolicyProto* release_extensioninstalllistsmergeenabled();
::enterprise_management::BooleanPolicyProto* mutable_extensioninstalllistsmergeenabled();
void set_allocated_extensioninstalllistsmergeenabled(::enterprise_management::BooleanPolicyProto* extensioninstalllistsmergeenabled);

// optional .enterprise_management.StringListPolicyProto PolicyListMultipleSourceMergeList = 556;
bool has_policylistmultiplesourcemergelist() const;
void clear_policylistmultiplesourcemergelist();
const ::enterprise_management::StringListPolicyProto& policylistmultiplesourcemergelist() const;
::enterprise_management::StringListPolicyProto* release_policylistmultiplesourcemergelist();
::enterprise_management::StringListPolicyProto* mutable_policylistmultiplesourcemergelist();
void set_allocated_policylistmultiplesourcemergelist(::enterprise_management::StringListPolicyProto* policylistmultiplesourcemergelist);

// optional .enterprise_management.StringPolicyProto BrowserSwitcherExternalGreylistUrl = 566;
bool has_browserswitcherexternalgreylisturl() const;
void clear_browserswitcherexternalgreylisturl();
const ::enterprise_management::StringPolicyProto& browserswitcherexternalgreylisturl() const;
::enterprise_management::StringPolicyProto* release_browserswitcherexternalgreylisturl();
::enterprise_management::StringPolicyProto* mutable_browserswitcherexternalgreylisturl();
void set_allocated_browserswitcherexternalgreylisturl(::enterprise_management::StringPolicyProto* browserswitcherexternalgreylisturl);

// optional .enterprise_management.StringListPolicyProto PolicyDictionaryMultipleSourceMergeList = 567;
bool has_policydictionarymultiplesourcemergelist() const;
void clear_policydictionarymultiplesourcemergelist();
const ::enterprise_management::StringListPolicyProto& policydictionarymultiplesourcemergelist() const;
::enterprise_management::StringListPolicyProto* release_policydictionarymultiplesourcemergelist();
::enterprise_management::StringListPolicyProto* mutable_policydictionarymultiplesourcemergelist();
void set_allocated_policydictionarymultiplesourcemergelist(::enterprise_management::StringListPolicyProto* policydictionarymultiplesourcemergelist);

// optional .enterprise_management.BooleanPolicyProto CommandLineFlagSecurityWarningsEnabled = 568;
bool has_commandlineflagsecuritywarningsenabled() const;
void clear_commandlineflagsecuritywarningsenabled();
const ::enterprise_management::BooleanPolicyProto& commandlineflagsecuritywarningsenabled() const;
::enterprise_management::BooleanPolicyProto* release_commandlineflagsecuritywarningsenabled();
::enterprise_management::BooleanPolicyProto* mutable_commandlineflagsecuritywarningsenabled();
void set_allocated_commandlineflagsecuritywarningsenabled(::enterprise_management::BooleanPolicyProto* commandlineflagsecuritywarningsenabled);

// optional .enterprise_management.BooleanPolicyProto UserFeedbackAllowed = 572;
bool has_userfeedbackallowed() const;
void clear_userfeedbackallowed();
const ::enterprise_management::BooleanPolicyProto& userfeedbackallowed() const;
::enterprise_management::BooleanPolicyProto* release_userfeedbackallowed();
::enterprise_management::BooleanPolicyProto* mutable_userfeedbackallowed();
void set_allocated_userfeedbackallowed(::enterprise_management::BooleanPolicyProto* userfeedbackallowed);

// optional .enterprise_management.BooleanPolicyProto BrowserGuestModeEnforced = 576;
bool has_browserguestmodeenforced() const;
void clear_browserguestmodeenforced();
const ::enterprise_management::BooleanPolicyProto& browserguestmodeenforced() const;
::enterprise_management::BooleanPolicyProto* release_browserguestmodeenforced();
::enterprise_management::BooleanPolicyProto* mutable_browserguestmodeenforced();
void set_allocated_browserguestmodeenforced(::enterprise_management::BooleanPolicyProto* browserguestmodeenforced);

// optional .enterprise_management.BooleanPolicyProto PasswordLeakDetectionEnabled = 582;
bool has_passwordleakdetectionenabled() const;
void clear_passwordleakdetectionenabled();
const ::enterprise_management::BooleanPolicyProto& passwordleakdetectionenabled() const;
::enterprise_management::BooleanPolicyProto* release_passwordleakdetectionenabled();
::enterprise_management::BooleanPolicyProto* mutable_passwordleakdetectionenabled();
void set_allocated_passwordleakdetectionenabled(::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled);

// optional .enterprise_management.StringPolicyProto DnsOverHttpsMode = 584;
bool has_dnsoverhttpsmode() const;
void clear_dnsoverhttpsmode();
const ::enterprise_management::StringPolicyProto& dnsoverhttpsmode() const;
::enterprise_management::StringPolicyProto* release_dnsoverhttpsmode();
::enterprise_management::StringPolicyProto* mutable_dnsoverhttpsmode();
void set_allocated_dnsoverhttpsmode(::enterprise_management::StringPolicyProto* dnsoverhttpsmode);

// optional .enterprise_management.IntegerPolicyProto SendFilesForMalwareCheck = 585;
bool has_sendfilesformalwarecheck() const;
void clear_sendfilesformalwarecheck();
const ::enterprise_management::IntegerPolicyProto& sendfilesformalwarecheck() const;
::enterprise_management::IntegerPolicyProto* release_sendfilesformalwarecheck();
::enterprise_management::IntegerPolicyProto* mutable_sendfilesformalwarecheck();
void set_allocated_sendfilesformalwarecheck(::enterprise_management::IntegerPolicyProto* sendfilesformalwarecheck);

// optional .enterprise_management.BooleanPolicyProto PolicyAtomicGroupsEnabled = 586;
bool has_policyatomicgroupsenabled() const;
void clear_policyatomicgroupsenabled();
const ::enterprise_management::BooleanPolicyProto& policyatomicgroupsenabled() const;
::enterprise_management::BooleanPolicyProto* release_policyatomicgroupsenabled();
::enterprise_management::BooleanPolicyProto* mutable_policyatomicgroupsenabled();
void set_allocated_policyatomicgroupsenabled(::enterprise_management::BooleanPolicyProto* policyatomicgroupsenabled);

// optional .enterprise_management.BooleanPolicyProto UnsafeEventsReportingEnabled = 587;
bool has_unsafeeventsreportingenabled() const;
void clear_unsafeeventsreportingenabled();
const ::enterprise_management::BooleanPolicyProto& unsafeeventsreportingenabled() const;
::enterprise_management::BooleanPolicyProto* release_unsafeeventsreportingenabled();
::enterprise_management::BooleanPolicyProto* mutable_unsafeeventsreportingenabled();
void set_allocated_unsafeeventsreportingenabled(::enterprise_management::BooleanPolicyProto* unsafeeventsreportingenabled);

// optional .enterprise_management.IntegerPolicyProto BlockLargeFileTransfer = 588;
bool has_blocklargefiletransfer() const;
void clear_blocklargefiletransfer();
const ::enterprise_management::IntegerPolicyProto& blocklargefiletransfer() const;
::enterprise_management::IntegerPolicyProto* release_blocklargefiletransfer();
::enterprise_management::IntegerPolicyProto* mutable_blocklargefiletransfer();
void set_allocated_blocklargefiletransfer(::enterprise_management::IntegerPolicyProto* blocklargefiletransfer);

// optional .enterprise_management.IntegerPolicyProto DelayDeliveryUntilVerdict = 589;
bool has_delaydeliveryuntilverdict() const;
void clear_delaydeliveryuntilverdict();
const ::enterprise_management::IntegerPolicyProto& delaydeliveryuntilverdict() const;
::enterprise_management::IntegerPolicyProto* release_delaydeliveryuntilverdict();
::enterprise_management::IntegerPolicyProto* mutable_delaydeliveryuntilverdict();
void set_allocated_delaydeliveryuntilverdict(::enterprise_management::IntegerPolicyProto* delaydeliveryuntilverdict);

// optional .enterprise_management.IntegerPolicyProto AllowPasswordProtectedFiles = 590;
bool has_allowpasswordprotectedfiles() const;
void clear_allowpasswordprotectedfiles();
const ::enterprise_management::IntegerPolicyProto& allowpasswordprotectedfiles() const;
::enterprise_management::IntegerPolicyProto* release_allowpasswordprotectedfiles();
::enterprise_management::IntegerPolicyProto* mutable_allowpasswordprotectedfiles();
void set_allocated_allowpasswordprotectedfiles(::enterprise_management::IntegerPolicyProto* allowpasswordprotectedfiles);

// optional .enterprise_management.IntegerPolicyProto CheckContentCompliance = 591;
bool has_checkcontentcompliance() const;
void clear_checkcontentcompliance();
const ::enterprise_management::IntegerPolicyProto& checkcontentcompliance() const;
::enterprise_management::IntegerPolicyProto* release_checkcontentcompliance();
::enterprise_management::IntegerPolicyProto* mutable_checkcontentcompliance();
void set_allocated_checkcontentcompliance(::enterprise_management::IntegerPolicyProto* checkcontentcompliance);

// optional .enterprise_management.StringListPolicyProto URLsToCheckComplianceOfDownloadedContent = 592;
bool has_urlstocheckcomplianceofdownloadedcontent() const;
void clear_urlstocheckcomplianceofdownloadedcontent();
const ::enterprise_management::StringListPolicyProto& urlstocheckcomplianceofdownloadedcontent() const;
::enterprise_management::StringListPolicyProto* release_urlstocheckcomplianceofdownloadedcontent();
::enterprise_management::StringListPolicyProto* mutable_urlstocheckcomplianceofdownloadedcontent();
void set_allocated_urlstocheckcomplianceofdownloadedcontent(::enterprise_management::StringListPolicyProto* urlstocheckcomplianceofdownloadedcontent);

// optional .enterprise_management.StringListPolicyProto URLsToNotCheckComplianceOfUploadedContent = 593;
bool has_urlstonotcheckcomplianceofuploadedcontent() const;
void clear_urlstonotcheckcomplianceofuploadedcontent();
const ::enterprise_management::StringListPolicyProto& urlstonotcheckcomplianceofuploadedcontent() const;
::enterprise_management::StringListPolicyProto* release_urlstonotcheckcomplianceofuploadedcontent();
::enterprise_management::StringListPolicyProto* mutable_urlstonotcheckcomplianceofuploadedcontent();
void set_allocated_urlstonotcheckcomplianceofuploadedcontent(::enterprise_management::StringListPolicyProto* urlstonotcheckcomplianceofuploadedcontent);

// optional .enterprise_management.StringListPolicyProto URLsToCheckForMalwareOfUploadedContent = 602;
bool has_urlstocheckformalwareofuploadedcontent() const;
void clear_urlstocheckformalwareofuploadedcontent();
const ::enterprise_management::StringListPolicyProto& urlstocheckformalwareofuploadedcontent() const;
::enterprise_management::StringListPolicyProto* release_urlstocheckformalwareofuploadedcontent();
::enterprise_management::StringListPolicyProto* mutable_urlstocheckformalwareofuploadedcontent();
void set_allocated_urlstocheckformalwareofuploadedcontent(::enterprise_management::StringListPolicyProto* urlstocheckformalwareofuploadedcontent);

// optional .enterprise_management.StringListPolicyProto HSTSPolicyBypassList = 603;
bool has_hstspolicybypasslist() const;
void clear_hstspolicybypasslist();
const ::enterprise_management::StringListPolicyProto& hstspolicybypasslist() const;
::enterprise_management::StringListPolicyProto* release_hstspolicybypasslist();
::enterprise_management::StringListPolicyProto* mutable_hstspolicybypasslist();
void set_allocated_hstspolicybypasslist(::enterprise_management::StringListPolicyProto* hstspolicybypasslist);

// optional .enterprise_management.BooleanPolicyProto AllowSyncXHRInPageDismissal = 606;
bool has_allowsyncxhrinpagedismissal() const;
void clear_allowsyncxhrinpagedismissal();
const ::enterprise_management::BooleanPolicyProto& allowsyncxhrinpagedismissal() const;
::enterprise_management::BooleanPolicyProto* release_allowsyncxhrinpagedismissal();
::enterprise_management::BooleanPolicyProto* mutable_allowsyncxhrinpagedismissal();
void set_allocated_allowsyncxhrinpagedismissal(::enterprise_management::BooleanPolicyProto* allowsyncxhrinpagedismissal);

// optional .enterprise_management.BooleanPolicyProto CloudExtensionRequestEnabled = 610;
bool has_cloudextensionrequestenabled() const;
void clear_cloudextensionrequestenabled();
const ::enterprise_management::BooleanPolicyProto& cloudextensionrequestenabled() const;
::enterprise_management::BooleanPolicyProto* release_cloudextensionrequestenabled();
::enterprise_management::BooleanPolicyProto* mutable_cloudextensionrequestenabled();
void set_allocated_cloudextensionrequestenabled(::enterprise_management::BooleanPolicyProto* cloudextensionrequestenabled);

// optional .enterprise_management.BooleanPolicyProto SharedClipboardEnabled = 612;
bool has_sharedclipboardenabled() const;
void clear_sharedclipboardenabled();
const ::enterprise_management::BooleanPolicyProto& sharedclipboardenabled() const;
::enterprise_management::BooleanPolicyProto* release_sharedclipboardenabled();
::enterprise_management::BooleanPolicyProto* mutable_sharedclipboardenabled();
void set_allocated_sharedclipboardenabled(::enterprise_management::BooleanPolicyProto* sharedclipboardenabled);

// optional .enterprise_management.StringPolicyProto PrintingAllowedBackgroundGraphicsModes = 623;
bool has_printingallowedbackgroundgraphicsmodes() const;
void clear_printingallowedbackgroundgraphicsmodes();
const ::enterprise_management::StringPolicyProto& printingallowedbackgroundgraphicsmodes() const;
::enterprise_management::StringPolicyProto* release_printingallowedbackgroundgraphicsmodes();
::enterprise_management::StringPolicyProto* mutable_printingallowedbackgroundgraphicsmodes();
void set_allocated_printingallowedbackgroundgraphicsmodes(::enterprise_management::StringPolicyProto* printingallowedbackgroundgraphicsmodes);

// optional .enterprise_management.StringPolicyProto PrintingBackgroundGraphicsDefault = 624;
bool has_printingbackgroundgraphicsdefault() const;
void clear_printingbackgroundgraphicsdefault();
const ::enterprise_management::StringPolicyProto& printingbackgroundgraphicsdefault() const;
::enterprise_management::StringPolicyProto* release_printingbackgroundgraphicsdefault();
::enterprise_management::StringPolicyProto* mutable_printingbackgroundgraphicsdefault();
void set_allocated_printingbackgroundgraphicsdefault(::enterprise_management::StringPolicyProto* printingbackgroundgraphicsdefault);

// optional .enterprise_management.IntegerPolicyProto LegacySameSiteCookieBehaviorEnabled = 625;
bool has_legacysamesitecookiebehaviorenabled() const;
void clear_legacysamesitecookiebehaviorenabled();
const ::enterprise_management::IntegerPolicyProto& legacysamesitecookiebehaviorenabled() const;
::enterprise_management::IntegerPolicyProto* release_legacysamesitecookiebehaviorenabled();
::enterprise_management::IntegerPolicyProto* mutable_legacysamesitecookiebehaviorenabled();
void set_allocated_legacysamesitecookiebehaviorenabled(::enterprise_management::IntegerPolicyProto* legacysamesitecookiebehaviorenabled);

// optional .enterprise_management.StringListPolicyProto LegacySameSiteCookieBehaviorEnabledForDomainList = 626;
bool has_legacysamesitecookiebehaviorenabledfordomainlist() const;
void clear_legacysamesitecookiebehaviorenabledfordomainlist();
const ::enterprise_management::StringListPolicyProto& legacysamesitecookiebehaviorenabledfordomainlist() const;
::enterprise_management::StringListPolicyProto* release_legacysamesitecookiebehaviorenabledfordomainlist();
::enterprise_management::StringListPolicyProto* mutable_legacysamesitecookiebehaviorenabledfordomainlist();
void set_allocated_legacysamesitecookiebehaviorenabledfordomainlist(::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist);

// optional .enterprise_management.BooleanPolicyProto TLS13HardeningForLocalAnchorsEnabled = 628;
bool has_tls13hardeningforlocalanchorsenabled() const;
void clear_tls13hardeningforlocalanchorsenabled();
const ::enterprise_management::BooleanPolicyProto& tls13hardeningforlocalanchorsenabled() const;
::enterprise_management::BooleanPolicyProto* release_tls13hardeningforlocalanchorsenabled();
::enterprise_management::BooleanPolicyProto* mutable_tls13hardeningforlocalanchorsenabled();
void set_allocated_tls13hardeningforlocalanchorsenabled(::enterprise_management::BooleanPolicyProto* tls13hardeningforlocalanchorsenabled);

// optional .enterprise_management.BooleanPolicyProto AudioSandboxEnabled = 629;
bool has_audiosandboxenabled() const;
void clear_audiosandboxenabled();
const ::enterprise_management::BooleanPolicyProto& audiosandboxenabled() const;
::enterprise_management::BooleanPolicyProto* release_audiosandboxenabled();
::enterprise_management::BooleanPolicyProto* mutable_audiosandboxenabled();
void set_allocated_audiosandboxenabled(::enterprise_management::BooleanPolicyProto* audiosandboxenabled);

// optional .enterprise_management.StringListPolicyProto CorsMitigationList = 631;
bool has_corsmitigationlist() const;
void clear_corsmitigationlist();
const ::enterprise_management::StringListPolicyProto& corsmitigationlist() const;
::enterprise_management::StringListPolicyProto* release_corsmitigationlist();
::enterprise_management::StringListPolicyProto* mutable_corsmitigationlist();
void set_allocated_corsmitigationlist(::enterprise_management::StringListPolicyProto* corsmitigationlist);

// optional .enterprise_management.BooleanPolicyProto CorsLegacyModeEnabled = 632;
bool has_corslegacymodeenabled() const;
void clear_corslegacymodeenabled();
const ::enterprise_management::BooleanPolicyProto& corslegacymodeenabled() const;
::enterprise_management::BooleanPolicyProto* release_corslegacymodeenabled();
::enterprise_management::BooleanPolicyProto* mutable_corslegacymodeenabled();
void set_allocated_corslegacymodeenabled(::enterprise_management::BooleanPolicyProto* corslegacymodeenabled);

// optional .enterprise_management.BooleanPolicyProto ExternalProtocolDialogShowAlwaysOpenCheckbox = 634;
bool has_externalprotocoldialogshowalwaysopencheckbox() const;
void clear_externalprotocoldialogshowalwaysopencheckbox();
const ::enterprise_management::BooleanPolicyProto& externalprotocoldialogshowalwaysopencheckbox() const;
::enterprise_management::BooleanPolicyProto* release_externalprotocoldialogshowalwaysopencheckbox();
::enterprise_management::BooleanPolicyProto* mutable_externalprotocoldialogshowalwaysopencheckbox();
void set_allocated_externalprotocoldialogshowalwaysopencheckbox(::enterprise_management::BooleanPolicyProto* externalprotocoldialogshowalwaysopencheckbox);

// optional .enterprise_management.IntegerPolicyProto DefaultInsecureContentSetting = 635;
bool has_defaultinsecurecontentsetting() const;
void clear_defaultinsecurecontentsetting();
const ::enterprise_management::IntegerPolicyProto& defaultinsecurecontentsetting() const;
::enterprise_management::IntegerPolicyProto* release_defaultinsecurecontentsetting();
::enterprise_management::IntegerPolicyProto* mutable_defaultinsecurecontentsetting();
void set_allocated_defaultinsecurecontentsetting(::enterprise_management::IntegerPolicyProto* defaultinsecurecontentsetting);

// optional .enterprise_management.StringListPolicyProto InsecureContentAllowedForUrls = 636;
bool has_insecurecontentallowedforurls() const;
void clear_insecurecontentallowedforurls();
const ::enterprise_management::StringListPolicyProto& insecurecontentallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_insecurecontentallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_insecurecontentallowedforurls();
void set_allocated_insecurecontentallowedforurls(::enterprise_management::StringListPolicyProto* insecurecontentallowedforurls);

// optional .enterprise_management.StringListPolicyProto InsecureContentBlockedForUrls = 637;
bool has_insecurecontentblockedforurls() const;
void clear_insecurecontentblockedforurls();
const ::enterprise_management::StringListPolicyProto& insecurecontentblockedforurls() const;
::enterprise_management::StringListPolicyProto* release_insecurecontentblockedforurls();
::enterprise_management::StringListPolicyProto* mutable_insecurecontentblockedforurls();
void set_allocated_insecurecontentblockedforurls(::enterprise_management::StringListPolicyProto* insecurecontentblockedforurls);

// optional .enterprise_management.BooleanPolicyProto BlockExternalExtensions = 639;
bool has_blockexternalextensions() const;
void clear_blockexternalextensions();
const ::enterprise_management::BooleanPolicyProto& blockexternalextensions() const;
::enterprise_management::BooleanPolicyProto* release_blockexternalextensions();
::enterprise_management::BooleanPolicyProto* mutable_blockexternalextensions();
void set_allocated_blockexternalextensions(::enterprise_management::BooleanPolicyProto* blockexternalextensions);

// optional .enterprise_management.StringListPolicyProto WebRtcLocalIpsAllowedUrls = 642;
bool has_webrtclocalipsallowedurls() const;
void clear_webrtclocalipsallowedurls();
const ::enterprise_management::StringListPolicyProto& webrtclocalipsallowedurls() const;
::enterprise_management::StringListPolicyProto* release_webrtclocalipsallowedurls();
::enterprise_management::StringListPolicyProto* mutable_webrtclocalipsallowedurls();
void set_allocated_webrtclocalipsallowedurls(::enterprise_management::StringListPolicyProto* webrtclocalipsallowedurls);

// optional .enterprise_management.StringPolicyProto DnsOverHttpsTemplates = 644;
bool has_dnsoverhttpstemplates() const;
void clear_dnsoverhttpstemplates();
const ::enterprise_management::StringPolicyProto& dnsoverhttpstemplates() const;
::enterprise_management::StringPolicyProto* release_dnsoverhttpstemplates();
::enterprise_management::StringPolicyProto* mutable_dnsoverhttpstemplates();
void set_allocated_dnsoverhttpstemplates(::enterprise_management::StringPolicyProto* dnsoverhttpstemplates);

// optional .enterprise_management.BooleanPolicyProto GloballyScopeHTTPAuthCacheEnabled = 645;
bool has_globallyscopehttpauthcacheenabled() const;
void clear_globallyscopehttpauthcacheenabled();
const ::enterprise_management::BooleanPolicyProto& globallyscopehttpauthcacheenabled() const;
::enterprise_management::BooleanPolicyProto* release_globallyscopehttpauthcacheenabled();
::enterprise_management::BooleanPolicyProto* mutable_globallyscopehttpauthcacheenabled();
void set_allocated_globallyscopehttpauthcacheenabled(::enterprise_management::BooleanPolicyProto* globallyscopehttpauthcacheenabled);

// optional .enterprise_management.BooleanPolicyProto ClickToCallEnabled = 647;
bool has_clicktocallenabled() const;
void clear_clicktocallenabled();
const ::enterprise_management::BooleanPolicyProto& clicktocallenabled() const;
::enterprise_management::BooleanPolicyProto* release_clicktocallenabled();
::enterprise_management::BooleanPolicyProto* mutable_clicktocallenabled();
void set_allocated_clicktocallenabled(::enterprise_management::BooleanPolicyProto* clicktocallenabled);

// optional .enterprise_management.StringListPolicyProto PrinterTypeDenyList = 649;
bool has_printertypedenylist() const;
void clear_printertypedenylist();
const ::enterprise_management::StringListPolicyProto& printertypedenylist() const;
::enterprise_management::StringListPolicyProto* release_printertypedenylist();
::enterprise_management::StringListPolicyProto* mutable_printertypedenylist();
void set_allocated_printertypedenylist(::enterprise_management::StringListPolicyProto* printertypedenylist);

// optional .enterprise_management.BooleanPolicyProto ForceLegacyDefaultReferrerPolicy = 650;
bool has_forcelegacydefaultreferrerpolicy() const;
void clear_forcelegacydefaultreferrerpolicy();
const ::enterprise_management::BooleanPolicyProto& forcelegacydefaultreferrerpolicy() const;
::enterprise_management::BooleanPolicyProto* release_forcelegacydefaultreferrerpolicy();
::enterprise_management::BooleanPolicyProto* mutable_forcelegacydefaultreferrerpolicy();
void set_allocated_forcelegacydefaultreferrerpolicy(::enterprise_management::BooleanPolicyProto* forcelegacydefaultreferrerpolicy);

// optional .enterprise_management.StringListPolicyProto SyncTypesListDisabled = 651;
bool has_synctypeslistdisabled() const;
void clear_synctypeslistdisabled();
const ::enterprise_management::StringListPolicyProto& synctypeslistdisabled() const;
::enterprise_management::StringListPolicyProto* release_synctypeslistdisabled();
::enterprise_management::StringListPolicyProto* mutable_synctypeslistdisabled();
void set_allocated_synctypeslistdisabled(::enterprise_management::StringListPolicyProto* synctypeslistdisabled);

// optional .enterprise_management.IntegerPolicyProto AmbientAuthenticationInPrivateModesEnabled = 652;
bool has_ambientauthenticationinprivatemodesenabled() const;
void clear_ambientauthenticationinprivatemodesenabled();
const ::enterprise_management::IntegerPolicyProto& ambientauthenticationinprivatemodesenabled() const;
::enterprise_management::IntegerPolicyProto* release_ambientauthenticationinprivatemodesenabled();
::enterprise_management::IntegerPolicyProto* mutable_ambientauthenticationinprivatemodesenabled();
void set_allocated_ambientauthenticationinprivatemodesenabled(::enterprise_management::IntegerPolicyProto* ambientauthenticationinprivatemodesenabled);

// optional .enterprise_management.BooleanPolicyProto PaymentMethodQueryEnabled = 653;
bool has_paymentmethodqueryenabled() const;
void clear_paymentmethodqueryenabled();
const ::enterprise_management::BooleanPolicyProto& paymentmethodqueryenabled() const;
::enterprise_management::BooleanPolicyProto* release_paymentmethodqueryenabled();
::enterprise_management::BooleanPolicyProto* mutable_paymentmethodqueryenabled();
void set_allocated_paymentmethodqueryenabled(::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled);

// optional .enterprise_management.BooleanPolicyProto StricterMixedContentTreatmentEnabled = 654;
bool has_strictermixedcontenttreatmentenabled() const;
void clear_strictermixedcontenttreatmentenabled();
const ::enterprise_management::BooleanPolicyProto& strictermixedcontenttreatmentenabled() const;
::enterprise_management::BooleanPolicyProto* release_strictermixedcontenttreatmentenabled();
::enterprise_management::BooleanPolicyProto* mutable_strictermixedcontenttreatmentenabled();
void set_allocated_strictermixedcontenttreatmentenabled(::enterprise_management::BooleanPolicyProto* strictermixedcontenttreatmentenabled);

// optional .enterprise_management.BooleanPolicyProto NTPCustomBackgroundEnabled = 655;
bool has_ntpcustombackgroundenabled() const;
void clear_ntpcustombackgroundenabled();
const ::enterprise_management::BooleanPolicyProto& ntpcustombackgroundenabled() const;
::enterprise_management::BooleanPolicyProto* release_ntpcustombackgroundenabled();
::enterprise_management::BooleanPolicyProto* mutable_ntpcustombackgroundenabled();
void set_allocated_ntpcustombackgroundenabled(::enterprise_management::BooleanPolicyProto* ntpcustombackgroundenabled);

// optional .enterprise_management.BooleanPolicyProto DNSInterceptionChecksEnabled = 656;
bool has_dnsinterceptionchecksenabled() const;
void clear_dnsinterceptionchecksenabled();
const ::enterprise_management::BooleanPolicyProto& dnsinterceptionchecksenabled() const;
::enterprise_management::BooleanPolicyProto* release_dnsinterceptionchecksenabled();
::enterprise_management::BooleanPolicyProto* mutable_dnsinterceptionchecksenabled();
void set_allocated_dnsinterceptionchecksenabled(::enterprise_management::BooleanPolicyProto* dnsinterceptionchecksenabled);

// optional .enterprise_management.BooleanPolicyProto LocalDiscoveryEnabled = 664;
bool has_localdiscoveryenabled() const;
void clear_localdiscoveryenabled();
const ::enterprise_management::BooleanPolicyProto& localdiscoveryenabled() const;
::enterprise_management::BooleanPolicyProto* release_localdiscoveryenabled();
::enterprise_management::BooleanPolicyProto* mutable_localdiscoveryenabled();
void set_allocated_localdiscoveryenabled(::enterprise_management::BooleanPolicyProto* localdiscoveryenabled);

// optional .enterprise_management.IntegerPolicyProto ChromeVariations = 665;
bool has_chromevariations() const;
void clear_chromevariations();
const ::enterprise_management::IntegerPolicyProto& chromevariations() const;
::enterprise_management::IntegerPolicyProto* release_chromevariations();
::enterprise_management::IntegerPolicyProto* mutable_chromevariations();
void set_allocated_chromevariations(::enterprise_management::IntegerPolicyProto* chromevariations);

// optional .enterprise_management.BooleanPolicyProto ScreenCaptureAllowed = 668;
bool has_screencaptureallowed() const;
void clear_screencaptureallowed();
const ::enterprise_management::BooleanPolicyProto& screencaptureallowed() const;
::enterprise_management::BooleanPolicyProto* release_screencaptureallowed();
::enterprise_management::BooleanPolicyProto* mutable_screencaptureallowed();
void set_allocated_screencaptureallowed(::enterprise_management::BooleanPolicyProto* screencaptureallowed);

// optional .enterprise_management.IntegerPolicyProto BlockUnsupportedFiletypes = 670;
bool has_blockunsupportedfiletypes() const;
void clear_blockunsupportedfiletypes();
const ::enterprise_management::IntegerPolicyProto& blockunsupportedfiletypes() const;
::enterprise_management::IntegerPolicyProto* release_blockunsupportedfiletypes();
::enterprise_management::IntegerPolicyProto* mutable_blockunsupportedfiletypes();
void set_allocated_blockunsupportedfiletypes(::enterprise_management::IntegerPolicyProto* blockunsupportedfiletypes);

// optional .enterprise_management.StringListPolicyProto URLsToNotCheckForMalwareOfDownloadedContent = 671;
bool has_urlstonotcheckformalwareofdownloadedcontent() const;
void clear_urlstonotcheckformalwareofdownloadedcontent();
const ::enterprise_management::StringListPolicyProto& urlstonotcheckformalwareofdownloadedcontent() const;
::enterprise_management::StringListPolicyProto* release_urlstonotcheckformalwareofdownloadedcontent();
::enterprise_management::StringListPolicyProto* mutable_urlstonotcheckformalwareofdownloadedcontent();
void set_allocated_urlstonotcheckformalwareofdownloadedcontent(::enterprise_management::StringListPolicyProto* urlstonotcheckformalwareofdownloadedcontent);

// optional .enterprise_management.IntegerPolicyProto UserDataSnapshotRetentionLimit = 675;
bool has_userdatasnapshotretentionlimit() const;
void clear_userdatasnapshotretentionlimit();
const ::enterprise_management::IntegerPolicyProto& userdatasnapshotretentionlimit() const;
::enterprise_management::IntegerPolicyProto* release_userdatasnapshotretentionlimit();
::enterprise_management::IntegerPolicyProto* mutable_userdatasnapshotretentionlimit();
void set_allocated_userdatasnapshotretentionlimit(::enterprise_management::IntegerPolicyProto* userdatasnapshotretentionlimit);

// optional .enterprise_management.BooleanPolicyProto AllowNativeNotifications = 680;
bool has_allownativenotifications() const;
void clear_allownativenotifications();
const ::enterprise_management::BooleanPolicyProto& allownativenotifications() const;
::enterprise_management::BooleanPolicyProto* release_allownativenotifications();
::enterprise_management::BooleanPolicyProto* mutable_allownativenotifications();
void set_allocated_allownativenotifications(::enterprise_management::BooleanPolicyProto* allownativenotifications);

// optional .enterprise_management.IntegerPolicyProto SafeBrowsingProtectionLevel = 686;
bool has_safebrowsingprotectionlevel() const;
void clear_safebrowsingprotectionlevel();
const ::enterprise_management::IntegerPolicyProto& safebrowsingprotectionlevel() const;
::enterprise_management::IntegerPolicyProto* release_safebrowsingprotectionlevel();
::enterprise_management::IntegerPolicyProto* mutable_safebrowsingprotectionlevel();
void set_allocated_safebrowsingprotectionlevel(::enterprise_management::IntegerPolicyProto* safebrowsingprotectionlevel);

// optional .enterprise_management.BooleanPolicyProto AdvancedProtectionAllowed = 687;
bool has_advancedprotectionallowed() const;
void clear_advancedprotectionallowed();
const ::enterprise_management::BooleanPolicyProto& advancedprotectionallowed() const;
::enterprise_management::BooleanPolicyProto* release_advancedprotectionallowed();
::enterprise_management::BooleanPolicyProto* mutable_advancedprotectionallowed();
void set_allocated_advancedprotectionallowed(::enterprise_management::BooleanPolicyProto* advancedprotectionallowed);

// optional .enterprise_management.BooleanPolicyProto ScrollToTextFragmentEnabled = 689;
bool has_scrolltotextfragmentenabled() const;
void clear_scrolltotextfragmentenabled();
const ::enterprise_management::BooleanPolicyProto& scrolltotextfragmentenabled() const;
::enterprise_management::BooleanPolicyProto* release_scrolltotextfragmentenabled();
::enterprise_management::BooleanPolicyProto* mutable_scrolltotextfragmentenabled();
void set_allocated_scrolltotextfragmentenabled(::enterprise_management::BooleanPolicyProto* scrolltotextfragmentenabled);

// optional .enterprise_management.StringPolicyProto OnFileAttachedEnterpriseConnector = 695;
bool has_onfileattachedenterpriseconnector() const;
void clear_onfileattachedenterpriseconnector();
const ::enterprise_management::StringPolicyProto& onfileattachedenterpriseconnector() const;
::enterprise_management::StringPolicyProto* release_onfileattachedenterpriseconnector();
::enterprise_management::StringPolicyProto* mutable_onfileattachedenterpriseconnector();
void set_allocated_onfileattachedenterpriseconnector(::enterprise_management::StringPolicyProto* onfileattachedenterpriseconnector);

// optional .enterprise_management.StringPolicyProto OnFileDownloadedEnterpriseConnector = 698;
bool has_onfiledownloadedenterpriseconnector() const;
void clear_onfiledownloadedenterpriseconnector();
const ::enterprise_management::StringPolicyProto& onfiledownloadedenterpriseconnector() const;
::enterprise_management::StringPolicyProto* release_onfiledownloadedenterpriseconnector();
::enterprise_management::StringPolicyProto* mutable_onfiledownloadedenterpriseconnector();
void set_allocated_onfiledownloadedenterpriseconnector(::enterprise_management::StringPolicyProto* onfiledownloadedenterpriseconnector);

// optional .enterprise_management.StringPolicyProto OnBulkDataEntryEnterpriseConnector = 699;
bool has_onbulkdataentryenterpriseconnector() const;
void clear_onbulkdataentryenterpriseconnector();
const ::enterprise_management::StringPolicyProto& onbulkdataentryenterpriseconnector() const;
::enterprise_management::StringPolicyProto* release_onbulkdataentryenterpriseconnector();
::enterprise_management::StringPolicyProto* mutable_onbulkdataentryenterpriseconnector();
void set_allocated_onbulkdataentryenterpriseconnector(::enterprise_management::StringPolicyProto* onbulkdataentryenterpriseconnector);

// optional .enterprise_management.StringPolicyProto OnSecurityEventEnterpriseConnector = 701;
bool has_onsecurityevententerpriseconnector() const;
void clear_onsecurityevententerpriseconnector();
const ::enterprise_management::StringPolicyProto& onsecurityevententerpriseconnector() const;
::enterprise_management::StringPolicyProto* release_onsecurityevententerpriseconnector();
::enterprise_management::StringPolicyProto* mutable_onsecurityevententerpriseconnector();
void set_allocated_onsecurityevententerpriseconnector(::enterprise_management::StringPolicyProto* onsecurityevententerpriseconnector);

// optional .enterprise_management.StringListPolicyProto AutoOpenFileTypes = 702;
bool has_autoopenfiletypes() const;
void clear_autoopenfiletypes();
const ::enterprise_management::StringListPolicyProto& autoopenfiletypes() const;
::enterprise_management::StringListPolicyProto* release_autoopenfiletypes();
::enterprise_management::StringListPolicyProto* mutable_autoopenfiletypes();
void set_allocated_autoopenfiletypes(::enterprise_management::StringListPolicyProto* autoopenfiletypes);

// optional .enterprise_management.BooleanPolicyProto AccessibilityImageLabelsEnabled = 705;
bool has_accessibilityimagelabelsenabled() const;
void clear_accessibilityimagelabelsenabled();
const ::enterprise_management::BooleanPolicyProto& accessibilityimagelabelsenabled() const;
::enterprise_management::BooleanPolicyProto* release_accessibilityimagelabelsenabled();
::enterprise_management::BooleanPolicyProto* mutable_accessibilityimagelabelsenabled();
void set_allocated_accessibilityimagelabelsenabled(::enterprise_management::BooleanPolicyProto* accessibilityimagelabelsenabled);

// optional .enterprise_management.BooleanPolicyProto AppCacheForceEnabled = 706;
bool has_appcacheforceenabled() const;
void clear_appcacheforceenabled();
const ::enterprise_management::BooleanPolicyProto& appcacheforceenabled() const;
::enterprise_management::BooleanPolicyProto* release_appcacheforceenabled();
::enterprise_management::BooleanPolicyProto* mutable_appcacheforceenabled();
void set_allocated_appcacheforceenabled(::enterprise_management::BooleanPolicyProto* appcacheforceenabled);

// optional .enterprise_management.StringListPolicyProto AutoOpenAllowedForURLs = 709;
bool has_autoopenallowedforurls() const;
void clear_autoopenallowedforurls();
const ::enterprise_management::StringListPolicyProto& autoopenallowedforurls() const;
::enterprise_management::StringListPolicyProto* release_autoopenallowedforurls();
::enterprise_management::StringListPolicyProto* mutable_autoopenallowedforurls();
void set_allocated_autoopenallowedforurls(::enterprise_management::StringListPolicyProto* autoopenallowedforurls);

// optional .enterprise_management.StringListPolicyProto EnableExperimentalPolicies = 713;
bool has_enableexperimentalpolicies() const;
void clear_enableexperimentalpolicies();
const ::enterprise_management::StringListPolicyProto& enableexperimentalpolicies() const;
::enterprise_management::StringListPolicyProto* release_enableexperimentalpolicies();
::enterprise_management::StringListPolicyProto* mutable_enableexperimentalpolicies();
void set_allocated_enableexperimentalpolicies(::enterprise_management::StringListPolicyProto* enableexperimentalpolicies);

// optional .enterprise_management.BooleanPolicyProto IntensiveWakeUpThrottlingEnabled = 715;
bool has_intensivewakeupthrottlingenabled() const;
void clear_intensivewakeupthrottlingenabled();
const ::enterprise_management::BooleanPolicyProto& intensivewakeupthrottlingenabled() const;
::enterprise_management::BooleanPolicyProto* release_intensivewakeupthrottlingenabled();
::enterprise_management::BooleanPolicyProto* mutable_intensivewakeupthrottlingenabled();
void set_allocated_intensivewakeupthrottlingenabled(::enterprise_management::BooleanPolicyProto* intensivewakeupthrottlingenabled);

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderContextMenuAccessAllowed = 717;
bool has_defaultsearchprovidercontextmenuaccessallowed() const;
void clear_defaultsearchprovidercontextmenuaccessallowed();
const ::enterprise_management::BooleanPolicyProto& defaultsearchprovidercontextmenuaccessallowed() const;
::enterprise_management::BooleanPolicyProto* release_defaultsearchprovidercontextmenuaccessallowed();
::enterprise_management::BooleanPolicyProto* mutable_defaultsearchprovidercontextmenuaccessallowed();
void set_allocated_defaultsearchprovidercontextmenuaccessallowed(::enterprise_management::BooleanPolicyProto* defaultsearchprovidercontextmenuaccessallowed);

// optional .enterprise_management.StringPolicyProto AutoLaunchProtocolsFromOrigins = 724;
bool has_autolaunchprotocolsfromorigins() const;
void clear_autolaunchprotocolsfromorigins();
const ::enterprise_management::StringPolicyProto& autolaunchprotocolsfromorigins() const;
::enterprise_management::StringPolicyProto* release_autolaunchprotocolsfromorigins();
::enterprise_management::StringPolicyProto* mutable_autolaunchprotocolsfromorigins();
void set_allocated_autolaunchprotocolsfromorigins(::enterprise_management::StringPolicyProto* autolaunchprotocolsfromorigins);

// @@protoc_insertion_point(class_scope:enterprise_management.CloudPolicySettings)
private:
class _Internal;

::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArenaLite _internal_metadata_;
::PROTOBUF_NAMESPACE_ID::internal::HasBits<10> _has_bits_;
mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
::enterprise_management::StringPolicyProto* homepagelocation_;
::enterprise_management::BooleanPolicyProto* homepageisnewtabpage_;
::enterprise_management::BooleanPolicyProto* defaultbrowsersettingenabled_;
::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled_;
::enterprise_management::BooleanPolicyProto* searchsuggestenabled_;
::enterprise_management::BooleanPolicyProto* javascriptenabled_;
::enterprise_management::BooleanPolicyProto* incognitoenabled_;
::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled_;
::enterprise_management::BooleanPolicyProto* printingenabled_;
::enterprise_management::BooleanPolicyProto* cloudprintproxyenabled_;
::enterprise_management::BooleanPolicyProto* safebrowsingenabled_;
::enterprise_management::BooleanPolicyProto* metricsreportingenabled_;
::enterprise_management::BooleanPolicyProto* passwordmanagerenabled_;
::enterprise_management::BooleanPolicyProto* autofillenabled_;
::enterprise_management::StringListPolicyProto* disabledplugins_;
::enterprise_management::BooleanPolicyProto* syncdisabled_;
::enterprise_management::StringPolicyProto* proxymode_;
::enterprise_management::IntegerPolicyProto* proxyservermode_;
::enterprise_management::StringPolicyProto* proxyserver_;
::enterprise_management::StringPolicyProto* proxypacurl_;
::enterprise_management::StringPolicyProto* proxybypasslist_;
::enterprise_management::StringPolicyProto* authschemes_;
::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup_;
::enterprise_management::BooleanPolicyProto* enableauthnegotiateport_;
::enterprise_management::StringPolicyProto* authserverwhitelist_;
::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist_;
::enterprise_management::StringPolicyProto* gssapilibraryname_;
::enterprise_management::StringListPolicyProto* extensioninstallblacklist_;
::enterprise_management::StringListPolicyProto* extensioninstallwhitelist_;
::enterprise_management::StringListPolicyProto* extensioninstallforcelist_;
::enterprise_management::BooleanPolicyProto* showhomebutton_;
::enterprise_management::BooleanPolicyProto* developertoolsdisabled_;
::enterprise_management::IntegerPolicyProto* restoreonstartup_;
::enterprise_management::StringListPolicyProto* restoreonstartupurls_;
::enterprise_management::BooleanPolicyProto* blockthirdpartycookies_;
::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled_;
::enterprise_management::StringPolicyProto* defaultsearchprovidername_;
::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl_;
::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings_;
::enterprise_management::IntegerPolicyProto* defaultcookiessetting_;
::enterprise_management::IntegerPolicyProto* defaultimagessetting_;
::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting_;
::enterprise_management::IntegerPolicyProto* defaultpluginssetting_;
::enterprise_management::IntegerPolicyProto* defaultpopupssetting_;
::enterprise_management::IntegerPolicyProto* defaultnotificationssetting_;
::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting_;
::enterprise_management::BooleanPolicyProto* disable3dapis_;
::enterprise_management::IntegerPolicyProto* policyrefreshrate_;
::enterprise_management::StringPolicyProto* downloaddirectory_;
::enterprise_management::StringListPolicyProto* cookiesblockedforurls_;
::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls_;
::enterprise_management::StringListPolicyProto* imagesallowedforurls_;
::enterprise_management::StringListPolicyProto* imagesblockedforurls_;
::enterprise_management::StringListPolicyProto* javascriptallowedforurls_;
::enterprise_management::StringListPolicyProto* javascriptblockedforurls_;
::enterprise_management::StringListPolicyProto* pluginsallowedforurls_;
::enterprise_management::StringListPolicyProto* pluginsblockedforurls_;
::enterprise_management::StringListPolicyProto* popupsallowedforurls_;
::enterprise_management::StringListPolicyProto* popupsblockedforurls_;
::enterprise_management::StringListPolicyProto* cookiesallowedforurls_;
::enterprise_management::StringListPolicyProto* enabledplugins_;
::enterprise_management::StringListPolicyProto* disabledpluginsexceptions_;
::enterprise_management::BooleanPolicyProto* translateenabled_;
::enterprise_management::BooleanPolicyProto* allowoutdatedplugins_;
::enterprise_management::BooleanPolicyProto* bookmarkbarenabled_;
::enterprise_management::BooleanPolicyProto* editbookmarksenabled_;
::enterprise_management::BooleanPolicyProto* allowfileselectiondialogs_;
::enterprise_management::StringListPolicyProto* disabledschemes_;
::enterprise_management::StringPolicyProto* diskcachedir_;
::enterprise_management::BooleanPolicyProto* allowcrossoriginauthprompt_;
::enterprise_management::IntegerPolicyProto* maxconnectionsperproxy_;
::enterprise_management::IntegerPolicyProto* incognitomodeavailability_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostfirewalltraversal_;
::enterprise_management::BooleanPolicyProto* importbookmarks_;
::enterprise_management::BooleanPolicyProto* importhistory_;
::enterprise_management::BooleanPolicyProto* importhomepage_;
::enterprise_management::BooleanPolicyProto* importsearchengine_;
::enterprise_management::BooleanPolicyProto* importsavedpasswords_;
::enterprise_management::StringListPolicyProto* autoselectcertificateforurls_;
::enterprise_management::StringListPolicyProto* urlblacklist_;
::enterprise_management::StringListPolicyProto* urlwhitelist_;
::enterprise_management::StringListPolicyProto* notificationsallowedforurls_;
::enterprise_management::StringListPolicyProto* notificationsblockedforurls_;
::enterprise_management::BooleanPolicyProto* cloudprintsubmitenabled_;
::enterprise_management::IntegerPolicyProto* diskcachesize_;
::enterprise_management::StringPolicyProto* proxysettings_;
::enterprise_management::BooleanPolicyProto* disableprintpreview_;
::enterprise_management::BooleanPolicyProto* enableonlinerevocationchecks_;
::enterprise_management::BooleanPolicyProto* backgroundmodeenabled_;
::enterprise_management::StringPolicyProto* restrictsignintopattern_;
::enterprise_management::StringListPolicyProto* extensioninstallsources_;
::enterprise_management::IntegerPolicyProto* defaultmediastreamsetting_;
::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway_;
::enterprise_management::BooleanPolicyProto* spellcheckserviceenabled_;
::enterprise_management::BooleanPolicyProto* disablescreenshots_;
::enterprise_management::StringPolicyProto* remoteaccesshostdomain_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostrequirecurtain_;
::enterprise_management::BooleanPolicyProto* audiocaptureallowed_;
::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls_;
::enterprise_management::BooleanPolicyProto* forcesafesearch_;
::enterprise_management::BooleanPolicyProto* builtindnsclientenabled_;
::enterprise_management::BooleanPolicyProto* videocaptureallowed_;
::enterprise_management::StringListPolicyProto* extensionallowedtypes_;
::enterprise_management::BooleanPolicyProto* allowdeletingbrowserhistory_;
::enterprise_management::BooleanPolicyProto* hidewebstoreicon_;
::enterprise_management::BooleanPolicyProto* signinallowed_;
::enterprise_management::StringPolicyProto* variationsrestrictparameter_;
::enterprise_management::IntegerPolicyProto* contentpackdefaultfilteringbehavior_;
::enterprise_management::StringPolicyProto* contentpackmanualbehaviorhosts_;
::enterprise_management::StringPolicyProto* contentpackmanualbehaviorurls_;
::enterprise_management::StringListPolicyProto* audiocaptureallowedurls_;
::enterprise_management::StringListPolicyProto* videocaptureallowedurls_;
::enterprise_management::StringPolicyProto* managedbookmarks_;
::enterprise_management::IntegerPolicyProto* maxinvalidationfetchdelay_;
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams_;
::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams_;
::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostallowclientpairing_;
::enterprise_management::BooleanPolicyProto* requireonlinerevocationchecksforlocalanchors_;
::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl_;
::enterprise_management::BooleanPolicyProto* fullscreenallowed_;
::enterprise_management::BooleanPolicyProto* forceephemeralprofiles_;
::enterprise_management::StringListPolicyProto* nativemessagingblacklist_;
::enterprise_management::StringListPolicyProto* nativemessagingwhitelist_;
::enterprise_management::BooleanPolicyProto* nativemessaginguserlevelhosts_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostallowgnubbyauth_;
::enterprise_management::BooleanPolicyProto* wpadquickcheckenabled_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostallowrelayedconnection_;
::enterprise_management::StringPolicyProto* remoteaccesshostudpportrange_;
::enterprise_management::BooleanPolicyProto* showappsshortcutinbookmarkbar_;
::enterprise_management::StringPolicyProto* registeredprotocolhandlers_;
::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures_;
::enterprise_management::IntegerPolicyProto* networkpredictionoptions_;
::enterprise_management::BooleanPolicyProto* browserguestmodeenabled_;
::enterprise_management::BooleanPolicyProto* browseraddpersonenabled_;
::enterprise_management::BooleanPolicyProto* importautofillformdata_;
::enterprise_management::StringPolicyProto* extensionsettings_;
::enterprise_management::StringPolicyProto* sslversionmin_;
::enterprise_management::BooleanPolicyProto* forcegooglesafesearch_;
::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostmatchusername_;
::enterprise_management::StringPolicyProto* remoteaccesshosttokenurl_;
::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationurl_;
::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationcertificateissuer_;
::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed_;
::enterprise_management::BooleanPolicyProto* quicallowed_;
::enterprise_management::BooleanPolicyProto* hardwareaccelerationmodeenabled_;
::enterprise_management::StringPolicyProto* defaultprinterselection_;
::enterprise_management::BooleanPolicyProto* allowdinosaureasteregg_;
::enterprise_management::StringPolicyProto* remoteaccesshostclientdomain_;
::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting_;
::enterprise_management::BooleanPolicyProto* suppressunsupportedoswarning_;
::enterprise_management::BooleanPolicyProto* taskmanagerendprocessenabled_;
::enterprise_management::StringPolicyProto* alloweddomainsforapps_;
::enterprise_management::BooleanPolicyProto* enablemediarouter_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls_;
::enterprise_management::StringPolicyProto* webrtcudpportrange_;
::enterprise_management::BooleanPolicyProto* componentupdatesenabled_;
::enterprise_management::BooleanPolicyProto* alwaysopenpdfexternally_;
::enterprise_management::IntegerPolicyProto* forceyoutuberestrict_;
::enterprise_management::StringPolicyProto* newtabpagelocation_;
::enterprise_management::BooleanPolicyProto* showcasticonintoolbar_;
::enterprise_management::StringListPolicyProto* remoteaccesshostdomainlist_;
::enterprise_management::StringListPolicyProto* remoteaccesshostclientdomainlist_;
::enterprise_management::BooleanPolicyProto* browsernetworktimequeriesenabled_;
::enterprise_management::IntegerPolicyProto* downloadrestrictions_;
::enterprise_management::BooleanPolicyProto* printpreviewusesystemdefaultprinter_;
::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesplatformpolicy_;
::enterprise_management::BooleanPolicyProto* runallflashinallowmode_;
::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled_;
::enterprise_management::BooleanPolicyProto* ntlmv2enabled_;
::enterprise_management::BooleanPolicyProto* promptfordownloadlocation_;
::enterprise_management::StringPolicyProto* isolateorigins_;
::enterprise_management::BooleanPolicyProto* siteperprocess_;
::enterprise_management::StringListPolicyProto* unsafelytreatinsecureoriginassecure_;
::enterprise_management::StringPolicyProto* defaultdownloaddirectory_;
::enterprise_management::StringListPolicyProto* securitykeypermitattestation_;
::enterprise_management::BooleanPolicyProto* abusiveexperienceinterventionenforce_;
::enterprise_management::StringListPolicyProto* spellchecklanguage_;
::enterprise_management::BooleanPolicyProto* spellcheckenabled_;
::enterprise_management::IntegerPolicyProto* adssettingforintrusiveadssites_;
::enterprise_management::IntegerPolicyProto* passwordprotectionwarningtrigger_;
::enterprise_management::IntegerPolicyProto* relaunchnotification_;
::enterprise_management::IntegerPolicyProto* relaunchnotificationperiod_;
::enterprise_management::StringListPolicyProto* safebrowsingwhitelistdomains_;
::enterprise_management::StringListPolicyProto* passwordprotectionloginurls_;
::enterprise_management::StringPolicyProto* passwordprotectionchangepasswordurl_;
::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled_;
::enterprise_management::BooleanPolicyProto* autoplayallowed_;
::enterprise_management::StringListPolicyProto* autoplaywhitelist_;
::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas_;
::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas_;
::enterprise_management::BooleanPolicyProto* mediaroutercastallowallips_;
::enterprise_management::StringListPolicyProto* webusbaskforurls_;
::enterprise_management::StringListPolicyProto* webusbblockedforurls_;
::enterprise_management::IntegerPolicyProto* developertoolsavailability_;
::enterprise_management::BooleanPolicyProto* promotionaltabsenabled_;
::enterprise_management::IntegerPolicyProto* safesitesfilterbehavior_;
::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin_;
::enterprise_management::BooleanPolicyProto* autofilladdressenabled_;
::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled_;
::enterprise_management::BooleanPolicyProto* webrtceventlogcollectionallowed_;
::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts_;
::enterprise_management::StringPolicyProto* webappinstallforcelist_;
::enterprise_management::BooleanPolicyProto* reportversiondata_;
::enterprise_management::BooleanPolicyProto* reportpolicydata_;
::enterprise_management::BooleanPolicyProto* reportmachineiddata_;
::enterprise_management::BooleanPolicyProto* reportuseriddata_;
::enterprise_management::StringPolicyProto* printingpapersizedefault_;
::enterprise_management::BooleanPolicyProto* printheaderfooter_;
::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled_;
::enterprise_management::StringPolicyProto* webusballowdevicesforurls_;
::enterprise_management::IntegerPolicyProto* browsersignin_;
::enterprise_management::BooleanPolicyProto* cloudreportingenabled_;
::enterprise_management::StringPolicyProto* alternativebrowserpath_;
::enterprise_management::StringListPolicyProto* alternativebrowserparameters_;
::enterprise_management::StringListPolicyProto* browserswitcherurllist_;
::enterprise_management::StringListPolicyProto* browserswitcherurlgreylist_;
::enterprise_management::BooleanPolicyProto* reportextensionsandpluginsdata_;
::enterprise_management::BooleanPolicyProto* cloudmanagementenrollmentmandatory_;
::enterprise_management::StringPolicyProto* cloudmanagementenrollmenttoken_;
::enterprise_management::StringPolicyProto* browserswitcherexternalsitelisturl_;
::enterprise_management::BooleanPolicyProto* browserswitcherenabled_;
::enterprise_management::BooleanPolicyProto* browserswitcherkeeplastchrometab_;
::enterprise_management::IntegerPolicyProto* browserswitcherdelay_;
::enterprise_management::BooleanPolicyProto* authnegotiatedelegatebykdcpolicy_;
::enterprise_management::BooleanPolicyProto* allowpopupsduringpageunload_;
::enterprise_management::BooleanPolicyProto* remoteaccesshostallowfiletransfer_;
::enterprise_management::StringListPolicyProto* spellchecklanguageblacklist_;
::enterprise_management::BooleanPolicyProto* signedhttpexchangeenabled_;
::enterprise_management::BooleanPolicyProto* extensioninstalllistsmergeenabled_;
::enterprise_management::StringListPolicyProto* policylistmultiplesourcemergelist_;
::enterprise_management::StringPolicyProto* browserswitcherexternalgreylisturl_;
::enterprise_management::StringListPolicyProto* policydictionarymultiplesourcemergelist_;
::enterprise_management::BooleanPolicyProto* commandlineflagsecuritywarningsenabled_;
::enterprise_management::BooleanPolicyProto* userfeedbackallowed_;
::enterprise_management::BooleanPolicyProto* browserguestmodeenforced_;
::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled_;
::enterprise_management::StringPolicyProto* dnsoverhttpsmode_;
::enterprise_management::IntegerPolicyProto* sendfilesformalwarecheck_;
::enterprise_management::BooleanPolicyProto* policyatomicgroupsenabled_;
::enterprise_management::BooleanPolicyProto* unsafeeventsreportingenabled_;
::enterprise_management::IntegerPolicyProto* blocklargefiletransfer_;
::enterprise_management::IntegerPolicyProto* delaydeliveryuntilverdict_;
::enterprise_management::IntegerPolicyProto* allowpasswordprotectedfiles_;
::enterprise_management::IntegerPolicyProto* checkcontentcompliance_;
::enterprise_management::StringListPolicyProto* urlstocheckcomplianceofdownloadedcontent_;
::enterprise_management::StringListPolicyProto* urlstonotcheckcomplianceofuploadedcontent_;
::enterprise_management::StringListPolicyProto* urlstocheckformalwareofuploadedcontent_;
::enterprise_management::StringListPolicyProto* hstspolicybypasslist_;
::enterprise_management::BooleanPolicyProto* allowsyncxhrinpagedismissal_;
::enterprise_management::BooleanPolicyProto* cloudextensionrequestenabled_;
::enterprise_management::BooleanPolicyProto* sharedclipboardenabled_;
::enterprise_management::StringPolicyProto* printingallowedbackgroundgraphicsmodes_;
::enterprise_management::StringPolicyProto* printingbackgroundgraphicsdefault_;
::enterprise_management::IntegerPolicyProto* legacysamesitecookiebehaviorenabled_;
::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist_;
::enterprise_management::BooleanPolicyProto* tls13hardeningforlocalanchorsenabled_;
::enterprise_management::BooleanPolicyProto* audiosandboxenabled_;
::enterprise_management::StringListPolicyProto* corsmitigationlist_;
::enterprise_management::BooleanPolicyProto* corslegacymodeenabled_;
::enterprise_management::BooleanPolicyProto* externalprotocoldialogshowalwaysopencheckbox_;
::enterprise_management::IntegerPolicyProto* defaultinsecurecontentsetting_;
::enterprise_management::StringListPolicyProto* insecurecontentallowedforurls_;
::enterprise_management::StringListPolicyProto* insecurecontentblockedforurls_;
::enterprise_management::BooleanPolicyProto* blockexternalextensions_;
::enterprise_management::StringListPolicyProto* webrtclocalipsallowedurls_;
::enterprise_management::StringPolicyProto* dnsoverhttpstemplates_;
::enterprise_management::BooleanPolicyProto* globallyscopehttpauthcacheenabled_;
::enterprise_management::BooleanPolicyProto* clicktocallenabled_;
::enterprise_management::StringListPolicyProto* printertypedenylist_;
::enterprise_management::BooleanPolicyProto* forcelegacydefaultreferrerpolicy_;
::enterprise_management::StringListPolicyProto* synctypeslistdisabled_;
::enterprise_management::IntegerPolicyProto* ambientauthenticationinprivatemodesenabled_;
::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled_;
::enterprise_management::BooleanPolicyProto* strictermixedcontenttreatmentenabled_;
::enterprise_management::BooleanPolicyProto* ntpcustombackgroundenabled_;
::enterprise_management::BooleanPolicyProto* dnsinterceptionchecksenabled_;
::enterprise_management::BooleanPolicyProto* localdiscoveryenabled_;
::enterprise_management::IntegerPolicyProto* chromevariations_;
::enterprise_management::BooleanPolicyProto* screencaptureallowed_;
::enterprise_management::IntegerPolicyProto* blockunsupportedfiletypes_;
::enterprise_management::StringListPolicyProto* urlstonotcheckformalwareofdownloadedcontent_;
::enterprise_management::IntegerPolicyProto* userdatasnapshotretentionlimit_;
::enterprise_management::BooleanPolicyProto* allownativenotifications_;
::enterprise_management::IntegerPolicyProto* safebrowsingprotectionlevel_;
::enterprise_management::BooleanPolicyProto* advancedprotectionallowed_;
::enterprise_management::BooleanPolicyProto* scrolltotextfragmentenabled_;
::enterprise_management::StringPolicyProto* onfileattachedenterpriseconnector_;
::enterprise_management::StringPolicyProto* onfiledownloadedenterpriseconnector_;
::enterprise_management::StringPolicyProto* onbulkdataentryenterpriseconnector_;
::enterprise_management::StringPolicyProto* onsecurityevententerpriseconnector_;
::enterprise_management::StringListPolicyProto* autoopenfiletypes_;
::enterprise_management::BooleanPolicyProto* accessibilityimagelabelsenabled_;
::enterprise_management::BooleanPolicyProto* appcacheforceenabled_;
::enterprise_management::StringListPolicyProto* autoopenallowedforurls_;
::enterprise_management::StringListPolicyProto* enableexperimentalpolicies_;
::enterprise_management::BooleanPolicyProto* intensivewakeupthrottlingenabled_;
::enterprise_management::BooleanPolicyProto* defaultsearchprovidercontextmenuaccessallowed_;
::enterprise_management::StringPolicyProto* autolaunchprotocolsfromorigins_;
friend struct ::TableStruct_cloud_5fpolicy_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CloudPolicySettings

// optional .enterprise_management.StringPolicyProto HomepageLocation = 3;
inline bool CloudPolicySettings::has_homepagelocation() const {
return (_has_bits_[0] & 0x00000001u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::homepagelocation() const {
const ::enterprise_management::StringPolicyProto* p = homepagelocation_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HomepageLocation)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_homepagelocation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HomepageLocation)
_has_bits_[0] &= ~0x00000001u;
::enterprise_management::StringPolicyProto* temp = homepagelocation_;
homepagelocation_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_homepagelocation() {
_has_bits_[0] |= 0x00000001u;
if (homepagelocation_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
homepagelocation_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HomepageLocation)
return homepagelocation_;
}
inline void CloudPolicySettings::set_allocated_homepagelocation(::enterprise_management::StringPolicyProto* homepagelocation) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(homepagelocation_);
}
if (homepagelocation) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
homepagelocation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, homepagelocation, submessage_arena);
}
_has_bits_[0] |= 0x00000001u;
} else {
_has_bits_[0] &= ~0x00000001u;
}
homepagelocation_ = homepagelocation;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HomepageLocation)
}

// optional .enterprise_management.BooleanPolicyProto HomepageIsNewTabPage = 4;
inline bool CloudPolicySettings::has_homepageisnewtabpage() const {
return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::homepageisnewtabpage() const {
const ::enterprise_management::BooleanPolicyProto* p = homepageisnewtabpage_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_homepageisnewtabpage() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
_has_bits_[0] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = homepageisnewtabpage_;
homepageisnewtabpage_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_homepageisnewtabpage() {
_has_bits_[0] |= 0x00000002u;
if (homepageisnewtabpage_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
homepageisnewtabpage_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
return homepageisnewtabpage_;
}
inline void CloudPolicySettings::set_allocated_homepageisnewtabpage(::enterprise_management::BooleanPolicyProto* homepageisnewtabpage) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(homepageisnewtabpage_);
}
if (homepageisnewtabpage) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
homepageisnewtabpage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, homepageisnewtabpage, submessage_arena);
}
_has_bits_[0] |= 0x00000002u;
} else {
_has_bits_[0] &= ~0x00000002u;
}
homepageisnewtabpage_ = homepageisnewtabpage;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HomepageIsNewTabPage)
}

// optional .enterprise_management.StringPolicyProto NewTabPageLocation = 362;
inline bool CloudPolicySettings::has_newtabpagelocation() const {
return (_has_bits_[5] & 0x00000010u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::newtabpagelocation() const {
const ::enterprise_management::StringPolicyProto* p = newtabpagelocation_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NewTabPageLocation)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_newtabpagelocation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NewTabPageLocation)
_has_bits_[5] &= ~0x00000010u;
::enterprise_management::StringPolicyProto* temp = newtabpagelocation_;
newtabpagelocation_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_newtabpagelocation() {
_has_bits_[5] |= 0x00000010u;
if (newtabpagelocation_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
newtabpagelocation_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NewTabPageLocation)
return newtabpagelocation_;
}
inline void CloudPolicySettings::set_allocated_newtabpagelocation(::enterprise_management::StringPolicyProto* newtabpagelocation) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(newtabpagelocation_);
}
if (newtabpagelocation) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
newtabpagelocation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, newtabpagelocation, submessage_arena);
}
_has_bits_[5] |= 0x00000010u;
} else {
_has_bits_[5] &= ~0x00000010u;
}
newtabpagelocation_ = newtabpagelocation;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NewTabPageLocation)
}

// optional .enterprise_management.BooleanPolicyProto DefaultBrowserSettingEnabled = 5;
inline bool CloudPolicySettings::has_defaultbrowsersettingenabled() const {
return (_has_bits_[0] & 0x00000004u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::defaultbrowsersettingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = defaultbrowsersettingenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_defaultbrowsersettingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
_has_bits_[0] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = defaultbrowsersettingenabled_;
defaultbrowsersettingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_defaultbrowsersettingenabled() {
_has_bits_[0] |= 0x00000004u;
if (defaultbrowsersettingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
defaultbrowsersettingenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
return defaultbrowsersettingenabled_;
}
inline void CloudPolicySettings::set_allocated_defaultbrowsersettingenabled(::enterprise_management::BooleanPolicyProto* defaultbrowsersettingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultbrowsersettingenabled_);
}
if (defaultbrowsersettingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultbrowsersettingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultbrowsersettingenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000004u;
} else {
_has_bits_[0] &= ~0x00000004u;
}
defaultbrowsersettingenabled_ = defaultbrowsersettingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultBrowserSettingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AlternateErrorPagesEnabled = 7;
inline bool CloudPolicySettings::has_alternateerrorpagesenabled() const {
return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::alternateerrorpagesenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = alternateerrorpagesenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_alternateerrorpagesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
_has_bits_[0] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = alternateerrorpagesenabled_;
alternateerrorpagesenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_alternateerrorpagesenabled() {
_has_bits_[0] |= 0x00000008u;
if (alternateerrorpagesenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
alternateerrorpagesenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
return alternateerrorpagesenabled_;
}
inline void CloudPolicySettings::set_allocated_alternateerrorpagesenabled(::enterprise_management::BooleanPolicyProto* alternateerrorpagesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alternateerrorpagesenabled_);
}
if (alternateerrorpagesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
alternateerrorpagesenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, alternateerrorpagesenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000008u;
} else {
_has_bits_[0] &= ~0x00000008u;
}
alternateerrorpagesenabled_ = alternateerrorpagesenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlternateErrorPagesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SearchSuggestEnabled = 8;
inline bool CloudPolicySettings::has_searchsuggestenabled() const {
return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::searchsuggestenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = searchsuggestenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_searchsuggestenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
_has_bits_[0] &= ~0x00000010u;
::enterprise_management::BooleanPolicyProto* temp = searchsuggestenabled_;
searchsuggestenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_searchsuggestenabled() {
_has_bits_[0] |= 0x00000010u;
if (searchsuggestenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
searchsuggestenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
return searchsuggestenabled_;
}
inline void CloudPolicySettings::set_allocated_searchsuggestenabled(::enterprise_management::BooleanPolicyProto* searchsuggestenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(searchsuggestenabled_);
}
if (searchsuggestenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
searchsuggestenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, searchsuggestenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000010u;
} else {
_has_bits_[0] &= ~0x00000010u;
}
searchsuggestenabled_ = searchsuggestenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SearchSuggestEnabled)
}

// optional .enterprise_management.IntegerPolicyProto NetworkPredictionOptions = 275;
inline bool CloudPolicySettings::has_networkpredictionoptions() const {
return (_has_bits_[4] & 0x00000100u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::networkpredictionoptions() const {
const ::enterprise_management::IntegerPolicyProto* p = networkpredictionoptions_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_networkpredictionoptions() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
_has_bits_[4] &= ~0x00000100u;
::enterprise_management::IntegerPolicyProto* temp = networkpredictionoptions_;
networkpredictionoptions_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_networkpredictionoptions() {
_has_bits_[4] |= 0x00000100u;
if (networkpredictionoptions_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
networkpredictionoptions_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
return networkpredictionoptions_;
}
inline void CloudPolicySettings::set_allocated_networkpredictionoptions(::enterprise_management::IntegerPolicyProto* networkpredictionoptions) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(networkpredictionoptions_);
}
if (networkpredictionoptions) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
networkpredictionoptions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, networkpredictionoptions, submessage_arena);
}
_has_bits_[4] |= 0x00000100u;
} else {
_has_bits_[4] &= ~0x00000100u;
}
networkpredictionoptions_ = networkpredictionoptions;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NetworkPredictionOptions)
}

// optional .enterprise_management.BooleanPolicyProto WPADQuickCheckEnabled = 263;
inline bool CloudPolicySettings::has_wpadquickcheckenabled() const {
return (_has_bits_[4] & 0x00000004u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::wpadquickcheckenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = wpadquickcheckenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_wpadquickcheckenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
_has_bits_[4] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = wpadquickcheckenabled_;
wpadquickcheckenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_wpadquickcheckenabled() {
_has_bits_[4] |= 0x00000004u;
if (wpadquickcheckenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
wpadquickcheckenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
return wpadquickcheckenabled_;
}
inline void CloudPolicySettings::set_allocated_wpadquickcheckenabled(::enterprise_management::BooleanPolicyProto* wpadquickcheckenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(wpadquickcheckenabled_);
}
if (wpadquickcheckenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
wpadquickcheckenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, wpadquickcheckenabled, submessage_arena);
}
_has_bits_[4] |= 0x00000004u;
} else {
_has_bits_[4] &= ~0x00000004u;
}
wpadquickcheckenabled_ = wpadquickcheckenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WPADQuickCheckEnabled)
}

// optional .enterprise_management.StringListPolicyProto DisabledSchemes = 87;
inline bool CloudPolicySettings::has_disabledschemes() const {
return (_has_bits_[2] & 0x00000040u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::disabledschemes() const {
const ::enterprise_management::StringListPolicyProto* p = disabledschemes_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisabledSchemes)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_disabledschemes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisabledSchemes)
_has_bits_[2] &= ~0x00000040u;
::enterprise_management::StringListPolicyProto* temp = disabledschemes_;
disabledschemes_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_disabledschemes() {
_has_bits_[2] |= 0x00000040u;
if (disabledschemes_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
disabledschemes_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisabledSchemes)
return disabledschemes_;
}
inline void CloudPolicySettings::set_allocated_disabledschemes(::enterprise_management::StringListPolicyProto* disabledschemes) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disabledschemes_);
}
if (disabledschemes) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
disabledschemes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disabledschemes, submessage_arena);
}
_has_bits_[2] |= 0x00000040u;
} else {
_has_bits_[2] &= ~0x00000040u;
}
disabledschemes_ = disabledschemes;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisabledSchemes)
}

// optional .enterprise_management.BooleanPolicyProto GloballyScopeHTTPAuthCacheEnabled = 645;
inline bool CloudPolicySettings::has_globallyscopehttpauthcacheenabled() const {
return (_has_bits_[8] & 0x00020000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::globallyscopehttpauthcacheenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = globallyscopehttpauthcacheenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.GloballyScopeHTTPAuthCacheEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_globallyscopehttpauthcacheenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.GloballyScopeHTTPAuthCacheEnabled)
_has_bits_[8] &= ~0x00020000u;
::enterprise_management::BooleanPolicyProto* temp = globallyscopehttpauthcacheenabled_;
globallyscopehttpauthcacheenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_globallyscopehttpauthcacheenabled() {
_has_bits_[8] |= 0x00020000u;
if (globallyscopehttpauthcacheenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
globallyscopehttpauthcacheenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.GloballyScopeHTTPAuthCacheEnabled)
return globallyscopehttpauthcacheenabled_;
}
inline void CloudPolicySettings::set_allocated_globallyscopehttpauthcacheenabled(::enterprise_management::BooleanPolicyProto* globallyscopehttpauthcacheenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(globallyscopehttpauthcacheenabled_);
}
if (globallyscopehttpauthcacheenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
globallyscopehttpauthcacheenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, globallyscopehttpauthcacheenabled, submessage_arena);
}
_has_bits_[8] |= 0x00020000u;
} else {
_has_bits_[8] &= ~0x00020000u;
}
globallyscopehttpauthcacheenabled_ = globallyscopehttpauthcacheenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.GloballyScopeHTTPAuthCacheEnabled)
}

// optional .enterprise_management.BooleanPolicyProto DNSInterceptionChecksEnabled = 656;
inline bool CloudPolicySettings::has_dnsinterceptionchecksenabled() const {
return (_has_bits_[8] & 0x04000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::dnsinterceptionchecksenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = dnsinterceptionchecksenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DNSInterceptionChecksEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_dnsinterceptionchecksenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DNSInterceptionChecksEnabled)
_has_bits_[8] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = dnsinterceptionchecksenabled_;
dnsinterceptionchecksenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_dnsinterceptionchecksenabled() {
_has_bits_[8] |= 0x04000000u;
if (dnsinterceptionchecksenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
dnsinterceptionchecksenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DNSInterceptionChecksEnabled)
return dnsinterceptionchecksenabled_;
}
inline void CloudPolicySettings::set_allocated_dnsinterceptionchecksenabled(::enterprise_management::BooleanPolicyProto* dnsinterceptionchecksenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dnsinterceptionchecksenabled_);
}
if (dnsinterceptionchecksenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
dnsinterceptionchecksenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, dnsinterceptionchecksenabled, submessage_arena);
}
_has_bits_[8] |= 0x04000000u;
} else {
_has_bits_[8] &= ~0x04000000u;
}
dnsinterceptionchecksenabled_ = dnsinterceptionchecksenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DNSInterceptionChecksEnabled)
}

// optional .enterprise_management.BooleanPolicyProto JavascriptEnabled = 11;
inline bool CloudPolicySettings::has_javascriptenabled() const {
return (_has_bits_[0] & 0x00000020u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::javascriptenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = javascriptenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavascriptEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_javascriptenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavascriptEnabled)
_has_bits_[0] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = javascriptenabled_;
javascriptenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_javascriptenabled() {
_has_bits_[0] |= 0x00000020u;
if (javascriptenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
javascriptenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavascriptEnabled)
return javascriptenabled_;
}
inline void CloudPolicySettings::set_allocated_javascriptenabled(::enterprise_management::BooleanPolicyProto* javascriptenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptenabled_);
}
if (javascriptenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
javascriptenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000020u;
} else {
_has_bits_[0] &= ~0x00000020u;
}
javascriptenabled_ = javascriptenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavascriptEnabled)
}

// optional .enterprise_management.BooleanPolicyProto IncognitoEnabled = 12;
inline bool CloudPolicySettings::has_incognitoenabled() const {
return (_has_bits_[0] & 0x00000040u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::incognitoenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = incognitoenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_incognitoenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoEnabled)
_has_bits_[0] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = incognitoenabled_;
incognitoenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_incognitoenabled() {
_has_bits_[0] |= 0x00000040u;
if (incognitoenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
incognitoenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoEnabled)
return incognitoenabled_;
}
inline void CloudPolicySettings::set_allocated_incognitoenabled(::enterprise_management::BooleanPolicyProto* incognitoenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(incognitoenabled_);
}
if (incognitoenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
incognitoenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, incognitoenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000040u;
} else {
_has_bits_[0] &= ~0x00000040u;
}
incognitoenabled_ = incognitoenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoEnabled)
}

// optional .enterprise_management.IntegerPolicyProto IncognitoModeAvailability = 95;
inline bool CloudPolicySettings::has_incognitomodeavailability() const {
return (_has_bits_[2] & 0x00000400u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::incognitomodeavailability() const {
const ::enterprise_management::IntegerPolicyProto* p = incognitomodeavailability_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_incognitomodeavailability() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
_has_bits_[2] &= ~0x00000400u;
::enterprise_management::IntegerPolicyProto* temp = incognitomodeavailability_;
incognitomodeavailability_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_incognitomodeavailability() {
_has_bits_[2] |= 0x00000400u;
if (incognitomodeavailability_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
incognitomodeavailability_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
return incognitomodeavailability_;
}
inline void CloudPolicySettings::set_allocated_incognitomodeavailability(::enterprise_management::IntegerPolicyProto* incognitomodeavailability) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(incognitomodeavailability_);
}
if (incognitomodeavailability) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
incognitomodeavailability = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, incognitomodeavailability, submessage_arena);
}
_has_bits_[2] |= 0x00000400u;
} else {
_has_bits_[2] &= ~0x00000400u;
}
incognitomodeavailability_ = incognitomodeavailability;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IncognitoModeAvailability)
}

// optional .enterprise_management.BooleanPolicyProto SavingBrowserHistoryDisabled = 13;
inline bool CloudPolicySettings::has_savingbrowserhistorydisabled() const {
return (_has_bits_[0] & 0x00000080u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::savingbrowserhistorydisabled() const {
const ::enterprise_management::BooleanPolicyProto* p = savingbrowserhistorydisabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_savingbrowserhistorydisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
_has_bits_[0] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = savingbrowserhistorydisabled_;
savingbrowserhistorydisabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_savingbrowserhistorydisabled() {
_has_bits_[0] |= 0x00000080u;
if (savingbrowserhistorydisabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
savingbrowserhistorydisabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
return savingbrowserhistorydisabled_;
}
inline void CloudPolicySettings::set_allocated_savingbrowserhistorydisabled(::enterprise_management::BooleanPolicyProto* savingbrowserhistorydisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(savingbrowserhistorydisabled_);
}
if (savingbrowserhistorydisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
savingbrowserhistorydisabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, savingbrowserhistorydisabled, submessage_arena);
}
_has_bits_[0] |= 0x00000080u;
} else {
_has_bits_[0] &= ~0x00000080u;
}
savingbrowserhistorydisabled_ = savingbrowserhistorydisabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SavingBrowserHistoryDisabled)
}

// optional .enterprise_management.BooleanPolicyProto AllowDeletingBrowserHistory = 189;
inline bool CloudPolicySettings::has_allowdeletingbrowserhistory() const {
return (_has_bits_[3] & 0x00000400u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowdeletingbrowserhistory() const {
const ::enterprise_management::BooleanPolicyProto* p = allowdeletingbrowserhistory_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowdeletingbrowserhistory() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
_has_bits_[3] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = allowdeletingbrowserhistory_;
allowdeletingbrowserhistory_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowdeletingbrowserhistory() {
_has_bits_[3] |= 0x00000400u;
if (allowdeletingbrowserhistory_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
allowdeletingbrowserhistory_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
return allowdeletingbrowserhistory_;
}
inline void CloudPolicySettings::set_allocated_allowdeletingbrowserhistory(::enterprise_management::BooleanPolicyProto* allowdeletingbrowserhistory) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowdeletingbrowserhistory_);
}
if (allowdeletingbrowserhistory) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allowdeletingbrowserhistory = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allowdeletingbrowserhistory, submessage_arena);
}
_has_bits_[3] |= 0x00000400u;
} else {
_has_bits_[3] &= ~0x00000400u;
}
allowdeletingbrowserhistory_ = allowdeletingbrowserhistory;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowDeletingBrowserHistory)
}

// optional .enterprise_management.BooleanPolicyProto AllowDinosaurEasterEgg = 311;
inline bool CloudPolicySettings::has_allowdinosaureasteregg() const {
return (_has_bits_[4] & 0x01000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowdinosaureasteregg() const {
const ::enterprise_management::BooleanPolicyProto* p = allowdinosaureasteregg_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowdinosaureasteregg() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
_has_bits_[4] &= ~0x01000000u;
::enterprise_management::BooleanPolicyProto* temp = allowdinosaureasteregg_;
allowdinosaureasteregg_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowdinosaureasteregg() {
_has_bits_[4] |= 0x01000000u;
if (allowdinosaureasteregg_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
allowdinosaureasteregg_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
return allowdinosaureasteregg_;
}
inline void CloudPolicySettings::set_allocated_allowdinosaureasteregg(::enterprise_management::BooleanPolicyProto* allowdinosaureasteregg) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowdinosaureasteregg_);
}
if (allowdinosaureasteregg) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allowdinosaureasteregg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allowdinosaureasteregg, submessage_arena);
}
_has_bits_[4] |= 0x01000000u;
} else {
_has_bits_[4] &= ~0x01000000u;
}
allowdinosaureasteregg_ = allowdinosaureasteregg;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowDinosaurEasterEgg)
}

// optional .enterprise_management.BooleanPolicyProto ForceLegacyDefaultReferrerPolicy = 650;
inline bool CloudPolicySettings::has_forcelegacydefaultreferrerpolicy() const {
return (_has_bits_[8] & 0x00100000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcelegacydefaultreferrerpolicy() const {
const ::enterprise_management::BooleanPolicyProto* p = forcelegacydefaultreferrerpolicy_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceLegacyDefaultReferrerPolicy)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcelegacydefaultreferrerpolicy() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceLegacyDefaultReferrerPolicy)
_has_bits_[8] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = forcelegacydefaultreferrerpolicy_;
forcelegacydefaultreferrerpolicy_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcelegacydefaultreferrerpolicy() {
_has_bits_[8] |= 0x00100000u;
if (forcelegacydefaultreferrerpolicy_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
forcelegacydefaultreferrerpolicy_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceLegacyDefaultReferrerPolicy)
return forcelegacydefaultreferrerpolicy_;
}
inline void CloudPolicySettings::set_allocated_forcelegacydefaultreferrerpolicy(::enterprise_management::BooleanPolicyProto* forcelegacydefaultreferrerpolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcelegacydefaultreferrerpolicy_);
}
if (forcelegacydefaultreferrerpolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forcelegacydefaultreferrerpolicy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forcelegacydefaultreferrerpolicy, submessage_arena);
}
_has_bits_[8] |= 0x00100000u;
} else {
_has_bits_[8] &= ~0x00100000u;
}
forcelegacydefaultreferrerpolicy_ = forcelegacydefaultreferrerpolicy;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceLegacyDefaultReferrerPolicy)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostClientDomain = 318;
inline bool CloudPolicySettings::has_remoteaccesshostclientdomain() const {
return (_has_bits_[4] & 0x02000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshostclientdomain() const {
const ::enterprise_management::StringPolicyProto* p = remoteaccesshostclientdomain_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshostclientdomain() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
_has_bits_[4] &= ~0x02000000u;
::enterprise_management::StringPolicyProto* temp = remoteaccesshostclientdomain_;
remoteaccesshostclientdomain_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshostclientdomain() {
_has_bits_[4] |= 0x02000000u;
if (remoteaccesshostclientdomain_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
remoteaccesshostclientdomain_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
return remoteaccesshostclientdomain_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostclientdomain(::enterprise_management::StringPolicyProto* remoteaccesshostclientdomain) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostclientdomain_);
}
if (remoteaccesshostclientdomain) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostclientdomain = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostclientdomain, submessage_arena);
}
_has_bits_[4] |= 0x02000000u;
} else {
_has_bits_[4] &= ~0x02000000u;
}
remoteaccesshostclientdomain_ = remoteaccesshostclientdomain;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomain)
}

// optional .enterprise_management.StringListPolicyProto RemoteAccessHostClientDomainList = 371;
inline bool CloudPolicySettings::has_remoteaccesshostclientdomainlist() const {
return (_has_bits_[5] & 0x00000080u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::remoteaccesshostclientdomainlist() const {
const ::enterprise_management::StringListPolicyProto* p = remoteaccesshostclientdomainlist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_remoteaccesshostclientdomainlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
_has_bits_[5] &= ~0x00000080u;
::enterprise_management::StringListPolicyProto* temp = remoteaccesshostclientdomainlist_;
remoteaccesshostclientdomainlist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_remoteaccesshostclientdomainlist() {
_has_bits_[5] |= 0x00000080u;
if (remoteaccesshostclientdomainlist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
remoteaccesshostclientdomainlist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
return remoteaccesshostclientdomainlist_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostclientdomainlist(::enterprise_management::StringListPolicyProto* remoteaccesshostclientdomainlist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostclientdomainlist_);
}
if (remoteaccesshostclientdomainlist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostclientdomainlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostclientdomainlist, submessage_arena);
}
_has_bits_[5] |= 0x00000080u;
} else {
_has_bits_[5] &= ~0x00000080u;
}
remoteaccesshostclientdomainlist_ = remoteaccesshostclientdomainlist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostClientDomainList)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostFirewallTraversal = 97;
inline bool CloudPolicySettings::has_remoteaccesshostfirewalltraversal() const {
return (_has_bits_[2] & 0x00000800u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostfirewalltraversal() const {
const ::enterprise_management::BooleanPolicyProto* p = remoteaccesshostfirewalltraversal_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostfirewalltraversal() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
_has_bits_[2] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostfirewalltraversal_;
remoteaccesshostfirewalltraversal_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostfirewalltraversal() {
_has_bits_[2] |= 0x00000800u;
if (remoteaccesshostfirewalltraversal_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
remoteaccesshostfirewalltraversal_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
return remoteaccesshostfirewalltraversal_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostfirewalltraversal(::enterprise_management::BooleanPolicyProto* remoteaccesshostfirewalltraversal) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostfirewalltraversal_);
}
if (remoteaccesshostfirewalltraversal) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostfirewalltraversal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostfirewalltraversal, submessage_arena);
}
_has_bits_[2] |= 0x00000800u;
} else {
_has_bits_[2] &= ~0x00000800u;
}
remoteaccesshostfirewalltraversal_ = remoteaccesshostfirewalltraversal;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostFirewallTraversal)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostDomain = 156;
inline bool CloudPolicySettings::has_remoteaccesshostdomain() const {
return (_has_bits_[3] & 0x00000004u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshostdomain() const {
const ::enterprise_management::StringPolicyProto* p = remoteaccesshostdomain_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshostdomain() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
_has_bits_[3] &= ~0x00000004u;
::enterprise_management::StringPolicyProto* temp = remoteaccesshostdomain_;
remoteaccesshostdomain_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshostdomain() {
_has_bits_[3] |= 0x00000004u;
if (remoteaccesshostdomain_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
remoteaccesshostdomain_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
return remoteaccesshostdomain_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostdomain(::enterprise_management::StringPolicyProto* remoteaccesshostdomain) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostdomain_);
}
if (remoteaccesshostdomain) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostdomain = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostdomain, submessage_arena);
}
_has_bits_[3] |= 0x00000004u;
} else {
_has_bits_[3] &= ~0x00000004u;
}
remoteaccesshostdomain_ = remoteaccesshostdomain;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostDomain)
}

// optional .enterprise_management.StringListPolicyProto RemoteAccessHostDomainList = 370;
inline bool CloudPolicySettings::has_remoteaccesshostdomainlist() const {
return (_has_bits_[5] & 0x00000040u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::remoteaccesshostdomainlist() const {
const ::enterprise_management::StringListPolicyProto* p = remoteaccesshostdomainlist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_remoteaccesshostdomainlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
_has_bits_[5] &= ~0x00000040u;
::enterprise_management::StringListPolicyProto* temp = remoteaccesshostdomainlist_;
remoteaccesshostdomainlist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_remoteaccesshostdomainlist() {
_has_bits_[5] |= 0x00000040u;
if (remoteaccesshostdomainlist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
remoteaccesshostdomainlist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
return remoteaccesshostdomainlist_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostdomainlist(::enterprise_management::StringListPolicyProto* remoteaccesshostdomainlist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostdomainlist_);
}
if (remoteaccesshostdomainlist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostdomainlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostdomainlist, submessage_arena);
}
_has_bits_[5] |= 0x00000040u;
} else {
_has_bits_[5] &= ~0x00000040u;
}
remoteaccesshostdomainlist_ = remoteaccesshostdomainlist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostDomainList)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostRequireCurtain = 159;
inline bool CloudPolicySettings::has_remoteaccesshostrequirecurtain() const {
return (_has_bits_[3] & 0x00000008u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostrequirecurtain() const {
const ::enterprise_management::BooleanPolicyProto* p = remoteaccesshostrequirecurtain_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostrequirecurtain() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
_has_bits_[3] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostrequirecurtain_;
remoteaccesshostrequirecurtain_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostrequirecurtain() {
_has_bits_[3] |= 0x00000008u;
if (remoteaccesshostrequirecurtain_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
remoteaccesshostrequirecurtain_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
return remoteaccesshostrequirecurtain_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostrequirecurtain(::enterprise_management::BooleanPolicyProto* remoteaccesshostrequirecurtain) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostrequirecurtain_);
}
if (remoteaccesshostrequirecurtain) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostrequirecurtain = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostrequirecurtain, submessage_arena);
}
_has_bits_[3] |= 0x00000008u;
} else {
_has_bits_[3] &= ~0x00000008u;
}
remoteaccesshostrequirecurtain_ = remoteaccesshostrequirecurtain;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostRequireCurtain)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowClientPairing = 236;
inline bool CloudPolicySettings::has_remoteaccesshostallowclientpairing() const {
return (_has_bits_[3] & 0x02000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostallowclientpairing() const {
const ::enterprise_management::BooleanPolicyProto* p = remoteaccesshostallowclientpairing_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostallowclientpairing() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
_has_bits_[3] &= ~0x02000000u;
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostallowclientpairing_;
remoteaccesshostallowclientpairing_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostallowclientpairing() {
_has_bits_[3] |= 0x02000000u;
if (remoteaccesshostallowclientpairing_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
remoteaccesshostallowclientpairing_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
return remoteaccesshostallowclientpairing_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostallowclientpairing(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowclientpairing) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostallowclientpairing_);
}
if (remoteaccesshostallowclientpairing) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostallowclientpairing = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostallowclientpairing, submessage_arena);
}
_has_bits_[3] |= 0x02000000u;
} else {
_has_bits_[3] &= ~0x02000000u;
}
remoteaccesshostallowclientpairing_ = remoteaccesshostallowclientpairing;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowClientPairing)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowGnubbyAuth = 259;
inline bool CloudPolicySettings::has_remoteaccesshostallowgnubbyauth() const {
return (_has_bits_[4] & 0x00000002u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostallowgnubbyauth() const {
const ::enterprise_management::BooleanPolicyProto* p = remoteaccesshostallowgnubbyauth_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostallowgnubbyauth() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
_has_bits_[4] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostallowgnubbyauth_;
remoteaccesshostallowgnubbyauth_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostallowgnubbyauth() {
_has_bits_[4] |= 0x00000002u;
if (remoteaccesshostallowgnubbyauth_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
remoteaccesshostallowgnubbyauth_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
return remoteaccesshostallowgnubbyauth_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostallowgnubbyauth(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowgnubbyauth) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostallowgnubbyauth_);
}
if (remoteaccesshostallowgnubbyauth) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostallowgnubbyauth = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostallowgnubbyauth, submessage_arena);
}
_has_bits_[4] |= 0x00000002u;
} else {
_has_bits_[4] &= ~0x00000002u;
}
remoteaccesshostallowgnubbyauth_ = remoteaccesshostallowgnubbyauth;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowGnubbyAuth)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowRelayedConnection = 265;
inline bool CloudPolicySettings::has_remoteaccesshostallowrelayedconnection() const {
return (_has_bits_[4] & 0x00000008u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostallowrelayedconnection() const {
const ::enterprise_management::BooleanPolicyProto* p = remoteaccesshostallowrelayedconnection_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostallowrelayedconnection() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
_has_bits_[4] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostallowrelayedconnection_;
remoteaccesshostallowrelayedconnection_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostallowrelayedconnection() {
_has_bits_[4] |= 0x00000008u;
if (remoteaccesshostallowrelayedconnection_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
remoteaccesshostallowrelayedconnection_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
return remoteaccesshostallowrelayedconnection_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostallowrelayedconnection(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowrelayedconnection) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostallowrelayedconnection_);
}
if (remoteaccesshostallowrelayedconnection) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostallowrelayedconnection = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostallowrelayedconnection, submessage_arena);
}
_has_bits_[4] |= 0x00000008u;
} else {
_has_bits_[4] &= ~0x00000008u;
}
remoteaccesshostallowrelayedconnection_ = remoteaccesshostallowrelayedconnection;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowRelayedConnection)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostUdpPortRange = 266;
inline bool CloudPolicySettings::has_remoteaccesshostudpportrange() const {
return (_has_bits_[4] & 0x00000010u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshostudpportrange() const {
const ::enterprise_management::StringPolicyProto* p = remoteaccesshostudpportrange_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshostudpportrange() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
_has_bits_[4] &= ~0x00000010u;
::enterprise_management::StringPolicyProto* temp = remoteaccesshostudpportrange_;
remoteaccesshostudpportrange_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshostudpportrange() {
_has_bits_[4] |= 0x00000010u;
if (remoteaccesshostudpportrange_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
remoteaccesshostudpportrange_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
return remoteaccesshostudpportrange_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostudpportrange(::enterprise_management::StringPolicyProto* remoteaccesshostudpportrange) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostudpportrange_);
}
if (remoteaccesshostudpportrange) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostudpportrange = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostudpportrange, submessage_arena);
}
_has_bits_[4] |= 0x00000010u;
} else {
_has_bits_[4] &= ~0x00000010u;
}
remoteaccesshostudpportrange_ = remoteaccesshostudpportrange;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostUdpPortRange)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostMatchUsername = 287;
inline bool CloudPolicySettings::has_remoteaccesshostmatchusername() const {
return (_has_bits_[4] & 0x00010000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostmatchusername() const {
const ::enterprise_management::BooleanPolicyProto* p = remoteaccesshostmatchusername_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostmatchusername() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
_has_bits_[4] &= ~0x00010000u;
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostmatchusername_;
remoteaccesshostmatchusername_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostmatchusername() {
_has_bits_[4] |= 0x00010000u;
if (remoteaccesshostmatchusername_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
remoteaccesshostmatchusername_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
return remoteaccesshostmatchusername_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostmatchusername(::enterprise_management::BooleanPolicyProto* remoteaccesshostmatchusername) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostmatchusername_);
}
if (remoteaccesshostmatchusername) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostmatchusername = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostmatchusername, submessage_arena);
}
_has_bits_[4] |= 0x00010000u;
} else {
_has_bits_[4] &= ~0x00010000u;
}
remoteaccesshostmatchusername_ = remoteaccesshostmatchusername;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostMatchUsername)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenUrl = 288;
inline bool CloudPolicySettings::has_remoteaccesshosttokenurl() const {
return (_has_bits_[4] & 0x00020000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttokenurl() const {
const ::enterprise_management::StringPolicyProto* p = remoteaccesshosttokenurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttokenurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
_has_bits_[4] &= ~0x00020000u;
::enterprise_management::StringPolicyProto* temp = remoteaccesshosttokenurl_;
remoteaccesshosttokenurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttokenurl() {
_has_bits_[4] |= 0x00020000u;
if (remoteaccesshosttokenurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
remoteaccesshosttokenurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
return remoteaccesshosttokenurl_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshosttokenurl(::enterprise_management::StringPolicyProto* remoteaccesshosttokenurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshosttokenurl_);
}
if (remoteaccesshosttokenurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshosttokenurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshosttokenurl, submessage_arena);
}
_has_bits_[4] |= 0x00020000u;
} else {
_has_bits_[4] &= ~0x00020000u;
}
remoteaccesshosttokenurl_ = remoteaccesshosttokenurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenUrl)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationUrl = 289;
inline bool CloudPolicySettings::has_remoteaccesshosttokenvalidationurl() const {
return (_has_bits_[4] & 0x00040000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttokenvalidationurl() const {
const ::enterprise_management::StringPolicyProto* p = remoteaccesshosttokenvalidationurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttokenvalidationurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
_has_bits_[4] &= ~0x00040000u;
::enterprise_management::StringPolicyProto* temp = remoteaccesshosttokenvalidationurl_;
remoteaccesshosttokenvalidationurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttokenvalidationurl() {
_has_bits_[4] |= 0x00040000u;
if (remoteaccesshosttokenvalidationurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
remoteaccesshosttokenvalidationurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
return remoteaccesshosttokenvalidationurl_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshosttokenvalidationurl(::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshosttokenvalidationurl_);
}
if (remoteaccesshosttokenvalidationurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshosttokenvalidationurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshosttokenvalidationurl, submessage_arena);
}
_has_bits_[4] |= 0x00040000u;
} else {
_has_bits_[4] &= ~0x00040000u;
}
remoteaccesshosttokenvalidationurl_ = remoteaccesshosttokenvalidationurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationUrl)
}

// optional .enterprise_management.StringPolicyProto RemoteAccessHostTokenValidationCertificateIssuer = 290;
inline bool CloudPolicySettings::has_remoteaccesshosttokenvalidationcertificateissuer() const {
return (_has_bits_[4] & 0x00080000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::remoteaccesshosttokenvalidationcertificateissuer() const {
const ::enterprise_management::StringPolicyProto* p = remoteaccesshosttokenvalidationcertificateissuer_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_remoteaccesshosttokenvalidationcertificateissuer() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
_has_bits_[4] &= ~0x00080000u;
::enterprise_management::StringPolicyProto* temp = remoteaccesshosttokenvalidationcertificateissuer_;
remoteaccesshosttokenvalidationcertificateissuer_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_remoteaccesshosttokenvalidationcertificateissuer() {
_has_bits_[4] |= 0x00080000u;
if (remoteaccesshosttokenvalidationcertificateissuer_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
remoteaccesshosttokenvalidationcertificateissuer_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
return remoteaccesshosttokenvalidationcertificateissuer_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshosttokenvalidationcertificateissuer(::enterprise_management::StringPolicyProto* remoteaccesshosttokenvalidationcertificateissuer) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshosttokenvalidationcertificateissuer_);
}
if (remoteaccesshosttokenvalidationcertificateissuer) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshosttokenvalidationcertificateissuer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshosttokenvalidationcertificateissuer, submessage_arena);
}
_has_bits_[4] |= 0x00080000u;
} else {
_has_bits_[4] &= ~0x00080000u;
}
remoteaccesshosttokenvalidationcertificateissuer_ = remoteaccesshosttokenvalidationcertificateissuer;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostTokenValidationCertificateIssuer)
}

// optional .enterprise_management.BooleanPolicyProto RemoteAccessHostAllowFileTransfer = 536;
inline bool CloudPolicySettings::has_remoteaccesshostallowfiletransfer() const {
return (_has_bits_[7] & 0x00000100u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::remoteaccesshostallowfiletransfer() const {
const ::enterprise_management::BooleanPolicyProto* p = remoteaccesshostallowfiletransfer_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowFileTransfer)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_remoteaccesshostallowfiletransfer() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowFileTransfer)
_has_bits_[7] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = remoteaccesshostallowfiletransfer_;
remoteaccesshostallowfiletransfer_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_remoteaccesshostallowfiletransfer() {
_has_bits_[7] |= 0x00000100u;
if (remoteaccesshostallowfiletransfer_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
remoteaccesshostallowfiletransfer_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowFileTransfer)
return remoteaccesshostallowfiletransfer_;
}
inline void CloudPolicySettings::set_allocated_remoteaccesshostallowfiletransfer(::enterprise_management::BooleanPolicyProto* remoteaccesshostallowfiletransfer) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(remoteaccesshostallowfiletransfer_);
}
if (remoteaccesshostallowfiletransfer) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
remoteaccesshostallowfiletransfer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, remoteaccesshostallowfiletransfer, submessage_arena);
}
_has_bits_[7] |= 0x00000100u;
} else {
_has_bits_[7] &= ~0x00000100u;
}
remoteaccesshostallowfiletransfer_ = remoteaccesshostallowfiletransfer;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RemoteAccessHostAllowFileTransfer)
}

// optional .enterprise_management.BooleanPolicyProto PrintingEnabled = 14;
inline bool CloudPolicySettings::has_printingenabled() const {
return (_has_bits_[0] & 0x00000100u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::printingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = printingenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintingEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_printingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintingEnabled)
_has_bits_[0] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = printingenabled_;
printingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_printingenabled() {
_has_bits_[0] |= 0x00000100u;
if (printingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
printingenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintingEnabled)
return printingenabled_;
}
inline void CloudPolicySettings::set_allocated_printingenabled(::enterprise_management::BooleanPolicyProto* printingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(printingenabled_);
}
if (printingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
printingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, printingenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000100u;
} else {
_has_bits_[0] &= ~0x00000100u;
}
printingenabled_ = printingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto CloudPrintProxyEnabled = 15;
inline bool CloudPolicySettings::has_cloudprintproxyenabled() const {
return (_has_bits_[0] & 0x00000200u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudprintproxyenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = cloudprintproxyenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudprintproxyenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
_has_bits_[0] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = cloudprintproxyenabled_;
cloudprintproxyenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudprintproxyenabled() {
_has_bits_[0] |= 0x00000200u;
if (cloudprintproxyenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
cloudprintproxyenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
return cloudprintproxyenabled_;
}
inline void CloudPolicySettings::set_allocated_cloudprintproxyenabled(::enterprise_management::BooleanPolicyProto* cloudprintproxyenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudprintproxyenabled_);
}
if (cloudprintproxyenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cloudprintproxyenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudprintproxyenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000200u;
} else {
_has_bits_[0] &= ~0x00000200u;
}
cloudprintproxyenabled_ = cloudprintproxyenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudPrintProxyEnabled)
}

// optional .enterprise_management.StringPolicyProto PrintingAllowedBackgroundGraphicsModes = 623;
inline bool CloudPolicySettings::has_printingallowedbackgroundgraphicsmodes() const {
return (_has_bits_[8] & 0x00000004u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::printingallowedbackgroundgraphicsmodes() const {
const ::enterprise_management::StringPolicyProto* p = printingallowedbackgroundgraphicsmodes_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintingAllowedBackgroundGraphicsModes)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_printingallowedbackgroundgraphicsmodes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintingAllowedBackgroundGraphicsModes)
_has_bits_[8] &= ~0x00000004u;
::enterprise_management::StringPolicyProto* temp = printingallowedbackgroundgraphicsmodes_;
printingallowedbackgroundgraphicsmodes_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_printingallowedbackgroundgraphicsmodes() {
_has_bits_[8] |= 0x00000004u;
if (printingallowedbackgroundgraphicsmodes_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
printingallowedbackgroundgraphicsmodes_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintingAllowedBackgroundGraphicsModes)
return printingallowedbackgroundgraphicsmodes_;
}
inline void CloudPolicySettings::set_allocated_printingallowedbackgroundgraphicsmodes(::enterprise_management::StringPolicyProto* printingallowedbackgroundgraphicsmodes) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(printingallowedbackgroundgraphicsmodes_);
}
if (printingallowedbackgroundgraphicsmodes) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
printingallowedbackgroundgraphicsmodes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, printingallowedbackgroundgraphicsmodes, submessage_arena);
}
_has_bits_[8] |= 0x00000004u;
} else {
_has_bits_[8] &= ~0x00000004u;
}
printingallowedbackgroundgraphicsmodes_ = printingallowedbackgroundgraphicsmodes;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintingAllowedBackgroundGraphicsModes)
}

// optional .enterprise_management.StringPolicyProto PrintingBackgroundGraphicsDefault = 624;
inline bool CloudPolicySettings::has_printingbackgroundgraphicsdefault() const {
return (_has_bits_[8] & 0x00000008u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::printingbackgroundgraphicsdefault() const {
const ::enterprise_management::StringPolicyProto* p = printingbackgroundgraphicsdefault_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintingBackgroundGraphicsDefault)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_printingbackgroundgraphicsdefault() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintingBackgroundGraphicsDefault)
_has_bits_[8] &= ~0x00000008u;
::enterprise_management::StringPolicyProto* temp = printingbackgroundgraphicsdefault_;
printingbackgroundgraphicsdefault_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_printingbackgroundgraphicsdefault() {
_has_bits_[8] |= 0x00000008u;
if (printingbackgroundgraphicsdefault_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
printingbackgroundgraphicsdefault_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintingBackgroundGraphicsDefault)
return printingbackgroundgraphicsdefault_;
}
inline void CloudPolicySettings::set_allocated_printingbackgroundgraphicsdefault(::enterprise_management::StringPolicyProto* printingbackgroundgraphicsdefault) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(printingbackgroundgraphicsdefault_);
}
if (printingbackgroundgraphicsdefault) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
printingbackgroundgraphicsdefault = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, printingbackgroundgraphicsdefault, submessage_arena);
}
_has_bits_[8] |= 0x00000008u;
} else {
_has_bits_[8] &= ~0x00000008u;
}
printingbackgroundgraphicsdefault_ = printingbackgroundgraphicsdefault;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintingBackgroundGraphicsDefault)
}

// optional .enterprise_management.StringPolicyProto PrintingPaperSizeDefault = 481;
inline bool CloudPolicySettings::has_printingpapersizedefault() const {
return (_has_bits_[6] & 0x00200000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::printingpapersizedefault() const {
const ::enterprise_management::StringPolicyProto* p = printingpapersizedefault_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintingPaperSizeDefault)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_printingpapersizedefault() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintingPaperSizeDefault)
_has_bits_[6] &= ~0x00200000u;
::enterprise_management::StringPolicyProto* temp = printingpapersizedefault_;
printingpapersizedefault_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_printingpapersizedefault() {
_has_bits_[6] |= 0x00200000u;
if (printingpapersizedefault_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
printingpapersizedefault_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintingPaperSizeDefault)
return printingpapersizedefault_;
}
inline void CloudPolicySettings::set_allocated_printingpapersizedefault(::enterprise_management::StringPolicyProto* printingpapersizedefault) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(printingpapersizedefault_);
}
if (printingpapersizedefault) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
printingpapersizedefault = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, printingpapersizedefault, submessage_arena);
}
_has_bits_[6] |= 0x00200000u;
} else {
_has_bits_[6] &= ~0x00200000u;
}
printingpapersizedefault_ = printingpapersizedefault;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintingPaperSizeDefault)
}

// optional .enterprise_management.BooleanPolicyProto AppCacheForceEnabled = 706;
inline bool CloudPolicySettings::has_appcacheforceenabled() const {
return (_has_bits_[9] & 0x00000800u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::appcacheforceenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = appcacheforceenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AppCacheForceEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_appcacheforceenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AppCacheForceEnabled)
_has_bits_[9] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = appcacheforceenabled_;
appcacheforceenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_appcacheforceenabled() {
_has_bits_[9] |= 0x00000800u;
if (appcacheforceenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
appcacheforceenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AppCacheForceEnabled)
return appcacheforceenabled_;
}
inline void CloudPolicySettings::set_allocated_appcacheforceenabled(::enterprise_management::BooleanPolicyProto* appcacheforceenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(appcacheforceenabled_);
}
if (appcacheforceenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
appcacheforceenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, appcacheforceenabled, submessage_arena);
}
_has_bits_[9] |= 0x00000800u;
} else {
_has_bits_[9] &= ~0x00000800u;
}
appcacheforceenabled_ = appcacheforceenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AppCacheForceEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ForceSafeSearch = 164;
inline bool CloudPolicySettings::has_forcesafesearch() const {
return (_has_bits_[3] & 0x00000040u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcesafesearch() const {
const ::enterprise_management::BooleanPolicyProto* p = forcesafesearch_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceSafeSearch)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcesafesearch() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceSafeSearch)
_has_bits_[3] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = forcesafesearch_;
forcesafesearch_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcesafesearch() {
_has_bits_[3] |= 0x00000040u;
if (forcesafesearch_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
forcesafesearch_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceSafeSearch)
return forcesafesearch_;
}
inline void CloudPolicySettings::set_allocated_forcesafesearch(::enterprise_management::BooleanPolicyProto* forcesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcesafesearch_);
}
if (forcesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forcesafesearch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forcesafesearch, submessage_arena);
}
_has_bits_[3] |= 0x00000040u;
} else {
_has_bits_[3] &= ~0x00000040u;
}
forcesafesearch_ = forcesafesearch;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceGoogleSafeSearch = 284;
inline bool CloudPolicySettings::has_forcegooglesafesearch() const {
return (_has_bits_[4] & 0x00004000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forcegooglesafesearch() const {
const ::enterprise_management::BooleanPolicyProto* p = forcegooglesafesearch_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forcegooglesafesearch() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
_has_bits_[4] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = forcegooglesafesearch_;
forcegooglesafesearch_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forcegooglesafesearch() {
_has_bits_[4] |= 0x00004000u;
if (forcegooglesafesearch_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
forcegooglesafesearch_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
return forcegooglesafesearch_;
}
inline void CloudPolicySettings::set_allocated_forcegooglesafesearch(::enterprise_management::BooleanPolicyProto* forcegooglesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forcegooglesafesearch_);
}
if (forcegooglesafesearch) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forcegooglesafesearch = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forcegooglesafesearch, submessage_arena);
}
_has_bits_[4] |= 0x00004000u;
} else {
_has_bits_[4] &= ~0x00004000u;
}
forcegooglesafesearch_ = forcegooglesafesearch;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceGoogleSafeSearch)
}

// optional .enterprise_management.BooleanPolicyProto ForceYouTubeSafetyMode = 285;
inline bool CloudPolicySettings::has_forceyoutubesafetymode() const {
return (_has_bits_[4] & 0x00008000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forceyoutubesafetymode() const {
const ::enterprise_management::BooleanPolicyProto* p = forceyoutubesafetymode_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forceyoutubesafetymode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
_has_bits_[4] &= ~0x00008000u;
::enterprise_management::BooleanPolicyProto* temp = forceyoutubesafetymode_;
forceyoutubesafetymode_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forceyoutubesafetymode() {
_has_bits_[4] |= 0x00008000u;
if (forceyoutubesafetymode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
forceyoutubesafetymode_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
return forceyoutubesafetymode_;
}
inline void CloudPolicySettings::set_allocated_forceyoutubesafetymode(::enterprise_management::BooleanPolicyProto* forceyoutubesafetymode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceyoutubesafetymode_);
}
if (forceyoutubesafetymode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forceyoutubesafetymode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forceyoutubesafetymode, submessage_arena);
}
_has_bits_[4] |= 0x00008000u;
} else {
_has_bits_[4] &= ~0x00008000u;
}
forceyoutubesafetymode_ = forceyoutubesafetymode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeSafetyMode)
}

// optional .enterprise_management.IntegerPolicyProto ForceYouTubeRestrict = 350;
inline bool CloudPolicySettings::has_forceyoutuberestrict() const {
return (_has_bits_[5] & 0x00000008u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::forceyoutuberestrict() const {
const ::enterprise_management::IntegerPolicyProto* p = forceyoutuberestrict_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_forceyoutuberestrict() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
_has_bits_[5] &= ~0x00000008u;
::enterprise_management::IntegerPolicyProto* temp = forceyoutuberestrict_;
forceyoutuberestrict_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_forceyoutuberestrict() {
_has_bits_[5] |= 0x00000008u;
if (forceyoutuberestrict_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
forceyoutuberestrict_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
return forceyoutuberestrict_;
}
inline void CloudPolicySettings::set_allocated_forceyoutuberestrict(::enterprise_management::IntegerPolicyProto* forceyoutuberestrict) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceyoutuberestrict_);
}
if (forceyoutuberestrict) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forceyoutuberestrict = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forceyoutuberestrict, submessage_arena);
}
_has_bits_[5] |= 0x00000008u;
} else {
_has_bits_[5] &= ~0x00000008u;
}
forceyoutuberestrict_ = forceyoutuberestrict;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceYouTubeRestrict)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingEnabled = 16;
inline bool CloudPolicySettings::has_safebrowsingenabled() const {
return (_has_bits_[0] & 0x00000400u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = safebrowsingenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
_has_bits_[0] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = safebrowsingenabled_;
safebrowsingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingenabled() {
_has_bits_[0] |= 0x00000400u;
if (safebrowsingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
safebrowsingenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
return safebrowsingenabled_;
}
inline void CloudPolicySettings::set_allocated_safebrowsingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingenabled_);
}
if (safebrowsingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
safebrowsingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, safebrowsingenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000400u;
} else {
_has_bits_[0] &= ~0x00000400u;
}
safebrowsingenabled_ = safebrowsingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingEnabled)
}

// optional .enterprise_management.IntegerPolicyProto SafeBrowsingProtectionLevel = 686;
inline bool CloudPolicySettings::has_safebrowsingprotectionlevel() const {
return (_has_bits_[9] & 0x00000004u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::safebrowsingprotectionlevel() const {
const ::enterprise_management::IntegerPolicyProto* p = safebrowsingprotectionlevel_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingProtectionLevel)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_safebrowsingprotectionlevel() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingProtectionLevel)
_has_bits_[9] &= ~0x00000004u;
::enterprise_management::IntegerPolicyProto* temp = safebrowsingprotectionlevel_;
safebrowsingprotectionlevel_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_safebrowsingprotectionlevel() {
_has_bits_[9] |= 0x00000004u;
if (safebrowsingprotectionlevel_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
safebrowsingprotectionlevel_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingProtectionLevel)
return safebrowsingprotectionlevel_;
}
inline void CloudPolicySettings::set_allocated_safebrowsingprotectionlevel(::enterprise_management::IntegerPolicyProto* safebrowsingprotectionlevel) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingprotectionlevel_);
}
if (safebrowsingprotectionlevel) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
safebrowsingprotectionlevel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, safebrowsingprotectionlevel, submessage_arena);
}
_has_bits_[9] |= 0x00000004u;
} else {
_has_bits_[9] &= ~0x00000004u;
}
safebrowsingprotectionlevel_ = safebrowsingprotectionlevel;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingProtectionLevel)
}

// optional .enterprise_management.BooleanPolicyProto MetricsReportingEnabled = 17;
inline bool CloudPolicySettings::has_metricsreportingenabled() const {
return (_has_bits_[0] & 0x00000800u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::metricsreportingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = metricsreportingenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_metricsreportingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
_has_bits_[0] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = metricsreportingenabled_;
metricsreportingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_metricsreportingenabled() {
_has_bits_[0] |= 0x00000800u;
if (metricsreportingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
metricsreportingenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
return metricsreportingenabled_;
}
inline void CloudPolicySettings::set_allocated_metricsreportingenabled(::enterprise_management::BooleanPolicyProto* metricsreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metricsreportingenabled_);
}
if (metricsreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
metricsreportingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, metricsreportingenabled, submessage_arena);
}
_has_bits_[0] |= 0x00000800u;
} else {
_has_bits_[0] &= ~0x00000800u;
}
metricsreportingenabled_ = metricsreportingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MetricsReportingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PasswordManagerEnabled = 18;
inline bool CloudPolicySettings::has_passwordmanagerenabled() const {
return (_has_bits_[0] & 0x00001000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::passwordmanagerenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = passwordmanagerenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_passwordmanagerenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
_has_bits_[0] &= ~0x00001000u;
::enterprise_management::BooleanPolicyProto* temp = passwordmanagerenabled_;
passwordmanagerenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_passwordmanagerenabled() {
_has_bits_[0] |= 0x00001000u;
if (passwordmanagerenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
passwordmanagerenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
return passwordmanagerenabled_;
}
inline void CloudPolicySettings::set_allocated_passwordmanagerenabled(::enterprise_management::BooleanPolicyProto* passwordmanagerenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordmanagerenabled_);
}
if (passwordmanagerenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
passwordmanagerenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, passwordmanagerenabled, submessage_arena);
}
_has_bits_[0] |= 0x00001000u;
} else {
_has_bits_[0] &= ~0x00001000u;
}
passwordmanagerenabled_ = passwordmanagerenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordManagerEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PasswordLeakDetectionEnabled = 582;
inline bool CloudPolicySettings::has_passwordleakdetectionenabled() const {
return (_has_bits_[7] & 0x00040000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::passwordleakdetectionenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = passwordleakdetectionenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_passwordleakdetectionenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
_has_bits_[7] &= ~0x00040000u;
::enterprise_management::BooleanPolicyProto* temp = passwordleakdetectionenabled_;
passwordleakdetectionenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_passwordleakdetectionenabled() {
_has_bits_[7] |= 0x00040000u;
if (passwordleakdetectionenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
passwordleakdetectionenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
return passwordleakdetectionenabled_;
}
inline void CloudPolicySettings::set_allocated_passwordleakdetectionenabled(::enterprise_management::BooleanPolicyProto* passwordleakdetectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordleakdetectionenabled_);
}
if (passwordleakdetectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
passwordleakdetectionenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, passwordleakdetectionenabled, submessage_arena);
}
_has_bits_[7] |= 0x00040000u;
} else {
_has_bits_[7] &= ~0x00040000u;
}
passwordleakdetectionenabled_ = passwordleakdetectionenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordLeakDetectionEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutoFillEnabled = 20;
inline bool CloudPolicySettings::has_autofillenabled() const {
return (_has_bits_[0] & 0x00002000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = autofillenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoFillEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoFillEnabled)
_has_bits_[0] &= ~0x00002000u;
::enterprise_management::BooleanPolicyProto* temp = autofillenabled_;
autofillenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillenabled() {
_has_bits_[0] |= 0x00002000u;
if (autofillenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
autofillenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoFillEnabled)
return autofillenabled_;
}
inline void CloudPolicySettings::set_allocated_autofillenabled(::enterprise_management::BooleanPolicyProto* autofillenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofillenabled_);
}
if (autofillenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autofillenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autofillenabled, submessage_arena);
}
_has_bits_[0] |= 0x00002000u;
} else {
_has_bits_[0] &= ~0x00002000u;
}
autofillenabled_ = autofillenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoFillEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutofillAddressEnabled = 461;
inline bool CloudPolicySettings::has_autofilladdressenabled() const {
return (_has_bits_[6] & 0x00001000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofilladdressenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = autofilladdressenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofilladdressenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
_has_bits_[6] &= ~0x00001000u;
::enterprise_management::BooleanPolicyProto* temp = autofilladdressenabled_;
autofilladdressenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofilladdressenabled() {
_has_bits_[6] |= 0x00001000u;
if (autofilladdressenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
autofilladdressenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
return autofilladdressenabled_;
}
inline void CloudPolicySettings::set_allocated_autofilladdressenabled(::enterprise_management::BooleanPolicyProto* autofilladdressenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofilladdressenabled_);
}
if (autofilladdressenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autofilladdressenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autofilladdressenabled, submessage_arena);
}
_has_bits_[6] |= 0x00001000u;
} else {
_has_bits_[6] &= ~0x00001000u;
}
autofilladdressenabled_ = autofilladdressenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutofillAddressEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AutofillCreditCardEnabled = 394;
inline bool CloudPolicySettings::has_autofillcreditcardenabled() const {
return (_has_bits_[5] & 0x00002000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autofillcreditcardenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = autofillcreditcardenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autofillcreditcardenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
_has_bits_[5] &= ~0x00002000u;
::enterprise_management::BooleanPolicyProto* temp = autofillcreditcardenabled_;
autofillcreditcardenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autofillcreditcardenabled() {
_has_bits_[5] |= 0x00002000u;
if (autofillcreditcardenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
autofillcreditcardenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
return autofillcreditcardenabled_;
}
inline void CloudPolicySettings::set_allocated_autofillcreditcardenabled(::enterprise_management::BooleanPolicyProto* autofillcreditcardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autofillcreditcardenabled_);
}
if (autofillcreditcardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autofillcreditcardenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autofillcreditcardenabled, submessage_arena);
}
_has_bits_[5] |= 0x00002000u;
} else {
_has_bits_[5] &= ~0x00002000u;
}
autofillcreditcardenabled_ = autofillcreditcardenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutofillCreditCardEnabled)
}

// optional .enterprise_management.StringListPolicyProto DisabledPlugins = 21;
inline bool CloudPolicySettings::has_disabledplugins() const {
return (_has_bits_[0] & 0x00004000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::disabledplugins() const {
const ::enterprise_management::StringListPolicyProto* p = disabledplugins_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisabledPlugins)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_disabledplugins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisabledPlugins)
_has_bits_[0] &= ~0x00004000u;
::enterprise_management::StringListPolicyProto* temp = disabledplugins_;
disabledplugins_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_disabledplugins() {
_has_bits_[0] |= 0x00004000u;
if (disabledplugins_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
disabledplugins_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisabledPlugins)
return disabledplugins_;
}
inline void CloudPolicySettings::set_allocated_disabledplugins(::enterprise_management::StringListPolicyProto* disabledplugins) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disabledplugins_);
}
if (disabledplugins) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
disabledplugins = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disabledplugins, submessage_arena);
}
_has_bits_[0] |= 0x00004000u;
} else {
_has_bits_[0] &= ~0x00004000u;
}
disabledplugins_ = disabledplugins;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisabledPlugins)
}

// optional .enterprise_management.StringListPolicyProto EnabledPlugins = 80;
inline bool CloudPolicySettings::has_enabledplugins() const {
return (_has_bits_[1] & 0x80000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::enabledplugins() const {
const ::enterprise_management::StringListPolicyProto* p = enabledplugins_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnabledPlugins)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_enabledplugins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnabledPlugins)
_has_bits_[1] &= ~0x80000000u;
::enterprise_management::StringListPolicyProto* temp = enabledplugins_;
enabledplugins_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_enabledplugins() {
_has_bits_[1] |= 0x80000000u;
if (enabledplugins_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
enabledplugins_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnabledPlugins)
return enabledplugins_;
}
inline void CloudPolicySettings::set_allocated_enabledplugins(::enterprise_management::StringListPolicyProto* enabledplugins) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enabledplugins_);
}
if (enabledplugins) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
enabledplugins = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enabledplugins, submessage_arena);
}
_has_bits_[1] |= 0x80000000u;
} else {
_has_bits_[1] &= ~0x80000000u;
}
enabledplugins_ = enabledplugins;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnabledPlugins)
}

// optional .enterprise_management.StringListPolicyProto DisabledPluginsExceptions = 81;
inline bool CloudPolicySettings::has_disabledpluginsexceptions() const {
return (_has_bits_[2] & 0x00000001u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::disabledpluginsexceptions() const {
const ::enterprise_management::StringListPolicyProto* p = disabledpluginsexceptions_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_disabledpluginsexceptions() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
_has_bits_[2] &= ~0x00000001u;
::enterprise_management::StringListPolicyProto* temp = disabledpluginsexceptions_;
disabledpluginsexceptions_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_disabledpluginsexceptions() {
_has_bits_[2] |= 0x00000001u;
if (disabledpluginsexceptions_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
disabledpluginsexceptions_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
return disabledpluginsexceptions_;
}
inline void CloudPolicySettings::set_allocated_disabledpluginsexceptions(::enterprise_management::StringListPolicyProto* disabledpluginsexceptions) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disabledpluginsexceptions_);
}
if (disabledpluginsexceptions) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
disabledpluginsexceptions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disabledpluginsexceptions, submessage_arena);
}
_has_bits_[2] |= 0x00000001u;
} else {
_has_bits_[2] &= ~0x00000001u;
}
disabledpluginsexceptions_ = disabledpluginsexceptions;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisabledPluginsExceptions)
}

// optional .enterprise_management.BooleanPolicyProto AlwaysOpenPdfExternally = 349;
inline bool CloudPolicySettings::has_alwaysopenpdfexternally() const {
return (_has_bits_[5] & 0x00000004u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::alwaysopenpdfexternally() const {
const ::enterprise_management::BooleanPolicyProto* p = alwaysopenpdfexternally_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_alwaysopenpdfexternally() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
_has_bits_[5] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = alwaysopenpdfexternally_;
alwaysopenpdfexternally_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_alwaysopenpdfexternally() {
_has_bits_[5] |= 0x00000004u;
if (alwaysopenpdfexternally_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
alwaysopenpdfexternally_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
return alwaysopenpdfexternally_;
}
inline void CloudPolicySettings::set_allocated_alwaysopenpdfexternally(::enterprise_management::BooleanPolicyProto* alwaysopenpdfexternally) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alwaysopenpdfexternally_);
}
if (alwaysopenpdfexternally) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
alwaysopenpdfexternally = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, alwaysopenpdfexternally, submessage_arena);
}
_has_bits_[5] |= 0x00000004u;
} else {
_has_bits_[5] &= ~0x00000004u;
}
alwaysopenpdfexternally_ = alwaysopenpdfexternally;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlwaysOpenPdfExternally)
}

// optional .enterprise_management.BooleanPolicyProto SyncDisabled = 22;
inline bool CloudPolicySettings::has_syncdisabled() const {
return (_has_bits_[0] & 0x00008000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::syncdisabled() const {
const ::enterprise_management::BooleanPolicyProto* p = syncdisabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SyncDisabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_syncdisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SyncDisabled)
_has_bits_[0] &= ~0x00008000u;
::enterprise_management::BooleanPolicyProto* temp = syncdisabled_;
syncdisabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_syncdisabled() {
_has_bits_[0] |= 0x00008000u;
if (syncdisabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
syncdisabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SyncDisabled)
return syncdisabled_;
}
inline void CloudPolicySettings::set_allocated_syncdisabled(::enterprise_management::BooleanPolicyProto* syncdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(syncdisabled_);
}
if (syncdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
syncdisabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, syncdisabled, submessage_arena);
}
_has_bits_[0] |= 0x00008000u;
} else {
_has_bits_[0] &= ~0x00008000u;
}
syncdisabled_ = syncdisabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SyncDisabled)
}

// optional .enterprise_management.StringListPolicyProto SyncTypesListDisabled = 651;
inline bool CloudPolicySettings::has_synctypeslistdisabled() const {
return (_has_bits_[8] & 0x00200000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::synctypeslistdisabled() const {
const ::enterprise_management::StringListPolicyProto* p = synctypeslistdisabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_synctypeslistdisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
_has_bits_[8] &= ~0x00200000u;
::enterprise_management::StringListPolicyProto* temp = synctypeslistdisabled_;
synctypeslistdisabled_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_synctypeslistdisabled() {
_has_bits_[8] |= 0x00200000u;
if (synctypeslistdisabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
synctypeslistdisabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
return synctypeslistdisabled_;
}
inline void CloudPolicySettings::set_allocated_synctypeslistdisabled(::enterprise_management::StringListPolicyProto* synctypeslistdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(synctypeslistdisabled_);
}
if (synctypeslistdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
synctypeslistdisabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, synctypeslistdisabled, submessage_arena);
}
_has_bits_[8] |= 0x00200000u;
} else {
_has_bits_[8] &= ~0x00200000u;
}
synctypeslistdisabled_ = synctypeslistdisabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SyncTypesListDisabled)
}

// optional .enterprise_management.BooleanPolicyProto SigninAllowed = 192;
inline bool CloudPolicySettings::has_signinallowed() const {
return (_has_bits_[3] & 0x00001000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::signinallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = signinallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SigninAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_signinallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SigninAllowed)
_has_bits_[3] &= ~0x00001000u;
::enterprise_management::BooleanPolicyProto* temp = signinallowed_;
signinallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_signinallowed() {
_has_bits_[3] |= 0x00001000u;
if (signinallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
signinallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SigninAllowed)
return signinallowed_;
}
inline void CloudPolicySettings::set_allocated_signinallowed(::enterprise_management::BooleanPolicyProto* signinallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(signinallowed_);
}
if (signinallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
signinallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, signinallowed, submessage_arena);
}
_has_bits_[3] |= 0x00001000u;
} else {
_has_bits_[3] &= ~0x00001000u;
}
signinallowed_ = signinallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SigninAllowed)
}

// optional .enterprise_management.StringPolicyProto DiskCacheDir = 90;
inline bool CloudPolicySettings::has_diskcachedir() const {
return (_has_bits_[2] & 0x00000080u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::diskcachedir() const {
const ::enterprise_management::StringPolicyProto* p = diskcachedir_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DiskCacheDir)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_diskcachedir() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DiskCacheDir)
_has_bits_[2] &= ~0x00000080u;
::enterprise_management::StringPolicyProto* temp = diskcachedir_;
diskcachedir_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_diskcachedir() {
_has_bits_[2] |= 0x00000080u;
if (diskcachedir_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
diskcachedir_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DiskCacheDir)
return diskcachedir_;
}
inline void CloudPolicySettings::set_allocated_diskcachedir(::enterprise_management::StringPolicyProto* diskcachedir) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(diskcachedir_);
}
if (diskcachedir) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
diskcachedir = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, diskcachedir, submessage_arena);
}
_has_bits_[2] |= 0x00000080u;
} else {
_has_bits_[2] &= ~0x00000080u;
}
diskcachedir_ = diskcachedir;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DiskCacheDir)
}

// optional .enterprise_management.IntegerPolicyProto DiskCacheSize = 112;
inline bool CloudPolicySettings::has_diskcachesize() const {
return (_has_bits_[2] & 0x00800000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::diskcachesize() const {
const ::enterprise_management::IntegerPolicyProto* p = diskcachesize_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DiskCacheSize)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_diskcachesize() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DiskCacheSize)
_has_bits_[2] &= ~0x00800000u;
::enterprise_management::IntegerPolicyProto* temp = diskcachesize_;
diskcachesize_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_diskcachesize() {
_has_bits_[2] |= 0x00800000u;
if (diskcachesize_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
diskcachesize_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DiskCacheSize)
return diskcachesize_;
}
inline void CloudPolicySettings::set_allocated_diskcachesize(::enterprise_management::IntegerPolicyProto* diskcachesize) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(diskcachesize_);
}
if (diskcachesize) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
diskcachesize = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, diskcachesize, submessage_arena);
}
_has_bits_[2] |= 0x00800000u;
} else {
_has_bits_[2] &= ~0x00800000u;
}
diskcachesize_ = diskcachesize;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DiskCacheSize)
}

// optional .enterprise_management.IntegerPolicyProto DownloadRestrictions = 373;
inline bool CloudPolicySettings::has_downloadrestrictions() const {
return (_has_bits_[5] & 0x00000200u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::downloadrestrictions() const {
const ::enterprise_management::IntegerPolicyProto* p = downloadrestrictions_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DownloadRestrictions)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_downloadrestrictions() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DownloadRestrictions)
_has_bits_[5] &= ~0x00000200u;
::enterprise_management::IntegerPolicyProto* temp = downloadrestrictions_;
downloadrestrictions_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_downloadrestrictions() {
_has_bits_[5] |= 0x00000200u;
if (downloadrestrictions_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
downloadrestrictions_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DownloadRestrictions)
return downloadrestrictions_;
}
inline void CloudPolicySettings::set_allocated_downloadrestrictions(::enterprise_management::IntegerPolicyProto* downloadrestrictions) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(downloadrestrictions_);
}
if (downloadrestrictions) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
downloadrestrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, downloadrestrictions, submessage_arena);
}
_has_bits_[5] |= 0x00000200u;
} else {
_has_bits_[5] &= ~0x00000200u;
}
downloadrestrictions_ = downloadrestrictions;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DownloadRestrictions)
}

// optional .enterprise_management.StringPolicyProto DownloadDirectory = 66;
inline bool CloudPolicySettings::has_downloaddirectory() const {
return (_has_bits_[1] & 0x00080000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::downloaddirectory() const {
const ::enterprise_management::StringPolicyProto* p = downloaddirectory_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DownloadDirectory)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_downloaddirectory() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DownloadDirectory)
_has_bits_[1] &= ~0x00080000u;
::enterprise_management::StringPolicyProto* temp = downloaddirectory_;
downloaddirectory_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_downloaddirectory() {
_has_bits_[1] |= 0x00080000u;
if (downloaddirectory_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
downloaddirectory_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DownloadDirectory)
return downloaddirectory_;
}
inline void CloudPolicySettings::set_allocated_downloaddirectory(::enterprise_management::StringPolicyProto* downloaddirectory) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(downloaddirectory_);
}
if (downloaddirectory) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
downloaddirectory = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, downloaddirectory, submessage_arena);
}
_has_bits_[1] |= 0x00080000u;
} else {
_has_bits_[1] &= ~0x00080000u;
}
downloaddirectory_ = downloaddirectory;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DownloadDirectory)
}

// optional .enterprise_management.StringListPolicyProto AutoOpenFileTypes = 702;
inline bool CloudPolicySettings::has_autoopenfiletypes() const {
return (_has_bits_[9] & 0x00000200u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::autoopenfiletypes() const {
const ::enterprise_management::StringListPolicyProto* p = autoopenfiletypes_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoOpenFileTypes)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_autoopenfiletypes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoOpenFileTypes)
_has_bits_[9] &= ~0x00000200u;
::enterprise_management::StringListPolicyProto* temp = autoopenfiletypes_;
autoopenfiletypes_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_autoopenfiletypes() {
_has_bits_[9] |= 0x00000200u;
if (autoopenfiletypes_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
autoopenfiletypes_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoOpenFileTypes)
return autoopenfiletypes_;
}
inline void CloudPolicySettings::set_allocated_autoopenfiletypes(::enterprise_management::StringListPolicyProto* autoopenfiletypes) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoopenfiletypes_);
}
if (autoopenfiletypes) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autoopenfiletypes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autoopenfiletypes, submessage_arena);
}
_has_bits_[9] |= 0x00000200u;
} else {
_has_bits_[9] &= ~0x00000200u;
}
autoopenfiletypes_ = autoopenfiletypes;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoOpenFileTypes)
}

// optional .enterprise_management.StringListPolicyProto AutoOpenAllowedForURLs = 709;
inline bool CloudPolicySettings::has_autoopenallowedforurls() const {
return (_has_bits_[9] & 0x00001000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::autoopenallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = autoopenallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoOpenAllowedForURLs)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_autoopenallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoOpenAllowedForURLs)
_has_bits_[9] &= ~0x00001000u;
::enterprise_management::StringListPolicyProto* temp = autoopenallowedforurls_;
autoopenallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_autoopenallowedforurls() {
_has_bits_[9] |= 0x00001000u;
if (autoopenallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
autoopenallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoOpenAllowedForURLs)
return autoopenallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_autoopenallowedforurls(::enterprise_management::StringListPolicyProto* autoopenallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoopenallowedforurls_);
}
if (autoopenallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autoopenallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autoopenallowedforurls, submessage_arena);
}
_has_bits_[9] |= 0x00001000u;
} else {
_has_bits_[9] &= ~0x00001000u;
}
autoopenallowedforurls_ = autoopenallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoOpenAllowedForURLs)
}

// optional .enterprise_management.StringPolicyProto AutoLaunchProtocolsFromOrigins = 724;
inline bool CloudPolicySettings::has_autolaunchprotocolsfromorigins() const {
return (_has_bits_[9] & 0x00010000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::autolaunchprotocolsfromorigins() const {
const ::enterprise_management::StringPolicyProto* p = autolaunchprotocolsfromorigins_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoLaunchProtocolsFromOrigins)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_autolaunchprotocolsfromorigins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoLaunchProtocolsFromOrigins)
_has_bits_[9] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = autolaunchprotocolsfromorigins_;
autolaunchprotocolsfromorigins_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_autolaunchprotocolsfromorigins() {
_has_bits_[9] |= 0x00010000u;
if (autolaunchprotocolsfromorigins_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
autolaunchprotocolsfromorigins_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoLaunchProtocolsFromOrigins)
return autolaunchprotocolsfromorigins_;
}
inline void CloudPolicySettings::set_allocated_autolaunchprotocolsfromorigins(::enterprise_management::StringPolicyProto* autolaunchprotocolsfromorigins) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autolaunchprotocolsfromorigins_);
}
if (autolaunchprotocolsfromorigins) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autolaunchprotocolsfromorigins = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autolaunchprotocolsfromorigins, submessage_arena);
}
_has_bits_[9] |= 0x00010000u;
} else {
_has_bits_[9] &= ~0x00010000u;
}
autolaunchprotocolsfromorigins_ = autolaunchprotocolsfromorigins;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoLaunchProtocolsFromOrigins)
}

// optional .enterprise_management.StringPolicyProto ProxyMode = 23;
inline bool CloudPolicySettings::has_proxymode() const {
return (_has_bits_[0] & 0x00010000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxymode() const {
const ::enterprise_management::StringPolicyProto* p = proxymode_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyMode)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxymode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyMode)
_has_bits_[0] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = proxymode_;
proxymode_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxymode() {
_has_bits_[0] |= 0x00010000u;
if (proxymode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
proxymode_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyMode)
return proxymode_;
}
inline void CloudPolicySettings::set_allocated_proxymode(::enterprise_management::StringPolicyProto* proxymode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxymode_);
}
if (proxymode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxymode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxymode, submessage_arena);
}
_has_bits_[0] |= 0x00010000u;
} else {
_has_bits_[0] &= ~0x00010000u;
}
proxymode_ = proxymode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyMode)
}

// optional .enterprise_management.IntegerPolicyProto ProxyServerMode = 24;
inline bool CloudPolicySettings::has_proxyservermode() const {
return (_has_bits_[0] & 0x00020000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::proxyservermode() const {
const ::enterprise_management::IntegerPolicyProto* p = proxyservermode_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServerMode)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_proxyservermode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServerMode)
_has_bits_[0] &= ~0x00020000u;
::enterprise_management::IntegerPolicyProto* temp = proxyservermode_;
proxyservermode_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_proxyservermode() {
_has_bits_[0] |= 0x00020000u;
if (proxyservermode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
proxyservermode_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServerMode)
return proxyservermode_;
}
inline void CloudPolicySettings::set_allocated_proxyservermode(::enterprise_management::IntegerPolicyProto* proxyservermode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxyservermode_);
}
if (proxyservermode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxyservermode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxyservermode, submessage_arena);
}
_has_bits_[0] |= 0x00020000u;
} else {
_has_bits_[0] &= ~0x00020000u;
}
proxyservermode_ = proxyservermode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServerMode)
}

// optional .enterprise_management.StringPolicyProto ProxyServer = 25;
inline bool CloudPolicySettings::has_proxyserver() const {
return (_has_bits_[0] & 0x00040000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxyserver() const {
const ::enterprise_management::StringPolicyProto* p = proxyserver_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyServer)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxyserver() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyServer)
_has_bits_[0] &= ~0x00040000u;
::enterprise_management::StringPolicyProto* temp = proxyserver_;
proxyserver_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxyserver() {
_has_bits_[0] |= 0x00040000u;
if (proxyserver_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
proxyserver_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyServer)
return proxyserver_;
}
inline void CloudPolicySettings::set_allocated_proxyserver(::enterprise_management::StringPolicyProto* proxyserver) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxyserver_);
}
if (proxyserver) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxyserver = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxyserver, submessage_arena);
}
_has_bits_[0] |= 0x00040000u;
} else {
_has_bits_[0] &= ~0x00040000u;
}
proxyserver_ = proxyserver;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyServer)
}

// optional .enterprise_management.StringPolicyProto ProxyPacUrl = 26;
inline bool CloudPolicySettings::has_proxypacurl() const {
return (_has_bits_[0] & 0x00080000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxypacurl() const {
const ::enterprise_management::StringPolicyProto* p = proxypacurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyPacUrl)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxypacurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyPacUrl)
_has_bits_[0] &= ~0x00080000u;
::enterprise_management::StringPolicyProto* temp = proxypacurl_;
proxypacurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxypacurl() {
_has_bits_[0] |= 0x00080000u;
if (proxypacurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
proxypacurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyPacUrl)
return proxypacurl_;
}
inline void CloudPolicySettings::set_allocated_proxypacurl(::enterprise_management::StringPolicyProto* proxypacurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxypacurl_);
}
if (proxypacurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxypacurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxypacurl, submessage_arena);
}
_has_bits_[0] |= 0x00080000u;
} else {
_has_bits_[0] &= ~0x00080000u;
}
proxypacurl_ = proxypacurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyPacUrl)
}

// optional .enterprise_management.StringPolicyProto ProxyBypassList = 27;
inline bool CloudPolicySettings::has_proxybypasslist() const {
return (_has_bits_[0] & 0x00100000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxybypasslist() const {
const ::enterprise_management::StringPolicyProto* p = proxybypasslist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxyBypassList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxybypasslist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxyBypassList)
_has_bits_[0] &= ~0x00100000u;
::enterprise_management::StringPolicyProto* temp = proxybypasslist_;
proxybypasslist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxybypasslist() {
_has_bits_[0] |= 0x00100000u;
if (proxybypasslist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
proxybypasslist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxyBypassList)
return proxybypasslist_;
}
inline void CloudPolicySettings::set_allocated_proxybypasslist(::enterprise_management::StringPolicyProto* proxybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxybypasslist_);
}
if (proxybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxybypasslist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxybypasslist, submessage_arena);
}
_has_bits_[0] |= 0x00100000u;
} else {
_has_bits_[0] &= ~0x00100000u;
}
proxybypasslist_ = proxybypasslist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxyBypassList)
}

// optional .enterprise_management.StringPolicyProto ProxySettings = 118;
inline bool CloudPolicySettings::has_proxysettings() const {
return (_has_bits_[2] & 0x01000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::proxysettings() const {
const ::enterprise_management::StringPolicyProto* p = proxysettings_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ProxySettings)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_proxysettings() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ProxySettings)
_has_bits_[2] &= ~0x01000000u;
::enterprise_management::StringPolicyProto* temp = proxysettings_;
proxysettings_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_proxysettings() {
_has_bits_[2] |= 0x01000000u;
if (proxysettings_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
proxysettings_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ProxySettings)
return proxysettings_;
}
inline void CloudPolicySettings::set_allocated_proxysettings(::enterprise_management::StringPolicyProto* proxysettings) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(proxysettings_);
}
if (proxysettings) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
proxysettings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, proxysettings, submessage_arena);
}
_has_bits_[2] |= 0x01000000u;
} else {
_has_bits_[2] &= ~0x01000000u;
}
proxysettings_ = proxysettings;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ProxySettings)
}

// optional .enterprise_management.StringPolicyProto AuthSchemes = 28;
inline bool CloudPolicySettings::has_authschemes() const {
return (_has_bits_[0] & 0x00200000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authschemes() const {
const ::enterprise_management::StringPolicyProto* p = authschemes_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthSchemes)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authschemes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthSchemes)
_has_bits_[0] &= ~0x00200000u;
::enterprise_management::StringPolicyProto* temp = authschemes_;
authschemes_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authschemes() {
_has_bits_[0] |= 0x00200000u;
if (authschemes_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
authschemes_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthSchemes)
return authschemes_;
}
inline void CloudPolicySettings::set_allocated_authschemes(::enterprise_management::StringPolicyProto* authschemes) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authschemes_);
}
if (authschemes) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
authschemes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authschemes, submessage_arena);
}
_has_bits_[0] |= 0x00200000u;
} else {
_has_bits_[0] &= ~0x00200000u;
}
authschemes_ = authschemes;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthSchemes)
}

// optional .enterprise_management.BooleanPolicyProto DisableAuthNegotiateCnameLookup = 29;
inline bool CloudPolicySettings::has_disableauthnegotiatecnamelookup() const {
return (_has_bits_[0] & 0x00400000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disableauthnegotiatecnamelookup() const {
const ::enterprise_management::BooleanPolicyProto* p = disableauthnegotiatecnamelookup_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disableauthnegotiatecnamelookup() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
_has_bits_[0] &= ~0x00400000u;
::enterprise_management::BooleanPolicyProto* temp = disableauthnegotiatecnamelookup_;
disableauthnegotiatecnamelookup_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disableauthnegotiatecnamelookup() {
_has_bits_[0] |= 0x00400000u;
if (disableauthnegotiatecnamelookup_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
disableauthnegotiatecnamelookup_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
return disableauthnegotiatecnamelookup_;
}
inline void CloudPolicySettings::set_allocated_disableauthnegotiatecnamelookup(::enterprise_management::BooleanPolicyProto* disableauthnegotiatecnamelookup) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disableauthnegotiatecnamelookup_);
}
if (disableauthnegotiatecnamelookup) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
disableauthnegotiatecnamelookup = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disableauthnegotiatecnamelookup, submessage_arena);
}
_has_bits_[0] |= 0x00400000u;
} else {
_has_bits_[0] &= ~0x00400000u;
}
disableauthnegotiatecnamelookup_ = disableauthnegotiatecnamelookup;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableAuthNegotiateCnameLookup)
}

// optional .enterprise_management.BooleanPolicyProto EnableAuthNegotiatePort = 30;
inline bool CloudPolicySettings::has_enableauthnegotiateport() const {
return (_has_bits_[0] & 0x00800000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enableauthnegotiateport() const {
const ::enterprise_management::BooleanPolicyProto* p = enableauthnegotiateport_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enableauthnegotiateport() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
_has_bits_[0] &= ~0x00800000u;
::enterprise_management::BooleanPolicyProto* temp = enableauthnegotiateport_;
enableauthnegotiateport_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enableauthnegotiateport() {
_has_bits_[0] |= 0x00800000u;
if (enableauthnegotiateport_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
enableauthnegotiateport_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
return enableauthnegotiateport_;
}
inline void CloudPolicySettings::set_allocated_enableauthnegotiateport(::enterprise_management::BooleanPolicyProto* enableauthnegotiateport) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enableauthnegotiateport_);
}
if (enableauthnegotiateport) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
enableauthnegotiateport = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enableauthnegotiateport, submessage_arena);
}
_has_bits_[0] |= 0x00800000u;
} else {
_has_bits_[0] &= ~0x00800000u;
}
enableauthnegotiateport_ = enableauthnegotiateport;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableAuthNegotiatePort)
}

// optional .enterprise_management.StringPolicyProto AuthServerWhitelist = 31;
inline bool CloudPolicySettings::has_authserverwhitelist() const {
return (_has_bits_[0] & 0x01000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authserverwhitelist() const {
const ::enterprise_management::StringPolicyProto* p = authserverwhitelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authserverwhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
_has_bits_[0] &= ~0x01000000u;
::enterprise_management::StringPolicyProto* temp = authserverwhitelist_;
authserverwhitelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authserverwhitelist() {
_has_bits_[0] |= 0x01000000u;
if (authserverwhitelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
authserverwhitelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
return authserverwhitelist_;
}
inline void CloudPolicySettings::set_allocated_authserverwhitelist(::enterprise_management::StringPolicyProto* authserverwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authserverwhitelist_);
}
if (authserverwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
authserverwhitelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authserverwhitelist, submessage_arena);
}
_has_bits_[0] |= 0x01000000u;
} else {
_has_bits_[0] &= ~0x01000000u;
}
authserverwhitelist_ = authserverwhitelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthServerWhitelist)
}

// optional .enterprise_management.StringPolicyProto AuthNegotiateDelegateWhitelist = 32;
inline bool CloudPolicySettings::has_authnegotiatedelegatewhitelist() const {
return (_has_bits_[0] & 0x02000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::authnegotiatedelegatewhitelist() const {
const ::enterprise_management::StringPolicyProto* p = authnegotiatedelegatewhitelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_authnegotiatedelegatewhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
_has_bits_[0] &= ~0x02000000u;
::enterprise_management::StringPolicyProto* temp = authnegotiatedelegatewhitelist_;
authnegotiatedelegatewhitelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_authnegotiatedelegatewhitelist() {
_has_bits_[0] |= 0x02000000u;
if (authnegotiatedelegatewhitelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
authnegotiatedelegatewhitelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
return authnegotiatedelegatewhitelist_;
}
inline void CloudPolicySettings::set_allocated_authnegotiatedelegatewhitelist(::enterprise_management::StringPolicyProto* authnegotiatedelegatewhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authnegotiatedelegatewhitelist_);
}
if (authnegotiatedelegatewhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
authnegotiatedelegatewhitelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authnegotiatedelegatewhitelist, submessage_arena);
}
_has_bits_[0] |= 0x02000000u;
} else {
_has_bits_[0] &= ~0x02000000u;
}
authnegotiatedelegatewhitelist_ = authnegotiatedelegatewhitelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateWhitelist)
}

// optional .enterprise_management.BooleanPolicyProto AuthNegotiateDelegateByKdcPolicy = 530;
inline bool CloudPolicySettings::has_authnegotiatedelegatebykdcpolicy() const {
return (_has_bits_[7] & 0x00000040u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::authnegotiatedelegatebykdcpolicy() const {
const ::enterprise_management::BooleanPolicyProto* p = authnegotiatedelegatebykdcpolicy_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateByKdcPolicy)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_authnegotiatedelegatebykdcpolicy() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateByKdcPolicy)
_has_bits_[7] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = authnegotiatedelegatebykdcpolicy_;
authnegotiatedelegatebykdcpolicy_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_authnegotiatedelegatebykdcpolicy() {
_has_bits_[7] |= 0x00000040u;
if (authnegotiatedelegatebykdcpolicy_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
authnegotiatedelegatebykdcpolicy_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateByKdcPolicy)
return authnegotiatedelegatebykdcpolicy_;
}
inline void CloudPolicySettings::set_allocated_authnegotiatedelegatebykdcpolicy(::enterprise_management::BooleanPolicyProto* authnegotiatedelegatebykdcpolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(authnegotiatedelegatebykdcpolicy_);
}
if (authnegotiatedelegatebykdcpolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
authnegotiatedelegatebykdcpolicy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, authnegotiatedelegatebykdcpolicy, submessage_arena);
}
_has_bits_[7] |= 0x00000040u;
} else {
_has_bits_[7] &= ~0x00000040u;
}
authnegotiatedelegatebykdcpolicy_ = authnegotiatedelegatebykdcpolicy;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AuthNegotiateDelegateByKdcPolicy)
}

// optional .enterprise_management.StringPolicyProto GSSAPILibraryName = 33;
inline bool CloudPolicySettings::has_gssapilibraryname() const {
return (_has_bits_[0] & 0x04000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::gssapilibraryname() const {
const ::enterprise_management::StringPolicyProto* p = gssapilibraryname_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_gssapilibraryname() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
_has_bits_[0] &= ~0x04000000u;
::enterprise_management::StringPolicyProto* temp = gssapilibraryname_;
gssapilibraryname_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_gssapilibraryname() {
_has_bits_[0] |= 0x04000000u;
if (gssapilibraryname_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
gssapilibraryname_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
return gssapilibraryname_;
}
inline void CloudPolicySettings::set_allocated_gssapilibraryname(::enterprise_management::StringPolicyProto* gssapilibraryname) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(gssapilibraryname_);
}
if (gssapilibraryname) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
gssapilibraryname = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, gssapilibraryname, submessage_arena);
}
_has_bits_[0] |= 0x04000000u;
} else {
_has_bits_[0] &= ~0x04000000u;
}
gssapilibraryname_ = gssapilibraryname;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.GSSAPILibraryName)
}

// optional .enterprise_management.BooleanPolicyProto AllowCrossOriginAuthPrompt = 91;
inline bool CloudPolicySettings::has_allowcrossoriginauthprompt() const {
return (_has_bits_[2] & 0x00000100u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowcrossoriginauthprompt() const {
const ::enterprise_management::BooleanPolicyProto* p = allowcrossoriginauthprompt_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowcrossoriginauthprompt() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
_has_bits_[2] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = allowcrossoriginauthprompt_;
allowcrossoriginauthprompt_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowcrossoriginauthprompt() {
_has_bits_[2] |= 0x00000100u;
if (allowcrossoriginauthprompt_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
allowcrossoriginauthprompt_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
return allowcrossoriginauthprompt_;
}
inline void CloudPolicySettings::set_allocated_allowcrossoriginauthprompt(::enterprise_management::BooleanPolicyProto* allowcrossoriginauthprompt) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowcrossoriginauthprompt_);
}
if (allowcrossoriginauthprompt) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allowcrossoriginauthprompt = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allowcrossoriginauthprompt, submessage_arena);
}
_has_bits_[2] |= 0x00000100u;
} else {
_has_bits_[2] &= ~0x00000100u;
}
allowcrossoriginauthprompt_ = allowcrossoriginauthprompt;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowCrossOriginAuthPrompt)
}

// optional .enterprise_management.BooleanPolicyProto NtlmV2Enabled = 395;
inline bool CloudPolicySettings::has_ntlmv2enabled() const {
return (_has_bits_[5] & 0x00004000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::ntlmv2enabled() const {
const ::enterprise_management::BooleanPolicyProto* p = ntlmv2enabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_ntlmv2enabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
_has_bits_[5] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = ntlmv2enabled_;
ntlmv2enabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_ntlmv2enabled() {
_has_bits_[5] |= 0x00004000u;
if (ntlmv2enabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
ntlmv2enabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
return ntlmv2enabled_;
}
inline void CloudPolicySettings::set_allocated_ntlmv2enabled(::enterprise_management::BooleanPolicyProto* ntlmv2enabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ntlmv2enabled_);
}
if (ntlmv2enabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
ntlmv2enabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, ntlmv2enabled, submessage_arena);
}
_has_bits_[5] |= 0x00004000u;
} else {
_has_bits_[5] &= ~0x00004000u;
}
ntlmv2enabled_ = ntlmv2enabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NtlmV2Enabled)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallBlacklist = 34;
inline bool CloudPolicySettings::has_extensioninstallblacklist() const {
return (_has_bits_[0] & 0x08000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallblacklist() const {
const ::enterprise_management::StringListPolicyProto* p = extensioninstallblacklist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallblacklist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
_has_bits_[0] &= ~0x08000000u;
::enterprise_management::StringListPolicyProto* temp = extensioninstallblacklist_;
extensioninstallblacklist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallblacklist() {
_has_bits_[0] |= 0x08000000u;
if (extensioninstallblacklist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
extensioninstallblacklist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
return extensioninstallblacklist_;
}
inline void CloudPolicySettings::set_allocated_extensioninstallblacklist(::enterprise_management::StringListPolicyProto* extensioninstallblacklist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extensioninstallblacklist_);
}
if (extensioninstallblacklist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
extensioninstallblacklist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, extensioninstallblacklist, submessage_arena);
}
_has_bits_[0] |= 0x08000000u;
} else {
_has_bits_[0] &= ~0x08000000u;
}
extensioninstallblacklist_ = extensioninstallblacklist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallBlacklist)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallWhitelist = 35;
inline bool CloudPolicySettings::has_extensioninstallwhitelist() const {
return (_has_bits_[0] & 0x10000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallwhitelist() const {
const ::enterprise_management::StringListPolicyProto* p = extensioninstallwhitelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallwhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
_has_bits_[0] &= ~0x10000000u;
::enterprise_management::StringListPolicyProto* temp = extensioninstallwhitelist_;
extensioninstallwhitelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallwhitelist() {
_has_bits_[0] |= 0x10000000u;
if (extensioninstallwhitelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
extensioninstallwhitelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
return extensioninstallwhitelist_;
}
inline void CloudPolicySettings::set_allocated_extensioninstallwhitelist(::enterprise_management::StringListPolicyProto* extensioninstallwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extensioninstallwhitelist_);
}
if (extensioninstallwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
extensioninstallwhitelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, extensioninstallwhitelist, submessage_arena);
}
_has_bits_[0] |= 0x10000000u;
} else {
_has_bits_[0] &= ~0x10000000u;
}
extensioninstallwhitelist_ = extensioninstallwhitelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallWhitelist)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallForcelist = 36;
inline bool CloudPolicySettings::has_extensioninstallforcelist() const {
return (_has_bits_[0] & 0x20000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallforcelist() const {
const ::enterprise_management::StringListPolicyProto* p = extensioninstallforcelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallforcelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
_has_bits_[0] &= ~0x20000000u;
::enterprise_management::StringListPolicyProto* temp = extensioninstallforcelist_;
extensioninstallforcelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallforcelist() {
_has_bits_[0] |= 0x20000000u;
if (extensioninstallforcelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
extensioninstallforcelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
return extensioninstallforcelist_;
}
inline void CloudPolicySettings::set_allocated_extensioninstallforcelist(::enterprise_management::StringListPolicyProto* extensioninstallforcelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extensioninstallforcelist_);
}
if (extensioninstallforcelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
extensioninstallforcelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, extensioninstallforcelist, submessage_arena);
}
_has_bits_[0] |= 0x20000000u;
} else {
_has_bits_[0] &= ~0x20000000u;
}
extensioninstallforcelist_ = extensioninstallforcelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallForcelist)
}

// optional .enterprise_management.StringListPolicyProto ExtensionInstallSources = 150;
inline bool CloudPolicySettings::has_extensioninstallsources() const {
return (_has_bits_[2] & 0x20000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensioninstallsources() const {
const ::enterprise_management::StringListPolicyProto* p = extensioninstallsources_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensioninstallsources() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
_has_bits_[2] &= ~0x20000000u;
::enterprise_management::StringListPolicyProto* temp = extensioninstallsources_;
extensioninstallsources_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensioninstallsources() {
_has_bits_[2] |= 0x20000000u;
if (extensioninstallsources_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
extensioninstallsources_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
return extensioninstallsources_;
}
inline void CloudPolicySettings::set_allocated_extensioninstallsources(::enterprise_management::StringListPolicyProto* extensioninstallsources) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extensioninstallsources_);
}
if (extensioninstallsources) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
extensioninstallsources = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, extensioninstallsources, submessage_arena);
}
_has_bits_[2] |= 0x20000000u;
} else {
_has_bits_[2] &= ~0x20000000u;
}
extensioninstallsources_ = extensioninstallsources;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallSources)
}

// optional .enterprise_management.StringListPolicyProto ExtensionAllowedTypes = 170;
inline bool CloudPolicySettings::has_extensionallowedtypes() const {
return (_has_bits_[3] & 0x00000200u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::extensionallowedtypes() const {
const ::enterprise_management::StringListPolicyProto* p = extensionallowedtypes_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_extensionallowedtypes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
_has_bits_[3] &= ~0x00000200u;
::enterprise_management::StringListPolicyProto* temp = extensionallowedtypes_;
extensionallowedtypes_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_extensionallowedtypes() {
_has_bits_[3] |= 0x00000200u;
if (extensionallowedtypes_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
extensionallowedtypes_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
return extensionallowedtypes_;
}
inline void CloudPolicySettings::set_allocated_extensionallowedtypes(::enterprise_management::StringListPolicyProto* extensionallowedtypes) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extensionallowedtypes_);
}
if (extensionallowedtypes) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
extensionallowedtypes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, extensionallowedtypes, submessage_arena);
}
_has_bits_[3] |= 0x00000200u;
} else {
_has_bits_[3] &= ~0x00000200u;
}
extensionallowedtypes_ = extensionallowedtypes;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionAllowedTypes)
}

// optional .enterprise_management.StringPolicyProto ExtensionSettings = 280;
inline bool CloudPolicySettings::has_extensionsettings() const {
return (_has_bits_[4] & 0x00001000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::extensionsettings() const {
const ::enterprise_management::StringPolicyProto* p = extensionsettings_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionSettings)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_extensionsettings() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionSettings)
_has_bits_[4] &= ~0x00001000u;
::enterprise_management::StringPolicyProto* temp = extensionsettings_;
extensionsettings_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_extensionsettings() {
_has_bits_[4] |= 0x00001000u;
if (extensionsettings_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
extensionsettings_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionSettings)
return extensionsettings_;
}
inline void CloudPolicySettings::set_allocated_extensionsettings(::enterprise_management::StringPolicyProto* extensionsettings) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extensionsettings_);
}
if (extensionsettings) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
extensionsettings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, extensionsettings, submessage_arena);
}
_has_bits_[4] |= 0x00001000u;
} else {
_has_bits_[4] &= ~0x00001000u;
}
extensionsettings_ = extensionsettings;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionSettings)
}

// optional .enterprise_management.BooleanPolicyProto ExtensionInstallListsMergeEnabled = 546;
inline bool CloudPolicySettings::has_extensioninstalllistsmergeenabled() const {
return (_has_bits_[7] & 0x00000800u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::extensioninstalllistsmergeenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = extensioninstalllistsmergeenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExtensionInstallListsMergeEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_extensioninstalllistsmergeenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExtensionInstallListsMergeEnabled)
_has_bits_[7] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = extensioninstalllistsmergeenabled_;
extensioninstalllistsmergeenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_extensioninstalllistsmergeenabled() {
_has_bits_[7] |= 0x00000800u;
if (extensioninstalllistsmergeenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
extensioninstalllistsmergeenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExtensionInstallListsMergeEnabled)
return extensioninstalllistsmergeenabled_;
}
inline void CloudPolicySettings::set_allocated_extensioninstalllistsmergeenabled(::enterprise_management::BooleanPolicyProto* extensioninstalllistsmergeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(extensioninstalllistsmergeenabled_);
}
if (extensioninstalllistsmergeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
extensioninstalllistsmergeenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, extensioninstalllistsmergeenabled, submessage_arena);
}
_has_bits_[7] |= 0x00000800u;
} else {
_has_bits_[7] &= ~0x00000800u;
}
extensioninstalllistsmergeenabled_ = extensioninstalllistsmergeenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExtensionInstallListsMergeEnabled)
}

// optional .enterprise_management.BooleanPolicyProto BlockExternalExtensions = 639;
inline bool CloudPolicySettings::has_blockexternalextensions() const {
return (_has_bits_[8] & 0x00004000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::blockexternalextensions() const {
const ::enterprise_management::BooleanPolicyProto* p = blockexternalextensions_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BlockExternalExtensions)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_blockexternalextensions() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BlockExternalExtensions)
_has_bits_[8] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = blockexternalextensions_;
blockexternalextensions_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_blockexternalextensions() {
_has_bits_[8] |= 0x00004000u;
if (blockexternalextensions_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
blockexternalextensions_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BlockExternalExtensions)
return blockexternalextensions_;
}
inline void CloudPolicySettings::set_allocated_blockexternalextensions(::enterprise_management::BooleanPolicyProto* blockexternalextensions) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blockexternalextensions_);
}
if (blockexternalextensions) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
blockexternalextensions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, blockexternalextensions, submessage_arena);
}
_has_bits_[8] |= 0x00004000u;
} else {
_has_bits_[8] &= ~0x00004000u;
}
blockexternalextensions_ = blockexternalextensions;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BlockExternalExtensions)
}

// optional .enterprise_management.BooleanPolicyProto ShowHomeButton = 37;
inline bool CloudPolicySettings::has_showhomebutton() const {
return (_has_bits_[0] & 0x40000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::showhomebutton() const {
const ::enterprise_management::BooleanPolicyProto* p = showhomebutton_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ShowHomeButton)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_showhomebutton() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ShowHomeButton)
_has_bits_[0] &= ~0x40000000u;
::enterprise_management::BooleanPolicyProto* temp = showhomebutton_;
showhomebutton_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_showhomebutton() {
_has_bits_[0] |= 0x40000000u;
if (showhomebutton_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
showhomebutton_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ShowHomeButton)
return showhomebutton_;
}
inline void CloudPolicySettings::set_allocated_showhomebutton(::enterprise_management::BooleanPolicyProto* showhomebutton) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(showhomebutton_);
}
if (showhomebutton) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
showhomebutton = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, showhomebutton, submessage_arena);
}
_has_bits_[0] |= 0x40000000u;
} else {
_has_bits_[0] &= ~0x40000000u;
}
showhomebutton_ = showhomebutton;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ShowHomeButton)
}

// optional .enterprise_management.BooleanPolicyProto DeveloperToolsDisabled = 38;
inline bool CloudPolicySettings::has_developertoolsdisabled() const {
return (_has_bits_[0] & 0x80000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::developertoolsdisabled() const {
const ::enterprise_management::BooleanPolicyProto* p = developertoolsdisabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_developertoolsdisabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
_has_bits_[0] &= ~0x80000000u;
::enterprise_management::BooleanPolicyProto* temp = developertoolsdisabled_;
developertoolsdisabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_developertoolsdisabled() {
_has_bits_[0] |= 0x80000000u;
if (developertoolsdisabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
developertoolsdisabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
return developertoolsdisabled_;
}
inline void CloudPolicySettings::set_allocated_developertoolsdisabled(::enterprise_management::BooleanPolicyProto* developertoolsdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(developertoolsdisabled_);
}
if (developertoolsdisabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
developertoolsdisabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, developertoolsdisabled, submessage_arena);
}
_has_bits_[0] |= 0x80000000u;
} else {
_has_bits_[0] &= ~0x80000000u;
}
developertoolsdisabled_ = developertoolsdisabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DeveloperToolsDisabled)
}

// optional .enterprise_management.IntegerPolicyProto DeveloperToolsAvailability = 445;
inline bool CloudPolicySettings::has_developertoolsavailability() const {
return (_has_bits_[6] & 0x00000100u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::developertoolsavailability() const {
const ::enterprise_management::IntegerPolicyProto* p = developertoolsavailability_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_developertoolsavailability() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
_has_bits_[6] &= ~0x00000100u;
::enterprise_management::IntegerPolicyProto* temp = developertoolsavailability_;
developertoolsavailability_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_developertoolsavailability() {
_has_bits_[6] |= 0x00000100u;
if (developertoolsavailability_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
developertoolsavailability_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
return developertoolsavailability_;
}
inline void CloudPolicySettings::set_allocated_developertoolsavailability(::enterprise_management::IntegerPolicyProto* developertoolsavailability) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(developertoolsavailability_);
}
if (developertoolsavailability) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
developertoolsavailability = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, developertoolsavailability, submessage_arena);
}
_has_bits_[6] |= 0x00000100u;
} else {
_has_bits_[6] &= ~0x00000100u;
}
developertoolsavailability_ = developertoolsavailability;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DeveloperToolsAvailability)
}

// optional .enterprise_management.IntegerPolicyProto RestoreOnStartup = 39;
inline bool CloudPolicySettings::has_restoreonstartup() const {
return (_has_bits_[1] & 0x00000001u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::restoreonstartup() const {
const ::enterprise_management::IntegerPolicyProto* p = restoreonstartup_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestoreOnStartup)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_restoreonstartup() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestoreOnStartup)
_has_bits_[1] &= ~0x00000001u;
::enterprise_management::IntegerPolicyProto* temp = restoreonstartup_;
restoreonstartup_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_restoreonstartup() {
_has_bits_[1] |= 0x00000001u;
if (restoreonstartup_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
restoreonstartup_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestoreOnStartup)
return restoreonstartup_;
}
inline void CloudPolicySettings::set_allocated_restoreonstartup(::enterprise_management::IntegerPolicyProto* restoreonstartup) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(restoreonstartup_);
}
if (restoreonstartup) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
restoreonstartup = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, restoreonstartup, submessage_arena);
}
_has_bits_[1] |= 0x00000001u;
} else {
_has_bits_[1] &= ~0x00000001u;
}
restoreonstartup_ = restoreonstartup;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestoreOnStartup)
}

// optional .enterprise_management.StringListPolicyProto RestoreOnStartupURLs = 40;
inline bool CloudPolicySettings::has_restoreonstartupurls() const {
return (_has_bits_[1] & 0x00000002u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::restoreonstartupurls() const {
const ::enterprise_management::StringListPolicyProto* p = restoreonstartupurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_restoreonstartupurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
_has_bits_[1] &= ~0x00000002u;
::enterprise_management::StringListPolicyProto* temp = restoreonstartupurls_;
restoreonstartupurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_restoreonstartupurls() {
_has_bits_[1] |= 0x00000002u;
if (restoreonstartupurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
restoreonstartupurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
return restoreonstartupurls_;
}
inline void CloudPolicySettings::set_allocated_restoreonstartupurls(::enterprise_management::StringListPolicyProto* restoreonstartupurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(restoreonstartupurls_);
}
if (restoreonstartupurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
restoreonstartupurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, restoreonstartupurls, submessage_arena);
}
_has_bits_[1] |= 0x00000002u;
} else {
_has_bits_[1] &= ~0x00000002u;
}
restoreonstartupurls_ = restoreonstartupurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestoreOnStartupURLs)
}

// optional .enterprise_management.BooleanPolicyProto BlockThirdPartyCookies = 41;
inline bool CloudPolicySettings::has_blockthirdpartycookies() const {
return (_has_bits_[1] & 0x00000004u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::blockthirdpartycookies() const {
const ::enterprise_management::BooleanPolicyProto* p = blockthirdpartycookies_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_blockthirdpartycookies() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
_has_bits_[1] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = blockthirdpartycookies_;
blockthirdpartycookies_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_blockthirdpartycookies() {
_has_bits_[1] |= 0x00000004u;
if (blockthirdpartycookies_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
blockthirdpartycookies_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
return blockthirdpartycookies_;
}
inline void CloudPolicySettings::set_allocated_blockthirdpartycookies(::enterprise_management::BooleanPolicyProto* blockthirdpartycookies) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blockthirdpartycookies_);
}
if (blockthirdpartycookies) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
blockthirdpartycookies = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, blockthirdpartycookies, submessage_arena);
}
_has_bits_[1] |= 0x00000004u;
} else {
_has_bits_[1] &= ~0x00000004u;
}
blockthirdpartycookies_ = blockthirdpartycookies;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BlockThirdPartyCookies)
}

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderEnabled = 42;
inline bool CloudPolicySettings::has_defaultsearchproviderenabled() const {
return (_has_bits_[1] & 0x00000008u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::defaultsearchproviderenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = defaultsearchproviderenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_defaultsearchproviderenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
_has_bits_[1] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = defaultsearchproviderenabled_;
defaultsearchproviderenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderenabled() {
_has_bits_[1] |= 0x00000008u;
if (defaultsearchproviderenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
defaultsearchproviderenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
return defaultsearchproviderenabled_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderenabled(::enterprise_management::BooleanPolicyProto* defaultsearchproviderenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderenabled_);
}
if (defaultsearchproviderenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchproviderenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderenabled, submessage_arena);
}
_has_bits_[1] |= 0x00000008u;
} else {
_has_bits_[1] &= ~0x00000008u;
}
defaultsearchproviderenabled_ = defaultsearchproviderenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEnabled)
}

// optional .enterprise_management.BooleanPolicyProto DefaultSearchProviderContextMenuAccessAllowed = 717;
inline bool CloudPolicySettings::has_defaultsearchprovidercontextmenuaccessallowed() const {
return (_has_bits_[9] & 0x00008000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::defaultsearchprovidercontextmenuaccessallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = defaultsearchprovidercontextmenuaccessallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderContextMenuAccessAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_defaultsearchprovidercontextmenuaccessallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderContextMenuAccessAllowed)
_has_bits_[9] &= ~0x00008000u;
::enterprise_management::BooleanPolicyProto* temp = defaultsearchprovidercontextmenuaccessallowed_;
defaultsearchprovidercontextmenuaccessallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidercontextmenuaccessallowed() {
_has_bits_[9] |= 0x00008000u;
if (defaultsearchprovidercontextmenuaccessallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidercontextmenuaccessallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderContextMenuAccessAllowed)
return defaultsearchprovidercontextmenuaccessallowed_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidercontextmenuaccessallowed(::enterprise_management::BooleanPolicyProto* defaultsearchprovidercontextmenuaccessallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidercontextmenuaccessallowed_);
}
if (defaultsearchprovidercontextmenuaccessallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidercontextmenuaccessallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidercontextmenuaccessallowed, submessage_arena);
}
_has_bits_[9] |= 0x00008000u;
} else {
_has_bits_[9] &= ~0x00008000u;
}
defaultsearchprovidercontextmenuaccessallowed_ = defaultsearchprovidercontextmenuaccessallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderContextMenuAccessAllowed)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderName = 43;
inline bool CloudPolicySettings::has_defaultsearchprovidername() const {
return (_has_bits_[1] & 0x00000010u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidername() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidername_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidername() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
_has_bits_[1] &= ~0x00000010u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidername_;
defaultsearchprovidername_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidername() {
_has_bits_[1] |= 0x00000010u;
if (defaultsearchprovidername_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidername_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
return defaultsearchprovidername_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidername(::enterprise_management::StringPolicyProto* defaultsearchprovidername) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidername_);
}
if (defaultsearchprovidername) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidername = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidername, submessage_arena);
}
_has_bits_[1] |= 0x00000010u;
} else {
_has_bits_[1] &= ~0x00000010u;
}
defaultsearchprovidername_ = defaultsearchprovidername;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderName)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderKeyword = 44;
inline bool CloudPolicySettings::has_defaultsearchproviderkeyword() const {
return (_has_bits_[1] & 0x00000020u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderkeyword() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchproviderkeyword_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderkeyword() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
_has_bits_[1] &= ~0x00000020u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderkeyword_;
defaultsearchproviderkeyword_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderkeyword() {
_has_bits_[1] |= 0x00000020u;
if (defaultsearchproviderkeyword_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchproviderkeyword_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
return defaultsearchproviderkeyword_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderkeyword(::enterprise_management::StringPolicyProto* defaultsearchproviderkeyword) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderkeyword_);
}
if (defaultsearchproviderkeyword) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchproviderkeyword = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderkeyword, submessage_arena);
}
_has_bits_[1] |= 0x00000020u;
} else {
_has_bits_[1] &= ~0x00000020u;
}
defaultsearchproviderkeyword_ = defaultsearchproviderkeyword;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderKeyword)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURL = 45;
inline bool CloudPolicySettings::has_defaultsearchprovidersearchurl() const {
return (_has_bits_[1] & 0x00000040u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersearchurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
_has_bits_[1] &= ~0x00000040u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurl_;
defaultsearchprovidersearchurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurl() {
_has_bits_[1] |= 0x00000040u;
if (defaultsearchprovidersearchurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidersearchurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
return defaultsearchprovidersearchurl_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurl(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersearchurl_);
}
if (defaultsearchprovidersearchurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidersearchurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersearchurl, submessage_arena);
}
_has_bits_[1] |= 0x00000040u;
} else {
_has_bits_[1] &= ~0x00000040u;
}
defaultsearchprovidersearchurl_ = defaultsearchprovidersearchurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURL = 46;
inline bool CloudPolicySettings::has_defaultsearchprovidersuggesturl() const {
return (_has_bits_[1] & 0x00000080u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersuggesturl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
_has_bits_[1] &= ~0x00000080u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturl_;
defaultsearchprovidersuggesturl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturl() {
_has_bits_[1] |= 0x00000080u;
if (defaultsearchprovidersuggesturl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidersuggesturl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
return defaultsearchprovidersuggesturl_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturl(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersuggesturl_);
}
if (defaultsearchprovidersuggesturl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidersuggesturl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersuggesturl, submessage_arena);
}
_has_bits_[1] |= 0x00000080u;
} else {
_has_bits_[1] &= ~0x00000080u;
}
defaultsearchprovidersuggesturl_ = defaultsearchprovidersuggesturl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderIconURL = 48;
inline bool CloudPolicySettings::has_defaultsearchprovidericonurl() const {
return (_has_bits_[1] & 0x00000100u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidericonurl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidericonurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidericonurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
_has_bits_[1] &= ~0x00000100u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidericonurl_;
defaultsearchprovidericonurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidericonurl() {
_has_bits_[1] |= 0x00000100u;
if (defaultsearchprovidericonurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidericonurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
return defaultsearchprovidericonurl_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidericonurl(::enterprise_management::StringPolicyProto* defaultsearchprovidericonurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidericonurl_);
}
if (defaultsearchprovidericonurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidericonurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidericonurl, submessage_arena);
}
_has_bits_[1] |= 0x00000100u;
} else {
_has_bits_[1] &= ~0x00000100u;
}
defaultsearchprovidericonurl_ = defaultsearchprovidericonurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderIconURL)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderEncodings = 49;
inline bool CloudPolicySettings::has_defaultsearchproviderencodings() const {
return (_has_bits_[1] & 0x00000200u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchproviderencodings() const {
const ::enterprise_management::StringListPolicyProto* p = defaultsearchproviderencodings_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchproviderencodings() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
_has_bits_[1] &= ~0x00000200u;
::enterprise_management::StringListPolicyProto* temp = defaultsearchproviderencodings_;
defaultsearchproviderencodings_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderencodings() {
_has_bits_[1] |= 0x00000200u;
if (defaultsearchproviderencodings_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
defaultsearchproviderencodings_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
return defaultsearchproviderencodings_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderencodings(::enterprise_management::StringListPolicyProto* defaultsearchproviderencodings) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderencodings_);
}
if (defaultsearchproviderencodings) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchproviderencodings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderencodings, submessage_arena);
}
_has_bits_[1] |= 0x00000200u;
} else {
_has_bits_[1] &= ~0x00000200u;
}
defaultsearchproviderencodings_ = defaultsearchproviderencodings;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderEncodings)
}

// optional .enterprise_management.StringListPolicyProto DefaultSearchProviderAlternateURLs = 163;
inline bool CloudPolicySettings::has_defaultsearchprovideralternateurls() const {
return (_has_bits_[3] & 0x00000020u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::defaultsearchprovideralternateurls() const {
const ::enterprise_management::StringListPolicyProto* p = defaultsearchprovideralternateurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_defaultsearchprovideralternateurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
_has_bits_[3] &= ~0x00000020u;
::enterprise_management::StringListPolicyProto* temp = defaultsearchprovideralternateurls_;
defaultsearchprovideralternateurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_defaultsearchprovideralternateurls() {
_has_bits_[3] |= 0x00000020u;
if (defaultsearchprovideralternateurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
defaultsearchprovideralternateurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
return defaultsearchprovideralternateurls_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovideralternateurls(::enterprise_management::StringListPolicyProto* defaultsearchprovideralternateurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovideralternateurls_);
}
if (defaultsearchprovideralternateurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovideralternateurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovideralternateurls, submessage_arena);
}
_has_bits_[3] |= 0x00000020u;
} else {
_has_bits_[3] &= ~0x00000020u;
}
defaultsearchprovideralternateurls_ = defaultsearchprovideralternateurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderAlternateURLs)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURL = 231;
inline bool CloudPolicySettings::has_defaultsearchproviderimageurl() const {
return (_has_bits_[3] & 0x00200000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchproviderimageurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
_has_bits_[3] &= ~0x00200000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurl_;
defaultsearchproviderimageurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurl() {
_has_bits_[3] |= 0x00200000u;
if (defaultsearchproviderimageurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchproviderimageurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
return defaultsearchproviderimageurl_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderimageurl(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderimageurl_);
}
if (defaultsearchproviderimageurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchproviderimageurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderimageurl, submessage_arena);
}
_has_bits_[3] |= 0x00200000u;
} else {
_has_bits_[3] &= ~0x00200000u;
}
defaultsearchproviderimageurl_ = defaultsearchproviderimageurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderNewTabURL = 239;
inline bool CloudPolicySettings::has_defaultsearchprovidernewtaburl() const {
return (_has_bits_[3] & 0x08000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidernewtaburl() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidernewtaburl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidernewtaburl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
_has_bits_[3] &= ~0x08000000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidernewtaburl_;
defaultsearchprovidernewtaburl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidernewtaburl() {
_has_bits_[3] |= 0x08000000u;
if (defaultsearchprovidernewtaburl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidernewtaburl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
return defaultsearchprovidernewtaburl_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidernewtaburl(::enterprise_management::StringPolicyProto* defaultsearchprovidernewtaburl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidernewtaburl_);
}
if (defaultsearchprovidernewtaburl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidernewtaburl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidernewtaburl, submessage_arena);
}
_has_bits_[3] |= 0x08000000u;
} else {
_has_bits_[3] &= ~0x08000000u;
}
defaultsearchprovidernewtaburl_ = defaultsearchprovidernewtaburl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderNewTabURL)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSearchURLPostParams = 232;
inline bool CloudPolicySettings::has_defaultsearchprovidersearchurlpostparams() const {
return (_has_bits_[3] & 0x00400000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersearchurlpostparams() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersearchurlpostparams_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersearchurlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
_has_bits_[3] &= ~0x00400000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersearchurlpostparams_;
defaultsearchprovidersearchurlpostparams_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersearchurlpostparams() {
_has_bits_[3] |= 0x00400000u;
if (defaultsearchprovidersearchurlpostparams_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidersearchurlpostparams_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
return defaultsearchprovidersearchurlpostparams_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersearchurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersearchurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersearchurlpostparams_);
}
if (defaultsearchprovidersearchurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidersearchurlpostparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersearchurlpostparams, submessage_arena);
}
_has_bits_[3] |= 0x00400000u;
} else {
_has_bits_[3] &= ~0x00400000u;
}
defaultsearchprovidersearchurlpostparams_ = defaultsearchprovidersearchurlpostparams;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSearchURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderSuggestURLPostParams = 233;
inline bool CloudPolicySettings::has_defaultsearchprovidersuggesturlpostparams() const {
return (_has_bits_[3] & 0x00800000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchprovidersuggesturlpostparams() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchprovidersuggesturlpostparams_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchprovidersuggesturlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
_has_bits_[3] &= ~0x00800000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchprovidersuggesturlpostparams_;
defaultsearchprovidersuggesturlpostparams_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchprovidersuggesturlpostparams() {
_has_bits_[3] |= 0x00800000u;
if (defaultsearchprovidersuggesturlpostparams_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchprovidersuggesturlpostparams_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
return defaultsearchprovidersuggesturlpostparams_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchprovidersuggesturlpostparams(::enterprise_management::StringPolicyProto* defaultsearchprovidersuggesturlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchprovidersuggesturlpostparams_);
}
if (defaultsearchprovidersuggesturlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchprovidersuggesturlpostparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchprovidersuggesturlpostparams, submessage_arena);
}
_has_bits_[3] |= 0x00800000u;
} else {
_has_bits_[3] &= ~0x00800000u;
}
defaultsearchprovidersuggesturlpostparams_ = defaultsearchprovidersuggesturlpostparams;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderSuggestURLPostParams)
}

// optional .enterprise_management.StringPolicyProto DefaultSearchProviderImageURLPostParams = 235;
inline bool CloudPolicySettings::has_defaultsearchproviderimageurlpostparams() const {
return (_has_bits_[3] & 0x01000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultsearchproviderimageurlpostparams() const {
const ::enterprise_management::StringPolicyProto* p = defaultsearchproviderimageurlpostparams_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultsearchproviderimageurlpostparams() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
_has_bits_[3] &= ~0x01000000u;
::enterprise_management::StringPolicyProto* temp = defaultsearchproviderimageurlpostparams_;
defaultsearchproviderimageurlpostparams_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultsearchproviderimageurlpostparams() {
_has_bits_[3] |= 0x01000000u;
if (defaultsearchproviderimageurlpostparams_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultsearchproviderimageurlpostparams_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
return defaultsearchproviderimageurlpostparams_;
}
inline void CloudPolicySettings::set_allocated_defaultsearchproviderimageurlpostparams(::enterprise_management::StringPolicyProto* defaultsearchproviderimageurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultsearchproviderimageurlpostparams_);
}
if (defaultsearchproviderimageurlpostparams) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultsearchproviderimageurlpostparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultsearchproviderimageurlpostparams, submessage_arena);
}
_has_bits_[3] |= 0x01000000u;
} else {
_has_bits_[3] &= ~0x01000000u;
}
defaultsearchproviderimageurlpostparams_ = defaultsearchproviderimageurlpostparams;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultSearchProviderImageURLPostParams)
}

// optional .enterprise_management.IntegerPolicyProto DefaultCookiesSetting = 50;
inline bool CloudPolicySettings::has_defaultcookiessetting() const {
return (_has_bits_[1] & 0x00000400u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultcookiessetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultcookiessetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultcookiessetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
_has_bits_[1] &= ~0x00000400u;
::enterprise_management::IntegerPolicyProto* temp = defaultcookiessetting_;
defaultcookiessetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultcookiessetting() {
_has_bits_[1] |= 0x00000400u;
if (defaultcookiessetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultcookiessetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
return defaultcookiessetting_;
}
inline void CloudPolicySettings::set_allocated_defaultcookiessetting(::enterprise_management::IntegerPolicyProto* defaultcookiessetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultcookiessetting_);
}
if (defaultcookiessetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultcookiessetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultcookiessetting, submessage_arena);
}
_has_bits_[1] |= 0x00000400u;
} else {
_has_bits_[1] &= ~0x00000400u;
}
defaultcookiessetting_ = defaultcookiessetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultCookiesSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultImagesSetting = 51;
inline bool CloudPolicySettings::has_defaultimagessetting() const {
return (_has_bits_[1] & 0x00000800u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultimagessetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultimagessetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultimagessetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
_has_bits_[1] &= ~0x00000800u;
::enterprise_management::IntegerPolicyProto* temp = defaultimagessetting_;
defaultimagessetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultimagessetting() {
_has_bits_[1] |= 0x00000800u;
if (defaultimagessetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultimagessetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
return defaultimagessetting_;
}
inline void CloudPolicySettings::set_allocated_defaultimagessetting(::enterprise_management::IntegerPolicyProto* defaultimagessetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultimagessetting_);
}
if (defaultimagessetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultimagessetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultimagessetting, submessage_arena);
}
_has_bits_[1] |= 0x00000800u;
} else {
_has_bits_[1] &= ~0x00000800u;
}
defaultimagessetting_ = defaultimagessetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultImagesSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultJavaScriptSetting = 52;
inline bool CloudPolicySettings::has_defaultjavascriptsetting() const {
return (_has_bits_[1] & 0x00001000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultjavascriptsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultjavascriptsetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultjavascriptsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
_has_bits_[1] &= ~0x00001000u;
::enterprise_management::IntegerPolicyProto* temp = defaultjavascriptsetting_;
defaultjavascriptsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultjavascriptsetting() {
_has_bits_[1] |= 0x00001000u;
if (defaultjavascriptsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultjavascriptsetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
return defaultjavascriptsetting_;
}
inline void CloudPolicySettings::set_allocated_defaultjavascriptsetting(::enterprise_management::IntegerPolicyProto* defaultjavascriptsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultjavascriptsetting_);
}
if (defaultjavascriptsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultjavascriptsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultjavascriptsetting, submessage_arena);
}
_has_bits_[1] |= 0x00001000u;
} else {
_has_bits_[1] &= ~0x00001000u;
}
defaultjavascriptsetting_ = defaultjavascriptsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultJavaScriptSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultPluginsSetting = 53;
inline bool CloudPolicySettings::has_defaultpluginssetting() const {
return (_has_bits_[1] & 0x00002000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultpluginssetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultpluginssetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultpluginssetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
_has_bits_[1] &= ~0x00002000u;
::enterprise_management::IntegerPolicyProto* temp = defaultpluginssetting_;
defaultpluginssetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultpluginssetting() {
_has_bits_[1] |= 0x00002000u;
if (defaultpluginssetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultpluginssetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
return defaultpluginssetting_;
}
inline void CloudPolicySettings::set_allocated_defaultpluginssetting(::enterprise_management::IntegerPolicyProto* defaultpluginssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultpluginssetting_);
}
if (defaultpluginssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultpluginssetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultpluginssetting, submessage_arena);
}
_has_bits_[1] |= 0x00002000u;
} else {
_has_bits_[1] &= ~0x00002000u;
}
defaultpluginssetting_ = defaultpluginssetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPluginsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultPopupsSetting = 54;
inline bool CloudPolicySettings::has_defaultpopupssetting() const {
return (_has_bits_[1] & 0x00004000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultpopupssetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultpopupssetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultpopupssetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
_has_bits_[1] &= ~0x00004000u;
::enterprise_management::IntegerPolicyProto* temp = defaultpopupssetting_;
defaultpopupssetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultpopupssetting() {
_has_bits_[1] |= 0x00004000u;
if (defaultpopupssetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultpopupssetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
return defaultpopupssetting_;
}
inline void CloudPolicySettings::set_allocated_defaultpopupssetting(::enterprise_management::IntegerPolicyProto* defaultpopupssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultpopupssetting_);
}
if (defaultpopupssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultpopupssetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultpopupssetting, submessage_arena);
}
_has_bits_[1] |= 0x00004000u;
} else {
_has_bits_[1] &= ~0x00004000u;
}
defaultpopupssetting_ = defaultpopupssetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPopupsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultNotificationsSetting = 55;
inline bool CloudPolicySettings::has_defaultnotificationssetting() const {
return (_has_bits_[1] & 0x00008000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultnotificationssetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultnotificationssetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultnotificationssetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
_has_bits_[1] &= ~0x00008000u;
::enterprise_management::IntegerPolicyProto* temp = defaultnotificationssetting_;
defaultnotificationssetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultnotificationssetting() {
_has_bits_[1] |= 0x00008000u;
if (defaultnotificationssetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultnotificationssetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
return defaultnotificationssetting_;
}
inline void CloudPolicySettings::set_allocated_defaultnotificationssetting(::enterprise_management::IntegerPolicyProto* defaultnotificationssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultnotificationssetting_);
}
if (defaultnotificationssetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultnotificationssetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultnotificationssetting, submessage_arena);
}
_has_bits_[1] |= 0x00008000u;
} else {
_has_bits_[1] &= ~0x00008000u;
}
defaultnotificationssetting_ = defaultnotificationssetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultNotificationsSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultGeolocationSetting = 56;
inline bool CloudPolicySettings::has_defaultgeolocationsetting() const {
return (_has_bits_[1] & 0x00010000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultgeolocationsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultgeolocationsetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultgeolocationsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
_has_bits_[1] &= ~0x00010000u;
::enterprise_management::IntegerPolicyProto* temp = defaultgeolocationsetting_;
defaultgeolocationsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultgeolocationsetting() {
_has_bits_[1] |= 0x00010000u;
if (defaultgeolocationsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultgeolocationsetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
return defaultgeolocationsetting_;
}
inline void CloudPolicySettings::set_allocated_defaultgeolocationsetting(::enterprise_management::IntegerPolicyProto* defaultgeolocationsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultgeolocationsetting_);
}
if (defaultgeolocationsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultgeolocationsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultgeolocationsetting, submessage_arena);
}
_has_bits_[1] |= 0x00010000u;
} else {
_has_bits_[1] &= ~0x00010000u;
}
defaultgeolocationsetting_ = defaultgeolocationsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultGeolocationSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultMediaStreamSetting = 151;
inline bool CloudPolicySettings::has_defaultmediastreamsetting() const {
return (_has_bits_[2] & 0x40000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultmediastreamsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultmediastreamsetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultmediastreamsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
_has_bits_[2] &= ~0x40000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultmediastreamsetting_;
defaultmediastreamsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultmediastreamsetting() {
_has_bits_[2] |= 0x40000000u;
if (defaultmediastreamsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultmediastreamsetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
return defaultmediastreamsetting_;
}
inline void CloudPolicySettings::set_allocated_defaultmediastreamsetting(::enterprise_management::IntegerPolicyProto* defaultmediastreamsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultmediastreamsetting_);
}
if (defaultmediastreamsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultmediastreamsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultmediastreamsetting, submessage_arena);
}
_has_bits_[2] |= 0x40000000u;
} else {
_has_bits_[2] &= ~0x40000000u;
}
defaultmediastreamsetting_ = defaultmediastreamsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultMediaStreamSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebBluetoothGuardSetting = 322;
inline bool CloudPolicySettings::has_defaultwebbluetoothguardsetting() const {
return (_has_bits_[4] & 0x04000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebbluetoothguardsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultwebbluetoothguardsetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebbluetoothguardsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
_has_bits_[4] &= ~0x04000000u;
::enterprise_management::IntegerPolicyProto* temp = defaultwebbluetoothguardsetting_;
defaultwebbluetoothguardsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebbluetoothguardsetting() {
_has_bits_[4] |= 0x04000000u;
if (defaultwebbluetoothguardsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultwebbluetoothguardsetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
return defaultwebbluetoothguardsetting_;
}
inline void CloudPolicySettings::set_allocated_defaultwebbluetoothguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebbluetoothguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultwebbluetoothguardsetting_);
}
if (defaultwebbluetoothguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultwebbluetoothguardsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultwebbluetoothguardsetting, submessage_arena);
}
_has_bits_[4] |= 0x04000000u;
} else {
_has_bits_[4] &= ~0x04000000u;
}
defaultwebbluetoothguardsetting_ = defaultwebbluetoothguardsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebBluetoothGuardSetting)
}

// optional .enterprise_management.IntegerPolicyProto DefaultWebUsbGuardSetting = 436;
inline bool CloudPolicySettings::has_defaultwebusbguardsetting() const {
return (_has_bits_[6] & 0x00000004u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultwebusbguardsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultwebusbguardsetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultwebusbguardsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
_has_bits_[6] &= ~0x00000004u;
::enterprise_management::IntegerPolicyProto* temp = defaultwebusbguardsetting_;
defaultwebusbguardsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultwebusbguardsetting() {
_has_bits_[6] |= 0x00000004u;
if (defaultwebusbguardsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultwebusbguardsetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
return defaultwebusbguardsetting_;
}
inline void CloudPolicySettings::set_allocated_defaultwebusbguardsetting(::enterprise_management::IntegerPolicyProto* defaultwebusbguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultwebusbguardsetting_);
}
if (defaultwebusbguardsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultwebusbguardsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultwebusbguardsetting, submessage_arena);
}
_has_bits_[6] |= 0x00000004u;
} else {
_has_bits_[6] &= ~0x00000004u;
}
defaultwebusbguardsetting_ = defaultwebusbguardsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultWebUsbGuardSetting)
}

// optional .enterprise_management.StringPolicyProto WebUsbAllowDevicesForUrls = 488;
inline bool CloudPolicySettings::has_webusballowdevicesforurls() const {
return (_has_bits_[6] & 0x01000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::webusballowdevicesforurls() const {
const ::enterprise_management::StringPolicyProto* p = webusballowdevicesforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_webusballowdevicesforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
_has_bits_[6] &= ~0x01000000u;
::enterprise_management::StringPolicyProto* temp = webusballowdevicesforurls_;
webusballowdevicesforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_webusballowdevicesforurls() {
_has_bits_[6] |= 0x01000000u;
if (webusballowdevicesforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
webusballowdevicesforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
return webusballowdevicesforurls_;
}
inline void CloudPolicySettings::set_allocated_webusballowdevicesforurls(::enterprise_management::StringPolicyProto* webusballowdevicesforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusballowdevicesforurls_);
}
if (webusballowdevicesforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webusballowdevicesforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webusballowdevicesforurls, submessage_arena);
}
_has_bits_[6] |= 0x01000000u;
} else {
_has_bits_[6] &= ~0x01000000u;
}
webusballowdevicesforurls_ = webusballowdevicesforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbAllowDevicesForUrls)
}

// optional .enterprise_management.StringListPolicyProto WebUsbAskForUrls = 441;
inline bool CloudPolicySettings::has_webusbaskforurls() const {
return (_has_bits_[6] & 0x00000040u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webusbaskforurls() const {
const ::enterprise_management::StringListPolicyProto* p = webusbaskforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webusbaskforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
_has_bits_[6] &= ~0x00000040u;
::enterprise_management::StringListPolicyProto* temp = webusbaskforurls_;
webusbaskforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webusbaskforurls() {
_has_bits_[6] |= 0x00000040u;
if (webusbaskforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
webusbaskforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
return webusbaskforurls_;
}
inline void CloudPolicySettings::set_allocated_webusbaskforurls(::enterprise_management::StringListPolicyProto* webusbaskforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusbaskforurls_);
}
if (webusbaskforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webusbaskforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webusbaskforurls, submessage_arena);
}
_has_bits_[6] |= 0x00000040u;
} else {
_has_bits_[6] &= ~0x00000040u;
}
webusbaskforurls_ = webusbaskforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbAskForUrls)
}

// optional .enterprise_management.StringListPolicyProto WebUsbBlockedForUrls = 442;
inline bool CloudPolicySettings::has_webusbblockedforurls() const {
return (_has_bits_[6] & 0x00000080u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webusbblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = webusbblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webusbblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
_has_bits_[6] &= ~0x00000080u;
::enterprise_management::StringListPolicyProto* temp = webusbblockedforurls_;
webusbblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webusbblockedforurls() {
_has_bits_[6] |= 0x00000080u;
if (webusbblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
webusbblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
return webusbblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_webusbblockedforurls(::enterprise_management::StringListPolicyProto* webusbblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webusbblockedforurls_);
}
if (webusbblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webusbblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webusbblockedforurls, submessage_arena);
}
_has_bits_[6] |= 0x00000080u;
} else {
_has_bits_[6] &= ~0x00000080u;
}
webusbblockedforurls_ = webusbblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebUsbBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto AutoSelectCertificateForUrls = 104;
inline bool CloudPolicySettings::has_autoselectcertificateforurls() const {
return (_has_bits_[2] & 0x00020000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::autoselectcertificateforurls() const {
const ::enterprise_management::StringListPolicyProto* p = autoselectcertificateforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_autoselectcertificateforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
_has_bits_[2] &= ~0x00020000u;
::enterprise_management::StringListPolicyProto* temp = autoselectcertificateforurls_;
autoselectcertificateforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_autoselectcertificateforurls() {
_has_bits_[2] |= 0x00020000u;
if (autoselectcertificateforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
autoselectcertificateforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
return autoselectcertificateforurls_;
}
inline void CloudPolicySettings::set_allocated_autoselectcertificateforurls(::enterprise_management::StringListPolicyProto* autoselectcertificateforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoselectcertificateforurls_);
}
if (autoselectcertificateforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autoselectcertificateforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autoselectcertificateforurls, submessage_arena);
}
_has_bits_[2] |= 0x00020000u;
} else {
_has_bits_[2] &= ~0x00020000u;
}
autoselectcertificateforurls_ = autoselectcertificateforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoSelectCertificateForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesAllowedForUrls = 79;
inline bool CloudPolicySettings::has_cookiesallowedforurls() const {
return (_has_bits_[1] & 0x40000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = cookiesallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
_has_bits_[1] &= ~0x40000000u;
::enterprise_management::StringListPolicyProto* temp = cookiesallowedforurls_;
cookiesallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesallowedforurls() {
_has_bits_[1] |= 0x40000000u;
if (cookiesallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
cookiesallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
return cookiesallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_cookiesallowedforurls(::enterprise_management::StringListPolicyProto* cookiesallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiesallowedforurls_);
}
if (cookiesallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cookiesallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cookiesallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x40000000u;
} else {
_has_bits_[1] &= ~0x40000000u;
}
cookiesallowedforurls_ = cookiesallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesBlockedForUrls = 69;
inline bool CloudPolicySettings::has_cookiesblockedforurls() const {
return (_has_bits_[1] & 0x00100000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiesblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = cookiesblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiesblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
_has_bits_[1] &= ~0x00100000u;
::enterprise_management::StringListPolicyProto* temp = cookiesblockedforurls_;
cookiesblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiesblockedforurls() {
_has_bits_[1] |= 0x00100000u;
if (cookiesblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
cookiesblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
return cookiesblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_cookiesblockedforurls(::enterprise_management::StringListPolicyProto* cookiesblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiesblockedforurls_);
}
if (cookiesblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cookiesblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cookiesblockedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00100000u;
} else {
_has_bits_[1] &= ~0x00100000u;
}
cookiesblockedforurls_ = cookiesblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto CookiesSessionOnlyForUrls = 70;
inline bool CloudPolicySettings::has_cookiessessiononlyforurls() const {
return (_has_bits_[1] & 0x00200000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::cookiessessiononlyforurls() const {
const ::enterprise_management::StringListPolicyProto* p = cookiessessiononlyforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_cookiessessiononlyforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
_has_bits_[1] &= ~0x00200000u;
::enterprise_management::StringListPolicyProto* temp = cookiessessiononlyforurls_;
cookiessessiononlyforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_cookiessessiononlyforurls() {
_has_bits_[1] |= 0x00200000u;
if (cookiessessiononlyforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
cookiessessiononlyforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
return cookiessessiononlyforurls_;
}
inline void CloudPolicySettings::set_allocated_cookiessessiononlyforurls(::enterprise_management::StringListPolicyProto* cookiessessiononlyforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cookiessessiononlyforurls_);
}
if (cookiessessiononlyforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cookiessessiononlyforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cookiessessiononlyforurls, submessage_arena);
}
_has_bits_[1] |= 0x00200000u;
} else {
_has_bits_[1] &= ~0x00200000u;
}
cookiessessiononlyforurls_ = cookiessessiononlyforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CookiesSessionOnlyForUrls)
}

// optional .enterprise_management.StringListPolicyProto ImagesAllowedForUrls = 71;
inline bool CloudPolicySettings::has_imagesallowedforurls() const {
return (_has_bits_[1] & 0x00400000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::imagesallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = imagesallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_imagesallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
_has_bits_[1] &= ~0x00400000u;
::enterprise_management::StringListPolicyProto* temp = imagesallowedforurls_;
imagesallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_imagesallowedforurls() {
_has_bits_[1] |= 0x00400000u;
if (imagesallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
imagesallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
return imagesallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_imagesallowedforurls(::enterprise_management::StringListPolicyProto* imagesallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(imagesallowedforurls_);
}
if (imagesallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
imagesallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, imagesallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00400000u;
} else {
_has_bits_[1] &= ~0x00400000u;
}
imagesallowedforurls_ = imagesallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImagesAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto ImagesBlockedForUrls = 72;
inline bool CloudPolicySettings::has_imagesblockedforurls() const {
return (_has_bits_[1] & 0x00800000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::imagesblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = imagesblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_imagesblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
_has_bits_[1] &= ~0x00800000u;
::enterprise_management::StringListPolicyProto* temp = imagesblockedforurls_;
imagesblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_imagesblockedforurls() {
_has_bits_[1] |= 0x00800000u;
if (imagesblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
imagesblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
return imagesblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_imagesblockedforurls(::enterprise_management::StringListPolicyProto* imagesblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(imagesblockedforurls_);
}
if (imagesblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
imagesblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, imagesblockedforurls, submessage_arena);
}
_has_bits_[1] |= 0x00800000u;
} else {
_has_bits_[1] &= ~0x00800000u;
}
imagesblockedforurls_ = imagesblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImagesBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptAllowedForUrls = 73;
inline bool CloudPolicySettings::has_javascriptallowedforurls() const {
return (_has_bits_[1] & 0x01000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = javascriptallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
_has_bits_[1] &= ~0x01000000u;
::enterprise_management::StringListPolicyProto* temp = javascriptallowedforurls_;
javascriptallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptallowedforurls() {
_has_bits_[1] |= 0x01000000u;
if (javascriptallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
javascriptallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
return javascriptallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_javascriptallowedforurls(::enterprise_management::StringListPolicyProto* javascriptallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptallowedforurls_);
}
if (javascriptallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
javascriptallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x01000000u;
} else {
_has_bits_[1] &= ~0x01000000u;
}
javascriptallowedforurls_ = javascriptallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto JavaScriptBlockedForUrls = 74;
inline bool CloudPolicySettings::has_javascriptblockedforurls() const {
return (_has_bits_[1] & 0x02000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::javascriptblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = javascriptblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_javascriptblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
_has_bits_[1] &= ~0x02000000u;
::enterprise_management::StringListPolicyProto* temp = javascriptblockedforurls_;
javascriptblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_javascriptblockedforurls() {
_has_bits_[1] |= 0x02000000u;
if (javascriptblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
javascriptblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
return javascriptblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_javascriptblockedforurls(::enterprise_management::StringListPolicyProto* javascriptblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(javascriptblockedforurls_);
}
if (javascriptblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
javascriptblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, javascriptblockedforurls, submessage_arena);
}
_has_bits_[1] |= 0x02000000u;
} else {
_has_bits_[1] &= ~0x02000000u;
}
javascriptblockedforurls_ = javascriptblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.JavaScriptBlockedForUrls)
}

// optional .enterprise_management.IntegerPolicyProto LegacySameSiteCookieBehaviorEnabled = 625;
inline bool CloudPolicySettings::has_legacysamesitecookiebehaviorenabled() const {
return (_has_bits_[8] & 0x00000010u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::legacysamesitecookiebehaviorenabled() const {
const ::enterprise_management::IntegerPolicyProto* p = legacysamesitecookiebehaviorenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_legacysamesitecookiebehaviorenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabled)
_has_bits_[8] &= ~0x00000010u;
::enterprise_management::IntegerPolicyProto* temp = legacysamesitecookiebehaviorenabled_;
legacysamesitecookiebehaviorenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_legacysamesitecookiebehaviorenabled() {
_has_bits_[8] |= 0x00000010u;
if (legacysamesitecookiebehaviorenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
legacysamesitecookiebehaviorenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabled)
return legacysamesitecookiebehaviorenabled_;
}
inline void CloudPolicySettings::set_allocated_legacysamesitecookiebehaviorenabled(::enterprise_management::IntegerPolicyProto* legacysamesitecookiebehaviorenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(legacysamesitecookiebehaviorenabled_);
}
if (legacysamesitecookiebehaviorenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
legacysamesitecookiebehaviorenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, legacysamesitecookiebehaviorenabled, submessage_arena);
}
_has_bits_[8] |= 0x00000010u;
} else {
_has_bits_[8] &= ~0x00000010u;
}
legacysamesitecookiebehaviorenabled_ = legacysamesitecookiebehaviorenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabled)
}

// optional .enterprise_management.StringListPolicyProto LegacySameSiteCookieBehaviorEnabledForDomainList = 626;
inline bool CloudPolicySettings::has_legacysamesitecookiebehaviorenabledfordomainlist() const {
return (_has_bits_[8] & 0x00000020u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::legacysamesitecookiebehaviorenabledfordomainlist() const {
const ::enterprise_management::StringListPolicyProto* p = legacysamesitecookiebehaviorenabledfordomainlist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_legacysamesitecookiebehaviorenabledfordomainlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
_has_bits_[8] &= ~0x00000020u;
::enterprise_management::StringListPolicyProto* temp = legacysamesitecookiebehaviorenabledfordomainlist_;
legacysamesitecookiebehaviorenabledfordomainlist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_legacysamesitecookiebehaviorenabledfordomainlist() {
_has_bits_[8] |= 0x00000020u;
if (legacysamesitecookiebehaviorenabledfordomainlist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
legacysamesitecookiebehaviorenabledfordomainlist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
return legacysamesitecookiebehaviorenabledfordomainlist_;
}
inline void CloudPolicySettings::set_allocated_legacysamesitecookiebehaviorenabledfordomainlist(::enterprise_management::StringListPolicyProto* legacysamesitecookiebehaviorenabledfordomainlist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(legacysamesitecookiebehaviorenabledfordomainlist_);
}
if (legacysamesitecookiebehaviorenabledfordomainlist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
legacysamesitecookiebehaviorenabledfordomainlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, legacysamesitecookiebehaviorenabledfordomainlist, submessage_arena);
}
_has_bits_[8] |= 0x00000020u;
} else {
_has_bits_[8] &= ~0x00000020u;
}
legacysamesitecookiebehaviorenabledfordomainlist_ = legacysamesitecookiebehaviorenabledfordomainlist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.LegacySameSiteCookieBehaviorEnabledForDomainList)
}

// optional .enterprise_management.StringListPolicyProto PluginsAllowedForUrls = 75;
inline bool CloudPolicySettings::has_pluginsallowedforurls() const {
return (_has_bits_[1] & 0x04000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::pluginsallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = pluginsallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_pluginsallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
_has_bits_[1] &= ~0x04000000u;
::enterprise_management::StringListPolicyProto* temp = pluginsallowedforurls_;
pluginsallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_pluginsallowedforurls() {
_has_bits_[1] |= 0x04000000u;
if (pluginsallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
pluginsallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
return pluginsallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_pluginsallowedforurls(::enterprise_management::StringListPolicyProto* pluginsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pluginsallowedforurls_);
}
if (pluginsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
pluginsallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, pluginsallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x04000000u;
} else {
_has_bits_[1] &= ~0x04000000u;
}
pluginsallowedforurls_ = pluginsallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PluginsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PluginsBlockedForUrls = 76;
inline bool CloudPolicySettings::has_pluginsblockedforurls() const {
return (_has_bits_[1] & 0x08000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::pluginsblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = pluginsblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_pluginsblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
_has_bits_[1] &= ~0x08000000u;
::enterprise_management::StringListPolicyProto* temp = pluginsblockedforurls_;
pluginsblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_pluginsblockedforurls() {
_has_bits_[1] |= 0x08000000u;
if (pluginsblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
pluginsblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
return pluginsblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_pluginsblockedforurls(::enterprise_management::StringListPolicyProto* pluginsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pluginsblockedforurls_);
}
if (pluginsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
pluginsblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, pluginsblockedforurls, submessage_arena);
}
_has_bits_[1] |= 0x08000000u;
} else {
_has_bits_[1] &= ~0x08000000u;
}
pluginsblockedforurls_ = pluginsblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PluginsBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto PopupsAllowedForUrls = 77;
inline bool CloudPolicySettings::has_popupsallowedforurls() const {
return (_has_bits_[1] & 0x10000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = popupsallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
_has_bits_[1] &= ~0x10000000u;
::enterprise_management::StringListPolicyProto* temp = popupsallowedforurls_;
popupsallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsallowedforurls() {
_has_bits_[1] |= 0x10000000u;
if (popupsallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
popupsallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
return popupsallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_popupsallowedforurls(::enterprise_management::StringListPolicyProto* popupsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(popupsallowedforurls_);
}
if (popupsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
popupsallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, popupsallowedforurls, submessage_arena);
}
_has_bits_[1] |= 0x10000000u;
} else {
_has_bits_[1] &= ~0x10000000u;
}
popupsallowedforurls_ = popupsallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsAllowedForUrls)
}

// optional .enterprise_management.StringPolicyProto RegisteredProtocolHandlers = 270;
inline bool CloudPolicySettings::has_registeredprotocolhandlers() const {
return (_has_bits_[4] & 0x00000040u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::registeredprotocolhandlers() const {
const ::enterprise_management::StringPolicyProto* p = registeredprotocolhandlers_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_registeredprotocolhandlers() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
_has_bits_[4] &= ~0x00000040u;
::enterprise_management::StringPolicyProto* temp = registeredprotocolhandlers_;
registeredprotocolhandlers_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_registeredprotocolhandlers() {
_has_bits_[4] |= 0x00000040u;
if (registeredprotocolhandlers_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
registeredprotocolhandlers_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
return registeredprotocolhandlers_;
}
inline void CloudPolicySettings::set_allocated_registeredprotocolhandlers(::enterprise_management::StringPolicyProto* registeredprotocolhandlers) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(registeredprotocolhandlers_);
}
if (registeredprotocolhandlers) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
registeredprotocolhandlers = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, registeredprotocolhandlers, submessage_arena);
}
_has_bits_[4] |= 0x00000040u;
} else {
_has_bits_[4] &= ~0x00000040u;
}
registeredprotocolhandlers_ = registeredprotocolhandlers;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RegisteredProtocolHandlers)
}

// optional .enterprise_management.StringListPolicyProto PopupsBlockedForUrls = 78;
inline bool CloudPolicySettings::has_popupsblockedforurls() const {
return (_has_bits_[1] & 0x20000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::popupsblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = popupsblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_popupsblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
_has_bits_[1] &= ~0x20000000u;
::enterprise_management::StringListPolicyProto* temp = popupsblockedforurls_;
popupsblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_popupsblockedforurls() {
_has_bits_[1] |= 0x20000000u;
if (popupsblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
popupsblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
return popupsblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_popupsblockedforurls(::enterprise_management::StringListPolicyProto* popupsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(popupsblockedforurls_);
}
if (popupsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
popupsblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, popupsblockedforurls, submessage_arena);
}
_has_bits_[1] |= 0x20000000u;
} else {
_has_bits_[1] &= ~0x20000000u;
}
popupsblockedforurls_ = popupsblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PopupsBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto NotificationsAllowedForUrls = 107;
inline bool CloudPolicySettings::has_notificationsallowedforurls() const {
return (_has_bits_[2] & 0x00100000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::notificationsallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = notificationsallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_notificationsallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
_has_bits_[2] &= ~0x00100000u;
::enterprise_management::StringListPolicyProto* temp = notificationsallowedforurls_;
notificationsallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_notificationsallowedforurls() {
_has_bits_[2] |= 0x00100000u;
if (notificationsallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
notificationsallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
return notificationsallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_notificationsallowedforurls(::enterprise_management::StringListPolicyProto* notificationsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(notificationsallowedforurls_);
}
if (notificationsallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
notificationsallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, notificationsallowedforurls, submessage_arena);
}
_has_bits_[2] |= 0x00100000u;
} else {
_has_bits_[2] &= ~0x00100000u;
}
notificationsallowedforurls_ = notificationsallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NotificationsAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto NotificationsBlockedForUrls = 108;
inline bool CloudPolicySettings::has_notificationsblockedforurls() const {
return (_has_bits_[2] & 0x00200000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::notificationsblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = notificationsblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_notificationsblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
_has_bits_[2] &= ~0x00200000u;
::enterprise_management::StringListPolicyProto* temp = notificationsblockedforurls_;
notificationsblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_notificationsblockedforurls() {
_has_bits_[2] |= 0x00200000u;
if (notificationsblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
notificationsblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
return notificationsblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_notificationsblockedforurls(::enterprise_management::StringListPolicyProto* notificationsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(notificationsblockedforurls_);
}
if (notificationsblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
notificationsblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, notificationsblockedforurls, submessage_arena);
}
_has_bits_[2] |= 0x00200000u;
} else {
_has_bits_[2] &= ~0x00200000u;
}
notificationsblockedforurls_ = notificationsblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NotificationsBlockedForUrls)
}

// optional .enterprise_management.StringListPolicyProto NativeMessagingBlacklist = 253;
inline bool CloudPolicySettings::has_nativemessagingblacklist() const {
return (_has_bits_[3] & 0x40000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::nativemessagingblacklist() const {
const ::enterprise_management::StringListPolicyProto* p = nativemessagingblacklist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_nativemessagingblacklist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
_has_bits_[3] &= ~0x40000000u;
::enterprise_management::StringListPolicyProto* temp = nativemessagingblacklist_;
nativemessagingblacklist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_nativemessagingblacklist() {
_has_bits_[3] |= 0x40000000u;
if (nativemessagingblacklist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
nativemessagingblacklist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
return nativemessagingblacklist_;
}
inline void CloudPolicySettings::set_allocated_nativemessagingblacklist(::enterprise_management::StringListPolicyProto* nativemessagingblacklist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(nativemessagingblacklist_);
}
if (nativemessagingblacklist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
nativemessagingblacklist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, nativemessagingblacklist, submessage_arena);
}
_has_bits_[3] |= 0x40000000u;
} else {
_has_bits_[3] &= ~0x40000000u;
}
nativemessagingblacklist_ = nativemessagingblacklist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NativeMessagingBlacklist)
}

// optional .enterprise_management.StringListPolicyProto NativeMessagingWhitelist = 254;
inline bool CloudPolicySettings::has_nativemessagingwhitelist() const {
return (_has_bits_[3] & 0x80000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::nativemessagingwhitelist() const {
const ::enterprise_management::StringListPolicyProto* p = nativemessagingwhitelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_nativemessagingwhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
_has_bits_[3] &= ~0x80000000u;
::enterprise_management::StringListPolicyProto* temp = nativemessagingwhitelist_;
nativemessagingwhitelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_nativemessagingwhitelist() {
_has_bits_[3] |= 0x80000000u;
if (nativemessagingwhitelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
nativemessagingwhitelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
return nativemessagingwhitelist_;
}
inline void CloudPolicySettings::set_allocated_nativemessagingwhitelist(::enterprise_management::StringListPolicyProto* nativemessagingwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(nativemessagingwhitelist_);
}
if (nativemessagingwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
nativemessagingwhitelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, nativemessagingwhitelist, submessage_arena);
}
_has_bits_[3] |= 0x80000000u;
} else {
_has_bits_[3] &= ~0x80000000u;
}
nativemessagingwhitelist_ = nativemessagingwhitelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NativeMessagingWhitelist)
}

// optional .enterprise_management.BooleanPolicyProto NativeMessagingUserLevelHosts = 255;
inline bool CloudPolicySettings::has_nativemessaginguserlevelhosts() const {
return (_has_bits_[4] & 0x00000001u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::nativemessaginguserlevelhosts() const {
const ::enterprise_management::BooleanPolicyProto* p = nativemessaginguserlevelhosts_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_nativemessaginguserlevelhosts() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
_has_bits_[4] &= ~0x00000001u;
::enterprise_management::BooleanPolicyProto* temp = nativemessaginguserlevelhosts_;
nativemessaginguserlevelhosts_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_nativemessaginguserlevelhosts() {
_has_bits_[4] |= 0x00000001u;
if (nativemessaginguserlevelhosts_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
nativemessaginguserlevelhosts_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
return nativemessaginguserlevelhosts_;
}
inline void CloudPolicySettings::set_allocated_nativemessaginguserlevelhosts(::enterprise_management::BooleanPolicyProto* nativemessaginguserlevelhosts) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(nativemessaginguserlevelhosts_);
}
if (nativemessaginguserlevelhosts) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
nativemessaginguserlevelhosts = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, nativemessaginguserlevelhosts, submessage_arena);
}
_has_bits_[4] |= 0x00000001u;
} else {
_has_bits_[4] &= ~0x00000001u;
}
nativemessaginguserlevelhosts_ = nativemessaginguserlevelhosts;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NativeMessagingUserLevelHosts)
}

// optional .enterprise_management.BooleanPolicyProto Disable3DAPIs = 57;
inline bool CloudPolicySettings::has_disable3dapis() const {
return (_has_bits_[1] & 0x00020000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disable3dapis() const {
const ::enterprise_management::BooleanPolicyProto* p = disable3dapis_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.Disable3DAPIs)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disable3dapis() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.Disable3DAPIs)
_has_bits_[1] &= ~0x00020000u;
::enterprise_management::BooleanPolicyProto* temp = disable3dapis_;
disable3dapis_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disable3dapis() {
_has_bits_[1] |= 0x00020000u;
if (disable3dapis_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
disable3dapis_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.Disable3DAPIs)
return disable3dapis_;
}
inline void CloudPolicySettings::set_allocated_disable3dapis(::enterprise_management::BooleanPolicyProto* disable3dapis) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disable3dapis_);
}
if (disable3dapis) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
disable3dapis = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disable3dapis, submessage_arena);
}
_has_bits_[1] |= 0x00020000u;
} else {
_has_bits_[1] &= ~0x00020000u;
}
disable3dapis_ = disable3dapis;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.Disable3DAPIs)
}

// optional .enterprise_management.IntegerPolicyProto PolicyRefreshRate = 58;
inline bool CloudPolicySettings::has_policyrefreshrate() const {
return (_has_bits_[1] & 0x00040000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::policyrefreshrate() const {
const ::enterprise_management::IntegerPolicyProto* p = policyrefreshrate_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PolicyRefreshRate)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_policyrefreshrate() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PolicyRefreshRate)
_has_bits_[1] &= ~0x00040000u;
::enterprise_management::IntegerPolicyProto* temp = policyrefreshrate_;
policyrefreshrate_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_policyrefreshrate() {
_has_bits_[1] |= 0x00040000u;
if (policyrefreshrate_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
policyrefreshrate_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PolicyRefreshRate)
return policyrefreshrate_;
}
inline void CloudPolicySettings::set_allocated_policyrefreshrate(::enterprise_management::IntegerPolicyProto* policyrefreshrate) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(policyrefreshrate_);
}
if (policyrefreshrate) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
policyrefreshrate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, policyrefreshrate, submessage_arena);
}
_has_bits_[1] |= 0x00040000u;
} else {
_has_bits_[1] &= ~0x00040000u;
}
policyrefreshrate_ = policyrefreshrate;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PolicyRefreshRate)
}

// optional .enterprise_management.IntegerPolicyProto MaxInvalidationFetchDelay = 230;
inline bool CloudPolicySettings::has_maxinvalidationfetchdelay() const {
return (_has_bits_[3] & 0x00100000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::maxinvalidationfetchdelay() const {
const ::enterprise_management::IntegerPolicyProto* p = maxinvalidationfetchdelay_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_maxinvalidationfetchdelay() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
_has_bits_[3] &= ~0x00100000u;
::enterprise_management::IntegerPolicyProto* temp = maxinvalidationfetchdelay_;
maxinvalidationfetchdelay_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_maxinvalidationfetchdelay() {
_has_bits_[3] |= 0x00100000u;
if (maxinvalidationfetchdelay_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
maxinvalidationfetchdelay_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
return maxinvalidationfetchdelay_;
}
inline void CloudPolicySettings::set_allocated_maxinvalidationfetchdelay(::enterprise_management::IntegerPolicyProto* maxinvalidationfetchdelay) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxinvalidationfetchdelay_);
}
if (maxinvalidationfetchdelay) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
maxinvalidationfetchdelay = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, maxinvalidationfetchdelay, submessage_arena);
}
_has_bits_[3] |= 0x00100000u;
} else {
_has_bits_[3] &= ~0x00100000u;
}
maxinvalidationfetchdelay_ = maxinvalidationfetchdelay;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MaxInvalidationFetchDelay)
}

// optional .enterprise_management.BooleanPolicyProto TranslateEnabled = 82;
inline bool CloudPolicySettings::has_translateenabled() const {
return (_has_bits_[2] & 0x00000002u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::translateenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = translateenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TranslateEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_translateenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TranslateEnabled)
_has_bits_[2] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = translateenabled_;
translateenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_translateenabled() {
_has_bits_[2] |= 0x00000002u;
if (translateenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
translateenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TranslateEnabled)
return translateenabled_;
}
inline void CloudPolicySettings::set_allocated_translateenabled(::enterprise_management::BooleanPolicyProto* translateenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(translateenabled_);
}
if (translateenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
translateenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, translateenabled, submessage_arena);
}
_has_bits_[2] |= 0x00000002u;
} else {
_has_bits_[2] &= ~0x00000002u;
}
translateenabled_ = translateenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TranslateEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AllowOutdatedPlugins = 83;
inline bool CloudPolicySettings::has_allowoutdatedplugins() const {
return (_has_bits_[2] & 0x00000004u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowoutdatedplugins() const {
const ::enterprise_management::BooleanPolicyProto* p = allowoutdatedplugins_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowoutdatedplugins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
_has_bits_[2] &= ~0x00000004u;
::enterprise_management::BooleanPolicyProto* temp = allowoutdatedplugins_;
allowoutdatedplugins_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowoutdatedplugins() {
_has_bits_[2] |= 0x00000004u;
if (allowoutdatedplugins_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
allowoutdatedplugins_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
return allowoutdatedplugins_;
}
inline void CloudPolicySettings::set_allocated_allowoutdatedplugins(::enterprise_management::BooleanPolicyProto* allowoutdatedplugins) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowoutdatedplugins_);
}
if (allowoutdatedplugins) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allowoutdatedplugins = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allowoutdatedplugins, submessage_arena);
}
_has_bits_[2] |= 0x00000004u;
} else {
_has_bits_[2] &= ~0x00000004u;
}
allowoutdatedplugins_ = allowoutdatedplugins;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowOutdatedPlugins)
}

// optional .enterprise_management.BooleanPolicyProto RunAllFlashInAllowMode = 393;
inline bool CloudPolicySettings::has_runallflashinallowmode() const {
return (_has_bits_[5] & 0x00001000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::runallflashinallowmode() const {
const ::enterprise_management::BooleanPolicyProto* p = runallflashinallowmode_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_runallflashinallowmode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
_has_bits_[5] &= ~0x00001000u;
::enterprise_management::BooleanPolicyProto* temp = runallflashinallowmode_;
runallflashinallowmode_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_runallflashinallowmode() {
_has_bits_[5] |= 0x00001000u;
if (runallflashinallowmode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
runallflashinallowmode_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
return runallflashinallowmode_;
}
inline void CloudPolicySettings::set_allocated_runallflashinallowmode(::enterprise_management::BooleanPolicyProto* runallflashinallowmode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(runallflashinallowmode_);
}
if (runallflashinallowmode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
runallflashinallowmode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, runallflashinallowmode, submessage_arena);
}
_has_bits_[5] |= 0x00001000u;
} else {
_has_bits_[5] &= ~0x00001000u;
}
runallflashinallowmode_ = runallflashinallowmode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RunAllFlashInAllowMode)
}

// optional .enterprise_management.BooleanPolicyProto BookmarkBarEnabled = 84;
inline bool CloudPolicySettings::has_bookmarkbarenabled() const {
return (_has_bits_[2] & 0x00000008u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::bookmarkbarenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = bookmarkbarenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_bookmarkbarenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
_has_bits_[2] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = bookmarkbarenabled_;
bookmarkbarenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_bookmarkbarenabled() {
_has_bits_[2] |= 0x00000008u;
if (bookmarkbarenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
bookmarkbarenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
return bookmarkbarenabled_;
}
inline void CloudPolicySettings::set_allocated_bookmarkbarenabled(::enterprise_management::BooleanPolicyProto* bookmarkbarenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(bookmarkbarenabled_);
}
if (bookmarkbarenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
bookmarkbarenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, bookmarkbarenabled, submessage_arena);
}
_has_bits_[2] |= 0x00000008u;
} else {
_has_bits_[2] &= ~0x00000008u;
}
bookmarkbarenabled_ = bookmarkbarenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BookmarkBarEnabled)
}

// optional .enterprise_management.BooleanPolicyProto EditBookmarksEnabled = 85;
inline bool CloudPolicySettings::has_editbookmarksenabled() const {
return (_has_bits_[2] & 0x00000010u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::editbookmarksenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = editbookmarksenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_editbookmarksenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
_has_bits_[2] &= ~0x00000010u;
::enterprise_management::BooleanPolicyProto* temp = editbookmarksenabled_;
editbookmarksenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_editbookmarksenabled() {
_has_bits_[2] |= 0x00000010u;
if (editbookmarksenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
editbookmarksenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
return editbookmarksenabled_;
}
inline void CloudPolicySettings::set_allocated_editbookmarksenabled(::enterprise_management::BooleanPolicyProto* editbookmarksenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(editbookmarksenabled_);
}
if (editbookmarksenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
editbookmarksenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, editbookmarksenabled, submessage_arena);
}
_has_bits_[2] |= 0x00000010u;
} else {
_has_bits_[2] &= ~0x00000010u;
}
editbookmarksenabled_ = editbookmarksenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EditBookmarksEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ShowAppsShortcutInBookmarkBar = 269;
inline bool CloudPolicySettings::has_showappsshortcutinbookmarkbar() const {
return (_has_bits_[4] & 0x00000020u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::showappsshortcutinbookmarkbar() const {
const ::enterprise_management::BooleanPolicyProto* p = showappsshortcutinbookmarkbar_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_showappsshortcutinbookmarkbar() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
_has_bits_[4] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = showappsshortcutinbookmarkbar_;
showappsshortcutinbookmarkbar_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_showappsshortcutinbookmarkbar() {
_has_bits_[4] |= 0x00000020u;
if (showappsshortcutinbookmarkbar_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
showappsshortcutinbookmarkbar_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
return showappsshortcutinbookmarkbar_;
}
inline void CloudPolicySettings::set_allocated_showappsshortcutinbookmarkbar(::enterprise_management::BooleanPolicyProto* showappsshortcutinbookmarkbar) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(showappsshortcutinbookmarkbar_);
}
if (showappsshortcutinbookmarkbar) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
showappsshortcutinbookmarkbar = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, showappsshortcutinbookmarkbar, submessage_arena);
}
_has_bits_[4] |= 0x00000020u;
} else {
_has_bits_[4] &= ~0x00000020u;
}
showappsshortcutinbookmarkbar_ = showappsshortcutinbookmarkbar;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ShowAppsShortcutInBookmarkBar)
}

// optional .enterprise_management.BooleanPolicyProto AllowFileSelectionDialogs = 86;
inline bool CloudPolicySettings::has_allowfileselectiondialogs() const {
return (_has_bits_[2] & 0x00000020u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowfileselectiondialogs() const {
const ::enterprise_management::BooleanPolicyProto* p = allowfileselectiondialogs_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowfileselectiondialogs() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
_has_bits_[2] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = allowfileselectiondialogs_;
allowfileselectiondialogs_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowfileselectiondialogs() {
_has_bits_[2] |= 0x00000020u;
if (allowfileselectiondialogs_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
allowfileselectiondialogs_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
return allowfileselectiondialogs_;
}
inline void CloudPolicySettings::set_allocated_allowfileselectiondialogs(::enterprise_management::BooleanPolicyProto* allowfileselectiondialogs) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowfileselectiondialogs_);
}
if (allowfileselectiondialogs) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allowfileselectiondialogs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allowfileselectiondialogs, submessage_arena);
}
_has_bits_[2] |= 0x00000020u;
} else {
_has_bits_[2] &= ~0x00000020u;
}
allowfileselectiondialogs_ = allowfileselectiondialogs;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowFileSelectionDialogs)
}

// optional .enterprise_management.StringListPolicyProto SecurityKeyPermitAttestation = 404;
inline bool CloudPolicySettings::has_securitykeypermitattestation() const {
return (_has_bits_[5] & 0x00100000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::securitykeypermitattestation() const {
const ::enterprise_management::StringListPolicyProto* p = securitykeypermitattestation_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_securitykeypermitattestation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
_has_bits_[5] &= ~0x00100000u;
::enterprise_management::StringListPolicyProto* temp = securitykeypermitattestation_;
securitykeypermitattestation_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_securitykeypermitattestation() {
_has_bits_[5] |= 0x00100000u;
if (securitykeypermitattestation_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
securitykeypermitattestation_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
return securitykeypermitattestation_;
}
inline void CloudPolicySettings::set_allocated_securitykeypermitattestation(::enterprise_management::StringListPolicyProto* securitykeypermitattestation) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(securitykeypermitattestation_);
}
if (securitykeypermitattestation) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
securitykeypermitattestation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, securitykeypermitattestation, submessage_arena);
}
_has_bits_[5] |= 0x00100000u;
} else {
_has_bits_[5] &= ~0x00100000u;
}
securitykeypermitattestation_ = securitykeypermitattestation;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SecurityKeyPermitAttestation)
}

// optional .enterprise_management.BooleanPolicyProto ImportBookmarks = 99;
inline bool CloudPolicySettings::has_importbookmarks() const {
return (_has_bits_[2] & 0x00001000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importbookmarks() const {
const ::enterprise_management::BooleanPolicyProto* p = importbookmarks_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportBookmarks)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importbookmarks() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportBookmarks)
_has_bits_[2] &= ~0x00001000u;
::enterprise_management::BooleanPolicyProto* temp = importbookmarks_;
importbookmarks_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importbookmarks() {
_has_bits_[2] |= 0x00001000u;
if (importbookmarks_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
importbookmarks_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportBookmarks)
return importbookmarks_;
}
inline void CloudPolicySettings::set_allocated_importbookmarks(::enterprise_management::BooleanPolicyProto* importbookmarks) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(importbookmarks_);
}
if (importbookmarks) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
importbookmarks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, importbookmarks, submessage_arena);
}
_has_bits_[2] |= 0x00001000u;
} else {
_has_bits_[2] &= ~0x00001000u;
}
importbookmarks_ = importbookmarks;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportBookmarks)
}

// optional .enterprise_management.BooleanPolicyProto ImportHistory = 100;
inline bool CloudPolicySettings::has_importhistory() const {
return (_has_bits_[2] & 0x00002000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importhistory() const {
const ::enterprise_management::BooleanPolicyProto* p = importhistory_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportHistory)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importhistory() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportHistory)
_has_bits_[2] &= ~0x00002000u;
::enterprise_management::BooleanPolicyProto* temp = importhistory_;
importhistory_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importhistory() {
_has_bits_[2] |= 0x00002000u;
if (importhistory_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
importhistory_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportHistory)
return importhistory_;
}
inline void CloudPolicySettings::set_allocated_importhistory(::enterprise_management::BooleanPolicyProto* importhistory) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(importhistory_);
}
if (importhistory) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
importhistory = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, importhistory, submessage_arena);
}
_has_bits_[2] |= 0x00002000u;
} else {
_has_bits_[2] &= ~0x00002000u;
}
importhistory_ = importhistory;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportHistory)
}

// optional .enterprise_management.BooleanPolicyProto ImportHomepage = 101;
inline bool CloudPolicySettings::has_importhomepage() const {
return (_has_bits_[2] & 0x00004000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importhomepage() const {
const ::enterprise_management::BooleanPolicyProto* p = importhomepage_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportHomepage)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importhomepage() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportHomepage)
_has_bits_[2] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = importhomepage_;
importhomepage_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importhomepage() {
_has_bits_[2] |= 0x00004000u;
if (importhomepage_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
importhomepage_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportHomepage)
return importhomepage_;
}
inline void CloudPolicySettings::set_allocated_importhomepage(::enterprise_management::BooleanPolicyProto* importhomepage) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(importhomepage_);
}
if (importhomepage) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
importhomepage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, importhomepage, submessage_arena);
}
_has_bits_[2] |= 0x00004000u;
} else {
_has_bits_[2] &= ~0x00004000u;
}
importhomepage_ = importhomepage;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportHomepage)
}

// optional .enterprise_management.BooleanPolicyProto ImportSearchEngine = 102;
inline bool CloudPolicySettings::has_importsearchengine() const {
return (_has_bits_[2] & 0x00008000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importsearchengine() const {
const ::enterprise_management::BooleanPolicyProto* p = importsearchengine_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportSearchEngine)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importsearchengine() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportSearchEngine)
_has_bits_[2] &= ~0x00008000u;
::enterprise_management::BooleanPolicyProto* temp = importsearchengine_;
importsearchengine_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importsearchengine() {
_has_bits_[2] |= 0x00008000u;
if (importsearchengine_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
importsearchengine_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportSearchEngine)
return importsearchengine_;
}
inline void CloudPolicySettings::set_allocated_importsearchengine(::enterprise_management::BooleanPolicyProto* importsearchengine) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(importsearchengine_);
}
if (importsearchengine) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
importsearchengine = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, importsearchengine, submessage_arena);
}
_has_bits_[2] |= 0x00008000u;
} else {
_has_bits_[2] &= ~0x00008000u;
}
importsearchengine_ = importsearchengine;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportSearchEngine)
}

// optional .enterprise_management.BooleanPolicyProto ImportSavedPasswords = 103;
inline bool CloudPolicySettings::has_importsavedpasswords() const {
return (_has_bits_[2] & 0x00010000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importsavedpasswords() const {
const ::enterprise_management::BooleanPolicyProto* p = importsavedpasswords_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importsavedpasswords() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
_has_bits_[2] &= ~0x00010000u;
::enterprise_management::BooleanPolicyProto* temp = importsavedpasswords_;
importsavedpasswords_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importsavedpasswords() {
_has_bits_[2] |= 0x00010000u;
if (importsavedpasswords_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
importsavedpasswords_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
return importsavedpasswords_;
}
inline void CloudPolicySettings::set_allocated_importsavedpasswords(::enterprise_management::BooleanPolicyProto* importsavedpasswords) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(importsavedpasswords_);
}
if (importsavedpasswords) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
importsavedpasswords = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, importsavedpasswords, submessage_arena);
}
_has_bits_[2] |= 0x00010000u;
} else {
_has_bits_[2] &= ~0x00010000u;
}
importsavedpasswords_ = importsavedpasswords;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportSavedPasswords)
}

// optional .enterprise_management.BooleanPolicyProto ImportAutofillFormData = 279;
inline bool CloudPolicySettings::has_importautofillformdata() const {
return (_has_bits_[4] & 0x00000800u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::importautofillformdata() const {
const ::enterprise_management::BooleanPolicyProto* p = importautofillformdata_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_importautofillformdata() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
_has_bits_[4] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = importautofillformdata_;
importautofillformdata_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_importautofillformdata() {
_has_bits_[4] |= 0x00000800u;
if (importautofillformdata_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
importautofillformdata_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
return importautofillformdata_;
}
inline void CloudPolicySettings::set_allocated_importautofillformdata(::enterprise_management::BooleanPolicyProto* importautofillformdata) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(importautofillformdata_);
}
if (importautofillformdata) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
importautofillformdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, importautofillformdata, submessage_arena);
}
_has_bits_[4] |= 0x00000800u;
} else {
_has_bits_[4] &= ~0x00000800u;
}
importautofillformdata_ = importautofillformdata;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ImportAutofillFormData)
}

// optional .enterprise_management.IntegerPolicyProto MaxConnectionsPerProxy = 94;
inline bool CloudPolicySettings::has_maxconnectionsperproxy() const {
return (_has_bits_[2] & 0x00000200u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::maxconnectionsperproxy() const {
const ::enterprise_management::IntegerPolicyProto* p = maxconnectionsperproxy_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_maxconnectionsperproxy() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
_has_bits_[2] &= ~0x00000200u;
::enterprise_management::IntegerPolicyProto* temp = maxconnectionsperproxy_;
maxconnectionsperproxy_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_maxconnectionsperproxy() {
_has_bits_[2] |= 0x00000200u;
if (maxconnectionsperproxy_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
maxconnectionsperproxy_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
return maxconnectionsperproxy_;
}
inline void CloudPolicySettings::set_allocated_maxconnectionsperproxy(::enterprise_management::IntegerPolicyProto* maxconnectionsperproxy) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxconnectionsperproxy_);
}
if (maxconnectionsperproxy) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
maxconnectionsperproxy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, maxconnectionsperproxy, submessage_arena);
}
_has_bits_[2] |= 0x00000200u;
} else {
_has_bits_[2] &= ~0x00000200u;
}
maxconnectionsperproxy_ = maxconnectionsperproxy;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MaxConnectionsPerProxy)
}

// optional .enterprise_management.StringListPolicyProto URLBlacklist = 105;
inline bool CloudPolicySettings::has_urlblacklist() const {
return (_has_bits_[2] & 0x00040000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlblacklist() const {
const ::enterprise_management::StringListPolicyProto* p = urlblacklist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLBlacklist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlblacklist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLBlacklist)
_has_bits_[2] &= ~0x00040000u;
::enterprise_management::StringListPolicyProto* temp = urlblacklist_;
urlblacklist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlblacklist() {
_has_bits_[2] |= 0x00040000u;
if (urlblacklist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
urlblacklist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLBlacklist)
return urlblacklist_;
}
inline void CloudPolicySettings::set_allocated_urlblacklist(::enterprise_management::StringListPolicyProto* urlblacklist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlblacklist_);
}
if (urlblacklist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
urlblacklist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlblacklist, submessage_arena);
}
_has_bits_[2] |= 0x00040000u;
} else {
_has_bits_[2] &= ~0x00040000u;
}
urlblacklist_ = urlblacklist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLBlacklist)
}

// optional .enterprise_management.StringListPolicyProto URLWhitelist = 106;
inline bool CloudPolicySettings::has_urlwhitelist() const {
return (_has_bits_[2] & 0x00080000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlwhitelist() const {
const ::enterprise_management::StringListPolicyProto* p = urlwhitelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLWhitelist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlwhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLWhitelist)
_has_bits_[2] &= ~0x00080000u;
::enterprise_management::StringListPolicyProto* temp = urlwhitelist_;
urlwhitelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlwhitelist() {
_has_bits_[2] |= 0x00080000u;
if (urlwhitelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
urlwhitelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLWhitelist)
return urlwhitelist_;
}
inline void CloudPolicySettings::set_allocated_urlwhitelist(::enterprise_management::StringListPolicyProto* urlwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlwhitelist_);
}
if (urlwhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
urlwhitelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlwhitelist, submessage_arena);
}
_has_bits_[2] |= 0x00080000u;
} else {
_has_bits_[2] &= ~0x00080000u;
}
urlwhitelist_ = urlwhitelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLWhitelist)
}

// optional .enterprise_management.BooleanPolicyProto PolicyAtomicGroupsEnabled = 586;
inline bool CloudPolicySettings::has_policyatomicgroupsenabled() const {
return (_has_bits_[7] & 0x00200000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::policyatomicgroupsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = policyatomicgroupsenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PolicyAtomicGroupsEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_policyatomicgroupsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PolicyAtomicGroupsEnabled)
_has_bits_[7] &= ~0x00200000u;
::enterprise_management::BooleanPolicyProto* temp = policyatomicgroupsenabled_;
policyatomicgroupsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_policyatomicgroupsenabled() {
_has_bits_[7] |= 0x00200000u;
if (policyatomicgroupsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
policyatomicgroupsenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PolicyAtomicGroupsEnabled)
return policyatomicgroupsenabled_;
}
inline void CloudPolicySettings::set_allocated_policyatomicgroupsenabled(::enterprise_management::BooleanPolicyProto* policyatomicgroupsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(policyatomicgroupsenabled_);
}
if (policyatomicgroupsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
policyatomicgroupsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, policyatomicgroupsenabled, submessage_arena);
}
_has_bits_[7] |= 0x00200000u;
} else {
_has_bits_[7] &= ~0x00200000u;
}
policyatomicgroupsenabled_ = policyatomicgroupsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PolicyAtomicGroupsEnabled)
}

// optional .enterprise_management.StringListPolicyProto PolicyListMultipleSourceMergeList = 556;
inline bool CloudPolicySettings::has_policylistmultiplesourcemergelist() const {
return (_has_bits_[7] & 0x00001000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::policylistmultiplesourcemergelist() const {
const ::enterprise_management::StringListPolicyProto* p = policylistmultiplesourcemergelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PolicyListMultipleSourceMergeList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_policylistmultiplesourcemergelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PolicyListMultipleSourceMergeList)
_has_bits_[7] &= ~0x00001000u;
::enterprise_management::StringListPolicyProto* temp = policylistmultiplesourcemergelist_;
policylistmultiplesourcemergelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_policylistmultiplesourcemergelist() {
_has_bits_[7] |= 0x00001000u;
if (policylistmultiplesourcemergelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
policylistmultiplesourcemergelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PolicyListMultipleSourceMergeList)
return policylistmultiplesourcemergelist_;
}
inline void CloudPolicySettings::set_allocated_policylistmultiplesourcemergelist(::enterprise_management::StringListPolicyProto* policylistmultiplesourcemergelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(policylistmultiplesourcemergelist_);
}
if (policylistmultiplesourcemergelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
policylistmultiplesourcemergelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, policylistmultiplesourcemergelist, submessage_arena);
}
_has_bits_[7] |= 0x00001000u;
} else {
_has_bits_[7] &= ~0x00001000u;
}
policylistmultiplesourcemergelist_ = policylistmultiplesourcemergelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PolicyListMultipleSourceMergeList)
}

// optional .enterprise_management.StringListPolicyProto PolicyDictionaryMultipleSourceMergeList = 567;
inline bool CloudPolicySettings::has_policydictionarymultiplesourcemergelist() const {
return (_has_bits_[7] & 0x00004000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::policydictionarymultiplesourcemergelist() const {
const ::enterprise_management::StringListPolicyProto* p = policydictionarymultiplesourcemergelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PolicyDictionaryMultipleSourceMergeList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_policydictionarymultiplesourcemergelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PolicyDictionaryMultipleSourceMergeList)
_has_bits_[7] &= ~0x00004000u;
::enterprise_management::StringListPolicyProto* temp = policydictionarymultiplesourcemergelist_;
policydictionarymultiplesourcemergelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_policydictionarymultiplesourcemergelist() {
_has_bits_[7] |= 0x00004000u;
if (policydictionarymultiplesourcemergelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
policydictionarymultiplesourcemergelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PolicyDictionaryMultipleSourceMergeList)
return policydictionarymultiplesourcemergelist_;
}
inline void CloudPolicySettings::set_allocated_policydictionarymultiplesourcemergelist(::enterprise_management::StringListPolicyProto* policydictionarymultiplesourcemergelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(policydictionarymultiplesourcemergelist_);
}
if (policydictionarymultiplesourcemergelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
policydictionarymultiplesourcemergelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, policydictionarymultiplesourcemergelist, submessage_arena);
}
_has_bits_[7] |= 0x00004000u;
} else {
_has_bits_[7] &= ~0x00004000u;
}
policydictionarymultiplesourcemergelist_ = policydictionarymultiplesourcemergelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PolicyDictionaryMultipleSourceMergeList)
}

// optional .enterprise_management.StringListPolicyProto EnableExperimentalPolicies = 713;
inline bool CloudPolicySettings::has_enableexperimentalpolicies() const {
return (_has_bits_[9] & 0x00002000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::enableexperimentalpolicies() const {
const ::enterprise_management::StringListPolicyProto* p = enableexperimentalpolicies_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableExperimentalPolicies)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_enableexperimentalpolicies() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableExperimentalPolicies)
_has_bits_[9] &= ~0x00002000u;
::enterprise_management::StringListPolicyProto* temp = enableexperimentalpolicies_;
enableexperimentalpolicies_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_enableexperimentalpolicies() {
_has_bits_[9] |= 0x00002000u;
if (enableexperimentalpolicies_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
enableexperimentalpolicies_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableExperimentalPolicies)
return enableexperimentalpolicies_;
}
inline void CloudPolicySettings::set_allocated_enableexperimentalpolicies(::enterprise_management::StringListPolicyProto* enableexperimentalpolicies) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enableexperimentalpolicies_);
}
if (enableexperimentalpolicies) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
enableexperimentalpolicies = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enableexperimentalpolicies, submessage_arena);
}
_has_bits_[9] |= 0x00002000u;
} else {
_has_bits_[9] &= ~0x00002000u;
}
enableexperimentalpolicies_ = enableexperimentalpolicies;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableExperimentalPolicies)
}

// optional .enterprise_management.BooleanPolicyProto CloudPrintSubmitEnabled = 111;
inline bool CloudPolicySettings::has_cloudprintsubmitenabled() const {
return (_has_bits_[2] & 0x00400000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudprintsubmitenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = cloudprintsubmitenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudprintsubmitenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
_has_bits_[2] &= ~0x00400000u;
::enterprise_management::BooleanPolicyProto* temp = cloudprintsubmitenabled_;
cloudprintsubmitenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudprintsubmitenabled() {
_has_bits_[2] |= 0x00400000u;
if (cloudprintsubmitenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
cloudprintsubmitenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
return cloudprintsubmitenabled_;
}
inline void CloudPolicySettings::set_allocated_cloudprintsubmitenabled(::enterprise_management::BooleanPolicyProto* cloudprintsubmitenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudprintsubmitenabled_);
}
if (cloudprintsubmitenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cloudprintsubmitenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudprintsubmitenabled, submessage_arena);
}
_has_bits_[2] |= 0x00400000u;
} else {
_has_bits_[2] &= ~0x00400000u;
}
cloudprintsubmitenabled_ = cloudprintsubmitenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudPrintSubmitEnabled)
}

// optional .enterprise_management.BooleanPolicyProto DisablePrintPreview = 119;
inline bool CloudPolicySettings::has_disableprintpreview() const {
return (_has_bits_[2] & 0x02000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disableprintpreview() const {
const ::enterprise_management::BooleanPolicyProto* p = disableprintpreview_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisablePrintPreview)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disableprintpreview() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisablePrintPreview)
_has_bits_[2] &= ~0x02000000u;
::enterprise_management::BooleanPolicyProto* temp = disableprintpreview_;
disableprintpreview_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disableprintpreview() {
_has_bits_[2] |= 0x02000000u;
if (disableprintpreview_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
disableprintpreview_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisablePrintPreview)
return disableprintpreview_;
}
inline void CloudPolicySettings::set_allocated_disableprintpreview(::enterprise_management::BooleanPolicyProto* disableprintpreview) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disableprintpreview_);
}
if (disableprintpreview) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
disableprintpreview = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disableprintpreview, submessage_arena);
}
_has_bits_[2] |= 0x02000000u;
} else {
_has_bits_[2] &= ~0x02000000u;
}
disableprintpreview_ = disableprintpreview;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisablePrintPreview)
}

// optional .enterprise_management.BooleanPolicyProto PrintHeaderFooter = 482;
inline bool CloudPolicySettings::has_printheaderfooter() const {
return (_has_bits_[6] & 0x00400000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::printheaderfooter() const {
const ::enterprise_management::BooleanPolicyProto* p = printheaderfooter_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintHeaderFooter)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_printheaderfooter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintHeaderFooter)
_has_bits_[6] &= ~0x00400000u;
::enterprise_management::BooleanPolicyProto* temp = printheaderfooter_;
printheaderfooter_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_printheaderfooter() {
_has_bits_[6] |= 0x00400000u;
if (printheaderfooter_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
printheaderfooter_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintHeaderFooter)
return printheaderfooter_;
}
inline void CloudPolicySettings::set_allocated_printheaderfooter(::enterprise_management::BooleanPolicyProto* printheaderfooter) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(printheaderfooter_);
}
if (printheaderfooter) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
printheaderfooter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, printheaderfooter, submessage_arena);
}
_has_bits_[6] |= 0x00400000u;
} else {
_has_bits_[6] &= ~0x00400000u;
}
printheaderfooter_ = printheaderfooter;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintHeaderFooter)
}

// optional .enterprise_management.StringPolicyProto DefaultPrinterSelection = 310;
inline bool CloudPolicySettings::has_defaultprinterselection() const {
return (_has_bits_[4] & 0x00800000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultprinterselection() const {
const ::enterprise_management::StringPolicyProto* p = defaultprinterselection_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultprinterselection() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
_has_bits_[4] &= ~0x00800000u;
::enterprise_management::StringPolicyProto* temp = defaultprinterselection_;
defaultprinterselection_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultprinterselection() {
_has_bits_[4] |= 0x00800000u;
if (defaultprinterselection_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultprinterselection_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
return defaultprinterselection_;
}
inline void CloudPolicySettings::set_allocated_defaultprinterselection(::enterprise_management::StringPolicyProto* defaultprinterselection) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultprinterselection_);
}
if (defaultprinterselection) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultprinterselection = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultprinterselection, submessage_arena);
}
_has_bits_[4] |= 0x00800000u;
} else {
_has_bits_[4] &= ~0x00800000u;
}
defaultprinterselection_ = defaultprinterselection;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultPrinterSelection)
}

// optional .enterprise_management.BooleanPolicyProto EnableOnlineRevocationChecks = 131;
inline bool CloudPolicySettings::has_enableonlinerevocationchecks() const {
return (_has_bits_[2] & 0x04000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enableonlinerevocationchecks() const {
const ::enterprise_management::BooleanPolicyProto* p = enableonlinerevocationchecks_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enableonlinerevocationchecks() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
_has_bits_[2] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = enableonlinerevocationchecks_;
enableonlinerevocationchecks_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enableonlinerevocationchecks() {
_has_bits_[2] |= 0x04000000u;
if (enableonlinerevocationchecks_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
enableonlinerevocationchecks_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
return enableonlinerevocationchecks_;
}
inline void CloudPolicySettings::set_allocated_enableonlinerevocationchecks(::enterprise_management::BooleanPolicyProto* enableonlinerevocationchecks) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enableonlinerevocationchecks_);
}
if (enableonlinerevocationchecks) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
enableonlinerevocationchecks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enableonlinerevocationchecks, submessage_arena);
}
_has_bits_[2] |= 0x04000000u;
} else {
_has_bits_[2] &= ~0x04000000u;
}
enableonlinerevocationchecks_ = enableonlinerevocationchecks;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableOnlineRevocationChecks)
}

// optional .enterprise_management.BooleanPolicyProto RequireOnlineRevocationChecksForLocalAnchors = 237;
inline bool CloudPolicySettings::has_requireonlinerevocationchecksforlocalanchors() const {
return (_has_bits_[3] & 0x04000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::requireonlinerevocationchecksforlocalanchors() const {
const ::enterprise_management::BooleanPolicyProto* p = requireonlinerevocationchecksforlocalanchors_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_requireonlinerevocationchecksforlocalanchors() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
_has_bits_[3] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = requireonlinerevocationchecksforlocalanchors_;
requireonlinerevocationchecksforlocalanchors_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_requireonlinerevocationchecksforlocalanchors() {
_has_bits_[3] |= 0x04000000u;
if (requireonlinerevocationchecksforlocalanchors_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
requireonlinerevocationchecksforlocalanchors_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
return requireonlinerevocationchecksforlocalanchors_;
}
inline void CloudPolicySettings::set_allocated_requireonlinerevocationchecksforlocalanchors(::enterprise_management::BooleanPolicyProto* requireonlinerevocationchecksforlocalanchors) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(requireonlinerevocationchecksforlocalanchors_);
}
if (requireonlinerevocationchecksforlocalanchors) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
requireonlinerevocationchecksforlocalanchors = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, requireonlinerevocationchecksforlocalanchors, submessage_arena);
}
_has_bits_[3] |= 0x04000000u;
} else {
_has_bits_[3] &= ~0x04000000u;
}
requireonlinerevocationchecksforlocalanchors_ = requireonlinerevocationchecksforlocalanchors;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RequireOnlineRevocationChecksForLocalAnchors)
}

// optional .enterprise_management.BooleanPolicyProto ForceEphemeralProfiles = 247;
inline bool CloudPolicySettings::has_forceephemeralprofiles() const {
return (_has_bits_[3] & 0x20000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::forceephemeralprofiles() const {
const ::enterprise_management::BooleanPolicyProto* p = forceephemeralprofiles_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_forceephemeralprofiles() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
_has_bits_[3] &= ~0x20000000u;
::enterprise_management::BooleanPolicyProto* temp = forceephemeralprofiles_;
forceephemeralprofiles_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_forceephemeralprofiles() {
_has_bits_[3] |= 0x20000000u;
if (forceephemeralprofiles_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
forceephemeralprofiles_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
return forceephemeralprofiles_;
}
inline void CloudPolicySettings::set_allocated_forceephemeralprofiles(::enterprise_management::BooleanPolicyProto* forceephemeralprofiles) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(forceephemeralprofiles_);
}
if (forceephemeralprofiles) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
forceephemeralprofiles = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, forceephemeralprofiles, submessage_arena);
}
_has_bits_[3] |= 0x20000000u;
} else {
_has_bits_[3] &= ~0x20000000u;
}
forceephemeralprofiles_ = forceephemeralprofiles;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ForceEphemeralProfiles)
}

// optional .enterprise_management.BooleanPolicyProto BackgroundModeEnabled = 140;
inline bool CloudPolicySettings::has_backgroundmodeenabled() const {
return (_has_bits_[2] & 0x08000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::backgroundmodeenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = backgroundmodeenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_backgroundmodeenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
_has_bits_[2] &= ~0x08000000u;
::enterprise_management::BooleanPolicyProto* temp = backgroundmodeenabled_;
backgroundmodeenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_backgroundmodeenabled() {
_has_bits_[2] |= 0x08000000u;
if (backgroundmodeenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
backgroundmodeenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
return backgroundmodeenabled_;
}
inline void CloudPolicySettings::set_allocated_backgroundmodeenabled(::enterprise_management::BooleanPolicyProto* backgroundmodeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(backgroundmodeenabled_);
}
if (backgroundmodeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
backgroundmodeenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, backgroundmodeenabled, submessage_arena);
}
_has_bits_[2] |= 0x08000000u;
} else {
_has_bits_[2] &= ~0x08000000u;
}
backgroundmodeenabled_ = backgroundmodeenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BackgroundModeEnabled)
}

// optional .enterprise_management.StringPolicyProto RestrictSigninToPattern = 149;
inline bool CloudPolicySettings::has_restrictsignintopattern() const {
return (_has_bits_[2] & 0x10000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::restrictsignintopattern() const {
const ::enterprise_management::StringPolicyProto* p = restrictsignintopattern_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_restrictsignintopattern() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
_has_bits_[2] &= ~0x10000000u;
::enterprise_management::StringPolicyProto* temp = restrictsignintopattern_;
restrictsignintopattern_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_restrictsignintopattern() {
_has_bits_[2] |= 0x10000000u;
if (restrictsignintopattern_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
restrictsignintopattern_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
return restrictsignintopattern_;
}
inline void CloudPolicySettings::set_allocated_restrictsignintopattern(::enterprise_management::StringPolicyProto* restrictsignintopattern) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(restrictsignintopattern_);
}
if (restrictsignintopattern) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
restrictsignintopattern = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, restrictsignintopattern, submessage_arena);
}
_has_bits_[2] |= 0x10000000u;
} else {
_has_bits_[2] &= ~0x10000000u;
}
restrictsignintopattern_ = restrictsignintopattern;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RestrictSigninToPattern)
}

// optional .enterprise_management.BooleanPolicyProto DisableSafeBrowsingProceedAnyway = 152;
inline bool CloudPolicySettings::has_disablesafebrowsingproceedanyway() const {
return (_has_bits_[2] & 0x80000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disablesafebrowsingproceedanyway() const {
const ::enterprise_management::BooleanPolicyProto* p = disablesafebrowsingproceedanyway_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disablesafebrowsingproceedanyway() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
_has_bits_[2] &= ~0x80000000u;
::enterprise_management::BooleanPolicyProto* temp = disablesafebrowsingproceedanyway_;
disablesafebrowsingproceedanyway_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disablesafebrowsingproceedanyway() {
_has_bits_[2] |= 0x80000000u;
if (disablesafebrowsingproceedanyway_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
disablesafebrowsingproceedanyway_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
return disablesafebrowsingproceedanyway_;
}
inline void CloudPolicySettings::set_allocated_disablesafebrowsingproceedanyway(::enterprise_management::BooleanPolicyProto* disablesafebrowsingproceedanyway) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disablesafebrowsingproceedanyway_);
}
if (disablesafebrowsingproceedanyway) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
disablesafebrowsingproceedanyway = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disablesafebrowsingproceedanyway, submessage_arena);
}
_has_bits_[2] |= 0x80000000u;
} else {
_has_bits_[2] &= ~0x80000000u;
}
disablesafebrowsingproceedanyway_ = disablesafebrowsingproceedanyway;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableSafeBrowsingProceedAnyway)
}

// optional .enterprise_management.BooleanPolicyProto SpellCheckServiceEnabled = 153;
inline bool CloudPolicySettings::has_spellcheckserviceenabled() const {
return (_has_bits_[3] & 0x00000001u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::spellcheckserviceenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = spellcheckserviceenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_spellcheckserviceenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
_has_bits_[3] &= ~0x00000001u;
::enterprise_management::BooleanPolicyProto* temp = spellcheckserviceenabled_;
spellcheckserviceenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_spellcheckserviceenabled() {
_has_bits_[3] |= 0x00000001u;
if (spellcheckserviceenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
spellcheckserviceenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
return spellcheckserviceenabled_;
}
inline void CloudPolicySettings::set_allocated_spellcheckserviceenabled(::enterprise_management::BooleanPolicyProto* spellcheckserviceenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(spellcheckserviceenabled_);
}
if (spellcheckserviceenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
spellcheckserviceenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, spellcheckserviceenabled, submessage_arena);
}
_has_bits_[3] |= 0x00000001u;
} else {
_has_bits_[3] &= ~0x00000001u;
}
spellcheckserviceenabled_ = spellcheckserviceenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SpellCheckServiceEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AudioCaptureAllowed = 162;
inline bool CloudPolicySettings::has_audiocaptureallowed() const {
return (_has_bits_[3] & 0x00000010u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::audiocaptureallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = audiocaptureallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_audiocaptureallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
_has_bits_[3] &= ~0x00000010u;
::enterprise_management::BooleanPolicyProto* temp = audiocaptureallowed_;
audiocaptureallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_audiocaptureallowed() {
_has_bits_[3] |= 0x00000010u;
if (audiocaptureallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
audiocaptureallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
return audiocaptureallowed_;
}
inline void CloudPolicySettings::set_allocated_audiocaptureallowed(::enterprise_management::BooleanPolicyProto* audiocaptureallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(audiocaptureallowed_);
}
if (audiocaptureallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
audiocaptureallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, audiocaptureallowed, submessage_arena);
}
_has_bits_[3] |= 0x00000010u;
} else {
_has_bits_[3] &= ~0x00000010u;
}
audiocaptureallowed_ = audiocaptureallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AudioCaptureAllowed)
}

// optional .enterprise_management.StringListPolicyProto AudioCaptureAllowedUrls = 210;
inline bool CloudPolicySettings::has_audiocaptureallowedurls() const {
return (_has_bits_[3] & 0x00020000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::audiocaptureallowedurls() const {
const ::enterprise_management::StringListPolicyProto* p = audiocaptureallowedurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_audiocaptureallowedurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
_has_bits_[3] &= ~0x00020000u;
::enterprise_management::StringListPolicyProto* temp = audiocaptureallowedurls_;
audiocaptureallowedurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_audiocaptureallowedurls() {
_has_bits_[3] |= 0x00020000u;
if (audiocaptureallowedurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
audiocaptureallowedurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
return audiocaptureallowedurls_;
}
inline void CloudPolicySettings::set_allocated_audiocaptureallowedurls(::enterprise_management::StringListPolicyProto* audiocaptureallowedurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(audiocaptureallowedurls_);
}
if (audiocaptureallowedurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
audiocaptureallowedurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, audiocaptureallowedurls, submessage_arena);
}
_has_bits_[3] |= 0x00020000u;
} else {
_has_bits_[3] &= ~0x00020000u;
}
audiocaptureallowedurls_ = audiocaptureallowedurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AudioCaptureAllowedUrls)
}

// optional .enterprise_management.BooleanPolicyProto VideoCaptureAllowed = 169;
inline bool CloudPolicySettings::has_videocaptureallowed() const {
return (_has_bits_[3] & 0x00000100u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::videocaptureallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = videocaptureallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_videocaptureallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
_has_bits_[3] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = videocaptureallowed_;
videocaptureallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_videocaptureallowed() {
_has_bits_[3] |= 0x00000100u;
if (videocaptureallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
videocaptureallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
return videocaptureallowed_;
}
inline void CloudPolicySettings::set_allocated_videocaptureallowed(::enterprise_management::BooleanPolicyProto* videocaptureallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(videocaptureallowed_);
}
if (videocaptureallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
videocaptureallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, videocaptureallowed, submessage_arena);
}
_has_bits_[3] |= 0x00000100u;
} else {
_has_bits_[3] &= ~0x00000100u;
}
videocaptureallowed_ = videocaptureallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VideoCaptureAllowed)
}

// optional .enterprise_management.StringListPolicyProto VideoCaptureAllowedUrls = 211;
inline bool CloudPolicySettings::has_videocaptureallowedurls() const {
return (_has_bits_[3] & 0x00040000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::videocaptureallowedurls() const {
const ::enterprise_management::StringListPolicyProto* p = videocaptureallowedurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_videocaptureallowedurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
_has_bits_[3] &= ~0x00040000u;
::enterprise_management::StringListPolicyProto* temp = videocaptureallowedurls_;
videocaptureallowedurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_videocaptureallowedurls() {
_has_bits_[3] |= 0x00040000u;
if (videocaptureallowedurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
videocaptureallowedurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
return videocaptureallowedurls_;
}
inline void CloudPolicySettings::set_allocated_videocaptureallowedurls(::enterprise_management::StringListPolicyProto* videocaptureallowedurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(videocaptureallowedurls_);
}
if (videocaptureallowedurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
videocaptureallowedurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, videocaptureallowedurls, submessage_arena);
}
_has_bits_[3] |= 0x00040000u;
} else {
_has_bits_[3] &= ~0x00040000u;
}
videocaptureallowedurls_ = videocaptureallowedurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VideoCaptureAllowedUrls)
}

// optional .enterprise_management.BooleanPolicyProto DisableScreenshots = 155;
inline bool CloudPolicySettings::has_disablescreenshots() const {
return (_has_bits_[3] & 0x00000002u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::disablescreenshots() const {
const ::enterprise_management::BooleanPolicyProto* p = disablescreenshots_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DisableScreenshots)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_disablescreenshots() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DisableScreenshots)
_has_bits_[3] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = disablescreenshots_;
disablescreenshots_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_disablescreenshots() {
_has_bits_[3] |= 0x00000002u;
if (disablescreenshots_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
disablescreenshots_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DisableScreenshots)
return disablescreenshots_;
}
inline void CloudPolicySettings::set_allocated_disablescreenshots(::enterprise_management::BooleanPolicyProto* disablescreenshots) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(disablescreenshots_);
}
if (disablescreenshots) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
disablescreenshots = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, disablescreenshots, submessage_arena);
}
_has_bits_[3] |= 0x00000002u;
} else {
_has_bits_[3] &= ~0x00000002u;
}
disablescreenshots_ = disablescreenshots;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DisableScreenshots)
}

// optional .enterprise_management.BooleanPolicyProto BuiltInDnsClientEnabled = 167;
inline bool CloudPolicySettings::has_builtindnsclientenabled() const {
return (_has_bits_[3] & 0x00000080u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::builtindnsclientenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = builtindnsclientenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_builtindnsclientenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
_has_bits_[3] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = builtindnsclientenabled_;
builtindnsclientenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_builtindnsclientenabled() {
_has_bits_[3] |= 0x00000080u;
if (builtindnsclientenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
builtindnsclientenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
return builtindnsclientenabled_;
}
inline void CloudPolicySettings::set_allocated_builtindnsclientenabled(::enterprise_management::BooleanPolicyProto* builtindnsclientenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(builtindnsclientenabled_);
}
if (builtindnsclientenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
builtindnsclientenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, builtindnsclientenabled, submessage_arena);
}
_has_bits_[3] |= 0x00000080u;
} else {
_has_bits_[3] &= ~0x00000080u;
}
builtindnsclientenabled_ = builtindnsclientenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BuiltInDnsClientEnabled)
}

// optional .enterprise_management.StringPolicyProto DnsOverHttpsMode = 584;
inline bool CloudPolicySettings::has_dnsoverhttpsmode() const {
return (_has_bits_[7] & 0x00080000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::dnsoverhttpsmode() const {
const ::enterprise_management::StringPolicyProto* p = dnsoverhttpsmode_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DnsOverHttpsMode)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_dnsoverhttpsmode() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DnsOverHttpsMode)
_has_bits_[7] &= ~0x00080000u;
::enterprise_management::StringPolicyProto* temp = dnsoverhttpsmode_;
dnsoverhttpsmode_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_dnsoverhttpsmode() {
_has_bits_[7] |= 0x00080000u;
if (dnsoverhttpsmode_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
dnsoverhttpsmode_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DnsOverHttpsMode)
return dnsoverhttpsmode_;
}
inline void CloudPolicySettings::set_allocated_dnsoverhttpsmode(::enterprise_management::StringPolicyProto* dnsoverhttpsmode) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dnsoverhttpsmode_);
}
if (dnsoverhttpsmode) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
dnsoverhttpsmode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, dnsoverhttpsmode, submessage_arena);
}
_has_bits_[7] |= 0x00080000u;
} else {
_has_bits_[7] &= ~0x00080000u;
}
dnsoverhttpsmode_ = dnsoverhttpsmode;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DnsOverHttpsMode)
}

// optional .enterprise_management.StringPolicyProto DnsOverHttpsTemplates = 644;
inline bool CloudPolicySettings::has_dnsoverhttpstemplates() const {
return (_has_bits_[8] & 0x00010000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::dnsoverhttpstemplates() const {
const ::enterprise_management::StringPolicyProto* p = dnsoverhttpstemplates_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DnsOverHttpsTemplates)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_dnsoverhttpstemplates() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DnsOverHttpsTemplates)
_has_bits_[8] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = dnsoverhttpstemplates_;
dnsoverhttpstemplates_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_dnsoverhttpstemplates() {
_has_bits_[8] |= 0x00010000u;
if (dnsoverhttpstemplates_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
dnsoverhttpstemplates_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DnsOverHttpsTemplates)
return dnsoverhttpstemplates_;
}
inline void CloudPolicySettings::set_allocated_dnsoverhttpstemplates(::enterprise_management::StringPolicyProto* dnsoverhttpstemplates) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dnsoverhttpstemplates_);
}
if (dnsoverhttpstemplates) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
dnsoverhttpstemplates = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, dnsoverhttpstemplates, submessage_arena);
}
_has_bits_[8] |= 0x00010000u;
} else {
_has_bits_[8] &= ~0x00010000u;
}
dnsoverhttpstemplates_ = dnsoverhttpstemplates;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DnsOverHttpsTemplates)
}

// optional .enterprise_management.BooleanPolicyProto FullscreenAllowed = 242;
inline bool CloudPolicySettings::has_fullscreenallowed() const {
return (_has_bits_[3] & 0x10000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::fullscreenallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = fullscreenallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.FullscreenAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_fullscreenallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.FullscreenAllowed)
_has_bits_[3] &= ~0x10000000u;
::enterprise_management::BooleanPolicyProto* temp = fullscreenallowed_;
fullscreenallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_fullscreenallowed() {
_has_bits_[3] |= 0x10000000u;
if (fullscreenallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
fullscreenallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.FullscreenAllowed)
return fullscreenallowed_;
}
inline void CloudPolicySettings::set_allocated_fullscreenallowed(::enterprise_management::BooleanPolicyProto* fullscreenallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(fullscreenallowed_);
}
if (fullscreenallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
fullscreenallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, fullscreenallowed, submessage_arena);
}
_has_bits_[3] |= 0x10000000u;
} else {
_has_bits_[3] &= ~0x10000000u;
}
fullscreenallowed_ = fullscreenallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.FullscreenAllowed)
}

// optional .enterprise_management.BooleanPolicyProto SharedClipboardEnabled = 612;
inline bool CloudPolicySettings::has_sharedclipboardenabled() const {
return (_has_bits_[8] & 0x00000002u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::sharedclipboardenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = sharedclipboardenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_sharedclipboardenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
_has_bits_[8] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = sharedclipboardenabled_;
sharedclipboardenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_sharedclipboardenabled() {
_has_bits_[8] |= 0x00000002u;
if (sharedclipboardenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
sharedclipboardenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
return sharedclipboardenabled_;
}
inline void CloudPolicySettings::set_allocated_sharedclipboardenabled(::enterprise_management::BooleanPolicyProto* sharedclipboardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sharedclipboardenabled_);
}
if (sharedclipboardenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
sharedclipboardenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sharedclipboardenabled, submessage_arena);
}
_has_bits_[8] |= 0x00000002u;
} else {
_has_bits_[8] &= ~0x00000002u;
}
sharedclipboardenabled_ = sharedclipboardenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SharedClipboardEnabled)
}

// optional .enterprise_management.BooleanPolicyProto HideWebStoreIcon = 191;
inline bool CloudPolicySettings::has_hidewebstoreicon() const {
return (_has_bits_[3] & 0x00000800u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::hidewebstoreicon() const {
const ::enterprise_management::BooleanPolicyProto* p = hidewebstoreicon_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_hidewebstoreicon() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
_has_bits_[3] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = hidewebstoreicon_;
hidewebstoreicon_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_hidewebstoreicon() {
_has_bits_[3] |= 0x00000800u;
if (hidewebstoreicon_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
hidewebstoreicon_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
return hidewebstoreicon_;
}
inline void CloudPolicySettings::set_allocated_hidewebstoreicon(::enterprise_management::BooleanPolicyProto* hidewebstoreicon) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hidewebstoreicon_);
}
if (hidewebstoreicon) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
hidewebstoreicon = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, hidewebstoreicon, submessage_arena);
}
_has_bits_[3] |= 0x00000800u;
} else {
_has_bits_[3] &= ~0x00000800u;
}
hidewebstoreicon_ = hidewebstoreicon;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HideWebStoreIcon)
}

// optional .enterprise_management.StringPolicyProto VariationsRestrictParameter = 198;
inline bool CloudPolicySettings::has_variationsrestrictparameter() const {
return (_has_bits_[3] & 0x00002000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::variationsrestrictparameter() const {
const ::enterprise_management::StringPolicyProto* p = variationsrestrictparameter_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_variationsrestrictparameter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
_has_bits_[3] &= ~0x00002000u;
::enterprise_management::StringPolicyProto* temp = variationsrestrictparameter_;
variationsrestrictparameter_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_variationsrestrictparameter() {
_has_bits_[3] |= 0x00002000u;
if (variationsrestrictparameter_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
variationsrestrictparameter_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
return variationsrestrictparameter_;
}
inline void CloudPolicySettings::set_allocated_variationsrestrictparameter(::enterprise_management::StringPolicyProto* variationsrestrictparameter) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(variationsrestrictparameter_);
}
if (variationsrestrictparameter) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
variationsrestrictparameter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, variationsrestrictparameter, submessage_arena);
}
_has_bits_[3] |= 0x00002000u;
} else {
_has_bits_[3] &= ~0x00002000u;
}
variationsrestrictparameter_ = variationsrestrictparameter;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.VariationsRestrictParameter)
}

// optional .enterprise_management.IntegerPolicyProto ChromeVariations = 665;
inline bool CloudPolicySettings::has_chromevariations() const {
return (_has_bits_[8] & 0x10000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::chromevariations() const {
const ::enterprise_management::IntegerPolicyProto* p = chromevariations_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ChromeVariations)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_chromevariations() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ChromeVariations)
_has_bits_[8] &= ~0x10000000u;
::enterprise_management::IntegerPolicyProto* temp = chromevariations_;
chromevariations_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_chromevariations() {
_has_bits_[8] |= 0x10000000u;
if (chromevariations_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
chromevariations_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ChromeVariations)
return chromevariations_;
}
inline void CloudPolicySettings::set_allocated_chromevariations(::enterprise_management::IntegerPolicyProto* chromevariations) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(chromevariations_);
}
if (chromevariations) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
chromevariations = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, chromevariations, submessage_arena);
}
_has_bits_[8] |= 0x10000000u;
} else {
_has_bits_[8] &= ~0x10000000u;
}
chromevariations_ = chromevariations;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ChromeVariations)
}

// optional .enterprise_management.IntegerPolicyProto ContentPackDefaultFilteringBehavior = 206;
inline bool CloudPolicySettings::has_contentpackdefaultfilteringbehavior() const {
return (_has_bits_[3] & 0x00004000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::contentpackdefaultfilteringbehavior() const {
const ::enterprise_management::IntegerPolicyProto* p = contentpackdefaultfilteringbehavior_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_contentpackdefaultfilteringbehavior() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
_has_bits_[3] &= ~0x00004000u;
::enterprise_management::IntegerPolicyProto* temp = contentpackdefaultfilteringbehavior_;
contentpackdefaultfilteringbehavior_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_contentpackdefaultfilteringbehavior() {
_has_bits_[3] |= 0x00004000u;
if (contentpackdefaultfilteringbehavior_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
contentpackdefaultfilteringbehavior_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
return contentpackdefaultfilteringbehavior_;
}
inline void CloudPolicySettings::set_allocated_contentpackdefaultfilteringbehavior(::enterprise_management::IntegerPolicyProto* contentpackdefaultfilteringbehavior) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(contentpackdefaultfilteringbehavior_);
}
if (contentpackdefaultfilteringbehavior) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
contentpackdefaultfilteringbehavior = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, contentpackdefaultfilteringbehavior, submessage_arena);
}
_has_bits_[3] |= 0x00004000u;
} else {
_has_bits_[3] &= ~0x00004000u;
}
contentpackdefaultfilteringbehavior_ = contentpackdefaultfilteringbehavior;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContentPackDefaultFilteringBehavior)
}

// optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorHosts = 207;
inline bool CloudPolicySettings::has_contentpackmanualbehaviorhosts() const {
return (_has_bits_[3] & 0x00008000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::contentpackmanualbehaviorhosts() const {
const ::enterprise_management::StringPolicyProto* p = contentpackmanualbehaviorhosts_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_contentpackmanualbehaviorhosts() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
_has_bits_[3] &= ~0x00008000u;
::enterprise_management::StringPolicyProto* temp = contentpackmanualbehaviorhosts_;
contentpackmanualbehaviorhosts_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_contentpackmanualbehaviorhosts() {
_has_bits_[3] |= 0x00008000u;
if (contentpackmanualbehaviorhosts_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
contentpackmanualbehaviorhosts_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
return contentpackmanualbehaviorhosts_;
}
inline void CloudPolicySettings::set_allocated_contentpackmanualbehaviorhosts(::enterprise_management::StringPolicyProto* contentpackmanualbehaviorhosts) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(contentpackmanualbehaviorhosts_);
}
if (contentpackmanualbehaviorhosts) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
contentpackmanualbehaviorhosts = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, contentpackmanualbehaviorhosts, submessage_arena);
}
_has_bits_[3] |= 0x00008000u;
} else {
_has_bits_[3] &= ~0x00008000u;
}
contentpackmanualbehaviorhosts_ = contentpackmanualbehaviorhosts;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorHosts)
}

// optional .enterprise_management.StringPolicyProto ContentPackManualBehaviorURLs = 208;
inline bool CloudPolicySettings::has_contentpackmanualbehaviorurls() const {
return (_has_bits_[3] & 0x00010000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::contentpackmanualbehaviorurls() const {
const ::enterprise_management::StringPolicyProto* p = contentpackmanualbehaviorurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_contentpackmanualbehaviorurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
_has_bits_[3] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = contentpackmanualbehaviorurls_;
contentpackmanualbehaviorurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_contentpackmanualbehaviorurls() {
_has_bits_[3] |= 0x00010000u;
if (contentpackmanualbehaviorurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
contentpackmanualbehaviorurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
return contentpackmanualbehaviorurls_;
}
inline void CloudPolicySettings::set_allocated_contentpackmanualbehaviorurls(::enterprise_management::StringPolicyProto* contentpackmanualbehaviorurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(contentpackmanualbehaviorurls_);
}
if (contentpackmanualbehaviorurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
contentpackmanualbehaviorurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, contentpackmanualbehaviorurls, submessage_arena);
}
_has_bits_[3] |= 0x00010000u;
} else {
_has_bits_[3] &= ~0x00010000u;
}
contentpackmanualbehaviorurls_ = contentpackmanualbehaviorurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ContentPackManualBehaviorURLs)
}

// optional .enterprise_management.StringPolicyProto ManagedBookmarks = 229;
inline bool CloudPolicySettings::has_managedbookmarks() const {
return (_has_bits_[3] & 0x00080000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::managedbookmarks() const {
const ::enterprise_management::StringPolicyProto* p = managedbookmarks_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ManagedBookmarks)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_managedbookmarks() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ManagedBookmarks)
_has_bits_[3] &= ~0x00080000u;
::enterprise_management::StringPolicyProto* temp = managedbookmarks_;
managedbookmarks_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_managedbookmarks() {
_has_bits_[3] |= 0x00080000u;
if (managedbookmarks_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
managedbookmarks_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ManagedBookmarks)
return managedbookmarks_;
}
inline void CloudPolicySettings::set_allocated_managedbookmarks(::enterprise_management::StringPolicyProto* managedbookmarks) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(managedbookmarks_);
}
if (managedbookmarks) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
managedbookmarks = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, managedbookmarks, submessage_arena);
}
_has_bits_[3] |= 0x00080000u;
} else {
_has_bits_[3] &= ~0x00080000u;
}
managedbookmarks_ = managedbookmarks;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ManagedBookmarks)
}

// optional .enterprise_management.StringListPolicyProto EnableDeprecatedWebPlatformFeatures = 272;
inline bool CloudPolicySettings::has_enabledeprecatedwebplatformfeatures() const {
return (_has_bits_[4] & 0x00000080u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::enabledeprecatedwebplatformfeatures() const {
const ::enterprise_management::StringListPolicyProto* p = enabledeprecatedwebplatformfeatures_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_enabledeprecatedwebplatformfeatures() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
_has_bits_[4] &= ~0x00000080u;
::enterprise_management::StringListPolicyProto* temp = enabledeprecatedwebplatformfeatures_;
enabledeprecatedwebplatformfeatures_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_enabledeprecatedwebplatformfeatures() {
_has_bits_[4] |= 0x00000080u;
if (enabledeprecatedwebplatformfeatures_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
enabledeprecatedwebplatformfeatures_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
return enabledeprecatedwebplatformfeatures_;
}
inline void CloudPolicySettings::set_allocated_enabledeprecatedwebplatformfeatures(::enterprise_management::StringListPolicyProto* enabledeprecatedwebplatformfeatures) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enabledeprecatedwebplatformfeatures_);
}
if (enabledeprecatedwebplatformfeatures) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
enabledeprecatedwebplatformfeatures = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enabledeprecatedwebplatformfeatures, submessage_arena);
}
_has_bits_[4] |= 0x00000080u;
} else {
_has_bits_[4] &= ~0x00000080u;
}
enabledeprecatedwebplatformfeatures_ = enabledeprecatedwebplatformfeatures;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableDeprecatedWebPlatformFeatures)
}

// optional .enterprise_management.BooleanPolicyProto BrowserGuestModeEnabled = 277;
inline bool CloudPolicySettings::has_browserguestmodeenabled() const {
return (_has_bits_[4] & 0x00000200u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browserguestmodeenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = browserguestmodeenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browserguestmodeenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
_has_bits_[4] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = browserguestmodeenabled_;
browserguestmodeenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browserguestmodeenabled() {
_has_bits_[4] |= 0x00000200u;
if (browserguestmodeenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
browserguestmodeenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
return browserguestmodeenabled_;
}
inline void CloudPolicySettings::set_allocated_browserguestmodeenabled(::enterprise_management::BooleanPolicyProto* browserguestmodeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browserguestmodeenabled_);
}
if (browserguestmodeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browserguestmodeenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browserguestmodeenabled, submessage_arena);
}
_has_bits_[4] |= 0x00000200u;
} else {
_has_bits_[4] &= ~0x00000200u;
}
browserguestmodeenabled_ = browserguestmodeenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserGuestModeEnabled)
}

// optional .enterprise_management.BooleanPolicyProto BrowserGuestModeEnforced = 576;
inline bool CloudPolicySettings::has_browserguestmodeenforced() const {
return (_has_bits_[7] & 0x00020000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browserguestmodeenforced() const {
const ::enterprise_management::BooleanPolicyProto* p = browserguestmodeenforced_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserGuestModeEnforced)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browserguestmodeenforced() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserGuestModeEnforced)
_has_bits_[7] &= ~0x00020000u;
::enterprise_management::BooleanPolicyProto* temp = browserguestmodeenforced_;
browserguestmodeenforced_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browserguestmodeenforced() {
_has_bits_[7] |= 0x00020000u;
if (browserguestmodeenforced_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
browserguestmodeenforced_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserGuestModeEnforced)
return browserguestmodeenforced_;
}
inline void CloudPolicySettings::set_allocated_browserguestmodeenforced(::enterprise_management::BooleanPolicyProto* browserguestmodeenforced) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browserguestmodeenforced_);
}
if (browserguestmodeenforced) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browserguestmodeenforced = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browserguestmodeenforced, submessage_arena);
}
_has_bits_[7] |= 0x00020000u;
} else {
_has_bits_[7] &= ~0x00020000u;
}
browserguestmodeenforced_ = browserguestmodeenforced;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserGuestModeEnforced)
}

// optional .enterprise_management.BooleanPolicyProto BrowserAddPersonEnabled = 278;
inline bool CloudPolicySettings::has_browseraddpersonenabled() const {
return (_has_bits_[4] & 0x00000400u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browseraddpersonenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = browseraddpersonenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browseraddpersonenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
_has_bits_[4] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = browseraddpersonenabled_;
browseraddpersonenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browseraddpersonenabled() {
_has_bits_[4] |= 0x00000400u;
if (browseraddpersonenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
browseraddpersonenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
return browseraddpersonenabled_;
}
inline void CloudPolicySettings::set_allocated_browseraddpersonenabled(::enterprise_management::BooleanPolicyProto* browseraddpersonenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browseraddpersonenabled_);
}
if (browseraddpersonenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browseraddpersonenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browseraddpersonenabled, submessage_arena);
}
_has_bits_[4] |= 0x00000400u;
} else {
_has_bits_[4] &= ~0x00000400u;
}
browseraddpersonenabled_ = browseraddpersonenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserAddPersonEnabled)
}

// optional .enterprise_management.IntegerPolicyProto BrowserSignin = 489;
inline bool CloudPolicySettings::has_browsersignin() const {
return (_has_bits_[6] & 0x02000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::browsersignin() const {
const ::enterprise_management::IntegerPolicyProto* p = browsersignin_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserSignin)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_browsersignin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserSignin)
_has_bits_[6] &= ~0x02000000u;
::enterprise_management::IntegerPolicyProto* temp = browsersignin_;
browsersignin_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_browsersignin() {
_has_bits_[6] |= 0x02000000u;
if (browsersignin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
browsersignin_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserSignin)
return browsersignin_;
}
inline void CloudPolicySettings::set_allocated_browsersignin(::enterprise_management::IntegerPolicyProto* browsersignin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browsersignin_);
}
if (browsersignin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browsersignin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browsersignin, submessage_arena);
}
_has_bits_[6] |= 0x02000000u;
} else {
_has_bits_[6] &= ~0x02000000u;
}
browsersignin_ = browsersignin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserSignin)
}

// optional .enterprise_management.StringPolicyProto SSLVersionMin = 281;
inline bool CloudPolicySettings::has_sslversionmin() const {
return (_has_bits_[4] & 0x00002000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::sslversionmin() const {
const ::enterprise_management::StringPolicyProto* p = sslversionmin_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLVersionMin)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_sslversionmin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLVersionMin)
_has_bits_[4] &= ~0x00002000u;
::enterprise_management::StringPolicyProto* temp = sslversionmin_;
sslversionmin_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_sslversionmin() {
_has_bits_[4] |= 0x00002000u;
if (sslversionmin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
sslversionmin_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLVersionMin)
return sslversionmin_;
}
inline void CloudPolicySettings::set_allocated_sslversionmin(::enterprise_management::StringPolicyProto* sslversionmin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslversionmin_);
}
if (sslversionmin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
sslversionmin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sslversionmin, submessage_arena);
}
_has_bits_[4] |= 0x00002000u;
} else {
_has_bits_[4] &= ~0x00002000u;
}
sslversionmin_ = sslversionmin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLVersionMin)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForUrls = 337;
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforurls() const {
return (_has_bits_[4] & 0x80000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforurls() const {
const ::enterprise_management::StringListPolicyProto* p = certificatetransparencyenforcementdisabledforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
_has_bits_[4] &= ~0x80000000u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforurls_;
certificatetransparencyenforcementdisabledforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforurls() {
_has_bits_[4] |= 0x80000000u;
if (certificatetransparencyenforcementdisabledforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
certificatetransparencyenforcementdisabledforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
return certificatetransparencyenforcementdisabledforurls_;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforurls(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforurls_);
}
if (certificatetransparencyenforcementdisabledforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
certificatetransparencyenforcementdisabledforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, certificatetransparencyenforcementdisabledforurls, submessage_arena);
}
_has_bits_[4] |= 0x80000000u;
} else {
_has_bits_[4] &= ~0x80000000u;
}
certificatetransparencyenforcementdisabledforurls_ = certificatetransparencyenforcementdisabledforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForUrls)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForCas = 437;
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforcas() const {
return (_has_bits_[6] & 0x00000008u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforcas() const {
const ::enterprise_management::StringListPolicyProto* p = certificatetransparencyenforcementdisabledforcas_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforcas() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
_has_bits_[6] &= ~0x00000008u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforcas_;
certificatetransparencyenforcementdisabledforcas_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforcas() {
_has_bits_[6] |= 0x00000008u;
if (certificatetransparencyenforcementdisabledforcas_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
certificatetransparencyenforcementdisabledforcas_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
return certificatetransparencyenforcementdisabledforcas_;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforcas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforcas) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforcas_);
}
if (certificatetransparencyenforcementdisabledforcas) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
certificatetransparencyenforcementdisabledforcas = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, certificatetransparencyenforcementdisabledforcas, submessage_arena);
}
_has_bits_[6] |= 0x00000008u;
} else {
_has_bits_[6] &= ~0x00000008u;
}
certificatetransparencyenforcementdisabledforcas_ = certificatetransparencyenforcementdisabledforcas;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForCas)
}

// optional .enterprise_management.StringListPolicyProto CertificateTransparencyEnforcementDisabledForLegacyCas = 438;
inline bool CloudPolicySettings::has_certificatetransparencyenforcementdisabledforlegacycas() const {
return (_has_bits_[6] & 0x00000010u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::certificatetransparencyenforcementdisabledforlegacycas() const {
const ::enterprise_management::StringListPolicyProto* p = certificatetransparencyenforcementdisabledforlegacycas_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_certificatetransparencyenforcementdisabledforlegacycas() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
_has_bits_[6] &= ~0x00000010u;
::enterprise_management::StringListPolicyProto* temp = certificatetransparencyenforcementdisabledforlegacycas_;
certificatetransparencyenforcementdisabledforlegacycas_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_certificatetransparencyenforcementdisabledforlegacycas() {
_has_bits_[6] |= 0x00000010u;
if (certificatetransparencyenforcementdisabledforlegacycas_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
certificatetransparencyenforcementdisabledforlegacycas_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
return certificatetransparencyenforcementdisabledforlegacycas_;
}
inline void CloudPolicySettings::set_allocated_certificatetransparencyenforcementdisabledforlegacycas(::enterprise_management::StringListPolicyProto* certificatetransparencyenforcementdisabledforlegacycas) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(certificatetransparencyenforcementdisabledforlegacycas_);
}
if (certificatetransparencyenforcementdisabledforlegacycas) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
certificatetransparencyenforcementdisabledforlegacycas = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, certificatetransparencyenforcementdisabledforlegacycas, submessage_arena);
}
_has_bits_[6] |= 0x00000010u;
} else {
_has_bits_[6] &= ~0x00000010u;
}
certificatetransparencyenforcementdisabledforlegacycas_ = certificatetransparencyenforcementdisabledforlegacycas;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CertificateTransparencyEnforcementDisabledForLegacyCas)
}

// optional .enterprise_management.BooleanPolicyProto SSLErrorOverrideAllowed = 302;
inline bool CloudPolicySettings::has_sslerroroverrideallowed() const {
return (_has_bits_[4] & 0x00100000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::sslerroroverrideallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = sslerroroverrideallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_sslerroroverrideallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
_has_bits_[4] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = sslerroroverrideallowed_;
sslerroroverrideallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_sslerroroverrideallowed() {
_has_bits_[4] |= 0x00100000u;
if (sslerroroverrideallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
sslerroroverrideallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
return sslerroroverrideallowed_;
}
inline void CloudPolicySettings::set_allocated_sslerroroverrideallowed(::enterprise_management::BooleanPolicyProto* sslerroroverrideallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sslerroroverrideallowed_);
}
if (sslerroroverrideallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
sslerroroverrideallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sslerroroverrideallowed, submessage_arena);
}
_has_bits_[4] |= 0x00100000u;
} else {
_has_bits_[4] &= ~0x00100000u;
}
sslerroroverrideallowed_ = sslerroroverrideallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SSLErrorOverrideAllowed)
}

// optional .enterprise_management.BooleanPolicyProto QuicAllowed = 303;
inline bool CloudPolicySettings::has_quicallowed() const {
return (_has_bits_[4] & 0x00200000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::quicallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = quicallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.QuicAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_quicallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.QuicAllowed)
_has_bits_[4] &= ~0x00200000u;
::enterprise_management::BooleanPolicyProto* temp = quicallowed_;
quicallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_quicallowed() {
_has_bits_[4] |= 0x00200000u;
if (quicallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
quicallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.QuicAllowed)
return quicallowed_;
}
inline void CloudPolicySettings::set_allocated_quicallowed(::enterprise_management::BooleanPolicyProto* quicallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(quicallowed_);
}
if (quicallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
quicallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, quicallowed, submessage_arena);
}
_has_bits_[4] |= 0x00200000u;
} else {
_has_bits_[4] &= ~0x00200000u;
}
quicallowed_ = quicallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.QuicAllowed)
}

// optional .enterprise_management.BooleanPolicyProto HardwareAccelerationModeEnabled = 306;
inline bool CloudPolicySettings::has_hardwareaccelerationmodeenabled() const {
return (_has_bits_[4] & 0x00400000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::hardwareaccelerationmodeenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = hardwareaccelerationmodeenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_hardwareaccelerationmodeenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
_has_bits_[4] &= ~0x00400000u;
::enterprise_management::BooleanPolicyProto* temp = hardwareaccelerationmodeenabled_;
hardwareaccelerationmodeenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_hardwareaccelerationmodeenabled() {
_has_bits_[4] |= 0x00400000u;
if (hardwareaccelerationmodeenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
hardwareaccelerationmodeenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
return hardwareaccelerationmodeenabled_;
}
inline void CloudPolicySettings::set_allocated_hardwareaccelerationmodeenabled(::enterprise_management::BooleanPolicyProto* hardwareaccelerationmodeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hardwareaccelerationmodeenabled_);
}
if (hardwareaccelerationmodeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
hardwareaccelerationmodeenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, hardwareaccelerationmodeenabled, submessage_arena);
}
_has_bits_[4] |= 0x00400000u;
} else {
_has_bits_[4] &= ~0x00400000u;
}
hardwareaccelerationmodeenabled_ = hardwareaccelerationmodeenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HardwareAccelerationModeEnabled)
}

// optional .enterprise_management.BooleanPolicyProto SuppressUnsupportedOSWarning = 326;
inline bool CloudPolicySettings::has_suppressunsupportedoswarning() const {
return (_has_bits_[4] & 0x08000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::suppressunsupportedoswarning() const {
const ::enterprise_management::BooleanPolicyProto* p = suppressunsupportedoswarning_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_suppressunsupportedoswarning() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
_has_bits_[4] &= ~0x08000000u;
::enterprise_management::BooleanPolicyProto* temp = suppressunsupportedoswarning_;
suppressunsupportedoswarning_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_suppressunsupportedoswarning() {
_has_bits_[4] |= 0x08000000u;
if (suppressunsupportedoswarning_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
suppressunsupportedoswarning_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
return suppressunsupportedoswarning_;
}
inline void CloudPolicySettings::set_allocated_suppressunsupportedoswarning(::enterprise_management::BooleanPolicyProto* suppressunsupportedoswarning) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(suppressunsupportedoswarning_);
}
if (suppressunsupportedoswarning) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
suppressunsupportedoswarning = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, suppressunsupportedoswarning, submessage_arena);
}
_has_bits_[4] |= 0x08000000u;
} else {
_has_bits_[4] &= ~0x08000000u;
}
suppressunsupportedoswarning_ = suppressunsupportedoswarning;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SuppressUnsupportedOSWarning)
}

// optional .enterprise_management.BooleanPolicyProto TaskManagerEndProcessEnabled = 329;
inline bool CloudPolicySettings::has_taskmanagerendprocessenabled() const {
return (_has_bits_[4] & 0x10000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::taskmanagerendprocessenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = taskmanagerendprocessenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_taskmanagerendprocessenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
_has_bits_[4] &= ~0x10000000u;
::enterprise_management::BooleanPolicyProto* temp = taskmanagerendprocessenabled_;
taskmanagerendprocessenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_taskmanagerendprocessenabled() {
_has_bits_[4] |= 0x10000000u;
if (taskmanagerendprocessenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
taskmanagerendprocessenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
return taskmanagerendprocessenabled_;
}
inline void CloudPolicySettings::set_allocated_taskmanagerendprocessenabled(::enterprise_management::BooleanPolicyProto* taskmanagerendprocessenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(taskmanagerendprocessenabled_);
}
if (taskmanagerendprocessenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
taskmanagerendprocessenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, taskmanagerendprocessenabled, submessage_arena);
}
_has_bits_[4] |= 0x10000000u;
} else {
_has_bits_[4] &= ~0x10000000u;
}
taskmanagerendprocessenabled_ = taskmanagerendprocessenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TaskManagerEndProcessEnabled)
}

// optional .enterprise_management.StringPolicyProto AllowedDomainsForApps = 333;
inline bool CloudPolicySettings::has_alloweddomainsforapps() const {
return (_has_bits_[4] & 0x20000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::alloweddomainsforapps() const {
const ::enterprise_management::StringPolicyProto* p = alloweddomainsforapps_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_alloweddomainsforapps() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
_has_bits_[4] &= ~0x20000000u;
::enterprise_management::StringPolicyProto* temp = alloweddomainsforapps_;
alloweddomainsforapps_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_alloweddomainsforapps() {
_has_bits_[4] |= 0x20000000u;
if (alloweddomainsforapps_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
alloweddomainsforapps_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
return alloweddomainsforapps_;
}
inline void CloudPolicySettings::set_allocated_alloweddomainsforapps(::enterprise_management::StringPolicyProto* alloweddomainsforapps) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alloweddomainsforapps_);
}
if (alloweddomainsforapps) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
alloweddomainsforapps = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, alloweddomainsforapps, submessage_arena);
}
_has_bits_[4] |= 0x20000000u;
} else {
_has_bits_[4] &= ~0x20000000u;
}
alloweddomainsforapps_ = alloweddomainsforapps;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowedDomainsForApps)
}

// optional .enterprise_management.BooleanPolicyProto EnableMediaRouter = 335;
inline bool CloudPolicySettings::has_enablemediarouter() const {
return (_has_bits_[4] & 0x40000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enablemediarouter() const {
const ::enterprise_management::BooleanPolicyProto* p = enablemediarouter_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnableMediaRouter)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enablemediarouter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnableMediaRouter)
_has_bits_[4] &= ~0x40000000u;
::enterprise_management::BooleanPolicyProto* temp = enablemediarouter_;
enablemediarouter_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enablemediarouter() {
_has_bits_[4] |= 0x40000000u;
if (enablemediarouter_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
enablemediarouter_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnableMediaRouter)
return enablemediarouter_;
}
inline void CloudPolicySettings::set_allocated_enablemediarouter(::enterprise_management::BooleanPolicyProto* enablemediarouter) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enablemediarouter_);
}
if (enablemediarouter) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
enablemediarouter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enablemediarouter, submessage_arena);
}
_has_bits_[4] |= 0x40000000u;
} else {
_has_bits_[4] &= ~0x40000000u;
}
enablemediarouter_ = enablemediarouter;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnableMediaRouter)
}

// optional .enterprise_management.BooleanPolicyProto ShowCastIconInToolbar = 364;
inline bool CloudPolicySettings::has_showcasticonintoolbar() const {
return (_has_bits_[5] & 0x00000020u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::showcasticonintoolbar() const {
const ::enterprise_management::BooleanPolicyProto* p = showcasticonintoolbar_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_showcasticonintoolbar() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
_has_bits_[5] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = showcasticonintoolbar_;
showcasticonintoolbar_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_showcasticonintoolbar() {
_has_bits_[5] |= 0x00000020u;
if (showcasticonintoolbar_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
showcasticonintoolbar_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
return showcasticonintoolbar_;
}
inline void CloudPolicySettings::set_allocated_showcasticonintoolbar(::enterprise_management::BooleanPolicyProto* showcasticonintoolbar) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(showcasticonintoolbar_);
}
if (showcasticonintoolbar) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
showcasticonintoolbar = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, showcasticonintoolbar, submessage_arena);
}
_has_bits_[5] |= 0x00000020u;
} else {
_has_bits_[5] &= ~0x00000020u;
}
showcasticonintoolbar_ = showcasticonintoolbar;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ShowCastIconInToolbar)
}

// optional .enterprise_management.BooleanPolicyProto MediaRouterCastAllowAllIPs = 439;
inline bool CloudPolicySettings::has_mediaroutercastallowallips() const {
return (_has_bits_[6] & 0x00000020u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::mediaroutercastallowallips() const {
const ::enterprise_management::BooleanPolicyProto* p = mediaroutercastallowallips_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_mediaroutercastallowallips() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
_has_bits_[6] &= ~0x00000020u;
::enterprise_management::BooleanPolicyProto* temp = mediaroutercastallowallips_;
mediaroutercastallowallips_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_mediaroutercastallowallips() {
_has_bits_[6] |= 0x00000020u;
if (mediaroutercastallowallips_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
mediaroutercastallowallips_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
return mediaroutercastallowallips_;
}
inline void CloudPolicySettings::set_allocated_mediaroutercastallowallips(::enterprise_management::BooleanPolicyProto* mediaroutercastallowallips) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(mediaroutercastallowallips_);
}
if (mediaroutercastallowallips) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
mediaroutercastallowallips = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, mediaroutercastallowallips, submessage_arena);
}
_has_bits_[6] |= 0x00000020u;
} else {
_has_bits_[6] &= ~0x00000020u;
}
mediaroutercastallowallips_ = mediaroutercastallowallips;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.MediaRouterCastAllowAllIPs)
}

// optional .enterprise_management.BooleanPolicyProto NTPCustomBackgroundEnabled = 655;
inline bool CloudPolicySettings::has_ntpcustombackgroundenabled() const {
return (_has_bits_[8] & 0x02000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::ntpcustombackgroundenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = ntpcustombackgroundenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.NTPCustomBackgroundEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_ntpcustombackgroundenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.NTPCustomBackgroundEnabled)
_has_bits_[8] &= ~0x02000000u;
::enterprise_management::BooleanPolicyProto* temp = ntpcustombackgroundenabled_;
ntpcustombackgroundenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_ntpcustombackgroundenabled() {
_has_bits_[8] |= 0x02000000u;
if (ntpcustombackgroundenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
ntpcustombackgroundenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.NTPCustomBackgroundEnabled)
return ntpcustombackgroundenabled_;
}
inline void CloudPolicySettings::set_allocated_ntpcustombackgroundenabled(::enterprise_management::BooleanPolicyProto* ntpcustombackgroundenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ntpcustombackgroundenabled_);
}
if (ntpcustombackgroundenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
ntpcustombackgroundenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, ntpcustombackgroundenabled, submessage_arena);
}
_has_bits_[8] |= 0x02000000u;
} else {
_has_bits_[8] &= ~0x02000000u;
}
ntpcustombackgroundenabled_ = ntpcustombackgroundenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.NTPCustomBackgroundEnabled)
}

// optional .enterprise_management.StringPolicyProto WebRtcUdpPortRange = 341;
inline bool CloudPolicySettings::has_webrtcudpportrange() const {
return (_has_bits_[5] & 0x00000001u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::webrtcudpportrange() const {
const ::enterprise_management::StringPolicyProto* p = webrtcudpportrange_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_webrtcudpportrange() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
_has_bits_[5] &= ~0x00000001u;
::enterprise_management::StringPolicyProto* temp = webrtcudpportrange_;
webrtcudpportrange_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_webrtcudpportrange() {
_has_bits_[5] |= 0x00000001u;
if (webrtcudpportrange_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
webrtcudpportrange_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
return webrtcudpportrange_;
}
inline void CloudPolicySettings::set_allocated_webrtcudpportrange(::enterprise_management::StringPolicyProto* webrtcudpportrange) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webrtcudpportrange_);
}
if (webrtcudpportrange) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webrtcudpportrange = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webrtcudpportrange, submessage_arena);
}
_has_bits_[5] |= 0x00000001u;
} else {
_has_bits_[5] &= ~0x00000001u;
}
webrtcudpportrange_ = webrtcudpportrange;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebRtcUdpPortRange)
}

// optional .enterprise_management.StringListPolicyProto WebRtcLocalIpsAllowedUrls = 642;
inline bool CloudPolicySettings::has_webrtclocalipsallowedurls() const {
return (_has_bits_[8] & 0x00008000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::webrtclocalipsallowedurls() const {
const ::enterprise_management::StringListPolicyProto* p = webrtclocalipsallowedurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebRtcLocalIpsAllowedUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_webrtclocalipsallowedurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebRtcLocalIpsAllowedUrls)
_has_bits_[8] &= ~0x00008000u;
::enterprise_management::StringListPolicyProto* temp = webrtclocalipsallowedurls_;
webrtclocalipsallowedurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_webrtclocalipsallowedurls() {
_has_bits_[8] |= 0x00008000u;
if (webrtclocalipsallowedurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
webrtclocalipsallowedurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebRtcLocalIpsAllowedUrls)
return webrtclocalipsallowedurls_;
}
inline void CloudPolicySettings::set_allocated_webrtclocalipsallowedurls(::enterprise_management::StringListPolicyProto* webrtclocalipsallowedurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webrtclocalipsallowedurls_);
}
if (webrtclocalipsallowedurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webrtclocalipsallowedurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webrtclocalipsallowedurls, submessage_arena);
}
_has_bits_[8] |= 0x00008000u;
} else {
_has_bits_[8] &= ~0x00008000u;
}
webrtclocalipsallowedurls_ = webrtclocalipsallowedurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebRtcLocalIpsAllowedUrls)
}

// optional .enterprise_management.BooleanPolicyProto ComponentUpdatesEnabled = 344;
inline bool CloudPolicySettings::has_componentupdatesenabled() const {
return (_has_bits_[5] & 0x00000002u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::componentupdatesenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = componentupdatesenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_componentupdatesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
_has_bits_[5] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = componentupdatesenabled_;
componentupdatesenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_componentupdatesenabled() {
_has_bits_[5] |= 0x00000002u;
if (componentupdatesenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
componentupdatesenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
return componentupdatesenabled_;
}
inline void CloudPolicySettings::set_allocated_componentupdatesenabled(::enterprise_management::BooleanPolicyProto* componentupdatesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(componentupdatesenabled_);
}
if (componentupdatesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
componentupdatesenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, componentupdatesenabled, submessage_arena);
}
_has_bits_[5] |= 0x00000002u;
} else {
_has_bits_[5] &= ~0x00000002u;
}
componentupdatesenabled_ = componentupdatesenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ComponentUpdatesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto BrowserNetworkTimeQueriesEnabled = 372;
inline bool CloudPolicySettings::has_browsernetworktimequeriesenabled() const {
return (_has_bits_[5] & 0x00000100u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browsernetworktimequeriesenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = browsernetworktimequeriesenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browsernetworktimequeriesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
_has_bits_[5] &= ~0x00000100u;
::enterprise_management::BooleanPolicyProto* temp = browsernetworktimequeriesenabled_;
browsernetworktimequeriesenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browsernetworktimequeriesenabled() {
_has_bits_[5] |= 0x00000100u;
if (browsernetworktimequeriesenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
browsernetworktimequeriesenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
return browsernetworktimequeriesenabled_;
}
inline void CloudPolicySettings::set_allocated_browsernetworktimequeriesenabled(::enterprise_management::BooleanPolicyProto* browsernetworktimequeriesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browsernetworktimequeriesenabled_);
}
if (browsernetworktimequeriesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browsernetworktimequeriesenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browsernetworktimequeriesenabled, submessage_arena);
}
_has_bits_[5] |= 0x00000100u;
} else {
_has_bits_[5] &= ~0x00000100u;
}
browsernetworktimequeriesenabled_ = browsernetworktimequeriesenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserNetworkTimeQueriesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PrintPreviewUseSystemDefaultPrinter = 375;
inline bool CloudPolicySettings::has_printpreviewusesystemdefaultprinter() const {
return (_has_bits_[5] & 0x00000400u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::printpreviewusesystemdefaultprinter() const {
const ::enterprise_management::BooleanPolicyProto* p = printpreviewusesystemdefaultprinter_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_printpreviewusesystemdefaultprinter() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
_has_bits_[5] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = printpreviewusesystemdefaultprinter_;
printpreviewusesystemdefaultprinter_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_printpreviewusesystemdefaultprinter() {
_has_bits_[5] |= 0x00000400u;
if (printpreviewusesystemdefaultprinter_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
printpreviewusesystemdefaultprinter_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
return printpreviewusesystemdefaultprinter_;
}
inline void CloudPolicySettings::set_allocated_printpreviewusesystemdefaultprinter(::enterprise_management::BooleanPolicyProto* printpreviewusesystemdefaultprinter) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(printpreviewusesystemdefaultprinter_);
}
if (printpreviewusesystemdefaultprinter) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
printpreviewusesystemdefaultprinter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, printpreviewusesystemdefaultprinter, submessage_arena);
}
_has_bits_[5] |= 0x00000400u;
} else {
_has_bits_[5] &= ~0x00000400u;
}
printpreviewusesystemdefaultprinter_ = printpreviewusesystemdefaultprinter;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrintPreviewUseSystemDefaultPrinter)
}

// optional .enterprise_management.BooleanPolicyProto CloudPolicyOverridesPlatformPolicy = 383;
inline bool CloudPolicySettings::has_cloudpolicyoverridesplatformpolicy() const {
return (_has_bits_[5] & 0x00000800u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudpolicyoverridesplatformpolicy() const {
const ::enterprise_management::BooleanPolicyProto* p = cloudpolicyoverridesplatformpolicy_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudPolicyOverridesPlatformPolicy)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudpolicyoverridesplatformpolicy() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudPolicyOverridesPlatformPolicy)
_has_bits_[5] &= ~0x00000800u;
::enterprise_management::BooleanPolicyProto* temp = cloudpolicyoverridesplatformpolicy_;
cloudpolicyoverridesplatformpolicy_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudpolicyoverridesplatformpolicy() {
_has_bits_[5] |= 0x00000800u;
if (cloudpolicyoverridesplatformpolicy_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
cloudpolicyoverridesplatformpolicy_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudPolicyOverridesPlatformPolicy)
return cloudpolicyoverridesplatformpolicy_;
}
inline void CloudPolicySettings::set_allocated_cloudpolicyoverridesplatformpolicy(::enterprise_management::BooleanPolicyProto* cloudpolicyoverridesplatformpolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudpolicyoverridesplatformpolicy_);
}
if (cloudpolicyoverridesplatformpolicy) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cloudpolicyoverridesplatformpolicy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudpolicyoverridesplatformpolicy, submessage_arena);
}
_has_bits_[5] |= 0x00000800u;
} else {
_has_bits_[5] &= ~0x00000800u;
}
cloudpolicyoverridesplatformpolicy_ = cloudpolicyoverridesplatformpolicy;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudPolicyOverridesPlatformPolicy)
}

// optional .enterprise_management.BooleanPolicyProto PromptForDownloadLocation = 397;
inline bool CloudPolicySettings::has_promptfordownloadlocation() const {
return (_has_bits_[5] & 0x00008000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::promptfordownloadlocation() const {
const ::enterprise_management::BooleanPolicyProto* p = promptfordownloadlocation_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_promptfordownloadlocation() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
_has_bits_[5] &= ~0x00008000u;
::enterprise_management::BooleanPolicyProto* temp = promptfordownloadlocation_;
promptfordownloadlocation_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_promptfordownloadlocation() {
_has_bits_[5] |= 0x00008000u;
if (promptfordownloadlocation_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
promptfordownloadlocation_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
return promptfordownloadlocation_;
}
inline void CloudPolicySettings::set_allocated_promptfordownloadlocation(::enterprise_management::BooleanPolicyProto* promptfordownloadlocation) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(promptfordownloadlocation_);
}
if (promptfordownloadlocation) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
promptfordownloadlocation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, promptfordownloadlocation, submessage_arena);
}
_has_bits_[5] |= 0x00008000u;
} else {
_has_bits_[5] &= ~0x00008000u;
}
promptfordownloadlocation_ = promptfordownloadlocation;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PromptForDownloadLocation)
}

// optional .enterprise_management.StringPolicyProto IsolateOrigins = 400;
inline bool CloudPolicySettings::has_isolateorigins() const {
return (_has_bits_[5] & 0x00010000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::isolateorigins() const {
const ::enterprise_management::StringPolicyProto* p = isolateorigins_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IsolateOrigins)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_isolateorigins() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IsolateOrigins)
_has_bits_[5] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = isolateorigins_;
isolateorigins_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_isolateorigins() {
_has_bits_[5] |= 0x00010000u;
if (isolateorigins_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
isolateorigins_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IsolateOrigins)
return isolateorigins_;
}
inline void CloudPolicySettings::set_allocated_isolateorigins(::enterprise_management::StringPolicyProto* isolateorigins) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(isolateorigins_);
}
if (isolateorigins) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
isolateorigins = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, isolateorigins, submessage_arena);
}
_has_bits_[5] |= 0x00010000u;
} else {
_has_bits_[5] &= ~0x00010000u;
}
isolateorigins_ = isolateorigins;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IsolateOrigins)
}

// optional .enterprise_management.BooleanPolicyProto SitePerProcess = 401;
inline bool CloudPolicySettings::has_siteperprocess() const {
return (_has_bits_[5] & 0x00020000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::siteperprocess() const {
const ::enterprise_management::BooleanPolicyProto* p = siteperprocess_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SitePerProcess)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_siteperprocess() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SitePerProcess)
_has_bits_[5] &= ~0x00020000u;
::enterprise_management::BooleanPolicyProto* temp = siteperprocess_;
siteperprocess_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_siteperprocess() {
_has_bits_[5] |= 0x00020000u;
if (siteperprocess_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
siteperprocess_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SitePerProcess)
return siteperprocess_;
}
inline void CloudPolicySettings::set_allocated_siteperprocess(::enterprise_management::BooleanPolicyProto* siteperprocess) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(siteperprocess_);
}
if (siteperprocess) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
siteperprocess = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, siteperprocess, submessage_arena);
}
_has_bits_[5] |= 0x00020000u;
} else {
_has_bits_[5] &= ~0x00020000u;
}
siteperprocess_ = siteperprocess;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SitePerProcess)
}

// optional .enterprise_management.StringListPolicyProto UnsafelyTreatInsecureOriginAsSecure = 402;
inline bool CloudPolicySettings::has_unsafelytreatinsecureoriginassecure() const {
return (_has_bits_[5] & 0x00040000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::unsafelytreatinsecureoriginassecure() const {
const ::enterprise_management::StringListPolicyProto* p = unsafelytreatinsecureoriginassecure_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_unsafelytreatinsecureoriginassecure() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
_has_bits_[5] &= ~0x00040000u;
::enterprise_management::StringListPolicyProto* temp = unsafelytreatinsecureoriginassecure_;
unsafelytreatinsecureoriginassecure_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_unsafelytreatinsecureoriginassecure() {
_has_bits_[5] |= 0x00040000u;
if (unsafelytreatinsecureoriginassecure_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
unsafelytreatinsecureoriginassecure_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
return unsafelytreatinsecureoriginassecure_;
}
inline void CloudPolicySettings::set_allocated_unsafelytreatinsecureoriginassecure(::enterprise_management::StringListPolicyProto* unsafelytreatinsecureoriginassecure) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(unsafelytreatinsecureoriginassecure_);
}
if (unsafelytreatinsecureoriginassecure) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
unsafelytreatinsecureoriginassecure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, unsafelytreatinsecureoriginassecure, submessage_arena);
}
_has_bits_[5] |= 0x00040000u;
} else {
_has_bits_[5] &= ~0x00040000u;
}
unsafelytreatinsecureoriginassecure_ = unsafelytreatinsecureoriginassecure;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UnsafelyTreatInsecureOriginAsSecure)
}

// optional .enterprise_management.StringPolicyProto DefaultDownloadDirectory = 403;
inline bool CloudPolicySettings::has_defaultdownloaddirectory() const {
return (_has_bits_[5] & 0x00080000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::defaultdownloaddirectory() const {
const ::enterprise_management::StringPolicyProto* p = defaultdownloaddirectory_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_defaultdownloaddirectory() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
_has_bits_[5] &= ~0x00080000u;
::enterprise_management::StringPolicyProto* temp = defaultdownloaddirectory_;
defaultdownloaddirectory_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_defaultdownloaddirectory() {
_has_bits_[5] |= 0x00080000u;
if (defaultdownloaddirectory_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
defaultdownloaddirectory_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
return defaultdownloaddirectory_;
}
inline void CloudPolicySettings::set_allocated_defaultdownloaddirectory(::enterprise_management::StringPolicyProto* defaultdownloaddirectory) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultdownloaddirectory_);
}
if (defaultdownloaddirectory) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultdownloaddirectory = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultdownloaddirectory, submessage_arena);
}
_has_bits_[5] |= 0x00080000u;
} else {
_has_bits_[5] &= ~0x00080000u;
}
defaultdownloaddirectory_ = defaultdownloaddirectory;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultDownloadDirectory)
}

// optional .enterprise_management.BooleanPolicyProto AbusiveExperienceInterventionEnforce = 406;
inline bool CloudPolicySettings::has_abusiveexperienceinterventionenforce() const {
return (_has_bits_[5] & 0x00200000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::abusiveexperienceinterventionenforce() const {
const ::enterprise_management::BooleanPolicyProto* p = abusiveexperienceinterventionenforce_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_abusiveexperienceinterventionenforce() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
_has_bits_[5] &= ~0x00200000u;
::enterprise_management::BooleanPolicyProto* temp = abusiveexperienceinterventionenforce_;
abusiveexperienceinterventionenforce_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_abusiveexperienceinterventionenforce() {
_has_bits_[5] |= 0x00200000u;
if (abusiveexperienceinterventionenforce_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
abusiveexperienceinterventionenforce_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
return abusiveexperienceinterventionenforce_;
}
inline void CloudPolicySettings::set_allocated_abusiveexperienceinterventionenforce(::enterprise_management::BooleanPolicyProto* abusiveexperienceinterventionenforce) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(abusiveexperienceinterventionenforce_);
}
if (abusiveexperienceinterventionenforce) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
abusiveexperienceinterventionenforce = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, abusiveexperienceinterventionenforce, submessage_arena);
}
_has_bits_[5] |= 0x00200000u;
} else {
_has_bits_[5] &= ~0x00200000u;
}
abusiveexperienceinterventionenforce_ = abusiveexperienceinterventionenforce;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AbusiveExperienceInterventionEnforce)
}

// optional .enterprise_management.StringListPolicyProto SpellcheckLanguage = 407;
inline bool CloudPolicySettings::has_spellchecklanguage() const {
return (_has_bits_[5] & 0x00400000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::spellchecklanguage() const {
const ::enterprise_management::StringListPolicyProto* p = spellchecklanguage_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_spellchecklanguage() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
_has_bits_[5] &= ~0x00400000u;
::enterprise_management::StringListPolicyProto* temp = spellchecklanguage_;
spellchecklanguage_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_spellchecklanguage() {
_has_bits_[5] |= 0x00400000u;
if (spellchecklanguage_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
spellchecklanguage_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
return spellchecklanguage_;
}
inline void CloudPolicySettings::set_allocated_spellchecklanguage(::enterprise_management::StringListPolicyProto* spellchecklanguage) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(spellchecklanguage_);
}
if (spellchecklanguage) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
spellchecklanguage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, spellchecklanguage, submessage_arena);
}
_has_bits_[5] |= 0x00400000u;
} else {
_has_bits_[5] &= ~0x00400000u;
}
spellchecklanguage_ = spellchecklanguage;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SpellcheckLanguage)
}

// optional .enterprise_management.StringListPolicyProto SpellcheckLanguageBlacklist = 538;
inline bool CloudPolicySettings::has_spellchecklanguageblacklist() const {
return (_has_bits_[7] & 0x00000200u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::spellchecklanguageblacklist() const {
const ::enterprise_management::StringListPolicyProto* p = spellchecklanguageblacklist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SpellcheckLanguageBlacklist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_spellchecklanguageblacklist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SpellcheckLanguageBlacklist)
_has_bits_[7] &= ~0x00000200u;
::enterprise_management::StringListPolicyProto* temp = spellchecklanguageblacklist_;
spellchecklanguageblacklist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_spellchecklanguageblacklist() {
_has_bits_[7] |= 0x00000200u;
if (spellchecklanguageblacklist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
spellchecklanguageblacklist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SpellcheckLanguageBlacklist)
return spellchecklanguageblacklist_;
}
inline void CloudPolicySettings::set_allocated_spellchecklanguageblacklist(::enterprise_management::StringListPolicyProto* spellchecklanguageblacklist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(spellchecklanguageblacklist_);
}
if (spellchecklanguageblacklist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
spellchecklanguageblacklist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, spellchecklanguageblacklist, submessage_arena);
}
_has_bits_[7] |= 0x00000200u;
} else {
_has_bits_[7] &= ~0x00000200u;
}
spellchecklanguageblacklist_ = spellchecklanguageblacklist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SpellcheckLanguageBlacklist)
}

// optional .enterprise_management.BooleanPolicyProto SpellcheckEnabled = 410;
inline bool CloudPolicySettings::has_spellcheckenabled() const {
return (_has_bits_[5] & 0x00800000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::spellcheckenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = spellcheckenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_spellcheckenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
_has_bits_[5] &= ~0x00800000u;
::enterprise_management::BooleanPolicyProto* temp = spellcheckenabled_;
spellcheckenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_spellcheckenabled() {
_has_bits_[5] |= 0x00800000u;
if (spellcheckenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
spellcheckenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
return spellcheckenabled_;
}
inline void CloudPolicySettings::set_allocated_spellcheckenabled(::enterprise_management::BooleanPolicyProto* spellcheckenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(spellcheckenabled_);
}
if (spellcheckenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
spellcheckenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, spellcheckenabled, submessage_arena);
}
_has_bits_[5] |= 0x00800000u;
} else {
_has_bits_[5] &= ~0x00800000u;
}
spellcheckenabled_ = spellcheckenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SpellcheckEnabled)
}

// optional .enterprise_management.IntegerPolicyProto AdsSettingForIntrusiveAdsSites = 411;
inline bool CloudPolicySettings::has_adssettingforintrusiveadssites() const {
return (_has_bits_[5] & 0x01000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::adssettingforintrusiveadssites() const {
const ::enterprise_management::IntegerPolicyProto* p = adssettingforintrusiveadssites_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_adssettingforintrusiveadssites() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
_has_bits_[5] &= ~0x01000000u;
::enterprise_management::IntegerPolicyProto* temp = adssettingforintrusiveadssites_;
adssettingforintrusiveadssites_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_adssettingforintrusiveadssites() {
_has_bits_[5] |= 0x01000000u;
if (adssettingforintrusiveadssites_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
adssettingforintrusiveadssites_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
return adssettingforintrusiveadssites_;
}
inline void CloudPolicySettings::set_allocated_adssettingforintrusiveadssites(::enterprise_management::IntegerPolicyProto* adssettingforintrusiveadssites) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(adssettingforintrusiveadssites_);
}
if (adssettingforintrusiveadssites) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
adssettingforintrusiveadssites = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, adssettingforintrusiveadssites, submessage_arena);
}
_has_bits_[5] |= 0x01000000u;
} else {
_has_bits_[5] &= ~0x01000000u;
}
adssettingforintrusiveadssites_ = adssettingforintrusiveadssites;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AdsSettingForIntrusiveAdsSites)
}

// optional .enterprise_management.IntegerPolicyProto PasswordProtectionWarningTrigger = 413;
inline bool CloudPolicySettings::has_passwordprotectionwarningtrigger() const {
return (_has_bits_[5] & 0x02000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::passwordprotectionwarningtrigger() const {
const ::enterprise_management::IntegerPolicyProto* p = passwordprotectionwarningtrigger_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_passwordprotectionwarningtrigger() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
_has_bits_[5] &= ~0x02000000u;
::enterprise_management::IntegerPolicyProto* temp = passwordprotectionwarningtrigger_;
passwordprotectionwarningtrigger_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_passwordprotectionwarningtrigger() {
_has_bits_[5] |= 0x02000000u;
if (passwordprotectionwarningtrigger_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
passwordprotectionwarningtrigger_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
return passwordprotectionwarningtrigger_;
}
inline void CloudPolicySettings::set_allocated_passwordprotectionwarningtrigger(::enterprise_management::IntegerPolicyProto* passwordprotectionwarningtrigger) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordprotectionwarningtrigger_);
}
if (passwordprotectionwarningtrigger) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
passwordprotectionwarningtrigger = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, passwordprotectionwarningtrigger, submessage_arena);
}
_has_bits_[5] |= 0x02000000u;
} else {
_has_bits_[5] &= ~0x02000000u;
}
passwordprotectionwarningtrigger_ = passwordprotectionwarningtrigger;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordProtectionWarningTrigger)
}

// optional .enterprise_management.IntegerPolicyProto RelaunchNotification = 421;
inline bool CloudPolicySettings::has_relaunchnotification() const {
return (_has_bits_[5] & 0x04000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::relaunchnotification() const {
const ::enterprise_management::IntegerPolicyProto* p = relaunchnotification_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RelaunchNotification)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_relaunchnotification() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RelaunchNotification)
_has_bits_[5] &= ~0x04000000u;
::enterprise_management::IntegerPolicyProto* temp = relaunchnotification_;
relaunchnotification_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_relaunchnotification() {
_has_bits_[5] |= 0x04000000u;
if (relaunchnotification_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
relaunchnotification_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RelaunchNotification)
return relaunchnotification_;
}
inline void CloudPolicySettings::set_allocated_relaunchnotification(::enterprise_management::IntegerPolicyProto* relaunchnotification) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(relaunchnotification_);
}
if (relaunchnotification) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
relaunchnotification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, relaunchnotification, submessage_arena);
}
_has_bits_[5] |= 0x04000000u;
} else {
_has_bits_[5] &= ~0x04000000u;
}
relaunchnotification_ = relaunchnotification;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RelaunchNotification)
}

// optional .enterprise_management.IntegerPolicyProto RelaunchNotificationPeriod = 422;
inline bool CloudPolicySettings::has_relaunchnotificationperiod() const {
return (_has_bits_[5] & 0x08000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::relaunchnotificationperiod() const {
const ::enterprise_management::IntegerPolicyProto* p = relaunchnotificationperiod_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_relaunchnotificationperiod() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
_has_bits_[5] &= ~0x08000000u;
::enterprise_management::IntegerPolicyProto* temp = relaunchnotificationperiod_;
relaunchnotificationperiod_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_relaunchnotificationperiod() {
_has_bits_[5] |= 0x08000000u;
if (relaunchnotificationperiod_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
relaunchnotificationperiod_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
return relaunchnotificationperiod_;
}
inline void CloudPolicySettings::set_allocated_relaunchnotificationperiod(::enterprise_management::IntegerPolicyProto* relaunchnotificationperiod) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(relaunchnotificationperiod_);
}
if (relaunchnotificationperiod) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
relaunchnotificationperiod = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, relaunchnotificationperiod, submessage_arena);
}
_has_bits_[5] |= 0x08000000u;
} else {
_has_bits_[5] &= ~0x08000000u;
}
relaunchnotificationperiod_ = relaunchnotificationperiod;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.RelaunchNotificationPeriod)
}

// optional .enterprise_management.StringListPolicyProto SafeBrowsingWhitelistDomains = 424;
inline bool CloudPolicySettings::has_safebrowsingwhitelistdomains() const {
return (_has_bits_[5] & 0x10000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::safebrowsingwhitelistdomains() const {
const ::enterprise_management::StringListPolicyProto* p = safebrowsingwhitelistdomains_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_safebrowsingwhitelistdomains() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
_has_bits_[5] &= ~0x10000000u;
::enterprise_management::StringListPolicyProto* temp = safebrowsingwhitelistdomains_;
safebrowsingwhitelistdomains_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_safebrowsingwhitelistdomains() {
_has_bits_[5] |= 0x10000000u;
if (safebrowsingwhitelistdomains_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
safebrowsingwhitelistdomains_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
return safebrowsingwhitelistdomains_;
}
inline void CloudPolicySettings::set_allocated_safebrowsingwhitelistdomains(::enterprise_management::StringListPolicyProto* safebrowsingwhitelistdomains) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingwhitelistdomains_);
}
if (safebrowsingwhitelistdomains) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
safebrowsingwhitelistdomains = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, safebrowsingwhitelistdomains, submessage_arena);
}
_has_bits_[5] |= 0x10000000u;
} else {
_has_bits_[5] &= ~0x10000000u;
}
safebrowsingwhitelistdomains_ = safebrowsingwhitelistdomains;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingWhitelistDomains)
}

// optional .enterprise_management.StringListPolicyProto PasswordProtectionLoginURLs = 425;
inline bool CloudPolicySettings::has_passwordprotectionloginurls() const {
return (_has_bits_[5] & 0x20000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::passwordprotectionloginurls() const {
const ::enterprise_management::StringListPolicyProto* p = passwordprotectionloginurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_passwordprotectionloginurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
_has_bits_[5] &= ~0x20000000u;
::enterprise_management::StringListPolicyProto* temp = passwordprotectionloginurls_;
passwordprotectionloginurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_passwordprotectionloginurls() {
_has_bits_[5] |= 0x20000000u;
if (passwordprotectionloginurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
passwordprotectionloginurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
return passwordprotectionloginurls_;
}
inline void CloudPolicySettings::set_allocated_passwordprotectionloginurls(::enterprise_management::StringListPolicyProto* passwordprotectionloginurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordprotectionloginurls_);
}
if (passwordprotectionloginurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
passwordprotectionloginurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, passwordprotectionloginurls, submessage_arena);
}
_has_bits_[5] |= 0x20000000u;
} else {
_has_bits_[5] &= ~0x20000000u;
}
passwordprotectionloginurls_ = passwordprotectionloginurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordProtectionLoginURLs)
}

// optional .enterprise_management.StringPolicyProto PasswordProtectionChangePasswordURL = 426;
inline bool CloudPolicySettings::has_passwordprotectionchangepasswordurl() const {
return (_has_bits_[5] & 0x40000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::passwordprotectionchangepasswordurl() const {
const ::enterprise_management::StringPolicyProto* p = passwordprotectionchangepasswordurl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_passwordprotectionchangepasswordurl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
_has_bits_[5] &= ~0x40000000u;
::enterprise_management::StringPolicyProto* temp = passwordprotectionchangepasswordurl_;
passwordprotectionchangepasswordurl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_passwordprotectionchangepasswordurl() {
_has_bits_[5] |= 0x40000000u;
if (passwordprotectionchangepasswordurl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
passwordprotectionchangepasswordurl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
return passwordprotectionchangepasswordurl_;
}
inline void CloudPolicySettings::set_allocated_passwordprotectionchangepasswordurl(::enterprise_management::StringPolicyProto* passwordprotectionchangepasswordurl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(passwordprotectionchangepasswordurl_);
}
if (passwordprotectionchangepasswordurl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
passwordprotectionchangepasswordurl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, passwordprotectionchangepasswordurl, submessage_arena);
}
_has_bits_[5] |= 0x40000000u;
} else {
_has_bits_[5] &= ~0x40000000u;
}
passwordprotectionchangepasswordurl_ = passwordprotectionchangepasswordurl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PasswordProtectionChangePasswordURL)
}

// optional .enterprise_management.BooleanPolicyProto SafeBrowsingExtendedReportingEnabled = 431;
inline bool CloudPolicySettings::has_safebrowsingextendedreportingenabled() const {
return (_has_bits_[5] & 0x80000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::safebrowsingextendedreportingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = safebrowsingextendedreportingenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_safebrowsingextendedreportingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
_has_bits_[5] &= ~0x80000000u;
::enterprise_management::BooleanPolicyProto* temp = safebrowsingextendedreportingenabled_;
safebrowsingextendedreportingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_safebrowsingextendedreportingenabled() {
_has_bits_[5] |= 0x80000000u;
if (safebrowsingextendedreportingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
safebrowsingextendedreportingenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
return safebrowsingextendedreportingenabled_;
}
inline void CloudPolicySettings::set_allocated_safebrowsingextendedreportingenabled(::enterprise_management::BooleanPolicyProto* safebrowsingextendedreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(safebrowsingextendedreportingenabled_);
}
if (safebrowsingextendedreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
safebrowsingextendedreportingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, safebrowsingextendedreportingenabled, submessage_arena);
}
_has_bits_[5] |= 0x80000000u;
} else {
_has_bits_[5] &= ~0x80000000u;
}
safebrowsingextendedreportingenabled_ = safebrowsingextendedreportingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeBrowsingExtendedReportingEnabled)
}

// optional .enterprise_management.StringPolicyProto CloudManagementEnrollmentToken = 512;
inline bool CloudPolicySettings::has_cloudmanagementenrollmenttoken() const {
return (_has_bits_[7] & 0x00000002u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::cloudmanagementenrollmenttoken() const {
const ::enterprise_management::StringPolicyProto* p = cloudmanagementenrollmenttoken_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentToken)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_cloudmanagementenrollmenttoken() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentToken)
_has_bits_[7] &= ~0x00000002u;
::enterprise_management::StringPolicyProto* temp = cloudmanagementenrollmenttoken_;
cloudmanagementenrollmenttoken_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_cloudmanagementenrollmenttoken() {
_has_bits_[7] |= 0x00000002u;
if (cloudmanagementenrollmenttoken_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
cloudmanagementenrollmenttoken_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentToken)
return cloudmanagementenrollmenttoken_;
}
inline void CloudPolicySettings::set_allocated_cloudmanagementenrollmenttoken(::enterprise_management::StringPolicyProto* cloudmanagementenrollmenttoken) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudmanagementenrollmenttoken_);
}
if (cloudmanagementenrollmenttoken) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cloudmanagementenrollmenttoken = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudmanagementenrollmenttoken, submessage_arena);
}
_has_bits_[7] |= 0x00000002u;
} else {
_has_bits_[7] &= ~0x00000002u;
}
cloudmanagementenrollmenttoken_ = cloudmanagementenrollmenttoken;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentToken)
}

// optional .enterprise_management.BooleanPolicyProto CloudManagementEnrollmentMandatory = 507;
inline bool CloudPolicySettings::has_cloudmanagementenrollmentmandatory() const {
return (_has_bits_[7] & 0x00000001u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudmanagementenrollmentmandatory() const {
const ::enterprise_management::BooleanPolicyProto* p = cloudmanagementenrollmentmandatory_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentMandatory)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudmanagementenrollmentmandatory() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentMandatory)
_has_bits_[7] &= ~0x00000001u;
::enterprise_management::BooleanPolicyProto* temp = cloudmanagementenrollmentmandatory_;
cloudmanagementenrollmentmandatory_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudmanagementenrollmentmandatory() {
_has_bits_[7] |= 0x00000001u;
if (cloudmanagementenrollmentmandatory_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
cloudmanagementenrollmentmandatory_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentMandatory)
return cloudmanagementenrollmentmandatory_;
}
inline void CloudPolicySettings::set_allocated_cloudmanagementenrollmentmandatory(::enterprise_management::BooleanPolicyProto* cloudmanagementenrollmentmandatory) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudmanagementenrollmentmandatory_);
}
if (cloudmanagementenrollmentmandatory) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cloudmanagementenrollmentmandatory = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudmanagementenrollmentmandatory, submessage_arena);
}
_has_bits_[7] |= 0x00000001u;
} else {
_has_bits_[7] &= ~0x00000001u;
}
cloudmanagementenrollmentmandatory_ = cloudmanagementenrollmentmandatory;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudManagementEnrollmentMandatory)
}

// optional .enterprise_management.BooleanPolicyProto AutoplayAllowed = 432;
inline bool CloudPolicySettings::has_autoplayallowed() const {
return (_has_bits_[6] & 0x00000001u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::autoplayallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = autoplayallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoplayAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_autoplayallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoplayAllowed)
_has_bits_[6] &= ~0x00000001u;
::enterprise_management::BooleanPolicyProto* temp = autoplayallowed_;
autoplayallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_autoplayallowed() {
_has_bits_[6] |= 0x00000001u;
if (autoplayallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
autoplayallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoplayAllowed)
return autoplayallowed_;
}
inline void CloudPolicySettings::set_allocated_autoplayallowed(::enterprise_management::BooleanPolicyProto* autoplayallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoplayallowed_);
}
if (autoplayallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autoplayallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autoplayallowed, submessage_arena);
}
_has_bits_[6] |= 0x00000001u;
} else {
_has_bits_[6] &= ~0x00000001u;
}
autoplayallowed_ = autoplayallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoplayAllowed)
}

// optional .enterprise_management.StringListPolicyProto AutoplayWhitelist = 433;
inline bool CloudPolicySettings::has_autoplaywhitelist() const {
return (_has_bits_[6] & 0x00000002u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::autoplaywhitelist() const {
const ::enterprise_management::StringListPolicyProto* p = autoplaywhitelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_autoplaywhitelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
_has_bits_[6] &= ~0x00000002u;
::enterprise_management::StringListPolicyProto* temp = autoplaywhitelist_;
autoplaywhitelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_autoplaywhitelist() {
_has_bits_[6] |= 0x00000002u;
if (autoplaywhitelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
autoplaywhitelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
return autoplaywhitelist_;
}
inline void CloudPolicySettings::set_allocated_autoplaywhitelist(::enterprise_management::StringListPolicyProto* autoplaywhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(autoplaywhitelist_);
}
if (autoplaywhitelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
autoplaywhitelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, autoplaywhitelist, submessage_arena);
}
_has_bits_[6] |= 0x00000002u;
} else {
_has_bits_[6] &= ~0x00000002u;
}
autoplaywhitelist_ = autoplaywhitelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AutoplayWhitelist)
}

// optional .enterprise_management.BooleanPolicyProto PromotionalTabsEnabled = 456;
inline bool CloudPolicySettings::has_promotionaltabsenabled() const {
return (_has_bits_[6] & 0x00000200u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::promotionaltabsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = promotionaltabsenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PromotionalTabsEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_promotionaltabsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PromotionalTabsEnabled)
_has_bits_[6] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = promotionaltabsenabled_;
promotionaltabsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_promotionaltabsenabled() {
_has_bits_[6] |= 0x00000200u;
if (promotionaltabsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
promotionaltabsenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PromotionalTabsEnabled)
return promotionaltabsenabled_;
}
inline void CloudPolicySettings::set_allocated_promotionaltabsenabled(::enterprise_management::BooleanPolicyProto* promotionaltabsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(promotionaltabsenabled_);
}
if (promotionaltabsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
promotionaltabsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, promotionaltabsenabled, submessage_arena);
}
_has_bits_[6] |= 0x00000200u;
} else {
_has_bits_[6] &= ~0x00000200u;
}
promotionaltabsenabled_ = promotionaltabsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PromotionalTabsEnabled)
}

// optional .enterprise_management.IntegerPolicyProto SafeSitesFilterBehavior = 457;
inline bool CloudPolicySettings::has_safesitesfilterbehavior() const {
return (_has_bits_[6] & 0x00000400u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::safesitesfilterbehavior() const {
const ::enterprise_management::IntegerPolicyProto* p = safesitesfilterbehavior_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SafeSitesFilterBehavior)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_safesitesfilterbehavior() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SafeSitesFilterBehavior)
_has_bits_[6] &= ~0x00000400u;
::enterprise_management::IntegerPolicyProto* temp = safesitesfilterbehavior_;
safesitesfilterbehavior_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_safesitesfilterbehavior() {
_has_bits_[6] |= 0x00000400u;
if (safesitesfilterbehavior_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
safesitesfilterbehavior_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SafeSitesFilterBehavior)
return safesitesfilterbehavior_;
}
inline void CloudPolicySettings::set_allocated_safesitesfilterbehavior(::enterprise_management::IntegerPolicyProto* safesitesfilterbehavior) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(safesitesfilterbehavior_);
}
if (safesitesfilterbehavior) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
safesitesfilterbehavior = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, safesitesfilterbehavior, submessage_arena);
}
_has_bits_[6] |= 0x00000400u;
} else {
_has_bits_[6] &= ~0x00000400u;
}
safesitesfilterbehavior_ = safesitesfilterbehavior;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SafeSitesFilterBehavior)
}

// optional .enterprise_management.StringListPolicyProto OverrideSecurityRestrictionsOnInsecureOrigin = 459;
inline bool CloudPolicySettings::has_overridesecurityrestrictionsoninsecureorigin() const {
return (_has_bits_[6] & 0x00000800u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::overridesecurityrestrictionsoninsecureorigin() const {
const ::enterprise_management::StringListPolicyProto* p = overridesecurityrestrictionsoninsecureorigin_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_overridesecurityrestrictionsoninsecureorigin() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
_has_bits_[6] &= ~0x00000800u;
::enterprise_management::StringListPolicyProto* temp = overridesecurityrestrictionsoninsecureorigin_;
overridesecurityrestrictionsoninsecureorigin_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_overridesecurityrestrictionsoninsecureorigin() {
_has_bits_[6] |= 0x00000800u;
if (overridesecurityrestrictionsoninsecureorigin_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
overridesecurityrestrictionsoninsecureorigin_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
return overridesecurityrestrictionsoninsecureorigin_;
}
inline void CloudPolicySettings::set_allocated_overridesecurityrestrictionsoninsecureorigin(::enterprise_management::StringListPolicyProto* overridesecurityrestrictionsoninsecureorigin) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(overridesecurityrestrictionsoninsecureorigin_);
}
if (overridesecurityrestrictionsoninsecureorigin) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
overridesecurityrestrictionsoninsecureorigin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, overridesecurityrestrictionsoninsecureorigin, submessage_arena);
}
_has_bits_[6] |= 0x00000800u;
} else {
_has_bits_[6] &= ~0x00000800u;
}
overridesecurityrestrictionsoninsecureorigin_ = overridesecurityrestrictionsoninsecureorigin;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.OverrideSecurityRestrictionsOnInsecureOrigin)
}

// optional .enterprise_management.BooleanPolicyProto UrlKeyedAnonymizedDataCollectionEnabled = 463;
inline bool CloudPolicySettings::has_urlkeyedanonymizeddatacollectionenabled() const {
return (_has_bits_[6] & 0x00002000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::urlkeyedanonymizeddatacollectionenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = urlkeyedanonymizeddatacollectionenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_urlkeyedanonymizeddatacollectionenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
_has_bits_[6] &= ~0x00002000u;
::enterprise_management::BooleanPolicyProto* temp = urlkeyedanonymizeddatacollectionenabled_;
urlkeyedanonymizeddatacollectionenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_urlkeyedanonymizeddatacollectionenabled() {
_has_bits_[6] |= 0x00002000u;
if (urlkeyedanonymizeddatacollectionenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
urlkeyedanonymizeddatacollectionenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
return urlkeyedanonymizeddatacollectionenabled_;
}
inline void CloudPolicySettings::set_allocated_urlkeyedanonymizeddatacollectionenabled(::enterprise_management::BooleanPolicyProto* urlkeyedanonymizeddatacollectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlkeyedanonymizeddatacollectionenabled_);
}
if (urlkeyedanonymizeddatacollectionenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
urlkeyedanonymizeddatacollectionenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlkeyedanonymizeddatacollectionenabled, submessage_arena);
}
_has_bits_[6] |= 0x00002000u;
} else {
_has_bits_[6] &= ~0x00002000u;
}
urlkeyedanonymizeddatacollectionenabled_ = urlkeyedanonymizeddatacollectionenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UrlKeyedAnonymizedDataCollectionEnabled)
}

// optional .enterprise_management.BooleanPolicyProto WebRtcEventLogCollectionAllowed = 466;
inline bool CloudPolicySettings::has_webrtceventlogcollectionallowed() const {
return (_has_bits_[6] & 0x00004000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::webrtceventlogcollectionallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = webrtceventlogcollectionallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebRtcEventLogCollectionAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_webrtceventlogcollectionallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebRtcEventLogCollectionAllowed)
_has_bits_[6] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = webrtceventlogcollectionallowed_;
webrtceventlogcollectionallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_webrtceventlogcollectionallowed() {
_has_bits_[6] |= 0x00004000u;
if (webrtceventlogcollectionallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
webrtceventlogcollectionallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebRtcEventLogCollectionAllowed)
return webrtceventlogcollectionallowed_;
}
inline void CloudPolicySettings::set_allocated_webrtceventlogcollectionallowed(::enterprise_management::BooleanPolicyProto* webrtceventlogcollectionallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webrtceventlogcollectionallowed_);
}
if (webrtceventlogcollectionallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webrtceventlogcollectionallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webrtceventlogcollectionallowed, submessage_arena);
}
_has_bits_[6] |= 0x00004000u;
} else {
_has_bits_[6] &= ~0x00004000u;
}
webrtceventlogcollectionallowed_ = webrtceventlogcollectionallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebRtcEventLogCollectionAllowed)
}

// optional .enterprise_management.StringListPolicyProto CoalesceH2ConnectionsWithClientCertificatesForHosts = 468;
inline bool CloudPolicySettings::has_coalesceh2connectionswithclientcertificatesforhosts() const {
return (_has_bits_[6] & 0x00008000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::coalesceh2connectionswithclientcertificatesforhosts() const {
const ::enterprise_management::StringListPolicyProto* p = coalesceh2connectionswithclientcertificatesforhosts_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_coalesceh2connectionswithclientcertificatesforhosts() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
_has_bits_[6] &= ~0x00008000u;
::enterprise_management::StringListPolicyProto* temp = coalesceh2connectionswithclientcertificatesforhosts_;
coalesceh2connectionswithclientcertificatesforhosts_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_coalesceh2connectionswithclientcertificatesforhosts() {
_has_bits_[6] |= 0x00008000u;
if (coalesceh2connectionswithclientcertificatesforhosts_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
coalesceh2connectionswithclientcertificatesforhosts_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
return coalesceh2connectionswithclientcertificatesforhosts_;
}
inline void CloudPolicySettings::set_allocated_coalesceh2connectionswithclientcertificatesforhosts(::enterprise_management::StringListPolicyProto* coalesceh2connectionswithclientcertificatesforhosts) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(coalesceh2connectionswithclientcertificatesforhosts_);
}
if (coalesceh2connectionswithclientcertificatesforhosts) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
coalesceh2connectionswithclientcertificatesforhosts = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, coalesceh2connectionswithclientcertificatesforhosts, submessage_arena);
}
_has_bits_[6] |= 0x00008000u;
} else {
_has_bits_[6] &= ~0x00008000u;
}
coalesceh2connectionswithclientcertificatesforhosts_ = coalesceh2connectionswithclientcertificatesforhosts;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CoalesceH2ConnectionsWithClientCertificatesForHosts)
}

// optional .enterprise_management.StringPolicyProto WebAppInstallForceList = 470;
inline bool CloudPolicySettings::has_webappinstallforcelist() const {
return (_has_bits_[6] & 0x00010000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::webappinstallforcelist() const {
const ::enterprise_management::StringPolicyProto* p = webappinstallforcelist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.WebAppInstallForceList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_webappinstallforcelist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.WebAppInstallForceList)
_has_bits_[6] &= ~0x00010000u;
::enterprise_management::StringPolicyProto* temp = webappinstallforcelist_;
webappinstallforcelist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_webappinstallforcelist() {
_has_bits_[6] |= 0x00010000u;
if (webappinstallforcelist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
webappinstallforcelist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.WebAppInstallForceList)
return webappinstallforcelist_;
}
inline void CloudPolicySettings::set_allocated_webappinstallforcelist(::enterprise_management::StringPolicyProto* webappinstallforcelist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(webappinstallforcelist_);
}
if (webappinstallforcelist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
webappinstallforcelist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, webappinstallforcelist, submessage_arena);
}
_has_bits_[6] |= 0x00010000u;
} else {
_has_bits_[6] &= ~0x00010000u;
}
webappinstallforcelist_ = webappinstallforcelist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.WebAppInstallForceList)
}

// optional .enterprise_management.BooleanPolicyProto ReportVersionData = 472;
inline bool CloudPolicySettings::has_reportversiondata() const {
return (_has_bits_[6] & 0x00020000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::reportversiondata() const {
const ::enterprise_management::BooleanPolicyProto* p = reportversiondata_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ReportVersionData)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_reportversiondata() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ReportVersionData)
_has_bits_[6] &= ~0x00020000u;
::enterprise_management::BooleanPolicyProto* temp = reportversiondata_;
reportversiondata_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_reportversiondata() {
_has_bits_[6] |= 0x00020000u;
if (reportversiondata_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
reportversiondata_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ReportVersionData)
return reportversiondata_;
}
inline void CloudPolicySettings::set_allocated_reportversiondata(::enterprise_management::BooleanPolicyProto* reportversiondata) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reportversiondata_);
}
if (reportversiondata) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
reportversiondata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, reportversiondata, submessage_arena);
}
_has_bits_[6] |= 0x00020000u;
} else {
_has_bits_[6] &= ~0x00020000u;
}
reportversiondata_ = reportversiondata;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ReportVersionData)
}

// optional .enterprise_management.BooleanPolicyProto ReportPolicyData = 473;
inline bool CloudPolicySettings::has_reportpolicydata() const {
return (_has_bits_[6] & 0x00040000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::reportpolicydata() const {
const ::enterprise_management::BooleanPolicyProto* p = reportpolicydata_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ReportPolicyData)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_reportpolicydata() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ReportPolicyData)
_has_bits_[6] &= ~0x00040000u;
::enterprise_management::BooleanPolicyProto* temp = reportpolicydata_;
reportpolicydata_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_reportpolicydata() {
_has_bits_[6] |= 0x00040000u;
if (reportpolicydata_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
reportpolicydata_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ReportPolicyData)
return reportpolicydata_;
}
inline void CloudPolicySettings::set_allocated_reportpolicydata(::enterprise_management::BooleanPolicyProto* reportpolicydata) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reportpolicydata_);
}
if (reportpolicydata) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
reportpolicydata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, reportpolicydata, submessage_arena);
}
_has_bits_[6] |= 0x00040000u;
} else {
_has_bits_[6] &= ~0x00040000u;
}
reportpolicydata_ = reportpolicydata;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ReportPolicyData)
}

// optional .enterprise_management.BooleanPolicyProto ReportMachineIDData = 474;
inline bool CloudPolicySettings::has_reportmachineiddata() const {
return (_has_bits_[6] & 0x00080000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::reportmachineiddata() const {
const ::enterprise_management::BooleanPolicyProto* p = reportmachineiddata_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ReportMachineIDData)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_reportmachineiddata() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ReportMachineIDData)
_has_bits_[6] &= ~0x00080000u;
::enterprise_management::BooleanPolicyProto* temp = reportmachineiddata_;
reportmachineiddata_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_reportmachineiddata() {
_has_bits_[6] |= 0x00080000u;
if (reportmachineiddata_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
reportmachineiddata_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ReportMachineIDData)
return reportmachineiddata_;
}
inline void CloudPolicySettings::set_allocated_reportmachineiddata(::enterprise_management::BooleanPolicyProto* reportmachineiddata) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reportmachineiddata_);
}
if (reportmachineiddata) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
reportmachineiddata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, reportmachineiddata, submessage_arena);
}
_has_bits_[6] |= 0x00080000u;
} else {
_has_bits_[6] &= ~0x00080000u;
}
reportmachineiddata_ = reportmachineiddata;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ReportMachineIDData)
}

// optional .enterprise_management.BooleanPolicyProto ReportUserIDData = 475;
inline bool CloudPolicySettings::has_reportuseriddata() const {
return (_has_bits_[6] & 0x00100000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::reportuseriddata() const {
const ::enterprise_management::BooleanPolicyProto* p = reportuseriddata_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ReportUserIDData)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_reportuseriddata() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ReportUserIDData)
_has_bits_[6] &= ~0x00100000u;
::enterprise_management::BooleanPolicyProto* temp = reportuseriddata_;
reportuseriddata_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_reportuseriddata() {
_has_bits_[6] |= 0x00100000u;
if (reportuseriddata_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
reportuseriddata_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ReportUserIDData)
return reportuseriddata_;
}
inline void CloudPolicySettings::set_allocated_reportuseriddata(::enterprise_management::BooleanPolicyProto* reportuseriddata) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reportuseriddata_);
}
if (reportuseriddata) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
reportuseriddata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, reportuseriddata, submessage_arena);
}
_has_bits_[6] |= 0x00100000u;
} else {
_has_bits_[6] &= ~0x00100000u;
}
reportuseriddata_ = reportuseriddata;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ReportUserIDData)
}

// optional .enterprise_management.BooleanPolicyProto ReportExtensionsAndPluginsData = 501;
inline bool CloudPolicySettings::has_reportextensionsandpluginsdata() const {
return (_has_bits_[6] & 0x80000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::reportextensionsandpluginsdata() const {
const ::enterprise_management::BooleanPolicyProto* p = reportextensionsandpluginsdata_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ReportExtensionsAndPluginsData)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_reportextensionsandpluginsdata() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ReportExtensionsAndPluginsData)
_has_bits_[6] &= ~0x80000000u;
::enterprise_management::BooleanPolicyProto* temp = reportextensionsandpluginsdata_;
reportextensionsandpluginsdata_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_reportextensionsandpluginsdata() {
_has_bits_[6] |= 0x80000000u;
if (reportextensionsandpluginsdata_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
reportextensionsandpluginsdata_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ReportExtensionsAndPluginsData)
return reportextensionsandpluginsdata_;
}
inline void CloudPolicySettings::set_allocated_reportextensionsandpluginsdata(::enterprise_management::BooleanPolicyProto* reportextensionsandpluginsdata) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(reportextensionsandpluginsdata_);
}
if (reportextensionsandpluginsdata) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
reportextensionsandpluginsdata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, reportextensionsandpluginsdata, submessage_arena);
}
_has_bits_[6] |= 0x80000000u;
} else {
_has_bits_[6] &= ~0x80000000u;
}
reportextensionsandpluginsdata_ = reportextensionsandpluginsdata;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ReportExtensionsAndPluginsData)
}

// optional .enterprise_management.BooleanPolicyProto CloudExtensionRequestEnabled = 610;
inline bool CloudPolicySettings::has_cloudextensionrequestenabled() const {
return (_has_bits_[8] & 0x00000001u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudextensionrequestenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = cloudextensionrequestenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudExtensionRequestEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudextensionrequestenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudExtensionRequestEnabled)
_has_bits_[8] &= ~0x00000001u;
::enterprise_management::BooleanPolicyProto* temp = cloudextensionrequestenabled_;
cloudextensionrequestenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudextensionrequestenabled() {
_has_bits_[8] |= 0x00000001u;
if (cloudextensionrequestenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
cloudextensionrequestenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudExtensionRequestEnabled)
return cloudextensionrequestenabled_;
}
inline void CloudPolicySettings::set_allocated_cloudextensionrequestenabled(::enterprise_management::BooleanPolicyProto* cloudextensionrequestenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudextensionrequestenabled_);
}
if (cloudextensionrequestenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cloudextensionrequestenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudextensionrequestenabled, submessage_arena);
}
_has_bits_[8] |= 0x00000001u;
} else {
_has_bits_[8] &= ~0x00000001u;
}
cloudextensionrequestenabled_ = cloudextensionrequestenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudExtensionRequestEnabled)
}

// optional .enterprise_management.BooleanPolicyProto CloudReportingEnabled = 495;
inline bool CloudPolicySettings::has_cloudreportingenabled() const {
return (_has_bits_[6] & 0x04000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::cloudreportingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = cloudreportingenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CloudReportingEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_cloudreportingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CloudReportingEnabled)
_has_bits_[6] &= ~0x04000000u;
::enterprise_management::BooleanPolicyProto* temp = cloudreportingenabled_;
cloudreportingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_cloudreportingenabled() {
_has_bits_[6] |= 0x04000000u;
if (cloudreportingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
cloudreportingenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CloudReportingEnabled)
return cloudreportingenabled_;
}
inline void CloudPolicySettings::set_allocated_cloudreportingenabled(::enterprise_management::BooleanPolicyProto* cloudreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cloudreportingenabled_);
}
if (cloudreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
cloudreportingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, cloudreportingenabled, submessage_arena);
}
_has_bits_[6] |= 0x04000000u;
} else {
_has_bits_[6] &= ~0x04000000u;
}
cloudreportingenabled_ = cloudreportingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CloudReportingEnabled)
}

// optional .enterprise_management.BooleanPolicyProto EnterpriseHardwarePlatformAPIEnabled = 485;
inline bool CloudPolicySettings::has_enterprisehardwareplatformapienabled() const {
return (_has_bits_[6] & 0x00800000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::enterprisehardwareplatformapienabled() const {
const ::enterprise_management::BooleanPolicyProto* p = enterprisehardwareplatformapienabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_enterprisehardwareplatformapienabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
_has_bits_[6] &= ~0x00800000u;
::enterprise_management::BooleanPolicyProto* temp = enterprisehardwareplatformapienabled_;
enterprisehardwareplatformapienabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_enterprisehardwareplatformapienabled() {
_has_bits_[6] |= 0x00800000u;
if (enterprisehardwareplatformapienabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
enterprisehardwareplatformapienabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
return enterprisehardwareplatformapienabled_;
}
inline void CloudPolicySettings::set_allocated_enterprisehardwareplatformapienabled(::enterprise_management::BooleanPolicyProto* enterprisehardwareplatformapienabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(enterprisehardwareplatformapienabled_);
}
if (enterprisehardwareplatformapienabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
enterprisehardwareplatformapienabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, enterprisehardwareplatformapienabled, submessage_arena);
}
_has_bits_[6] |= 0x00800000u;
} else {
_has_bits_[6] &= ~0x00800000u;
}
enterprisehardwareplatformapienabled_ = enterprisehardwareplatformapienabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.EnterpriseHardwarePlatformAPIEnabled)
}

// optional .enterprise_management.StringPolicyProto AlternativeBrowserPath = 496;
inline bool CloudPolicySettings::has_alternativebrowserpath() const {
return (_has_bits_[6] & 0x08000000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::alternativebrowserpath() const {
const ::enterprise_management::StringPolicyProto* p = alternativebrowserpath_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlternativeBrowserPath)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_alternativebrowserpath() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlternativeBrowserPath)
_has_bits_[6] &= ~0x08000000u;
::enterprise_management::StringPolicyProto* temp = alternativebrowserpath_;
alternativebrowserpath_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_alternativebrowserpath() {
_has_bits_[6] |= 0x08000000u;
if (alternativebrowserpath_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
alternativebrowserpath_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlternativeBrowserPath)
return alternativebrowserpath_;
}
inline void CloudPolicySettings::set_allocated_alternativebrowserpath(::enterprise_management::StringPolicyProto* alternativebrowserpath) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alternativebrowserpath_);
}
if (alternativebrowserpath) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
alternativebrowserpath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, alternativebrowserpath, submessage_arena);
}
_has_bits_[6] |= 0x08000000u;
} else {
_has_bits_[6] &= ~0x08000000u;
}
alternativebrowserpath_ = alternativebrowserpath;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlternativeBrowserPath)
}

// optional .enterprise_management.StringListPolicyProto AlternativeBrowserParameters = 497;
inline bool CloudPolicySettings::has_alternativebrowserparameters() const {
return (_has_bits_[6] & 0x10000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::alternativebrowserparameters() const {
const ::enterprise_management::StringListPolicyProto* p = alternativebrowserparameters_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AlternativeBrowserParameters)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_alternativebrowserparameters() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AlternativeBrowserParameters)
_has_bits_[6] &= ~0x10000000u;
::enterprise_management::StringListPolicyProto* temp = alternativebrowserparameters_;
alternativebrowserparameters_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_alternativebrowserparameters() {
_has_bits_[6] |= 0x10000000u;
if (alternativebrowserparameters_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
alternativebrowserparameters_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AlternativeBrowserParameters)
return alternativebrowserparameters_;
}
inline void CloudPolicySettings::set_allocated_alternativebrowserparameters(::enterprise_management::StringListPolicyProto* alternativebrowserparameters) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(alternativebrowserparameters_);
}
if (alternativebrowserparameters) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
alternativebrowserparameters = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, alternativebrowserparameters, submessage_arena);
}
_has_bits_[6] |= 0x10000000u;
} else {
_has_bits_[6] &= ~0x10000000u;
}
alternativebrowserparameters_ = alternativebrowserparameters;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AlternativeBrowserParameters)
}

// optional .enterprise_management.StringListPolicyProto BrowserSwitcherUrlList = 498;
inline bool CloudPolicySettings::has_browserswitcherurllist() const {
return (_has_bits_[6] & 0x20000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::browserswitcherurllist() const {
const ::enterprise_management::StringListPolicyProto* p = browserswitcherurllist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserSwitcherUrlList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_browserswitcherurllist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserSwitcherUrlList)
_has_bits_[6] &= ~0x20000000u;
::enterprise_management::StringListPolicyProto* temp = browserswitcherurllist_;
browserswitcherurllist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_browserswitcherurllist() {
_has_bits_[6] |= 0x20000000u;
if (browserswitcherurllist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
browserswitcherurllist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserSwitcherUrlList)
return browserswitcherurllist_;
}
inline void CloudPolicySettings::set_allocated_browserswitcherurllist(::enterprise_management::StringListPolicyProto* browserswitcherurllist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browserswitcherurllist_);
}
if (browserswitcherurllist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browserswitcherurllist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browserswitcherurllist, submessage_arena);
}
_has_bits_[6] |= 0x20000000u;
} else {
_has_bits_[6] &= ~0x20000000u;
}
browserswitcherurllist_ = browserswitcherurllist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserSwitcherUrlList)
}

// optional .enterprise_management.StringListPolicyProto BrowserSwitcherUrlGreylist = 499;
inline bool CloudPolicySettings::has_browserswitcherurlgreylist() const {
return (_has_bits_[6] & 0x40000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::browserswitcherurlgreylist() const {
const ::enterprise_management::StringListPolicyProto* p = browserswitcherurlgreylist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserSwitcherUrlGreylist)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_browserswitcherurlgreylist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserSwitcherUrlGreylist)
_has_bits_[6] &= ~0x40000000u;
::enterprise_management::StringListPolicyProto* temp = browserswitcherurlgreylist_;
browserswitcherurlgreylist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_browserswitcherurlgreylist() {
_has_bits_[6] |= 0x40000000u;
if (browserswitcherurlgreylist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
browserswitcherurlgreylist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserSwitcherUrlGreylist)
return browserswitcherurlgreylist_;
}
inline void CloudPolicySettings::set_allocated_browserswitcherurlgreylist(::enterprise_management::StringListPolicyProto* browserswitcherurlgreylist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browserswitcherurlgreylist_);
}
if (browserswitcherurlgreylist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browserswitcherurlgreylist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browserswitcherurlgreylist, submessage_arena);
}
_has_bits_[6] |= 0x40000000u;
} else {
_has_bits_[6] &= ~0x40000000u;
}
browserswitcherurlgreylist_ = browserswitcherurlgreylist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserSwitcherUrlGreylist)
}

// optional .enterprise_management.StringPolicyProto BrowserSwitcherExternalSitelistUrl = 513;
inline bool CloudPolicySettings::has_browserswitcherexternalsitelisturl() const {
return (_has_bits_[7] & 0x00000004u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::browserswitcherexternalsitelisturl() const {
const ::enterprise_management::StringPolicyProto* p = browserswitcherexternalsitelisturl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserSwitcherExternalSitelistUrl)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_browserswitcherexternalsitelisturl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserSwitcherExternalSitelistUrl)
_has_bits_[7] &= ~0x00000004u;
::enterprise_management::StringPolicyProto* temp = browserswitcherexternalsitelisturl_;
browserswitcherexternalsitelisturl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_browserswitcherexternalsitelisturl() {
_has_bits_[7] |= 0x00000004u;
if (browserswitcherexternalsitelisturl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
browserswitcherexternalsitelisturl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserSwitcherExternalSitelistUrl)
return browserswitcherexternalsitelisturl_;
}
inline void CloudPolicySettings::set_allocated_browserswitcherexternalsitelisturl(::enterprise_management::StringPolicyProto* browserswitcherexternalsitelisturl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browserswitcherexternalsitelisturl_);
}
if (browserswitcherexternalsitelisturl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browserswitcherexternalsitelisturl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browserswitcherexternalsitelisturl, submessage_arena);
}
_has_bits_[7] |= 0x00000004u;
} else {
_has_bits_[7] &= ~0x00000004u;
}
browserswitcherexternalsitelisturl_ = browserswitcherexternalsitelisturl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserSwitcherExternalSitelistUrl)
}

// optional .enterprise_management.StringPolicyProto BrowserSwitcherExternalGreylistUrl = 566;
inline bool CloudPolicySettings::has_browserswitcherexternalgreylisturl() const {
return (_has_bits_[7] & 0x00002000u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::browserswitcherexternalgreylisturl() const {
const ::enterprise_management::StringPolicyProto* p = browserswitcherexternalgreylisturl_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserSwitcherExternalGreylistUrl)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_browserswitcherexternalgreylisturl() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserSwitcherExternalGreylistUrl)
_has_bits_[7] &= ~0x00002000u;
::enterprise_management::StringPolicyProto* temp = browserswitcherexternalgreylisturl_;
browserswitcherexternalgreylisturl_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_browserswitcherexternalgreylisturl() {
_has_bits_[7] |= 0x00002000u;
if (browserswitcherexternalgreylisturl_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
browserswitcherexternalgreylisturl_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserSwitcherExternalGreylistUrl)
return browserswitcherexternalgreylisturl_;
}
inline void CloudPolicySettings::set_allocated_browserswitcherexternalgreylisturl(::enterprise_management::StringPolicyProto* browserswitcherexternalgreylisturl) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browserswitcherexternalgreylisturl_);
}
if (browserswitcherexternalgreylisturl) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browserswitcherexternalgreylisturl = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browserswitcherexternalgreylisturl, submessage_arena);
}
_has_bits_[7] |= 0x00002000u;
} else {
_has_bits_[7] &= ~0x00002000u;
}
browserswitcherexternalgreylisturl_ = browserswitcherexternalgreylisturl;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserSwitcherExternalGreylistUrl)
}

// optional .enterprise_management.IntegerPolicyProto BrowserSwitcherDelay = 526;
inline bool CloudPolicySettings::has_browserswitcherdelay() const {
return (_has_bits_[7] & 0x00000020u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::browserswitcherdelay() const {
const ::enterprise_management::IntegerPolicyProto* p = browserswitcherdelay_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserSwitcherDelay)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_browserswitcherdelay() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserSwitcherDelay)
_has_bits_[7] &= ~0x00000020u;
::enterprise_management::IntegerPolicyProto* temp = browserswitcherdelay_;
browserswitcherdelay_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_browserswitcherdelay() {
_has_bits_[7] |= 0x00000020u;
if (browserswitcherdelay_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
browserswitcherdelay_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserSwitcherDelay)
return browserswitcherdelay_;
}
inline void CloudPolicySettings::set_allocated_browserswitcherdelay(::enterprise_management::IntegerPolicyProto* browserswitcherdelay) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browserswitcherdelay_);
}
if (browserswitcherdelay) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browserswitcherdelay = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browserswitcherdelay, submessage_arena);
}
_has_bits_[7] |= 0x00000020u;
} else {
_has_bits_[7] &= ~0x00000020u;
}
browserswitcherdelay_ = browserswitcherdelay;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserSwitcherDelay)
}

// optional .enterprise_management.BooleanPolicyProto BrowserSwitcherEnabled = 519;
inline bool CloudPolicySettings::has_browserswitcherenabled() const {
return (_has_bits_[7] & 0x00000008u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browserswitcherenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = browserswitcherenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserSwitcherEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browserswitcherenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserSwitcherEnabled)
_has_bits_[7] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = browserswitcherenabled_;
browserswitcherenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browserswitcherenabled() {
_has_bits_[7] |= 0x00000008u;
if (browserswitcherenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
browserswitcherenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserSwitcherEnabled)
return browserswitcherenabled_;
}
inline void CloudPolicySettings::set_allocated_browserswitcherenabled(::enterprise_management::BooleanPolicyProto* browserswitcherenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browserswitcherenabled_);
}
if (browserswitcherenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browserswitcherenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browserswitcherenabled, submessage_arena);
}
_has_bits_[7] |= 0x00000008u;
} else {
_has_bits_[7] &= ~0x00000008u;
}
browserswitcherenabled_ = browserswitcherenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserSwitcherEnabled)
}

// optional .enterprise_management.BooleanPolicyProto BrowserSwitcherKeepLastChromeTab = 521;
inline bool CloudPolicySettings::has_browserswitcherkeeplastchrometab() const {
return (_has_bits_[7] & 0x00000010u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::browserswitcherkeeplastchrometab() const {
const ::enterprise_management::BooleanPolicyProto* p = browserswitcherkeeplastchrometab_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BrowserSwitcherKeepLastChromeTab)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_browserswitcherkeeplastchrometab() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BrowserSwitcherKeepLastChromeTab)
_has_bits_[7] &= ~0x00000010u;
::enterprise_management::BooleanPolicyProto* temp = browserswitcherkeeplastchrometab_;
browserswitcherkeeplastchrometab_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_browserswitcherkeeplastchrometab() {
_has_bits_[7] |= 0x00000010u;
if (browserswitcherkeeplastchrometab_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
browserswitcherkeeplastchrometab_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BrowserSwitcherKeepLastChromeTab)
return browserswitcherkeeplastchrometab_;
}
inline void CloudPolicySettings::set_allocated_browserswitcherkeeplastchrometab(::enterprise_management::BooleanPolicyProto* browserswitcherkeeplastchrometab) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(browserswitcherkeeplastchrometab_);
}
if (browserswitcherkeeplastchrometab) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
browserswitcherkeeplastchrometab = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, browserswitcherkeeplastchrometab, submessage_arena);
}
_has_bits_[7] |= 0x00000010u;
} else {
_has_bits_[7] &= ~0x00000010u;
}
browserswitcherkeeplastchrometab_ = browserswitcherkeeplastchrometab;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BrowserSwitcherKeepLastChromeTab)
}

// optional .enterprise_management.BooleanPolicyProto AllowPopupsDuringPageUnload = 535;
inline bool CloudPolicySettings::has_allowpopupsduringpageunload() const {
return (_has_bits_[7] & 0x00000080u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowpopupsduringpageunload() const {
const ::enterprise_management::BooleanPolicyProto* p = allowpopupsduringpageunload_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowPopupsDuringPageUnload)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowpopupsduringpageunload() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowPopupsDuringPageUnload)
_has_bits_[7] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = allowpopupsduringpageunload_;
allowpopupsduringpageunload_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowpopupsduringpageunload() {
_has_bits_[7] |= 0x00000080u;
if (allowpopupsduringpageunload_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
allowpopupsduringpageunload_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowPopupsDuringPageUnload)
return allowpopupsduringpageunload_;
}
inline void CloudPolicySettings::set_allocated_allowpopupsduringpageunload(::enterprise_management::BooleanPolicyProto* allowpopupsduringpageunload) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowpopupsduringpageunload_);
}
if (allowpopupsduringpageunload) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allowpopupsduringpageunload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allowpopupsduringpageunload, submessage_arena);
}
_has_bits_[7] |= 0x00000080u;
} else {
_has_bits_[7] &= ~0x00000080u;
}
allowpopupsduringpageunload_ = allowpopupsduringpageunload;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowPopupsDuringPageUnload)
}

// optional .enterprise_management.BooleanPolicyProto SignedHTTPExchangeEnabled = 544;
inline bool CloudPolicySettings::has_signedhttpexchangeenabled() const {
return (_has_bits_[7] & 0x00000400u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::signedhttpexchangeenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = signedhttpexchangeenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SignedHTTPExchangeEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_signedhttpexchangeenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SignedHTTPExchangeEnabled)
_has_bits_[7] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = signedhttpexchangeenabled_;
signedhttpexchangeenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_signedhttpexchangeenabled() {
_has_bits_[7] |= 0x00000400u;
if (signedhttpexchangeenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
signedhttpexchangeenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SignedHTTPExchangeEnabled)
return signedhttpexchangeenabled_;
}
inline void CloudPolicySettings::set_allocated_signedhttpexchangeenabled(::enterprise_management::BooleanPolicyProto* signedhttpexchangeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(signedhttpexchangeenabled_);
}
if (signedhttpexchangeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
signedhttpexchangeenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, signedhttpexchangeenabled, submessage_arena);
}
_has_bits_[7] |= 0x00000400u;
} else {
_has_bits_[7] &= ~0x00000400u;
}
signedhttpexchangeenabled_ = signedhttpexchangeenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SignedHTTPExchangeEnabled)
}

// optional .enterprise_management.BooleanPolicyProto UserFeedbackAllowed = 572;
inline bool CloudPolicySettings::has_userfeedbackallowed() const {
return (_has_bits_[7] & 0x00010000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::userfeedbackallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = userfeedbackallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UserFeedbackAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_userfeedbackallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UserFeedbackAllowed)
_has_bits_[7] &= ~0x00010000u;
::enterprise_management::BooleanPolicyProto* temp = userfeedbackallowed_;
userfeedbackallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_userfeedbackallowed() {
_has_bits_[7] |= 0x00010000u;
if (userfeedbackallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
userfeedbackallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UserFeedbackAllowed)
return userfeedbackallowed_;
}
inline void CloudPolicySettings::set_allocated_userfeedbackallowed(::enterprise_management::BooleanPolicyProto* userfeedbackallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(userfeedbackallowed_);
}
if (userfeedbackallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
userfeedbackallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, userfeedbackallowed, submessage_arena);
}
_has_bits_[7] |= 0x00010000u;
} else {
_has_bits_[7] &= ~0x00010000u;
}
userfeedbackallowed_ = userfeedbackallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UserFeedbackAllowed)
}

// optional .enterprise_management.BooleanPolicyProto CommandLineFlagSecurityWarningsEnabled = 568;
inline bool CloudPolicySettings::has_commandlineflagsecuritywarningsenabled() const {
return (_has_bits_[7] & 0x00008000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::commandlineflagsecuritywarningsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = commandlineflagsecuritywarningsenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CommandLineFlagSecurityWarningsEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_commandlineflagsecuritywarningsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CommandLineFlagSecurityWarningsEnabled)
_has_bits_[7] &= ~0x00008000u;
::enterprise_management::BooleanPolicyProto* temp = commandlineflagsecuritywarningsenabled_;
commandlineflagsecuritywarningsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_commandlineflagsecuritywarningsenabled() {
_has_bits_[7] |= 0x00008000u;
if (commandlineflagsecuritywarningsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
commandlineflagsecuritywarningsenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CommandLineFlagSecurityWarningsEnabled)
return commandlineflagsecuritywarningsenabled_;
}
inline void CloudPolicySettings::set_allocated_commandlineflagsecuritywarningsenabled(::enterprise_management::BooleanPolicyProto* commandlineflagsecuritywarningsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(commandlineflagsecuritywarningsenabled_);
}
if (commandlineflagsecuritywarningsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
commandlineflagsecuritywarningsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, commandlineflagsecuritywarningsenabled, submessage_arena);
}
_has_bits_[7] |= 0x00008000u;
} else {
_has_bits_[7] &= ~0x00008000u;
}
commandlineflagsecuritywarningsenabled_ = commandlineflagsecuritywarningsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CommandLineFlagSecurityWarningsEnabled)
}

// optional .enterprise_management.IntegerPolicyProto SendFilesForMalwareCheck = 585;
inline bool CloudPolicySettings::has_sendfilesformalwarecheck() const {
return (_has_bits_[7] & 0x00100000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::sendfilesformalwarecheck() const {
const ::enterprise_management::IntegerPolicyProto* p = sendfilesformalwarecheck_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.SendFilesForMalwareCheck)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_sendfilesformalwarecheck() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.SendFilesForMalwareCheck)
_has_bits_[7] &= ~0x00100000u;
::enterprise_management::IntegerPolicyProto* temp = sendfilesformalwarecheck_;
sendfilesformalwarecheck_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_sendfilesformalwarecheck() {
_has_bits_[7] |= 0x00100000u;
if (sendfilesformalwarecheck_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
sendfilesformalwarecheck_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.SendFilesForMalwareCheck)
return sendfilesformalwarecheck_;
}
inline void CloudPolicySettings::set_allocated_sendfilesformalwarecheck(::enterprise_management::IntegerPolicyProto* sendfilesformalwarecheck) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(sendfilesformalwarecheck_);
}
if (sendfilesformalwarecheck) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
sendfilesformalwarecheck = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, sendfilesformalwarecheck, submessage_arena);
}
_has_bits_[7] |= 0x00100000u;
} else {
_has_bits_[7] &= ~0x00100000u;
}
sendfilesformalwarecheck_ = sendfilesformalwarecheck;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.SendFilesForMalwareCheck)
}

// optional .enterprise_management.BooleanPolicyProto UnsafeEventsReportingEnabled = 587;
inline bool CloudPolicySettings::has_unsafeeventsreportingenabled() const {
return (_has_bits_[7] & 0x00400000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::unsafeeventsreportingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = unsafeeventsreportingenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UnsafeEventsReportingEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_unsafeeventsreportingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UnsafeEventsReportingEnabled)
_has_bits_[7] &= ~0x00400000u;
::enterprise_management::BooleanPolicyProto* temp = unsafeeventsreportingenabled_;
unsafeeventsreportingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_unsafeeventsreportingenabled() {
_has_bits_[7] |= 0x00400000u;
if (unsafeeventsreportingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
unsafeeventsreportingenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UnsafeEventsReportingEnabled)
return unsafeeventsreportingenabled_;
}
inline void CloudPolicySettings::set_allocated_unsafeeventsreportingenabled(::enterprise_management::BooleanPolicyProto* unsafeeventsreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(unsafeeventsreportingenabled_);
}
if (unsafeeventsreportingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
unsafeeventsreportingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, unsafeeventsreportingenabled, submessage_arena);
}
_has_bits_[7] |= 0x00400000u;
} else {
_has_bits_[7] &= ~0x00400000u;
}
unsafeeventsreportingenabled_ = unsafeeventsreportingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UnsafeEventsReportingEnabled)
}

// optional .enterprise_management.IntegerPolicyProto BlockLargeFileTransfer = 588;
inline bool CloudPolicySettings::has_blocklargefiletransfer() const {
return (_has_bits_[7] & 0x00800000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::blocklargefiletransfer() const {
const ::enterprise_management::IntegerPolicyProto* p = blocklargefiletransfer_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BlockLargeFileTransfer)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_blocklargefiletransfer() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BlockLargeFileTransfer)
_has_bits_[7] &= ~0x00800000u;
::enterprise_management::IntegerPolicyProto* temp = blocklargefiletransfer_;
blocklargefiletransfer_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_blocklargefiletransfer() {
_has_bits_[7] |= 0x00800000u;
if (blocklargefiletransfer_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
blocklargefiletransfer_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BlockLargeFileTransfer)
return blocklargefiletransfer_;
}
inline void CloudPolicySettings::set_allocated_blocklargefiletransfer(::enterprise_management::IntegerPolicyProto* blocklargefiletransfer) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blocklargefiletransfer_);
}
if (blocklargefiletransfer) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
blocklargefiletransfer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, blocklargefiletransfer, submessage_arena);
}
_has_bits_[7] |= 0x00800000u;
} else {
_has_bits_[7] &= ~0x00800000u;
}
blocklargefiletransfer_ = blocklargefiletransfer;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BlockLargeFileTransfer)
}

// optional .enterprise_management.IntegerPolicyProto DelayDeliveryUntilVerdict = 589;
inline bool CloudPolicySettings::has_delaydeliveryuntilverdict() const {
return (_has_bits_[7] & 0x01000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::delaydeliveryuntilverdict() const {
const ::enterprise_management::IntegerPolicyProto* p = delaydeliveryuntilverdict_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DelayDeliveryUntilVerdict)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_delaydeliveryuntilverdict() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DelayDeliveryUntilVerdict)
_has_bits_[7] &= ~0x01000000u;
::enterprise_management::IntegerPolicyProto* temp = delaydeliveryuntilverdict_;
delaydeliveryuntilverdict_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_delaydeliveryuntilverdict() {
_has_bits_[7] |= 0x01000000u;
if (delaydeliveryuntilverdict_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
delaydeliveryuntilverdict_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DelayDeliveryUntilVerdict)
return delaydeliveryuntilverdict_;
}
inline void CloudPolicySettings::set_allocated_delaydeliveryuntilverdict(::enterprise_management::IntegerPolicyProto* delaydeliveryuntilverdict) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(delaydeliveryuntilverdict_);
}
if (delaydeliveryuntilverdict) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
delaydeliveryuntilverdict = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, delaydeliveryuntilverdict, submessage_arena);
}
_has_bits_[7] |= 0x01000000u;
} else {
_has_bits_[7] &= ~0x01000000u;
}
delaydeliveryuntilverdict_ = delaydeliveryuntilverdict;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DelayDeliveryUntilVerdict)
}

// optional .enterprise_management.IntegerPolicyProto AllowPasswordProtectedFiles = 590;
inline bool CloudPolicySettings::has_allowpasswordprotectedfiles() const {
return (_has_bits_[7] & 0x02000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::allowpasswordprotectedfiles() const {
const ::enterprise_management::IntegerPolicyProto* p = allowpasswordprotectedfiles_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowPasswordProtectedFiles)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_allowpasswordprotectedfiles() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowPasswordProtectedFiles)
_has_bits_[7] &= ~0x02000000u;
::enterprise_management::IntegerPolicyProto* temp = allowpasswordprotectedfiles_;
allowpasswordprotectedfiles_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_allowpasswordprotectedfiles() {
_has_bits_[7] |= 0x02000000u;
if (allowpasswordprotectedfiles_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
allowpasswordprotectedfiles_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowPasswordProtectedFiles)
return allowpasswordprotectedfiles_;
}
inline void CloudPolicySettings::set_allocated_allowpasswordprotectedfiles(::enterprise_management::IntegerPolicyProto* allowpasswordprotectedfiles) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowpasswordprotectedfiles_);
}
if (allowpasswordprotectedfiles) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allowpasswordprotectedfiles = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allowpasswordprotectedfiles, submessage_arena);
}
_has_bits_[7] |= 0x02000000u;
} else {
_has_bits_[7] &= ~0x02000000u;
}
allowpasswordprotectedfiles_ = allowpasswordprotectedfiles;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowPasswordProtectedFiles)
}

// optional .enterprise_management.IntegerPolicyProto BlockUnsupportedFiletypes = 670;
inline bool CloudPolicySettings::has_blockunsupportedfiletypes() const {
return (_has_bits_[8] & 0x40000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::blockunsupportedfiletypes() const {
const ::enterprise_management::IntegerPolicyProto* p = blockunsupportedfiletypes_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.BlockUnsupportedFiletypes)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_blockunsupportedfiletypes() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.BlockUnsupportedFiletypes)
_has_bits_[8] &= ~0x40000000u;
::enterprise_management::IntegerPolicyProto* temp = blockunsupportedfiletypes_;
blockunsupportedfiletypes_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_blockunsupportedfiletypes() {
_has_bits_[8] |= 0x40000000u;
if (blockunsupportedfiletypes_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
blockunsupportedfiletypes_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.BlockUnsupportedFiletypes)
return blockunsupportedfiletypes_;
}
inline void CloudPolicySettings::set_allocated_blockunsupportedfiletypes(::enterprise_management::IntegerPolicyProto* blockunsupportedfiletypes) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(blockunsupportedfiletypes_);
}
if (blockunsupportedfiletypes) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
blockunsupportedfiletypes = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, blockunsupportedfiletypes, submessage_arena);
}
_has_bits_[8] |= 0x40000000u;
} else {
_has_bits_[8] &= ~0x40000000u;
}
blockunsupportedfiletypes_ = blockunsupportedfiletypes;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.BlockUnsupportedFiletypes)
}

// optional .enterprise_management.IntegerPolicyProto CheckContentCompliance = 591;
inline bool CloudPolicySettings::has_checkcontentcompliance() const {
return (_has_bits_[7] & 0x04000000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::checkcontentcompliance() const {
const ::enterprise_management::IntegerPolicyProto* p = checkcontentcompliance_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CheckContentCompliance)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_checkcontentcompliance() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CheckContentCompliance)
_has_bits_[7] &= ~0x04000000u;
::enterprise_management::IntegerPolicyProto* temp = checkcontentcompliance_;
checkcontentcompliance_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_checkcontentcompliance() {
_has_bits_[7] |= 0x04000000u;
if (checkcontentcompliance_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
checkcontentcompliance_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CheckContentCompliance)
return checkcontentcompliance_;
}
inline void CloudPolicySettings::set_allocated_checkcontentcompliance(::enterprise_management::IntegerPolicyProto* checkcontentcompliance) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(checkcontentcompliance_);
}
if (checkcontentcompliance) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
checkcontentcompliance = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, checkcontentcompliance, submessage_arena);
}
_has_bits_[7] |= 0x04000000u;
} else {
_has_bits_[7] &= ~0x04000000u;
}
checkcontentcompliance_ = checkcontentcompliance;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CheckContentCompliance)
}

// optional .enterprise_management.StringListPolicyProto URLsToCheckComplianceOfDownloadedContent = 592;
inline bool CloudPolicySettings::has_urlstocheckcomplianceofdownloadedcontent() const {
return (_has_bits_[7] & 0x08000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlstocheckcomplianceofdownloadedcontent() const {
const ::enterprise_management::StringListPolicyProto* p = urlstocheckcomplianceofdownloadedcontent_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLsToCheckComplianceOfDownloadedContent)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlstocheckcomplianceofdownloadedcontent() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLsToCheckComplianceOfDownloadedContent)
_has_bits_[7] &= ~0x08000000u;
::enterprise_management::StringListPolicyProto* temp = urlstocheckcomplianceofdownloadedcontent_;
urlstocheckcomplianceofdownloadedcontent_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlstocheckcomplianceofdownloadedcontent() {
_has_bits_[7] |= 0x08000000u;
if (urlstocheckcomplianceofdownloadedcontent_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
urlstocheckcomplianceofdownloadedcontent_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLsToCheckComplianceOfDownloadedContent)
return urlstocheckcomplianceofdownloadedcontent_;
}
inline void CloudPolicySettings::set_allocated_urlstocheckcomplianceofdownloadedcontent(::enterprise_management::StringListPolicyProto* urlstocheckcomplianceofdownloadedcontent) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlstocheckcomplianceofdownloadedcontent_);
}
if (urlstocheckcomplianceofdownloadedcontent) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
urlstocheckcomplianceofdownloadedcontent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlstocheckcomplianceofdownloadedcontent, submessage_arena);
}
_has_bits_[7] |= 0x08000000u;
} else {
_has_bits_[7] &= ~0x08000000u;
}
urlstocheckcomplianceofdownloadedcontent_ = urlstocheckcomplianceofdownloadedcontent;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLsToCheckComplianceOfDownloadedContent)
}

// optional .enterprise_management.StringListPolicyProto URLsToNotCheckComplianceOfUploadedContent = 593;
inline bool CloudPolicySettings::has_urlstonotcheckcomplianceofuploadedcontent() const {
return (_has_bits_[7] & 0x10000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlstonotcheckcomplianceofuploadedcontent() const {
const ::enterprise_management::StringListPolicyProto* p = urlstonotcheckcomplianceofuploadedcontent_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLsToNotCheckComplianceOfUploadedContent)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlstonotcheckcomplianceofuploadedcontent() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLsToNotCheckComplianceOfUploadedContent)
_has_bits_[7] &= ~0x10000000u;
::enterprise_management::StringListPolicyProto* temp = urlstonotcheckcomplianceofuploadedcontent_;
urlstonotcheckcomplianceofuploadedcontent_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlstonotcheckcomplianceofuploadedcontent() {
_has_bits_[7] |= 0x10000000u;
if (urlstonotcheckcomplianceofuploadedcontent_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
urlstonotcheckcomplianceofuploadedcontent_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLsToNotCheckComplianceOfUploadedContent)
return urlstonotcheckcomplianceofuploadedcontent_;
}
inline void CloudPolicySettings::set_allocated_urlstonotcheckcomplianceofuploadedcontent(::enterprise_management::StringListPolicyProto* urlstonotcheckcomplianceofuploadedcontent) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlstonotcheckcomplianceofuploadedcontent_);
}
if (urlstonotcheckcomplianceofuploadedcontent) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
urlstonotcheckcomplianceofuploadedcontent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlstonotcheckcomplianceofuploadedcontent, submessage_arena);
}
_has_bits_[7] |= 0x10000000u;
} else {
_has_bits_[7] &= ~0x10000000u;
}
urlstonotcheckcomplianceofuploadedcontent_ = urlstonotcheckcomplianceofuploadedcontent;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLsToNotCheckComplianceOfUploadedContent)
}

// optional .enterprise_management.StringPolicyProto OnFileDownloadedEnterpriseConnector = 698;
inline bool CloudPolicySettings::has_onfiledownloadedenterpriseconnector() const {
return (_has_bits_[9] & 0x00000040u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::onfiledownloadedenterpriseconnector() const {
const ::enterprise_management::StringPolicyProto* p = onfiledownloadedenterpriseconnector_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.OnFileDownloadedEnterpriseConnector)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_onfiledownloadedenterpriseconnector() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.OnFileDownloadedEnterpriseConnector)
_has_bits_[9] &= ~0x00000040u;
::enterprise_management::StringPolicyProto* temp = onfiledownloadedenterpriseconnector_;
onfiledownloadedenterpriseconnector_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_onfiledownloadedenterpriseconnector() {
_has_bits_[9] |= 0x00000040u;
if (onfiledownloadedenterpriseconnector_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
onfiledownloadedenterpriseconnector_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.OnFileDownloadedEnterpriseConnector)
return onfiledownloadedenterpriseconnector_;
}
inline void CloudPolicySettings::set_allocated_onfiledownloadedenterpriseconnector(::enterprise_management::StringPolicyProto* onfiledownloadedenterpriseconnector) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(onfiledownloadedenterpriseconnector_);
}
if (onfiledownloadedenterpriseconnector) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
onfiledownloadedenterpriseconnector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, onfiledownloadedenterpriseconnector, submessage_arena);
}
_has_bits_[9] |= 0x00000040u;
} else {
_has_bits_[9] &= ~0x00000040u;
}
onfiledownloadedenterpriseconnector_ = onfiledownloadedenterpriseconnector;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.OnFileDownloadedEnterpriseConnector)
}

// optional .enterprise_management.StringPolicyProto OnFileAttachedEnterpriseConnector = 695;
inline bool CloudPolicySettings::has_onfileattachedenterpriseconnector() const {
return (_has_bits_[9] & 0x00000020u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::onfileattachedenterpriseconnector() const {
const ::enterprise_management::StringPolicyProto* p = onfileattachedenterpriseconnector_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.OnFileAttachedEnterpriseConnector)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_onfileattachedenterpriseconnector() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.OnFileAttachedEnterpriseConnector)
_has_bits_[9] &= ~0x00000020u;
::enterprise_management::StringPolicyProto* temp = onfileattachedenterpriseconnector_;
onfileattachedenterpriseconnector_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_onfileattachedenterpriseconnector() {
_has_bits_[9] |= 0x00000020u;
if (onfileattachedenterpriseconnector_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
onfileattachedenterpriseconnector_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.OnFileAttachedEnterpriseConnector)
return onfileattachedenterpriseconnector_;
}
inline void CloudPolicySettings::set_allocated_onfileattachedenterpriseconnector(::enterprise_management::StringPolicyProto* onfileattachedenterpriseconnector) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(onfileattachedenterpriseconnector_);
}
if (onfileattachedenterpriseconnector) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
onfileattachedenterpriseconnector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, onfileattachedenterpriseconnector, submessage_arena);
}
_has_bits_[9] |= 0x00000020u;
} else {
_has_bits_[9] &= ~0x00000020u;
}
onfileattachedenterpriseconnector_ = onfileattachedenterpriseconnector;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.OnFileAttachedEnterpriseConnector)
}

// optional .enterprise_management.StringPolicyProto OnBulkDataEntryEnterpriseConnector = 699;
inline bool CloudPolicySettings::has_onbulkdataentryenterpriseconnector() const {
return (_has_bits_[9] & 0x00000080u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::onbulkdataentryenterpriseconnector() const {
const ::enterprise_management::StringPolicyProto* p = onbulkdataentryenterpriseconnector_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.OnBulkDataEntryEnterpriseConnector)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_onbulkdataentryenterpriseconnector() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.OnBulkDataEntryEnterpriseConnector)
_has_bits_[9] &= ~0x00000080u;
::enterprise_management::StringPolicyProto* temp = onbulkdataentryenterpriseconnector_;
onbulkdataentryenterpriseconnector_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_onbulkdataentryenterpriseconnector() {
_has_bits_[9] |= 0x00000080u;
if (onbulkdataentryenterpriseconnector_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
onbulkdataentryenterpriseconnector_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.OnBulkDataEntryEnterpriseConnector)
return onbulkdataentryenterpriseconnector_;
}
inline void CloudPolicySettings::set_allocated_onbulkdataentryenterpriseconnector(::enterprise_management::StringPolicyProto* onbulkdataentryenterpriseconnector) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(onbulkdataentryenterpriseconnector_);
}
if (onbulkdataentryenterpriseconnector) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
onbulkdataentryenterpriseconnector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, onbulkdataentryenterpriseconnector, submessage_arena);
}
_has_bits_[9] |= 0x00000080u;
} else {
_has_bits_[9] &= ~0x00000080u;
}
onbulkdataentryenterpriseconnector_ = onbulkdataentryenterpriseconnector;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.OnBulkDataEntryEnterpriseConnector)
}

// optional .enterprise_management.StringPolicyProto OnSecurityEventEnterpriseConnector = 701;
inline bool CloudPolicySettings::has_onsecurityevententerpriseconnector() const {
return (_has_bits_[9] & 0x00000100u) != 0;
}
inline const ::enterprise_management::StringPolicyProto& CloudPolicySettings::onsecurityevententerpriseconnector() const {
const ::enterprise_management::StringPolicyProto* p = onsecurityevententerpriseconnector_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.OnSecurityEventEnterpriseConnector)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringPolicyProto*>(
&::enterprise_management::_StringPolicyProto_default_instance_);
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::release_onsecurityevententerpriseconnector() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.OnSecurityEventEnterpriseConnector)
_has_bits_[9] &= ~0x00000100u;
::enterprise_management::StringPolicyProto* temp = onsecurityevententerpriseconnector_;
onsecurityevententerpriseconnector_ = nullptr;
return temp;
}
inline ::enterprise_management::StringPolicyProto* CloudPolicySettings::mutable_onsecurityevententerpriseconnector() {
_has_bits_[9] |= 0x00000100u;
if (onsecurityevententerpriseconnector_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringPolicyProto>(GetArenaNoVirtual());
onsecurityevententerpriseconnector_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.OnSecurityEventEnterpriseConnector)
return onsecurityevententerpriseconnector_;
}
inline void CloudPolicySettings::set_allocated_onsecurityevententerpriseconnector(::enterprise_management::StringPolicyProto* onsecurityevententerpriseconnector) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(onsecurityevententerpriseconnector_);
}
if (onsecurityevententerpriseconnector) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
onsecurityevententerpriseconnector = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, onsecurityevententerpriseconnector, submessage_arena);
}
_has_bits_[9] |= 0x00000100u;
} else {
_has_bits_[9] &= ~0x00000100u;
}
onsecurityevententerpriseconnector_ = onsecurityevententerpriseconnector;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.OnSecurityEventEnterpriseConnector)
}

// optional .enterprise_management.StringListPolicyProto URLsToCheckForMalwareOfUploadedContent = 602;
inline bool CloudPolicySettings::has_urlstocheckformalwareofuploadedcontent() const {
return (_has_bits_[7] & 0x20000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlstocheckformalwareofuploadedcontent() const {
const ::enterprise_management::StringListPolicyProto* p = urlstocheckformalwareofuploadedcontent_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLsToCheckForMalwareOfUploadedContent)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlstocheckformalwareofuploadedcontent() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLsToCheckForMalwareOfUploadedContent)
_has_bits_[7] &= ~0x20000000u;
::enterprise_management::StringListPolicyProto* temp = urlstocheckformalwareofuploadedcontent_;
urlstocheckformalwareofuploadedcontent_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlstocheckformalwareofuploadedcontent() {
_has_bits_[7] |= 0x20000000u;
if (urlstocheckformalwareofuploadedcontent_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
urlstocheckformalwareofuploadedcontent_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLsToCheckForMalwareOfUploadedContent)
return urlstocheckformalwareofuploadedcontent_;
}
inline void CloudPolicySettings::set_allocated_urlstocheckformalwareofuploadedcontent(::enterprise_management::StringListPolicyProto* urlstocheckformalwareofuploadedcontent) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlstocheckformalwareofuploadedcontent_);
}
if (urlstocheckformalwareofuploadedcontent) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
urlstocheckformalwareofuploadedcontent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlstocheckformalwareofuploadedcontent, submessage_arena);
}
_has_bits_[7] |= 0x20000000u;
} else {
_has_bits_[7] &= ~0x20000000u;
}
urlstocheckformalwareofuploadedcontent_ = urlstocheckformalwareofuploadedcontent;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLsToCheckForMalwareOfUploadedContent)
}

// optional .enterprise_management.StringListPolicyProto URLsToNotCheckForMalwareOfDownloadedContent = 671;
inline bool CloudPolicySettings::has_urlstonotcheckformalwareofdownloadedcontent() const {
return (_has_bits_[8] & 0x80000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::urlstonotcheckformalwareofdownloadedcontent() const {
const ::enterprise_management::StringListPolicyProto* p = urlstonotcheckformalwareofdownloadedcontent_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.URLsToNotCheckForMalwareOfDownloadedContent)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_urlstonotcheckformalwareofdownloadedcontent() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.URLsToNotCheckForMalwareOfDownloadedContent)
_has_bits_[8] &= ~0x80000000u;
::enterprise_management::StringListPolicyProto* temp = urlstonotcheckformalwareofdownloadedcontent_;
urlstonotcheckformalwareofdownloadedcontent_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_urlstonotcheckformalwareofdownloadedcontent() {
_has_bits_[8] |= 0x80000000u;
if (urlstonotcheckformalwareofdownloadedcontent_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
urlstonotcheckformalwareofdownloadedcontent_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.URLsToNotCheckForMalwareOfDownloadedContent)
return urlstonotcheckformalwareofdownloadedcontent_;
}
inline void CloudPolicySettings::set_allocated_urlstonotcheckformalwareofdownloadedcontent(::enterprise_management::StringListPolicyProto* urlstonotcheckformalwareofdownloadedcontent) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(urlstonotcheckformalwareofdownloadedcontent_);
}
if (urlstonotcheckformalwareofdownloadedcontent) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
urlstonotcheckformalwareofdownloadedcontent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, urlstonotcheckformalwareofdownloadedcontent, submessage_arena);
}
_has_bits_[8] |= 0x80000000u;
} else {
_has_bits_[8] &= ~0x80000000u;
}
urlstonotcheckformalwareofdownloadedcontent_ = urlstonotcheckformalwareofdownloadedcontent;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.URLsToNotCheckForMalwareOfDownloadedContent)
}

// optional .enterprise_management.StringListPolicyProto HSTSPolicyBypassList = 603;
inline bool CloudPolicySettings::has_hstspolicybypasslist() const {
return (_has_bits_[7] & 0x40000000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::hstspolicybypasslist() const {
const ::enterprise_management::StringListPolicyProto* p = hstspolicybypasslist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_hstspolicybypasslist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
_has_bits_[7] &= ~0x40000000u;
::enterprise_management::StringListPolicyProto* temp = hstspolicybypasslist_;
hstspolicybypasslist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_hstspolicybypasslist() {
_has_bits_[7] |= 0x40000000u;
if (hstspolicybypasslist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
hstspolicybypasslist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
return hstspolicybypasslist_;
}
inline void CloudPolicySettings::set_allocated_hstspolicybypasslist(::enterprise_management::StringListPolicyProto* hstspolicybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hstspolicybypasslist_);
}
if (hstspolicybypasslist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
hstspolicybypasslist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, hstspolicybypasslist, submessage_arena);
}
_has_bits_[7] |= 0x40000000u;
} else {
_has_bits_[7] &= ~0x40000000u;
}
hstspolicybypasslist_ = hstspolicybypasslist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.HSTSPolicyBypassList)
}

// optional .enterprise_management.BooleanPolicyProto AllowSyncXHRInPageDismissal = 606;
inline bool CloudPolicySettings::has_allowsyncxhrinpagedismissal() const {
return (_has_bits_[7] & 0x80000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allowsyncxhrinpagedismissal() const {
const ::enterprise_management::BooleanPolicyProto* p = allowsyncxhrinpagedismissal_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowSyncXHRInPageDismissal)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allowsyncxhrinpagedismissal() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowSyncXHRInPageDismissal)
_has_bits_[7] &= ~0x80000000u;
::enterprise_management::BooleanPolicyProto* temp = allowsyncxhrinpagedismissal_;
allowsyncxhrinpagedismissal_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allowsyncxhrinpagedismissal() {
_has_bits_[7] |= 0x80000000u;
if (allowsyncxhrinpagedismissal_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
allowsyncxhrinpagedismissal_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowSyncXHRInPageDismissal)
return allowsyncxhrinpagedismissal_;
}
inline void CloudPolicySettings::set_allocated_allowsyncxhrinpagedismissal(::enterprise_management::BooleanPolicyProto* allowsyncxhrinpagedismissal) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allowsyncxhrinpagedismissal_);
}
if (allowsyncxhrinpagedismissal) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allowsyncxhrinpagedismissal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allowsyncxhrinpagedismissal, submessage_arena);
}
_has_bits_[7] |= 0x80000000u;
} else {
_has_bits_[7] &= ~0x80000000u;
}
allowsyncxhrinpagedismissal_ = allowsyncxhrinpagedismissal;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowSyncXHRInPageDismissal)
}

// optional .enterprise_management.BooleanPolicyProto TLS13HardeningForLocalAnchorsEnabled = 628;
inline bool CloudPolicySettings::has_tls13hardeningforlocalanchorsenabled() const {
return (_has_bits_[8] & 0x00000040u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::tls13hardeningforlocalanchorsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = tls13hardeningforlocalanchorsenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.TLS13HardeningForLocalAnchorsEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_tls13hardeningforlocalanchorsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.TLS13HardeningForLocalAnchorsEnabled)
_has_bits_[8] &= ~0x00000040u;
::enterprise_management::BooleanPolicyProto* temp = tls13hardeningforlocalanchorsenabled_;
tls13hardeningforlocalanchorsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_tls13hardeningforlocalanchorsenabled() {
_has_bits_[8] |= 0x00000040u;
if (tls13hardeningforlocalanchorsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
tls13hardeningforlocalanchorsenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.TLS13HardeningForLocalAnchorsEnabled)
return tls13hardeningforlocalanchorsenabled_;
}
inline void CloudPolicySettings::set_allocated_tls13hardeningforlocalanchorsenabled(::enterprise_management::BooleanPolicyProto* tls13hardeningforlocalanchorsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(tls13hardeningforlocalanchorsenabled_);
}
if (tls13hardeningforlocalanchorsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
tls13hardeningforlocalanchorsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, tls13hardeningforlocalanchorsenabled, submessage_arena);
}
_has_bits_[8] |= 0x00000040u;
} else {
_has_bits_[8] &= ~0x00000040u;
}
tls13hardeningforlocalanchorsenabled_ = tls13hardeningforlocalanchorsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.TLS13HardeningForLocalAnchorsEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AudioSandboxEnabled = 629;
inline bool CloudPolicySettings::has_audiosandboxenabled() const {
return (_has_bits_[8] & 0x00000080u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::audiosandboxenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = audiosandboxenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AudioSandboxEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_audiosandboxenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AudioSandboxEnabled)
_has_bits_[8] &= ~0x00000080u;
::enterprise_management::BooleanPolicyProto* temp = audiosandboxenabled_;
audiosandboxenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_audiosandboxenabled() {
_has_bits_[8] |= 0x00000080u;
if (audiosandboxenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
audiosandboxenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AudioSandboxEnabled)
return audiosandboxenabled_;
}
inline void CloudPolicySettings::set_allocated_audiosandboxenabled(::enterprise_management::BooleanPolicyProto* audiosandboxenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(audiosandboxenabled_);
}
if (audiosandboxenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
audiosandboxenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, audiosandboxenabled, submessage_arena);
}
_has_bits_[8] |= 0x00000080u;
} else {
_has_bits_[8] &= ~0x00000080u;
}
audiosandboxenabled_ = audiosandboxenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AudioSandboxEnabled)
}

// optional .enterprise_management.StringListPolicyProto CorsMitigationList = 631;
inline bool CloudPolicySettings::has_corsmitigationlist() const {
return (_has_bits_[8] & 0x00000100u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::corsmitigationlist() const {
const ::enterprise_management::StringListPolicyProto* p = corsmitigationlist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CorsMitigationList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_corsmitigationlist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CorsMitigationList)
_has_bits_[8] &= ~0x00000100u;
::enterprise_management::StringListPolicyProto* temp = corsmitigationlist_;
corsmitigationlist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_corsmitigationlist() {
_has_bits_[8] |= 0x00000100u;
if (corsmitigationlist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
corsmitigationlist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CorsMitigationList)
return corsmitigationlist_;
}
inline void CloudPolicySettings::set_allocated_corsmitigationlist(::enterprise_management::StringListPolicyProto* corsmitigationlist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(corsmitigationlist_);
}
if (corsmitigationlist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
corsmitigationlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, corsmitigationlist, submessage_arena);
}
_has_bits_[8] |= 0x00000100u;
} else {
_has_bits_[8] &= ~0x00000100u;
}
corsmitigationlist_ = corsmitigationlist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CorsMitigationList)
}

// optional .enterprise_management.BooleanPolicyProto CorsLegacyModeEnabled = 632;
inline bool CloudPolicySettings::has_corslegacymodeenabled() const {
return (_has_bits_[8] & 0x00000200u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::corslegacymodeenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = corslegacymodeenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.CorsLegacyModeEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_corslegacymodeenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.CorsLegacyModeEnabled)
_has_bits_[8] &= ~0x00000200u;
::enterprise_management::BooleanPolicyProto* temp = corslegacymodeenabled_;
corslegacymodeenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_corslegacymodeenabled() {
_has_bits_[8] |= 0x00000200u;
if (corslegacymodeenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
corslegacymodeenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.CorsLegacyModeEnabled)
return corslegacymodeenabled_;
}
inline void CloudPolicySettings::set_allocated_corslegacymodeenabled(::enterprise_management::BooleanPolicyProto* corslegacymodeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(corslegacymodeenabled_);
}
if (corslegacymodeenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
corslegacymodeenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, corslegacymodeenabled, submessage_arena);
}
_has_bits_[8] |= 0x00000200u;
} else {
_has_bits_[8] &= ~0x00000200u;
}
corslegacymodeenabled_ = corslegacymodeenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.CorsLegacyModeEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ExternalProtocolDialogShowAlwaysOpenCheckbox = 634;
inline bool CloudPolicySettings::has_externalprotocoldialogshowalwaysopencheckbox() const {
return (_has_bits_[8] & 0x00000400u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::externalprotocoldialogshowalwaysopencheckbox() const {
const ::enterprise_management::BooleanPolicyProto* p = externalprotocoldialogshowalwaysopencheckbox_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ExternalProtocolDialogShowAlwaysOpenCheckbox)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_externalprotocoldialogshowalwaysopencheckbox() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ExternalProtocolDialogShowAlwaysOpenCheckbox)
_has_bits_[8] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = externalprotocoldialogshowalwaysopencheckbox_;
externalprotocoldialogshowalwaysopencheckbox_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_externalprotocoldialogshowalwaysopencheckbox() {
_has_bits_[8] |= 0x00000400u;
if (externalprotocoldialogshowalwaysopencheckbox_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
externalprotocoldialogshowalwaysopencheckbox_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ExternalProtocolDialogShowAlwaysOpenCheckbox)
return externalprotocoldialogshowalwaysopencheckbox_;
}
inline void CloudPolicySettings::set_allocated_externalprotocoldialogshowalwaysopencheckbox(::enterprise_management::BooleanPolicyProto* externalprotocoldialogshowalwaysopencheckbox) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(externalprotocoldialogshowalwaysopencheckbox_);
}
if (externalprotocoldialogshowalwaysopencheckbox) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
externalprotocoldialogshowalwaysopencheckbox = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, externalprotocoldialogshowalwaysopencheckbox, submessage_arena);
}
_has_bits_[8] |= 0x00000400u;
} else {
_has_bits_[8] &= ~0x00000400u;
}
externalprotocoldialogshowalwaysopencheckbox_ = externalprotocoldialogshowalwaysopencheckbox;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ExternalProtocolDialogShowAlwaysOpenCheckbox)
}

// optional .enterprise_management.IntegerPolicyProto DefaultInsecureContentSetting = 635;
inline bool CloudPolicySettings::has_defaultinsecurecontentsetting() const {
return (_has_bits_[8] & 0x00000800u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::defaultinsecurecontentsetting() const {
const ::enterprise_management::IntegerPolicyProto* p = defaultinsecurecontentsetting_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.DefaultInsecureContentSetting)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_defaultinsecurecontentsetting() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.DefaultInsecureContentSetting)
_has_bits_[8] &= ~0x00000800u;
::enterprise_management::IntegerPolicyProto* temp = defaultinsecurecontentsetting_;
defaultinsecurecontentsetting_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_defaultinsecurecontentsetting() {
_has_bits_[8] |= 0x00000800u;
if (defaultinsecurecontentsetting_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
defaultinsecurecontentsetting_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.DefaultInsecureContentSetting)
return defaultinsecurecontentsetting_;
}
inline void CloudPolicySettings::set_allocated_defaultinsecurecontentsetting(::enterprise_management::IntegerPolicyProto* defaultinsecurecontentsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(defaultinsecurecontentsetting_);
}
if (defaultinsecurecontentsetting) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
defaultinsecurecontentsetting = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, defaultinsecurecontentsetting, submessage_arena);
}
_has_bits_[8] |= 0x00000800u;
} else {
_has_bits_[8] &= ~0x00000800u;
}
defaultinsecurecontentsetting_ = defaultinsecurecontentsetting;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.DefaultInsecureContentSetting)
}

// optional .enterprise_management.StringListPolicyProto InsecureContentAllowedForUrls = 636;
inline bool CloudPolicySettings::has_insecurecontentallowedforurls() const {
return (_has_bits_[8] & 0x00001000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::insecurecontentallowedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = insecurecontentallowedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.InsecureContentAllowedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_insecurecontentallowedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.InsecureContentAllowedForUrls)
_has_bits_[8] &= ~0x00001000u;
::enterprise_management::StringListPolicyProto* temp = insecurecontentallowedforurls_;
insecurecontentallowedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_insecurecontentallowedforurls() {
_has_bits_[8] |= 0x00001000u;
if (insecurecontentallowedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
insecurecontentallowedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.InsecureContentAllowedForUrls)
return insecurecontentallowedforurls_;
}
inline void CloudPolicySettings::set_allocated_insecurecontentallowedforurls(::enterprise_management::StringListPolicyProto* insecurecontentallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecurecontentallowedforurls_);
}
if (insecurecontentallowedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
insecurecontentallowedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, insecurecontentallowedforurls, submessage_arena);
}
_has_bits_[8] |= 0x00001000u;
} else {
_has_bits_[8] &= ~0x00001000u;
}
insecurecontentallowedforurls_ = insecurecontentallowedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.InsecureContentAllowedForUrls)
}

// optional .enterprise_management.StringListPolicyProto InsecureContentBlockedForUrls = 637;
inline bool CloudPolicySettings::has_insecurecontentblockedforurls() const {
return (_has_bits_[8] & 0x00002000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::insecurecontentblockedforurls() const {
const ::enterprise_management::StringListPolicyProto* p = insecurecontentblockedforurls_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.InsecureContentBlockedForUrls)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_insecurecontentblockedforurls() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.InsecureContentBlockedForUrls)
_has_bits_[8] &= ~0x00002000u;
::enterprise_management::StringListPolicyProto* temp = insecurecontentblockedforurls_;
insecurecontentblockedforurls_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_insecurecontentblockedforurls() {
_has_bits_[8] |= 0x00002000u;
if (insecurecontentblockedforurls_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
insecurecontentblockedforurls_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.InsecureContentBlockedForUrls)
return insecurecontentblockedforurls_;
}
inline void CloudPolicySettings::set_allocated_insecurecontentblockedforurls(::enterprise_management::StringListPolicyProto* insecurecontentblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(insecurecontentblockedforurls_);
}
if (insecurecontentblockedforurls) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
insecurecontentblockedforurls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, insecurecontentblockedforurls, submessage_arena);
}
_has_bits_[8] |= 0x00002000u;
} else {
_has_bits_[8] &= ~0x00002000u;
}
insecurecontentblockedforurls_ = insecurecontentblockedforurls;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.InsecureContentBlockedForUrls)
}

// optional .enterprise_management.BooleanPolicyProto ClickToCallEnabled = 647;
inline bool CloudPolicySettings::has_clicktocallenabled() const {
return (_has_bits_[8] & 0x00040000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::clicktocallenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = clicktocallenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ClickToCallEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_clicktocallenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ClickToCallEnabled)
_has_bits_[8] &= ~0x00040000u;
::enterprise_management::BooleanPolicyProto* temp = clicktocallenabled_;
clicktocallenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_clicktocallenabled() {
_has_bits_[8] |= 0x00040000u;
if (clicktocallenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
clicktocallenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ClickToCallEnabled)
return clicktocallenabled_;
}
inline void CloudPolicySettings::set_allocated_clicktocallenabled(::enterprise_management::BooleanPolicyProto* clicktocallenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(clicktocallenabled_);
}
if (clicktocallenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
clicktocallenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, clicktocallenabled, submessage_arena);
}
_has_bits_[8] |= 0x00040000u;
} else {
_has_bits_[8] &= ~0x00040000u;
}
clicktocallenabled_ = clicktocallenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ClickToCallEnabled)
}

// optional .enterprise_management.IntegerPolicyProto UserDataSnapshotRetentionLimit = 675;
inline bool CloudPolicySettings::has_userdatasnapshotretentionlimit() const {
return (_has_bits_[9] & 0x00000001u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::userdatasnapshotretentionlimit() const {
const ::enterprise_management::IntegerPolicyProto* p = userdatasnapshotretentionlimit_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.UserDataSnapshotRetentionLimit)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_userdatasnapshotretentionlimit() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.UserDataSnapshotRetentionLimit)
_has_bits_[9] &= ~0x00000001u;
::enterprise_management::IntegerPolicyProto* temp = userdatasnapshotretentionlimit_;
userdatasnapshotretentionlimit_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_userdatasnapshotretentionlimit() {
_has_bits_[9] |= 0x00000001u;
if (userdatasnapshotretentionlimit_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
userdatasnapshotretentionlimit_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.UserDataSnapshotRetentionLimit)
return userdatasnapshotretentionlimit_;
}
inline void CloudPolicySettings::set_allocated_userdatasnapshotretentionlimit(::enterprise_management::IntegerPolicyProto* userdatasnapshotretentionlimit) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(userdatasnapshotretentionlimit_);
}
if (userdatasnapshotretentionlimit) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
userdatasnapshotretentionlimit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, userdatasnapshotretentionlimit, submessage_arena);
}
_has_bits_[9] |= 0x00000001u;
} else {
_has_bits_[9] &= ~0x00000001u;
}
userdatasnapshotretentionlimit_ = userdatasnapshotretentionlimit;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.UserDataSnapshotRetentionLimit)
}

// optional .enterprise_management.StringListPolicyProto PrinterTypeDenyList = 649;
inline bool CloudPolicySettings::has_printertypedenylist() const {
return (_has_bits_[8] & 0x00080000u) != 0;
}
inline const ::enterprise_management::StringListPolicyProto& CloudPolicySettings::printertypedenylist() const {
const ::enterprise_management::StringListPolicyProto* p = printertypedenylist_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PrinterTypeDenyList)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::StringListPolicyProto*>(
&::enterprise_management::_StringListPolicyProto_default_instance_);
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::release_printertypedenylist() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PrinterTypeDenyList)
_has_bits_[8] &= ~0x00080000u;
::enterprise_management::StringListPolicyProto* temp = printertypedenylist_;
printertypedenylist_ = nullptr;
return temp;
}
inline ::enterprise_management::StringListPolicyProto* CloudPolicySettings::mutable_printertypedenylist() {
_has_bits_[8] |= 0x00080000u;
if (printertypedenylist_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::StringListPolicyProto>(GetArenaNoVirtual());
printertypedenylist_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PrinterTypeDenyList)
return printertypedenylist_;
}
inline void CloudPolicySettings::set_allocated_printertypedenylist(::enterprise_management::StringListPolicyProto* printertypedenylist) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(printertypedenylist_);
}
if (printertypedenylist) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
printertypedenylist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, printertypedenylist, submessage_arena);
}
_has_bits_[8] |= 0x00080000u;
} else {
_has_bits_[8] &= ~0x00080000u;
}
printertypedenylist_ = printertypedenylist;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PrinterTypeDenyList)
}

// optional .enterprise_management.IntegerPolicyProto AmbientAuthenticationInPrivateModesEnabled = 652;
inline bool CloudPolicySettings::has_ambientauthenticationinprivatemodesenabled() const {
return (_has_bits_[8] & 0x00400000u) != 0;
}
inline const ::enterprise_management::IntegerPolicyProto& CloudPolicySettings::ambientauthenticationinprivatemodesenabled() const {
const ::enterprise_management::IntegerPolicyProto* p = ambientauthenticationinprivatemodesenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AmbientAuthenticationInPrivateModesEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::IntegerPolicyProto*>(
&::enterprise_management::_IntegerPolicyProto_default_instance_);
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::release_ambientauthenticationinprivatemodesenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AmbientAuthenticationInPrivateModesEnabled)
_has_bits_[8] &= ~0x00400000u;
::enterprise_management::IntegerPolicyProto* temp = ambientauthenticationinprivatemodesenabled_;
ambientauthenticationinprivatemodesenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::IntegerPolicyProto* CloudPolicySettings::mutable_ambientauthenticationinprivatemodesenabled() {
_has_bits_[8] |= 0x00400000u;
if (ambientauthenticationinprivatemodesenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::IntegerPolicyProto>(GetArenaNoVirtual());
ambientauthenticationinprivatemodesenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AmbientAuthenticationInPrivateModesEnabled)
return ambientauthenticationinprivatemodesenabled_;
}
inline void CloudPolicySettings::set_allocated_ambientauthenticationinprivatemodesenabled(::enterprise_management::IntegerPolicyProto* ambientauthenticationinprivatemodesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ambientauthenticationinprivatemodesenabled_);
}
if (ambientauthenticationinprivatemodesenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
ambientauthenticationinprivatemodesenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, ambientauthenticationinprivatemodesenabled, submessage_arena);
}
_has_bits_[8] |= 0x00400000u;
} else {
_has_bits_[8] &= ~0x00400000u;
}
ambientauthenticationinprivatemodesenabled_ = ambientauthenticationinprivatemodesenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AmbientAuthenticationInPrivateModesEnabled)
}

// optional .enterprise_management.BooleanPolicyProto PaymentMethodQueryEnabled = 653;
inline bool CloudPolicySettings::has_paymentmethodqueryenabled() const {
return (_has_bits_[8] & 0x00800000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::paymentmethodqueryenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = paymentmethodqueryenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_paymentmethodqueryenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
_has_bits_[8] &= ~0x00800000u;
::enterprise_management::BooleanPolicyProto* temp = paymentmethodqueryenabled_;
paymentmethodqueryenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_paymentmethodqueryenabled() {
_has_bits_[8] |= 0x00800000u;
if (paymentmethodqueryenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
paymentmethodqueryenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
return paymentmethodqueryenabled_;
}
inline void CloudPolicySettings::set_allocated_paymentmethodqueryenabled(::enterprise_management::BooleanPolicyProto* paymentmethodqueryenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(paymentmethodqueryenabled_);
}
if (paymentmethodqueryenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
paymentmethodqueryenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, paymentmethodqueryenabled, submessage_arena);
}
_has_bits_[8] |= 0x00800000u;
} else {
_has_bits_[8] &= ~0x00800000u;
}
paymentmethodqueryenabled_ = paymentmethodqueryenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.PaymentMethodQueryEnabled)
}

// optional .enterprise_management.BooleanPolicyProto StricterMixedContentTreatmentEnabled = 654;
inline bool CloudPolicySettings::has_strictermixedcontenttreatmentenabled() const {
return (_has_bits_[8] & 0x01000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::strictermixedcontenttreatmentenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = strictermixedcontenttreatmentenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.StricterMixedContentTreatmentEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_strictermixedcontenttreatmentenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.StricterMixedContentTreatmentEnabled)
_has_bits_[8] &= ~0x01000000u;
::enterprise_management::BooleanPolicyProto* temp = strictermixedcontenttreatmentenabled_;
strictermixedcontenttreatmentenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_strictermixedcontenttreatmentenabled() {
_has_bits_[8] |= 0x01000000u;
if (strictermixedcontenttreatmentenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
strictermixedcontenttreatmentenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.StricterMixedContentTreatmentEnabled)
return strictermixedcontenttreatmentenabled_;
}
inline void CloudPolicySettings::set_allocated_strictermixedcontenttreatmentenabled(::enterprise_management::BooleanPolicyProto* strictermixedcontenttreatmentenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(strictermixedcontenttreatmentenabled_);
}
if (strictermixedcontenttreatmentenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
strictermixedcontenttreatmentenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, strictermixedcontenttreatmentenabled, submessage_arena);
}
_has_bits_[8] |= 0x01000000u;
} else {
_has_bits_[8] &= ~0x01000000u;
}
strictermixedcontenttreatmentenabled_ = strictermixedcontenttreatmentenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.StricterMixedContentTreatmentEnabled)
}

// optional .enterprise_management.BooleanPolicyProto LocalDiscoveryEnabled = 664;
inline bool CloudPolicySettings::has_localdiscoveryenabled() const {
return (_has_bits_[8] & 0x08000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::localdiscoveryenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = localdiscoveryenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.LocalDiscoveryEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_localdiscoveryenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.LocalDiscoveryEnabled)
_has_bits_[8] &= ~0x08000000u;
::enterprise_management::BooleanPolicyProto* temp = localdiscoveryenabled_;
localdiscoveryenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_localdiscoveryenabled() {
_has_bits_[8] |= 0x08000000u;
if (localdiscoveryenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
localdiscoveryenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.LocalDiscoveryEnabled)
return localdiscoveryenabled_;
}
inline void CloudPolicySettings::set_allocated_localdiscoveryenabled(::enterprise_management::BooleanPolicyProto* localdiscoveryenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(localdiscoveryenabled_);
}
if (localdiscoveryenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
localdiscoveryenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, localdiscoveryenabled, submessage_arena);
}
_has_bits_[8] |= 0x08000000u;
} else {
_has_bits_[8] &= ~0x08000000u;
}
localdiscoveryenabled_ = localdiscoveryenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.LocalDiscoveryEnabled)
}

// optional .enterprise_management.BooleanPolicyProto ScreenCaptureAllowed = 668;
inline bool CloudPolicySettings::has_screencaptureallowed() const {
return (_has_bits_[8] & 0x20000000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::screencaptureallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = screencaptureallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ScreenCaptureAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_screencaptureallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ScreenCaptureAllowed)
_has_bits_[8] &= ~0x20000000u;
::enterprise_management::BooleanPolicyProto* temp = screencaptureallowed_;
screencaptureallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_screencaptureallowed() {
_has_bits_[8] |= 0x20000000u;
if (screencaptureallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
screencaptureallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ScreenCaptureAllowed)
return screencaptureallowed_;
}
inline void CloudPolicySettings::set_allocated_screencaptureallowed(::enterprise_management::BooleanPolicyProto* screencaptureallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(screencaptureallowed_);
}
if (screencaptureallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
screencaptureallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, screencaptureallowed, submessage_arena);
}
_has_bits_[8] |= 0x20000000u;
} else {
_has_bits_[8] &= ~0x20000000u;
}
screencaptureallowed_ = screencaptureallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ScreenCaptureAllowed)
}

// optional .enterprise_management.BooleanPolicyProto AllowNativeNotifications = 680;
inline bool CloudPolicySettings::has_allownativenotifications() const {
return (_has_bits_[9] & 0x00000002u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::allownativenotifications() const {
const ::enterprise_management::BooleanPolicyProto* p = allownativenotifications_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AllowNativeNotifications)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_allownativenotifications() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AllowNativeNotifications)
_has_bits_[9] &= ~0x00000002u;
::enterprise_management::BooleanPolicyProto* temp = allownativenotifications_;
allownativenotifications_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_allownativenotifications() {
_has_bits_[9] |= 0x00000002u;
if (allownativenotifications_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
allownativenotifications_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AllowNativeNotifications)
return allownativenotifications_;
}
inline void CloudPolicySettings::set_allocated_allownativenotifications(::enterprise_management::BooleanPolicyProto* allownativenotifications) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(allownativenotifications_);
}
if (allownativenotifications) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
allownativenotifications = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, allownativenotifications, submessage_arena);
}
_has_bits_[9] |= 0x00000002u;
} else {
_has_bits_[9] &= ~0x00000002u;
}
allownativenotifications_ = allownativenotifications;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AllowNativeNotifications)
}

// optional .enterprise_management.BooleanPolicyProto AdvancedProtectionAllowed = 687;
inline bool CloudPolicySettings::has_advancedprotectionallowed() const {
return (_has_bits_[9] & 0x00000008u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::advancedprotectionallowed() const {
const ::enterprise_management::BooleanPolicyProto* p = advancedprotectionallowed_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AdvancedProtectionAllowed)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_advancedprotectionallowed() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AdvancedProtectionAllowed)
_has_bits_[9] &= ~0x00000008u;
::enterprise_management::BooleanPolicyProto* temp = advancedprotectionallowed_;
advancedprotectionallowed_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_advancedprotectionallowed() {
_has_bits_[9] |= 0x00000008u;
if (advancedprotectionallowed_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
advancedprotectionallowed_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AdvancedProtectionAllowed)
return advancedprotectionallowed_;
}
inline void CloudPolicySettings::set_allocated_advancedprotectionallowed(::enterprise_management::BooleanPolicyProto* advancedprotectionallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(advancedprotectionallowed_);
}
if (advancedprotectionallowed) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
advancedprotectionallowed = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, advancedprotectionallowed, submessage_arena);
}
_has_bits_[9] |= 0x00000008u;
} else {
_has_bits_[9] &= ~0x00000008u;
}
advancedprotectionallowed_ = advancedprotectionallowed;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AdvancedProtectionAllowed)
}

// optional .enterprise_management.BooleanPolicyProto ScrollToTextFragmentEnabled = 689;
inline bool CloudPolicySettings::has_scrolltotextfragmentenabled() const {
return (_has_bits_[9] & 0x00000010u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::scrolltotextfragmentenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = scrolltotextfragmentenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.ScrollToTextFragmentEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_scrolltotextfragmentenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.ScrollToTextFragmentEnabled)
_has_bits_[9] &= ~0x00000010u;
::enterprise_management::BooleanPolicyProto* temp = scrolltotextfragmentenabled_;
scrolltotextfragmentenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_scrolltotextfragmentenabled() {
_has_bits_[9] |= 0x00000010u;
if (scrolltotextfragmentenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
scrolltotextfragmentenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.ScrollToTextFragmentEnabled)
return scrolltotextfragmentenabled_;
}
inline void CloudPolicySettings::set_allocated_scrolltotextfragmentenabled(::enterprise_management::BooleanPolicyProto* scrolltotextfragmentenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(scrolltotextfragmentenabled_);
}
if (scrolltotextfragmentenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
scrolltotextfragmentenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, scrolltotextfragmentenabled, submessage_arena);
}
_has_bits_[9] |= 0x00000010u;
} else {
_has_bits_[9] &= ~0x00000010u;
}
scrolltotextfragmentenabled_ = scrolltotextfragmentenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.ScrollToTextFragmentEnabled)
}

// optional .enterprise_management.BooleanPolicyProto AccessibilityImageLabelsEnabled = 705;
inline bool CloudPolicySettings::has_accessibilityimagelabelsenabled() const {
return (_has_bits_[9] & 0x00000400u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::accessibilityimagelabelsenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = accessibilityimagelabelsenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.AccessibilityImageLabelsEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_accessibilityimagelabelsenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.AccessibilityImageLabelsEnabled)
_has_bits_[9] &= ~0x00000400u;
::enterprise_management::BooleanPolicyProto* temp = accessibilityimagelabelsenabled_;
accessibilityimagelabelsenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_accessibilityimagelabelsenabled() {
_has_bits_[9] |= 0x00000400u;
if (accessibilityimagelabelsenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
accessibilityimagelabelsenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.AccessibilityImageLabelsEnabled)
return accessibilityimagelabelsenabled_;
}
inline void CloudPolicySettings::set_allocated_accessibilityimagelabelsenabled(::enterprise_management::BooleanPolicyProto* accessibilityimagelabelsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(accessibilityimagelabelsenabled_);
}
if (accessibilityimagelabelsenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
accessibilityimagelabelsenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, accessibilityimagelabelsenabled, submessage_arena);
}
_has_bits_[9] |= 0x00000400u;
} else {
_has_bits_[9] &= ~0x00000400u;
}
accessibilityimagelabelsenabled_ = accessibilityimagelabelsenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.AccessibilityImageLabelsEnabled)
}

// optional .enterprise_management.BooleanPolicyProto IntensiveWakeUpThrottlingEnabled = 715;
inline bool CloudPolicySettings::has_intensivewakeupthrottlingenabled() const {
return (_has_bits_[9] & 0x00004000u) != 0;
}
inline const ::enterprise_management::BooleanPolicyProto& CloudPolicySettings::intensivewakeupthrottlingenabled() const {
const ::enterprise_management::BooleanPolicyProto* p = intensivewakeupthrottlingenabled_;
// @@protoc_insertion_point(field_get:enterprise_management.CloudPolicySettings.IntensiveWakeUpThrottlingEnabled)
return p != nullptr ? *p : *reinterpret_cast<const ::enterprise_management::BooleanPolicyProto*>(
&::enterprise_management::_BooleanPolicyProto_default_instance_);
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::release_intensivewakeupthrottlingenabled() {
// @@protoc_insertion_point(field_release:enterprise_management.CloudPolicySettings.IntensiveWakeUpThrottlingEnabled)
_has_bits_[9] &= ~0x00004000u;
::enterprise_management::BooleanPolicyProto* temp = intensivewakeupthrottlingenabled_;
intensivewakeupthrottlingenabled_ = nullptr;
return temp;
}
inline ::enterprise_management::BooleanPolicyProto* CloudPolicySettings::mutable_intensivewakeupthrottlingenabled() {
_has_bits_[9] |= 0x00004000u;
if (intensivewakeupthrottlingenabled_ == nullptr) {
auto* p = CreateMaybeMessage<::enterprise_management::BooleanPolicyProto>(GetArenaNoVirtual());
intensivewakeupthrottlingenabled_ = p;
}
// @@protoc_insertion_point(field_mutable:enterprise_management.CloudPolicySettings.IntensiveWakeUpThrottlingEnabled)
return intensivewakeupthrottlingenabled_;
}
inline void CloudPolicySettings::set_allocated_intensivewakeupthrottlingenabled(::enterprise_management::BooleanPolicyProto* intensivewakeupthrottlingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
if (message_arena == nullptr) {
delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(intensivewakeupthrottlingenabled_);
}
if (intensivewakeupthrottlingenabled) {
::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
if (message_arena != submessage_arena) {
intensivewakeupthrottlingenabled = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
message_arena, intensivewakeupthrottlingenabled, submessage_arena);
}
_has_bits_[9] |= 0x00004000u;
} else {
_has_bits_[9] &= ~0x00004000u;
}
intensivewakeupthrottlingenabled_ = intensivewakeupthrottlingenabled;
// @@protoc_insertion_point(field_set_allocated:enterprise_management.CloudPolicySettings.IntensiveWakeUpThrottlingEnabled)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace enterprise_management

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_cloud_5fpolicy_2eproto
