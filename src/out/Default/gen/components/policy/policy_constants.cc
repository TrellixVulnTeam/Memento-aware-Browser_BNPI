//
// DO NOT MODIFY THIS FILE DIRECTLY!
// IT IS GENERATED BY generate_policy_source.py
// FROM ../../components/policy/resources/policy_templates.json
//

#include "components/policy/policy_constants.h"

#include <algorithm>
#include <climits>
#include <memory>

#include "base/logging.h"
#include "base/stl_util.h"  // base::size()
#include "build/branding_buildflags.h"
#include "components/policy/core/common/policy_types.h"
#include "components/policy/core/common/schema_internal.h"
#include "components/policy/proto/cloud_policy.pb.h"
#include "components/policy/risk_tag.h"

namespace em = enterprise_management;

namespace policy {

const __attribute__((unused)) PolicyDetails kChromePolicyDetails[] = {
//  is_deprecated is_future is_device_policy  id  max_external_data_size, risk tags
  // AbusiveExperienceInterventionEnforce
  { false,        false,    false,            404,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AccessibilityImageLabelsEnabled
  { false,        false,    false,            703,                     0, { RISK_TAG_GOOGLE_SHARING, RISK_TAG_NONE } },
  // AdsSettingForIntrusiveAdsSites
  { false,        false,    false,            409,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AdvancedProtectionAllowed
  { false,        false,    false,            685,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AllowCrossOriginAuthPrompt
  { false,        false,    false,             89,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // AllowDeletingBrowserHistory
  { false,        false,    false,            187,                     0, { RISK_TAG_LOCAL_DATA_ACCESS, RISK_TAG_ADMIN_SHARING } },
  // AllowDinosaurEasterEgg
  { false,        false,    false,            309,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AllowFileSelectionDialogs
  { false,        false,    false,             84,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AllowNativeNotifications
  { false,        false,    false,            678,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AllowOutdatedPlugins
  { false,        false,    false,             81,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // AllowPasswordProtectedFiles
  { false,        false,    false,            588,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AllowPopupsDuringPageUnload
  { false,        false,    false,            533,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AllowSyncXHRInPageDismissal
  { false,        false,    false,            604,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AllowedDomainsForApps
  { false,        false,    false,            331,                     0, { RISK_TAG_FILTERING, RISK_TAG_NONE } },
  // AlternateErrorPagesEnabled
  { false,        false,    false,              5,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AlternativeBrowserParameters
  { false,        false,    false,            495,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AlternativeBrowserPath
  { false,        false,    false,            494,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AlwaysOpenPdfExternally
  { false,        false,    false,            347,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AmbientAuthenticationInPrivateModesEnabled
  { false,        false,    false,            650,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AppCacheForceEnabled
  { false,        false,    false,            704,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AudioCaptureAllowed
  { false,        false,    false,            160,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AudioCaptureAllowedUrls
  { false,        false,    false,            208,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // AudioSandboxEnabled
  { false,        false,    false,            627,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // AuthNegotiateDelegateByKdcPolicy
  { false,        false,    false,            528,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // AuthNegotiateDelegateWhitelist
  { false,        false,    false,             30,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AuthSchemes
  { false,        false,    false,             26,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AuthServerWhitelist
  { false,        false,    false,             29,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AutoFillEnabled
  { true,         false,    false,             18,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AutoLaunchProtocolsFromOrigins
  { false,        false,    false,            722,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AutoOpenAllowedForURLs
  { false,        false,    false,            707,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AutoOpenFileTypes
  { false,        false,    false,            700,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AutoSelectCertificateForUrls
  { false,        false,    false,            102,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // AutofillAddressEnabled
  { false,        false,    false,            459,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AutofillCreditCardEnabled
  { false,        false,    false,            392,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AutoplayAllowed
  { false,        false,    false,            430,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // AutoplayWhitelist
  { false,        false,    false,            431,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BackgroundModeEnabled
  { false,        false,    false,            138,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // BlockExternalExtensions
  { false,        false,    false,            637,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BlockLargeFileTransfer
  { false,        false,    false,            586,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BlockThirdPartyCookies
  { false,        false,    false,             39,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BlockUnsupportedFiletypes
  { false,        false,    false,            668,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BookmarkBarEnabled
  { false,        false,    false,             82,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserAddPersonEnabled
  { false,        false,    false,            276,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserGuestModeEnabled
  { false,        false,    false,            275,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserGuestModeEnforced
  { false,        false,    false,            574,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserNetworkTimeQueriesEnabled
  { false,        false,    false,            370,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserSignin
  { false,        false,    false,            487,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserSwitcherDelay
  { false,        false,    false,            524,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserSwitcherEnabled
  { false,        false,    false,            517,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserSwitcherExternalGreylistUrl
  { false,        false,    false,            564,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserSwitcherExternalSitelistUrl
  { false,        false,    false,            511,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserSwitcherKeepLastChromeTab
  { false,        false,    false,            519,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserSwitcherUrlGreylist
  { false,        false,    false,            497,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BrowserSwitcherUrlList
  { false,        false,    false,            496,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // BuiltInDnsClientEnabled
  { false,        false,    false,            165,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CertificateTransparencyEnforcementDisabledForCas
  { false,        false,    false,            435,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // CertificateTransparencyEnforcementDisabledForLegacyCas
  { false,        false,    false,            436,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // CertificateTransparencyEnforcementDisabledForUrls
  { false,        false,    false,            335,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // CheckContentCompliance
  { false,        false,    false,            589,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ChromeVariations
  { false,        false,    false,            663,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ClickToCallEnabled
  { false,        false,    false,            645,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CloudExtensionRequestEnabled
  { false,        false,    false,            608,                     0, { RISK_TAG_ADMIN_SHARING, RISK_TAG_GOOGLE_SHARING } },
  // CloudManagementEnrollmentMandatory
  { false,        false,    false,            505,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CloudManagementEnrollmentToken
  { false,        false,    false,            510,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CloudPolicyOverridesPlatformPolicy
  { false,        false,    false,            381,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CloudPrintProxyEnabled
  { false,        false,    false,             13,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CloudPrintSubmitEnabled
  { false,        false,    false,            109,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CloudReportingEnabled
  { false,        false,    false,            493,                     0, { RISK_TAG_ADMIN_SHARING, RISK_TAG_GOOGLE_SHARING } },
  // CoalesceH2ConnectionsWithClientCertificatesForHosts
  { false,        false,    false,            466,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CommandLineFlagSecurityWarningsEnabled
  { false,        false,    false,            566,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // ComponentUpdatesEnabled
  { false,        false,    false,            342,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ContentPackDefaultFilteringBehavior
  { true,         false,    false,            204,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ContentPackManualBehaviorHosts
  { true,         false,    false,            205,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ContentPackManualBehaviorURLs
  { true,         false,    false,            206,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CookiesAllowedForUrls
  { false,        false,    false,             77,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CookiesBlockedForUrls
  { false,        false,    false,             67,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CookiesSessionOnlyForUrls
  { false,        false,    false,             68,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CorsLegacyModeEnabled
  { true,         false,    false,            630,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // CorsMitigationList
  { true,         false,    false,            629,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DNSInterceptionChecksEnabled
  { false,        false,    false,            654,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultBrowserSettingEnabled
  { false,        false,    false,              3,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultCookiesSetting
  { false,        false,    false,             48,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultDownloadDirectory
  { false,        false,    false,            401,                     0, { RISK_TAG_LOCAL_DATA_ACCESS, RISK_TAG_NONE } },
  // DefaultGeolocationSetting
  { false,        false,    false,             54,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // DefaultImagesSetting
  { false,        false,    false,             49,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultInsecureContentSetting
  { false,        false,    false,            633,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultJavaScriptSetting
  { false,        false,    false,             50,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultMediaStreamSetting
  { true,         false,    false,            149,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // DefaultNotificationsSetting
  { false,        false,    false,             53,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultPluginsSetting
  { false,        false,    false,             51,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultPopupsSetting
  { false,        false,    false,             52,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultPrinterSelection
  { false,        false,    false,            308,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderAlternateURLs
  { false,        false,    false,            161,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderContextMenuAccessAllowed
  { false,        false,    false,            715,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderEnabled
  { false,        false,    false,             40,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderEncodings
  { false,        false,    false,             47,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderIconURL
  { false,        false,    false,             46,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderImageURL
  { false,        false,    false,            229,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderImageURLPostParams
  { false,        false,    false,            233,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderKeyword
  { false,        false,    false,             42,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderName
  { false,        false,    false,             41,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // DefaultSearchProviderNewTabURL
  { false,        false,    false,            237,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderSearchURL
  { false,        false,    false,             43,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // DefaultSearchProviderSearchURLPostParams
  { false,        false,    false,            230,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderSuggestURL
  { false,        false,    false,             44,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultSearchProviderSuggestURLPostParams
  { false,        false,    false,            231,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DefaultWebBluetoothGuardSetting
  { false,        false,    false,            320,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // DefaultWebUsbGuardSetting
  { false,        false,    false,            434,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // DelayDeliveryUntilVerdict
  { false,        false,    false,            587,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DeveloperToolsAvailability
  { false,        false,    false,            443,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DeveloperToolsDisabled
  { true,         false,    false,             36,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // Disable3DAPIs
  { false,        false,    false,             55,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DisableAuthNegotiateCnameLookup
  { false,        false,    false,             27,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DisablePrintPreview
  { false,        false,    false,            117,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DisableSafeBrowsingProceedAnyway
  { false,        false,    false,            150,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DisableScreenshots
  { false,        false,    false,            153,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DisabledPlugins
  { true,         false,    false,             19,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DisabledPluginsExceptions
  { true,         false,    false,             79,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DisabledSchemes
  { true,         false,    false,             85,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DiskCacheDir
  { false,        false,    false,             88,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DiskCacheSize
  { false,        false,    false,            110,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DnsOverHttpsMode
  { false,        false,    false,            582,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DnsOverHttpsTemplates
  { false,        false,    false,            642,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // DownloadDirectory
  { false,        false,    false,             64,                     0, { RISK_TAG_LOCAL_DATA_ACCESS, RISK_TAG_NONE } },
  // DownloadRestrictions
  { false,        false,    false,            371,                     0, { RISK_TAG_LOCAL_DATA_ACCESS, RISK_TAG_NONE } },
  // EditBookmarksEnabled
  { false,        false,    false,             83,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // EnableAuthNegotiatePort
  { false,        false,    false,             28,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // EnableDeprecatedWebPlatformFeatures
  { false,        false,    false,            270,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // EnableExperimentalPolicies
  { false,        false,    false,            711,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // EnableMediaRouter
  { false,        false,    false,            333,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // EnableOnlineRevocationChecks
  { false,        false,    false,            129,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // EnabledPlugins
  { true,         false,    false,             78,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // EnterpriseHardwarePlatformAPIEnabled
  { false,        false,    false,            483,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ExtensionAllowedTypes
  { false,        false,    false,            168,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ExtensionInstallBlacklist
  { false,        false,    false,             32,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ExtensionInstallForcelist
  { false,        false,    false,             34,                     0, { RISK_TAG_FULL_ADMIN_ACCESS, RISK_TAG_NONE } },
  // ExtensionInstallListsMergeEnabled
  { false,        false,    false,            544,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ExtensionInstallSources
  { false,        false,    false,            148,                     0, { RISK_TAG_FULL_ADMIN_ACCESS, RISK_TAG_SYSTEM_SECURITY } },
  // ExtensionInstallWhitelist
  { false,        false,    false,             33,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ExtensionSettings
  { false,        false,    false,            278,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ExternalProtocolDialogShowAlwaysOpenCheckbox
  { false,        false,    false,            632,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ForceEphemeralProfiles
  { false,        false,    false,            245,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ForceGoogleSafeSearch
  { false,        false,    false,            282,                     0, { RISK_TAG_FILTERING, RISK_TAG_NONE } },
  // ForceLegacyDefaultReferrerPolicy
  { true,         false,    false,            648,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ForceSafeSearch
  { true,         false,    false,            162,                     0, { RISK_TAG_FILTERING, RISK_TAG_NONE } },
  // ForceYouTubeRestrict
  { false,        false,    false,            348,                     0, { RISK_TAG_FILTERING, RISK_TAG_NONE } },
  // ForceYouTubeSafetyMode
  { true,         false,    false,            283,                     0, { RISK_TAG_FILTERING, RISK_TAG_NONE } },
  // FullscreenAllowed
  { false,        false,    false,            240,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // GSSAPILibraryName
  { false,        false,    false,             31,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // GloballyScopeHTTPAuthCacheEnabled
  { false,        false,    false,            643,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // HSTSPolicyBypassList
  { false,        false,    false,            601,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // HardwareAccelerationModeEnabled
  { false,        false,    false,            304,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // HideWebStoreIcon
  { false,        false,    false,            189,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // HomepageIsNewTabPage
  { false,        false,    false,              2,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // HomepageLocation
  { false,        false,    false,              1,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ImagesAllowedForUrls
  { false,        false,    false,             69,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ImagesBlockedForUrls
  { false,        false,    false,             70,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ImportAutofillFormData
  { false,        false,    false,            277,                     0, { RISK_TAG_LOCAL_DATA_ACCESS, RISK_TAG_NONE } },
  // ImportBookmarks
  { false,        false,    false,             97,                     0, { RISK_TAG_LOCAL_DATA_ACCESS, RISK_TAG_NONE } },
  // ImportHistory
  { false,        false,    false,             98,                     0, { RISK_TAG_LOCAL_DATA_ACCESS, RISK_TAG_NONE } },
  // ImportHomepage
  { false,        false,    false,             99,                     0, { RISK_TAG_LOCAL_DATA_ACCESS, RISK_TAG_NONE } },
  // ImportSavedPasswords
  { false,        false,    false,            101,                     0, { RISK_TAG_LOCAL_DATA_ACCESS, RISK_TAG_NONE } },
  // ImportSearchEngine
  { false,        false,    false,            100,                     0, { RISK_TAG_LOCAL_DATA_ACCESS, RISK_TAG_NONE } },
  // IncognitoEnabled
  { true,         false,    false,             10,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // IncognitoModeAvailability
  { false,        false,    false,             93,                     0, { RISK_TAG_FILTERING, RISK_TAG_NONE } },
  // InsecureContentAllowedForUrls
  { false,        false,    false,            634,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // InsecureContentBlockedForUrls
  { false,        false,    false,            635,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // IntensiveWakeUpThrottlingEnabled
  { false,        false,    false,            713,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // IsolateOrigins
  { false,        false,    false,            398,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // JavaScriptAllowedForUrls
  { false,        false,    false,             71,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // JavaScriptBlockedForUrls
  { false,        false,    false,             72,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // JavascriptEnabled
  { true,         false,    false,              9,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // LegacySameSiteCookieBehaviorEnabled
  { false,        false,    false,            623,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // LegacySameSiteCookieBehaviorEnabledForDomainList
  { false,        false,    false,            624,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // LocalDiscoveryEnabled
  { false,        false,    false,            662,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ManagedBookmarks
  { false,        false,    false,            227,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // MaxConnectionsPerProxy
  { false,        false,    false,             92,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // MaxInvalidationFetchDelay
  { false,        false,    false,            228,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // MediaRouterCastAllowAllIPs
  { false,        false,    false,            437,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // MetricsReportingEnabled
  { false,        false,    false,             15,                     0, { RISK_TAG_GOOGLE_SHARING, RISK_TAG_NONE } },
  // NTPCustomBackgroundEnabled
  { false,        false,    false,            653,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // NativeMessagingBlacklist
  { false,        false,    false,            251,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // NativeMessagingUserLevelHosts
  { false,        false,    false,            253,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // NativeMessagingWhitelist
  { false,        false,    false,            252,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // NetworkPredictionOptions
  { false,        false,    false,            273,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // NewTabPageLocation
  { false,        false,    false,            360,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // NotificationsAllowedForUrls
  { false,        false,    false,            105,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // NotificationsBlockedForUrls
  { false,        false,    false,            106,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // NtlmV2Enabled
  { false,        false,    false,            393,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // OnBulkDataEntryEnterpriseConnector
  { false,        false,    false,            697,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // OnFileAttachedEnterpriseConnector
  { false,        false,    false,            693,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // OnFileDownloadedEnterpriseConnector
  { false,        false,    false,            696,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // OnSecurityEventEnterpriseConnector
  { false,        false,    false,            699,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // OverrideSecurityRestrictionsOnInsecureOrigin
  { false,        false,    false,            457,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // PasswordLeakDetectionEnabled
  { false,        false,    false,            580,                     0, { RISK_TAG_GOOGLE_SHARING, RISK_TAG_NONE } },
  // PasswordManagerEnabled
  { false,        false,    false,             16,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PasswordProtectionChangePasswordURL
  { false,        false,    false,            424,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PasswordProtectionLoginURLs
  { false,        false,    false,            423,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PasswordProtectionWarningTrigger
  { false,        false,    false,            411,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PaymentMethodQueryEnabled
  { false,        false,    false,            651,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PluginsAllowedForUrls
  { false,        false,    false,             73,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PluginsBlockedForUrls
  { false,        false,    false,             74,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PolicyAtomicGroupsEnabled
  { false,        false,    false,            584,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PolicyDictionaryMultipleSourceMergeList
  { false,        false,    false,            565,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PolicyListMultipleSourceMergeList
  { false,        false,    false,            554,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PolicyRefreshRate
  { false,        false,    false,             56,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PopupsAllowedForUrls
  { false,        false,    false,             75,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PopupsBlockedForUrls
  { false,        false,    false,             76,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PrintHeaderFooter
  { false,        false,    false,            480,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PrintPreviewUseSystemDefaultPrinter
  { false,        false,    false,            373,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PrinterTypeDenyList
  { false,        false,    false,            647,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PrintingAllowedBackgroundGraphicsModes
  { false,        false,    false,            621,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PrintingBackgroundGraphicsDefault
  { false,        false,    false,            622,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PrintingEnabled
  { false,        false,    false,             12,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PrintingPaperSizeDefault
  { false,        false,    false,            479,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PromotionalTabsEnabled
  { false,        false,    false,            454,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // PromptForDownloadLocation
  { false,        false,    false,            395,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ProxyBypassList
  { false,        false,    false,             25,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ProxyMode
  { false,        false,    false,             21,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ProxyPacUrl
  { false,        false,    false,             24,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ProxyServer
  { false,        false,    false,             23,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ProxyServerMode
  { true,         false,    false,             22,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ProxySettings
  { false,        false,    false,            116,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // QuicAllowed
  { false,        false,    false,            301,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RegisteredProtocolHandlers
  { false,        false,    false,            268,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RelaunchNotification
  { false,        false,    false,            419,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RelaunchNotificationPeriod
  { false,        false,    false,            420,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostAllowClientPairing
  { false,        false,    false,            234,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostAllowFileTransfer
  { false,        false,    false,            534,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostAllowGnubbyAuth
  { false,        false,    false,            257,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostAllowRelayedConnection
  { false,        false,    false,            263,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostClientDomain
  { true,         false,    false,            316,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostClientDomainList
  { false,        false,    false,            369,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostDomain
  { true,         false,    false,            154,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostDomainList
  { false,        false,    false,            368,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostFirewallTraversal
  { false,        false,    false,             95,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostMatchUsername
  { false,        false,    false,            285,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostRequireCurtain
  { false,        false,    false,            157,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // RemoteAccessHostTokenUrl
  { false,        false,    false,            286,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // RemoteAccessHostTokenValidationCertificateIssuer
  { false,        false,    false,            288,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RemoteAccessHostTokenValidationUrl
  { false,        false,    false,            287,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // RemoteAccessHostUdpPortRange
  { false,        false,    false,            264,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ReportExtensionsAndPluginsData
  { false,        false,    false,            499,                     0, { RISK_TAG_ADMIN_SHARING, RISK_TAG_NONE } },
  // ReportMachineIDData
  { false,        false,    false,            472,                     0, { RISK_TAG_ADMIN_SHARING, RISK_TAG_NONE } },
  // ReportPolicyData
  { false,        false,    false,            471,                     0, { RISK_TAG_ADMIN_SHARING, RISK_TAG_NONE } },
  // ReportUserIDData
  { false,        false,    false,            473,                     0, { RISK_TAG_ADMIN_SHARING, RISK_TAG_NONE } },
  // ReportVersionData
  { false,        false,    false,            470,                     0, { RISK_TAG_ADMIN_SHARING, RISK_TAG_NONE } },
  // RequireOnlineRevocationChecksForLocalAnchors
  { false,        false,    false,            235,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RestoreOnStartup
  { false,        false,    false,             37,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RestoreOnStartupURLs
  { false,        false,    false,             38,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RestrictSigninToPattern
  { false,        false,    false,            147,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // RunAllFlashInAllowMode
  { false,        false,    false,            391,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // SSLErrorOverrideAllowed
  { false,        false,    false,            300,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SSLVersionMin
  { false,        false,    false,            279,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SafeBrowsingEnabled
  { true,         false,    false,             14,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // SafeBrowsingExtendedReportingEnabled
  { false,        false,    false,            429,                     0, { RISK_TAG_GOOGLE_SHARING, RISK_TAG_NONE } },
  // SafeBrowsingProtectionLevel
  { false,        false,    false,            684,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // SafeBrowsingWhitelistDomains
  { false,        false,    false,            422,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SafeSitesFilterBehavior
  { false,        false,    false,            455,                     0, { RISK_TAG_FILTERING, RISK_TAG_GOOGLE_SHARING } },
  // SavingBrowserHistoryDisabled
  { false,        false,    false,             11,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ScreenCaptureAllowed
  { false,        false,    false,            666,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ScrollToTextFragmentEnabled
  { false,        false,    false,            687,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SearchSuggestEnabled
  { false,        false,    false,              6,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SecurityKeyPermitAttestation
  { false,        false,    false,            402,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // SendFilesForMalwareCheck
  { false,        false,    false,            583,                     0, { RISK_TAG_GOOGLE_SHARING, RISK_TAG_ADMIN_SHARING } },
  // SharedClipboardEnabled
  { false,        false,    false,            610,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ShowAppsShortcutInBookmarkBar
  { false,        false,    false,            267,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ShowCastIconInToolbar
  { false,        false,    false,            362,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // ShowHomeButton
  { false,        false,    false,             35,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SignedHTTPExchangeEnabled
  { false,        false,    false,            542,                     0, { RISK_TAG_FILTERING, RISK_TAG_NONE } },
  // SigninAllowed
  { true,         false,    false,            190,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SitePerProcess
  { false,        false,    false,            399,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // SpellCheckServiceEnabled
  { false,        false,    false,            151,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SpellcheckEnabled
  { false,        false,    false,            408,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SpellcheckLanguage
  { false,        false,    false,            405,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SpellcheckLanguageBlacklist
  { false,        false,    false,            536,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // StricterMixedContentTreatmentEnabled
  { true,         false,    false,            652,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // SuppressUnsupportedOSWarning
  { false,        false,    false,            324,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // SyncDisabled
  { false,        false,    false,             20,                     0, { RISK_TAG_FILTERING, RISK_TAG_GOOGLE_SHARING } },
  // SyncTypesListDisabled
  { false,        false,    false,            649,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // TLS13HardeningForLocalAnchorsEnabled
  { false,        false,    false,            626,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // TaskManagerEndProcessEnabled
  { false,        false,    false,            327,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // TranslateEnabled
  { false,        false,    false,             80,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // URLBlacklist
  { false,        false,    false,            103,                     0, { RISK_TAG_FILTERING, RISK_TAG_NONE } },
  // URLWhitelist
  { false,        false,    false,            104,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // URLsToCheckComplianceOfDownloadedContent
  { false,        false,    false,            590,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // URLsToCheckForMalwareOfUploadedContent
  { false,        false,    false,            600,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // URLsToNotCheckComplianceOfUploadedContent
  { false,        false,    false,            591,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // URLsToNotCheckForMalwareOfDownloadedContent
  { false,        false,    false,            669,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // UnsafeEventsReportingEnabled
  { false,        false,    false,            585,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // UnsafelyTreatInsecureOriginAsSecure
  { true,         false,    false,            400,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // UrlKeyedAnonymizedDataCollectionEnabled
  { false,        false,    false,            461,                     0, { RISK_TAG_GOOGLE_SHARING, RISK_TAG_NONE } },
  // UserDataSnapshotRetentionLimit
  { false,        false,    false,            673,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // UserFeedbackAllowed
  { false,        false,    false,            570,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // VariationsRestrictParameter
  { false,        false,    false,            196,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // VideoCaptureAllowed
  { false,        false,    false,            167,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // VideoCaptureAllowedUrls
  { false,        false,    false,            209,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // WPADQuickCheckEnabled
  { false,        false,    false,            261,                     0, { RISK_TAG_SYSTEM_SECURITY, RISK_TAG_NONE } },
  // WebAppInstallForceList
  { false,        false,    false,            468,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // WebRtcEventLogCollectionAllowed
  { false,        false,    false,            464,                     0, { RISK_TAG_GOOGLE_SHARING, RISK_TAG_NONE } },
  // WebRtcLocalIpsAllowedUrls
  { false,        false,    false,            640,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // WebRtcUdpPortRange
  { false,        false,    false,            339,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
  // WebUsbAllowDevicesForUrls
  { false,        false,    false,            486,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // WebUsbAskForUrls
  { false,        false,    false,            439,                     0, { RISK_TAG_WEBSITE_SHARING, RISK_TAG_NONE } },
  // WebUsbBlockedForUrls
  { false,        false,    false,            440,                     0, { RISK_TAG_NONE, RISK_TAG_NONE } },
};

const internal::SchemaNode kSchemas[] = {
//  Type                           Extra  IsSensitiveValue HasSensitiveChildren
  { base::Value::Type::DICTIONARY,    25, false,           false },  // root node
  { base::Value::Type::BOOLEAN,       -1, false,           false },  // simple type: boolean
  { base::Value::Type::INTEGER,        0, false,           false },  // integer with enumeration restriction (use range instead): LegacySameSiteCookieBehaviorEnabled
                                                                     // integer with enumeration restriction (use range instead): DefaultJavaScriptSetting
                                                                     // integer with enumeration restriction (use range instead): AdsSettingForIntrusiveAdsSites
                                                                     // integer with enumeration restriction (use range instead): DefaultImagesSetting
                                                                     // integer with enumeration restriction (use range instead): RelaunchNotification
                                                                     // integer with enumeration restriction (use range instead): DefaultPopupsSetting
  { base::Value::Type::INTEGER,        1, false,           false },  // integer with enumeration restriction (use range instead): BlockUnsupportedFiletypes
                                                                     // integer with enumeration restriction (use range instead): ProxyServerMode
                                                                     // integer with enumeration restriction (use range instead): AllowPasswordProtectedFiles
                                                                     // integer with enumeration restriction (use range instead): CheckContentCompliance
                                                                     // integer with enumeration restriction (use range instead): AmbientAuthenticationInPrivateModesEnabled
                                                                     // integer with enumeration restriction (use range instead): BlockLargeFileTransfer
                                                                     // integer with enumeration restriction (use range instead): DelayDeliveryUntilVerdict
  { base::Value::Type::STRING,        -1, false,           false },  // simple type: string
  { base::Value::Type::LIST,           4, false,           false },  // 
  { base::Value::Type::DICTIONARY,     0, false,           false },  // items of AutoLaunchProtocolsFromOrigins
  { base::Value::Type::LIST,           6, false,           false },  // 
  { base::Value::Type::INTEGER,        2, false,           false },  // integer with enumeration restriction (use range instead): ForceYouTubeRestrict
                                                                     // integer with enumeration restriction (use range instead): ContentPackDefaultFilteringBehavior
                                                                     // integer with enumeration restriction (use range instead): ChromeVariations
                                                                     // integer with enumeration restriction (use range instead): PasswordProtectionWarningTrigger
                                                                     // integer with enumeration restriction (use range instead): DeveloperToolsAvailability
                                                                     // integer with enumeration restriction (use range instead): SafeBrowsingProtectionLevel
                                                                     // integer with enumeration restriction (use range instead): NetworkPredictionOptions
                                                                     // integer with enumeration restriction (use range instead): BrowserSignin
                                                                     // integer with enumeration restriction (use range instead): IncognitoModeAvailability
  { base::Value::Type::INTEGER,       -1, false,           false },  // simple type: integer
  { base::Value::Type::DICTIONARY,     1, false,           false },  // ContentPackManualBehaviorHosts
  { base::Value::Type::DICTIONARY,     2, false,           false },  // ContentPackManualBehaviorURLs
  { base::Value::Type::INTEGER,        3, false,           false },  // integer with enumeration restriction: DefaultCookiesSetting
  { base::Value::Type::INTEGER,        4, false,           false },  // integer with enumeration restriction (use range instead): DefaultNotificationsSetting
                                                                     // integer with enumeration restriction (use range instead): DefaultGeolocationSetting
                                                                     // integer with enumeration restriction (use range instead): DefaultPluginsSetting
  { base::Value::Type::INTEGER,        5, false,           false },  // integer with enumeration restriction (use range instead): DefaultWebBluetoothGuardSetting
                                                                     // integer with enumeration restriction (use range instead): DefaultWebUsbGuardSetting
                                                                     // integer with enumeration restriction (use range instead): DefaultInsecureContentSetting
                                                                     // integer with enumeration restriction (use range instead): DefaultMediaStreamSetting
  { base::Value::Type::STRING,         3, false,           false },  // string with enumeration restriction: DnsOverHttpsMode
  { base::Value::Type::INTEGER,        6, false,           false },  // integer with enumeration restriction (use range instead): DownloadRestrictions
  { base::Value::Type::STRING,         7, false,           false },  // string with enumeration restriction: items of EnableDeprecatedWebPlatformFeatures
  { base::Value::Type::LIST,          17, false,           false },  // 
  { base::Value::Type::STRING,         8, false,           false },  // string with enumeration restriction: items of ExtensionAllowedTypes
  { base::Value::Type::LIST,          19, false,           false },  // 
  { base::Value::Type::DICTIONARY,     6, false,           false },  // ExtensionSettings
  { base::Value::Type::DICTIONARY,     3, false,           false },  // *
  { base::Value::Type::STRING,         9, false,           false },  // string with enumeration restriction: installation_mode
  { base::Value::Type::DICTIONARY,     4, false,           false },  // ^update_url:
  { base::Value::Type::STRING,        10, false,           false },  // string with enumeration restriction: installation_mode
  { base::Value::Type::DICTIONARY,     5, false,           false },  // ^[a-p]{32}(?:,[a-p]{32})*,?$
  { base::Value::Type::STRING,        11, false,           false },  // string with pattern restriction: items of blocked_permissions
  { base::Value::Type::LIST,          27, false,           false },  // 
  { base::Value::Type::STRING,        12, false,           false },  // string with enumeration restriction: installation_mode
  { base::Value::Type::STRING,        13, false,           false },  // string with pattern restriction: minimum_version_required
  { base::Value::Type::STRING,        14, false,           false },  // string with pattern restriction: items of HSTSPolicyBypassList
  { base::Value::Type::LIST,          31, false,           false },  // 
  { base::Value::Type::DICTIONARY,     7, false,           false },  // items of ManagedBookmarks
  { base::Value::Type::LIST,          33, false,           false },  // 
  { base::Value::Type::LIST,          33, false,           false },  // 
  { base::Value::Type::DICTIONARY,    10, false,           false },  // items of OnBulkDataEntryEnterpriseConnector
  { base::Value::Type::DICTIONARY,     8, false,           false },  // items of disable
  { base::Value::Type::LIST,          37, false,           false },  // 
  { base::Value::Type::DICTIONARY,     9, false,           false },  // items of enable
  { base::Value::Type::LIST,          39, false,           false },  // 
  { base::Value::Type::LIST,          36, false,           false },  // 
  { base::Value::Type::DICTIONARY,    13, false,           false },  // items of OnFileAttachedEnterpriseConnector
  { base::Value::Type::DICTIONARY,    11, false,           false },  // items of disable
  { base::Value::Type::LIST,          43, false,           false },  // 
  { base::Value::Type::DICTIONARY,    12, false,           false },  // items of enable
  { base::Value::Type::LIST,          45, false,           false },  // 
  { base::Value::Type::LIST,          42, false,           false },  // 
  { base::Value::Type::DICTIONARY,    16, false,           false },  // items of OnFileDownloadedEnterpriseConnector
  { base::Value::Type::DICTIONARY,    14, false,           false },  // items of disable
  { base::Value::Type::LIST,          49, false,           false },  // 
  { base::Value::Type::DICTIONARY,    15, false,           false },  // items of enable
  { base::Value::Type::LIST,          51, false,           false },  // 
  { base::Value::Type::LIST,          48, false,           false },  // 
  { base::Value::Type::DICTIONARY,    17, false,           false },  // items of OnSecurityEventEnterpriseConnector
  { base::Value::Type::LIST,          54, false,           false },  // 
  { base::Value::Type::STRING,        15, false,           false },  // string with enumeration restriction: items of PolicyDictionaryMultipleSourceMergeList
  { base::Value::Type::LIST,          56, false,           false },  // 
  { base::Value::Type::STRING,        16, false,           false },  // string with enumeration restriction: items of PrinterTypeDenyList
  { base::Value::Type::LIST,          58, false,           false },  // 
  { base::Value::Type::STRING,        17, false,           false },  // string with enumeration restriction: PrintingAllowedBackgroundGraphicsModes
  { base::Value::Type::STRING,        18, false,           false },  // string with enumeration restriction: PrintingBackgroundGraphicsDefault
  { base::Value::Type::DICTIONARY,    19, false,           false },  // PrintingPaperSizeDefault
  { base::Value::Type::DICTIONARY,    18, false,           false },  // custom_size
  { base::Value::Type::STRING,        19, false,           false },  // string with enumeration restriction: name
  { base::Value::Type::STRING,        20, false,           false },  // string with enumeration restriction: ProxyMode
  { base::Value::Type::DICTIONARY,    20, false,           false },  // ProxySettings
  { base::Value::Type::STRING,        21, false,           false },  // string with enumeration restriction: ProxyMode
  { base::Value::Type::DICTIONARY,    21, false,           false },  // items of RegisteredProtocolHandlers
  { base::Value::Type::LIST,          68, false,           false },  // 
  { base::Value::Type::INTEGER,       22, false,           false },  // integer with ranged restriction: RelaunchNotificationPeriod
  { base::Value::Type::INTEGER,       23, false,           false },  // integer with enumeration restriction: RestoreOnStartup
  { base::Value::Type::STRING,        24, false,           false },  // string with enumeration restriction: SSLVersionMin
  { base::Value::Type::INTEGER,       25, false,           false },  // integer with enumeration restriction (use range instead): SafeSitesFilterBehavior
  { base::Value::Type::INTEGER,       26, false,           false },  // integer with enumeration restriction: SendFilesForMalwareCheck
  { base::Value::Type::INTEGER,       27, false,           false },  // integer with ranged restriction: UserDataSnapshotRetentionLimit
  { base::Value::Type::DICTIONARY,    22, false,           false },  // items of WebAppInstallForceList
  { base::Value::Type::STRING,        28, false,           false },  // string with enumeration restriction: default_launch_container
  { base::Value::Type::LIST,          76, false,           false },  // 
  { base::Value::Type::DICTIONARY,    24, false,           false },  // items of WebUsbAllowDevicesForUrls
  { base::Value::Type::DICTIONARY,    23, false,           false },  // items of devices
  { base::Value::Type::LIST,          80, false,           false },  // 
  { base::Value::Type::LIST,          79, false,           false },  // 
  { base::Value::Type::DICTIONARY,    30, false,           false },  // validation_schema root node
  { base::Value::Type::DICTIONARY,    28, false,           false },  // items of AutoSelectCertificateForUrls
  { base::Value::Type::DICTIONARY,    27, false,           false },  // filter
  { base::Value::Type::DICTIONARY,    26, false,           false },  // ISSUER
  { base::Value::Type::LIST,          84, false,           false },  // 
  { base::Value::Type::DICTIONARY,    29, false,           false },  // DefaultPrinterSelection
  { base::Value::Type::STRING,        29, false,           false },  // string with enumeration restriction: kind
};

const internal::PropertyNode kPropertyNodes[] = {
//  Property                                                             Schema
  { "allowed_origins",                                                    5 },
  { "protocol",                                                           4 },
  { "allowed_types",                                                     20 },
  { "blocked_install_message",                                            4 },
  { "blocked_permissions",                                               28 },
  { "install_sources",                                                    5 },
  { "installation_mode",                                                 23 },
  { "runtime_allowed_hosts",                                              5 },
  { "runtime_blocked_hosts",                                              5 },
  { "allowed_permissions",                                               28 },
  { "blocked_permissions",                                               28 },
  { "installation_mode",                                                 25 },
  { "allowed_permissions",                                               28 },
  { "blocked_install_message",                                            4 },
  { "blocked_permissions",                                               28 },
  { "installation_mode",                                                 29 },
  { "minimum_version_required",                                          30 },
  { "runtime_allowed_hosts",                                              5 },
  { "runtime_blocked_hosts",                                              5 },
  { "update_url",                                                         4 },
  { "*",                                                                 22 },
  { "^update_url:",                                                      24 },
  { "^[a-p]{32}(?:,[a-p]{32})*,?$",                                      26 },
  { "children",                                                          34 },
  { "name",                                                               4 },
  { "toplevel_name",                                                      4 },
  { "url",                                                                4 },
  { "tags",                                                               5 },
  { "url_list",                                                           5 },
  { "tags",                                                               5 },
  { "url_list",                                                           5 },
  { "block_until_verdict",                                                9 },
  { "disable",                                                           38 },
  { "enable",                                                            40 },
  { "service_provider",                                                   4 },
  { "tags",                                                               5 },
  { "url_list",                                                           5 },
  { "tags",                                                               5 },
  { "url_list",                                                           5 },
  { "block_large_files",                                                  1 },
  { "block_password_protected",                                           1 },
  { "block_until_verdict",                                                9 },
  { "disable",                                                           44 },
  { "enable",                                                            46 },
  { "service_provider",                                                   4 },
  { "tags",                                                               5 },
  { "url_list",                                                           5 },
  { "tags",                                                               5 },
  { "url_list",                                                           5 },
  { "block_large_files",                                                  1 },
  { "block_password_protected",                                           1 },
  { "block_until_verdict",                                                9 },
  { "disable",                                                           50 },
  { "enable",                                                            52 },
  { "service_provider",                                                   4 },
  { "service_provider",                                                   4 },
  { "height",                                                             9 },
  { "width",                                                              9 },
  { "custom_size",                                                       63 },
  { "name",                                                              64 },
  { key::kProxyBypassList,                                                4 },
  { key::kProxyMode,                                                     67 },
  { key::kProxyPacUrl,                                                    4 },
  { key::kProxyServer,                                                    4 },
  { key::kProxyServerMode,                                                3 },
  { "default",                                                            1 },
  { "protocol",                                                           4 },
  { "url",                                                                4 },
  { "create_desktop_shortcut",                                            1 },
  { "default_launch_container",                                          77 },
  { "url",                                                                4 },
  { "product_id",                                                         9 },
  { "vendor_id",                                                          9 },
  { "devices",                                                           81 },
  { "urls",                                                               5 },
  { key::kAbusiveExperienceInterventionEnforce,                           1 },
  { key::kAccessibilityImageLabelsEnabled,                                1 },
  { key::kAdsSettingForIntrusiveAdsSites,                                 2 },
  { key::kAdvancedProtectionAllowed,                                      1 },
  { key::kAllowCrossOriginAuthPrompt,                                     1 },
  { key::kAllowDeletingBrowserHistory,                                    1 },
  { key::kAllowDinosaurEasterEgg,                                         1 },
  { key::kAllowFileSelectionDialogs,                                      1 },
  { key::kAllowNativeNotifications,                                       1 },
  { key::kAllowOutdatedPlugins,                                           1 },
  { key::kAllowPasswordProtectedFiles,                                    3 },
  { key::kAllowPopupsDuringPageUnload,                                    1 },
  { key::kAllowSyncXHRInPageDismissal,                                    1 },
  { key::kAllowedDomainsForApps,                                          4 },
  { key::kAlternateErrorPagesEnabled,                                     1 },
  { key::kAlternativeBrowserParameters,                                   5 },
  { key::kAlternativeBrowserPath,                                         4 },
  { key::kAlwaysOpenPdfExternally,                                        1 },
  { key::kAmbientAuthenticationInPrivateModesEnabled,                     3 },
  { key::kAppCacheForceEnabled,                                           1 },
  { key::kAudioCaptureAllowed,                                            1 },
  { key::kAudioCaptureAllowedUrls,                                        5 },
  { key::kAudioSandboxEnabled,                                            1 },
  { key::kAuthNegotiateDelegateByKdcPolicy,                               1 },
  { key::kAuthNegotiateDelegateWhitelist,                                 4 },
  { key::kAuthSchemes,                                                    4 },
  { key::kAuthServerWhitelist,                                            4 },
  { key::kAutoFillEnabled,                                                1 },
  { key::kAutoLaunchProtocolsFromOrigins,                                 7 },
  { key::kAutoOpenAllowedForURLs,                                         5 },
  { key::kAutoOpenFileTypes,                                              5 },
  { key::kAutoSelectCertificateForUrls,                                   5 },
  { key::kAutofillAddressEnabled,                                         1 },
  { key::kAutofillCreditCardEnabled,                                      1 },
  { key::kAutoplayAllowed,                                                1 },
  { key::kAutoplayWhitelist,                                              5 },
  { key::kBackgroundModeEnabled,                                          1 },
  { key::kBlockExternalExtensions,                                        1 },
  { key::kBlockLargeFileTransfer,                                         3 },
  { key::kBlockThirdPartyCookies,                                         1 },
  { key::kBlockUnsupportedFiletypes,                                      3 },
  { key::kBookmarkBarEnabled,                                             1 },
  { key::kBrowserAddPersonEnabled,                                        1 },
  { key::kBrowserGuestModeEnabled,                                        1 },
  { key::kBrowserGuestModeEnforced,                                       1 },
  { key::kBrowserNetworkTimeQueriesEnabled,                               1 },
  { key::kBrowserSignin,                                                  8 },
  { key::kBrowserSwitcherDelay,                                           9 },
  { key::kBrowserSwitcherEnabled,                                         1 },
  { key::kBrowserSwitcherExternalGreylistUrl,                             4 },
  { key::kBrowserSwitcherExternalSitelistUrl,                             4 },
  { key::kBrowserSwitcherKeepLastChromeTab,                               1 },
  { key::kBrowserSwitcherUrlGreylist,                                     5 },
  { key::kBrowserSwitcherUrlList,                                         5 },
  { key::kBuiltInDnsClientEnabled,                                        1 },
  { key::kCertificateTransparencyEnforcementDisabledForCas,               5 },
  { key::kCertificateTransparencyEnforcementDisabledForLegacyCas,         5 },
  { key::kCertificateTransparencyEnforcementDisabledForUrls,              5 },
  { key::kCheckContentCompliance,                                         3 },
  { key::kChromeVariations,                                               8 },
  { key::kClickToCallEnabled,                                             1 },
  { key::kCloudExtensionRequestEnabled,                                   1 },
  { key::kCloudManagementEnrollmentMandatory,                             1 },
  { key::kCloudManagementEnrollmentToken,                                 4 },
  { key::kCloudPolicyOverridesPlatformPolicy,                             1 },
  { key::kCloudPrintProxyEnabled,                                         1 },
  { key::kCloudPrintSubmitEnabled,                                        1 },
  { key::kCloudReportingEnabled,                                          1 },
  { key::kCoalesceH2ConnectionsWithClientCertificatesForHosts,            5 },
  { key::kCommandLineFlagSecurityWarningsEnabled,                         1 },
  { key::kComponentUpdatesEnabled,                                        1 },
  { key::kContentPackDefaultFilteringBehavior,                            8 },
  { key::kContentPackManualBehaviorHosts,                                10 },
  { key::kContentPackManualBehaviorURLs,                                 11 },
  { key::kCookiesAllowedForUrls,                                          5 },
  { key::kCookiesBlockedForUrls,                                          5 },
  { key::kCookiesSessionOnlyForUrls,                                      5 },
  { key::kCorsLegacyModeEnabled,                                          1 },
  { key::kCorsMitigationList,                                             5 },
  { key::kDNSInterceptionChecksEnabled,                                   1 },
  { key::kDefaultBrowserSettingEnabled,                                   1 },
  { key::kDefaultCookiesSetting,                                         12 },
  { key::kDefaultDownloadDirectory,                                       4 },
  { key::kDefaultGeolocationSetting,                                     13 },
  { key::kDefaultImagesSetting,                                           2 },
  { key::kDefaultInsecureContentSetting,                                 14 },
  { key::kDefaultJavaScriptSetting,                                       2 },
  { key::kDefaultMediaStreamSetting,                                     14 },
  { key::kDefaultNotificationsSetting,                                   13 },
  { key::kDefaultPluginsSetting,                                         13 },
  { key::kDefaultPopupsSetting,                                           2 },
  { key::kDefaultPrinterSelection,                                        4 },
  { key::kDefaultSearchProviderAlternateURLs,                             5 },
  { key::kDefaultSearchProviderContextMenuAccessAllowed,                  1 },
  { key::kDefaultSearchProviderEnabled,                                   1 },
  { key::kDefaultSearchProviderEncodings,                                 5 },
  { key::kDefaultSearchProviderIconURL,                                   4 },
  { key::kDefaultSearchProviderImageURL,                                  4 },
  { key::kDefaultSearchProviderImageURLPostParams,                        4 },
  { key::kDefaultSearchProviderKeyword,                                   4 },
  { key::kDefaultSearchProviderName,                                      4 },
  { key::kDefaultSearchProviderNewTabURL,                                 4 },
  { key::kDefaultSearchProviderSearchURL,                                 4 },
  { key::kDefaultSearchProviderSearchURLPostParams,                       4 },
  { key::kDefaultSearchProviderSuggestURL,                                4 },
  { key::kDefaultSearchProviderSuggestURLPostParams,                      4 },
  { key::kDefaultWebBluetoothGuardSetting,                               14 },
  { key::kDefaultWebUsbGuardSetting,                                     14 },
  { key::kDelayDeliveryUntilVerdict,                                      3 },
  { key::kDeveloperToolsAvailability,                                     8 },
  { key::kDeveloperToolsDisabled,                                         1 },
  { key::kDisable3DAPIs,                                                  1 },
  { key::kDisableAuthNegotiateCnameLookup,                                1 },
  { key::kDisablePrintPreview,                                            1 },
  { key::kDisableSafeBrowsingProceedAnyway,                               1 },
  { key::kDisableScreenshots,                                             1 },
  { key::kDisabledPlugins,                                                5 },
  { key::kDisabledPluginsExceptions,                                      5 },
  { key::kDisabledSchemes,                                                5 },
  { key::kDiskCacheDir,                                                   4 },
  { key::kDiskCacheSize,                                                  9 },
  { key::kDnsOverHttpsMode,                                              15 },
  { key::kDnsOverHttpsTemplates,                                          4 },
  { key::kDownloadDirectory,                                              4 },
  { key::kDownloadRestrictions,                                          16 },
  { key::kEditBookmarksEnabled,                                           1 },
  { key::kEnableAuthNegotiatePort,                                        1 },
  { key::kEnableDeprecatedWebPlatformFeatures,                           18 },
  { key::kEnableExperimentalPolicies,                                     5 },
  { key::kEnableMediaRouter,                                              1 },
  { key::kEnableOnlineRevocationChecks,                                   1 },
  { key::kEnabledPlugins,                                                 5 },
  { key::kEnterpriseHardwarePlatformAPIEnabled,                           1 },
  { key::kExtensionAllowedTypes,                                         20 },
  { key::kExtensionInstallBlacklist,                                      5 },
  { key::kExtensionInstallForcelist,                                      5 },
  { key::kExtensionInstallListsMergeEnabled,                              1 },
  { key::kExtensionInstallSources,                                        5 },
  { key::kExtensionInstallWhitelist,                                      5 },
  { key::kExtensionSettings,                                             21 },
  { key::kExternalProtocolDialogShowAlwaysOpenCheckbox,                   1 },
  { key::kForceEphemeralProfiles,                                         1 },
  { key::kForceGoogleSafeSearch,                                          1 },
  { key::kForceLegacyDefaultReferrerPolicy,                               1 },
  { key::kForceSafeSearch,                                                1 },
  { key::kForceYouTubeRestrict,                                           8 },
  { key::kForceYouTubeSafetyMode,                                         1 },
  { key::kFullscreenAllowed,                                              1 },
  { key::kGSSAPILibraryName,                                              4 },
  { key::kGloballyScopeHTTPAuthCacheEnabled,                              1 },
  { key::kHSTSPolicyBypassList,                                          32 },
  { key::kHardwareAccelerationModeEnabled,                                1 },
  { key::kHideWebStoreIcon,                                               1 },
  { key::kHomepageIsNewTabPage,                                           1 },
  { key::kHomepageLocation,                                               4 },
  { key::kImagesAllowedForUrls,                                           5 },
  { key::kImagesBlockedForUrls,                                           5 },
  { key::kImportAutofillFormData,                                         1 },
  { key::kImportBookmarks,                                                1 },
  { key::kImportHistory,                                                  1 },
  { key::kImportHomepage,                                                 1 },
  { key::kImportSavedPasswords,                                           1 },
  { key::kImportSearchEngine,                                             1 },
  { key::kIncognitoEnabled,                                               1 },
  { key::kIncognitoModeAvailability,                                      8 },
  { key::kInsecureContentAllowedForUrls,                                  5 },
  { key::kInsecureContentBlockedForUrls,                                  5 },
  { key::kIntensiveWakeUpThrottlingEnabled,                               1 },
  { key::kIsolateOrigins,                                                 4 },
  { key::kJavaScriptAllowedForUrls,                                       5 },
  { key::kJavaScriptBlockedForUrls,                                       5 },
  { key::kJavascriptEnabled,                                              1 },
  { key::kLegacySameSiteCookieBehaviorEnabled,                            2 },
  { key::kLegacySameSiteCookieBehaviorEnabledForDomainList,               5 },
  { key::kLocalDiscoveryEnabled,                                          1 },
  { key::kManagedBookmarks,                                              35 },
  { key::kMaxConnectionsPerProxy,                                         9 },
  { key::kMaxInvalidationFetchDelay,                                      9 },
  { key::kMediaRouterCastAllowAllIPs,                                     1 },
  { key::kMetricsReportingEnabled,                                        1 },
  { key::kNTPCustomBackgroundEnabled,                                     1 },
  { key::kNativeMessagingBlacklist,                                       5 },
  { key::kNativeMessagingUserLevelHosts,                                  1 },
  { key::kNativeMessagingWhitelist,                                       5 },
  { key::kNetworkPredictionOptions,                                       8 },
  { key::kNewTabPageLocation,                                             4 },
  { key::kNotificationsAllowedForUrls,                                    5 },
  { key::kNotificationsBlockedForUrls,                                    5 },
  { key::kNtlmV2Enabled,                                                  1 },
  { key::kOnBulkDataEntryEnterpriseConnector,                            41 },
  { key::kOnFileAttachedEnterpriseConnector,                             47 },
  { key::kOnFileDownloadedEnterpriseConnector,                           53 },
  { key::kOnSecurityEventEnterpriseConnector,                            55 },
  { key::kOverrideSecurityRestrictionsOnInsecureOrigin,                   5 },
  { key::kPasswordLeakDetectionEnabled,                                   1 },
  { key::kPasswordManagerEnabled,                                         1 },
  { key::kPasswordProtectionChangePasswordURL,                            4 },
  { key::kPasswordProtectionLoginURLs,                                    5 },
  { key::kPasswordProtectionWarningTrigger,                               8 },
  { key::kPaymentMethodQueryEnabled,                                      1 },
  { key::kPluginsAllowedForUrls,                                          5 },
  { key::kPluginsBlockedForUrls,                                          5 },
  { key::kPolicyAtomicGroupsEnabled,                                      1 },
  { key::kPolicyDictionaryMultipleSourceMergeList,                       57 },
  { key::kPolicyListMultipleSourceMergeList,                              5 },
  { key::kPolicyRefreshRate,                                              9 },
  { key::kPopupsAllowedForUrls,                                           5 },
  { key::kPopupsBlockedForUrls,                                           5 },
  { key::kPrintHeaderFooter,                                              1 },
  { key::kPrintPreviewUseSystemDefaultPrinter,                            1 },
  { key::kPrinterTypeDenyList,                                           59 },
  { key::kPrintingAllowedBackgroundGraphicsModes,                        60 },
  { key::kPrintingBackgroundGraphicsDefault,                             61 },
  { key::kPrintingEnabled,                                                1 },
  { key::kPrintingPaperSizeDefault,                                      62 },
  { key::kPromotionalTabsEnabled,                                         1 },
  { key::kPromptForDownloadLocation,                                      1 },
  { key::kProxyBypassList,                                                4 },
  { key::kProxyMode,                                                     65 },
  { key::kProxyPacUrl,                                                    4 },
  { key::kProxyServer,                                                    4 },
  { key::kProxyServerMode,                                                3 },
  { key::kProxySettings,                                                 66 },
  { key::kQuicAllowed,                                                    1 },
  { key::kRegisteredProtocolHandlers,                                    69 },
  { key::kRelaunchNotification,                                           2 },
  { key::kRelaunchNotificationPeriod,                                    70 },
  { key::kRemoteAccessHostAllowClientPairing,                             1 },
  { key::kRemoteAccessHostAllowFileTransfer,                              1 },
  { key::kRemoteAccessHostAllowGnubbyAuth,                                1 },
  { key::kRemoteAccessHostAllowRelayedConnection,                         1 },
  { key::kRemoteAccessHostClientDomain,                                   4 },
  { key::kRemoteAccessHostClientDomainList,                               5 },
  { key::kRemoteAccessHostDomain,                                         4 },
  { key::kRemoteAccessHostDomainList,                                     5 },
  { key::kRemoteAccessHostFirewallTraversal,                              1 },
  { key::kRemoteAccessHostMatchUsername,                                  1 },
  { key::kRemoteAccessHostRequireCurtain,                                 1 },
  { key::kRemoteAccessHostTokenUrl,                                       4 },
  { key::kRemoteAccessHostTokenValidationCertificateIssuer,               4 },
  { key::kRemoteAccessHostTokenValidationUrl,                             4 },
  { key::kRemoteAccessHostUdpPortRange,                                   4 },
  { key::kReportExtensionsAndPluginsData,                                 1 },
  { key::kReportMachineIDData,                                            1 },
  { key::kReportPolicyData,                                               1 },
  { key::kReportUserIDData,                                               1 },
  { key::kReportVersionData,                                              1 },
  { key::kRequireOnlineRevocationChecksForLocalAnchors,                   1 },
  { key::kRestoreOnStartup,                                              71 },
  { key::kRestoreOnStartupURLs,                                           5 },
  { key::kRestrictSigninToPattern,                                        4 },
  { key::kRunAllFlashInAllowMode,                                         1 },
  { key::kSSLErrorOverrideAllowed,                                        1 },
  { key::kSSLVersionMin,                                                 72 },
  { key::kSafeBrowsingEnabled,                                            1 },
  { key::kSafeBrowsingExtendedReportingEnabled,                           1 },
  { key::kSafeBrowsingProtectionLevel,                                    8 },
  { key::kSafeBrowsingWhitelistDomains,                                   5 },
  { key::kSafeSitesFilterBehavior,                                       73 },
  { key::kSavingBrowserHistoryDisabled,                                   1 },
  { key::kScreenCaptureAllowed,                                           1 },
  { key::kScrollToTextFragmentEnabled,                                    1 },
  { key::kSearchSuggestEnabled,                                           1 },
  { key::kSecurityKeyPermitAttestation,                                   5 },
  { key::kSendFilesForMalwareCheck,                                      74 },
  { key::kSharedClipboardEnabled,                                         1 },
  { key::kShowAppsShortcutInBookmarkBar,                                  1 },
  { key::kShowCastIconInToolbar,                                          1 },
  { key::kShowHomeButton,                                                 1 },
  { key::kSignedHTTPExchangeEnabled,                                      1 },
  { key::kSigninAllowed,                                                  1 },
  { key::kSitePerProcess,                                                 1 },
  { key::kSpellCheckServiceEnabled,                                       1 },
  { key::kSpellcheckEnabled,                                              1 },
  { key::kSpellcheckLanguage,                                             5 },
  { key::kSpellcheckLanguageBlacklist,                                    5 },
  { key::kStricterMixedContentTreatmentEnabled,                           1 },
  { key::kSuppressUnsupportedOSWarning,                                   1 },
  { key::kSyncDisabled,                                                   1 },
  { key::kSyncTypesListDisabled,                                          5 },
  { key::kTLS13HardeningForLocalAnchorsEnabled,                           1 },
  { key::kTaskManagerEndProcessEnabled,                                   1 },
  { key::kTranslateEnabled,                                               1 },
  { key::kURLBlacklist,                                                   5 },
  { key::kURLWhitelist,                                                   5 },
  { key::kURLsToCheckComplianceOfDownloadedContent,                       5 },
  { key::kURLsToCheckForMalwareOfUploadedContent,                         5 },
  { key::kURLsToNotCheckComplianceOfUploadedContent,                      5 },
  { key::kURLsToNotCheckForMalwareOfDownloadedContent,                    5 },
  { key::kUnsafeEventsReportingEnabled,                                   1 },
  { key::kUnsafelyTreatInsecureOriginAsSecure,                            5 },
  { key::kUrlKeyedAnonymizedDataCollectionEnabled,                        1 },
  { key::kUserDataSnapshotRetentionLimit,                                75 },
  { key::kUserFeedbackAllowed,                                            1 },
  { key::kVariationsRestrictParameter,                                    4 },
  { key::kVideoCaptureAllowed,                                            1 },
  { key::kVideoCaptureAllowedUrls,                                        5 },
  { key::kWPADQuickCheckEnabled,                                          1 },
  { key::kWebAppInstallForceList,                                        78 },
  { key::kWebRtcEventLogCollectionAllowed,                                1 },
  { key::kWebRtcLocalIpsAllowedUrls,                                      5 },
  { key::kWebRtcUdpPortRange,                                             4 },
  { key::kWebUsbAllowDevicesForUrls,                                     82 },
  { key::kWebUsbAskForUrls,                                               5 },
  { key::kWebUsbBlockedForUrls,                                           5 },
  { "CN",                                                                 4 },
  { "L",                                                                  4 },
  { "O",                                                                  4 },
  { "OU",                                                                 4 },
  { "ISSUER",                                                            86 },
  { "SUBJECT",                                                           86 },
  { "filter",                                                            85 },
  { "pattern",                                                            4 },
  { "idPattern",                                                          4 },
  { "kind",                                                              89 },
  { "namePattern",                                                        4 },
  { key::kAutoSelectCertificateForUrls,                                  87 },
  { key::kDefaultPrinterSelection,                                       88 },
};

const internal::PropertiesNode kProperties[] = {
//  Begin    End  PatternEnd  RequiredBegin  RequiredEnd  Additional Properties
  {     0,     2,     2,     0,          2,    -1 },  // allowed_origins
  {     2,     2,     2,     2,          2,     1 },  // ContentPackManualBehaviorHosts
  {     2,     2,     2,     2,          2,     1 },  // ContentPackManualBehaviorURLs
  {     2,     9,     9,     2,          2,    -1 },  // *
  {     9,    12,    12,     2,          2,    -1 },  // ^update_url:
  {    12,    20,    20,     2,          2,    -1 },  // ^[a-p]{32}(?:,[a-p]{32})*,?$
  {    20,    21,    23,     2,          2,    -1 },  // ExtensionSettings
  {    23,    27,    27,     2,          2,    -1 },  // items of ManagedBookmarks
  {    27,    29,    29,     2,          2,    -1 },  // items of disable
  {    29,    31,    31,     2,          2,    -1 },  // items of enable
  {    31,    35,    35,     2,          2,    -1 },  // items of OnBulkDataEntryEnterpriseConnector
  {    35,    37,    37,     2,          2,    -1 },  // items of disable
  {    37,    39,    39,     2,          2,    -1 },  // items of enable
  {    39,    45,    45,     2,          2,    -1 },  // items of OnFileAttachedEnterpriseConnector
  {    45,    47,    47,     2,          2,    -1 },  // items of disable
  {    47,    49,    49,     2,          2,    -1 },  // items of enable
  {    49,    55,    55,     2,          2,    -1 },  // items of OnFileDownloadedEnterpriseConnector
  {    55,    56,    56,     2,          2,    -1 },  // items of OnSecurityEventEnterpriseConnector
  {    56,    58,    58,     2,          4,    -1 },  // height
  {    58,    60,    60,     4,          5,    -1 },  // name
  {    60,    65,    65,     5,          5,    -1 },  // ProxySettings
  {    65,    68,    68,     5,          7,    -1 },  // url
  {    68,    71,    71,     7,          8,    -1 },  // url
  {    71,    73,    73,     8,          8,    -1 },  // items of devices
  {    73,    75,    75,     8,         10,    -1 },  // urls
  {    75,   380,   380,    10,         10,    -1 },  // root node
  {   380,   384,   384,    10,         10,    -1 },  // ISSUER
  {   384,   386,   386,    10,         10,    -1 },  // filter
  {   386,   388,   388,    10,         10,    -1 },  // items of AutoSelectCertificateForUrls
  {   388,   391,   391,    10,         10,    -1 },  // DefaultPrinterSelection
  {   391,   393,   393,    10,         10,    -1 },  // validation_schema root node
};

const internal::RestrictionNode kRestrictionNodes[] = {
//   FIRST, SECOND
  {{ 2,          1}},
  {{ 3,          0}},
  {{ 2,          0}},
  {{ 0,          3}},
  {{ 3,          1}},
  {{ 3,          2}},
  {{ 4,          0}},
  {{ 3,          4}},
  {{ 4,         10}},
  {{ 10,        13}},
  {{ 13,        16}},
  {{ 16,        16}},
  {{ 17,        22}},
  {{ 22,        22}},
  {{ 23,        23}},
  {{ 24,        31}},
  {{ 31,        36}},
  {{ 36,        39}},
  {{ 39,        41}},
  {{ 41,       176}},
  {{ 176,      181}},
  {{ 181,      186}},
  {{ INT_MAX, 3600000}},
  {{ 3,          6}},
  {{ 186,      189}},
  {{ 1,          0}},
  {{ 6,         10}},
  {{ INT_MAX,    0}},
  {{ 189,      191}},
  {{ 191,      193}},
};

const char* const kRequiredProperties[] = {
  "protocol",
  "allowed_origins",
  "width",
  "height",
  "name",
  "protocol",
  "url",
  "url",
  "devices",
  "urls",
};

const int kIntegerEnumerations[] = {
  1,
  2,
  4,
  1,
  4,
  5,
  0,
  2,
  3,
  4,
};

const char* const kStringEnumerations[] = {
  "off",
  "automatic",
  "secure",
  "ExampleDeprecatedFeature_EffectiveUntil20080902",
  "extension",
  "theme",
  "user_script",
  "hosted_app",
  "legacy_packaged_app",
  "platform_app",
  "blocked",
  "allowed",
  "removed",
  "blocked",
  "allowed",
  "removed",
  "^[a-z][a-zA-Z0-9.]*$",
  "blocked",
  "allowed",
  "force_installed",
  "normal_installed",
  "removed",
  "^[0-9]+([.][0-9]+)*$",
  "^[a-z0-9-]*$",
  key::kContentPackManualBehaviorURLs,
  key::kExtensionSettings,
  key::kDeviceLoginScreenPowerManagement,
  key::kKeyPermissions,
  key::kPowerManagementIdleSettings,
  key::kScreenBrightnessPercent,
  key::kScreenLockDelays,
  "privet",
  "extension",
  "pdf",
  "local",
  "cloud",
  "any",
  "enabled",
  "disabled",
  "enabled",
  "disabled",
  "custom",
  "asme_f_28x40in",
  "iso_2a0_1189x1682mm",
  "iso_a0_841x1189mm",
  "iso_a10_26x37mm",
  "iso_a1_594x841mm",
  "iso_a2_420x594mm",
  "iso_a3_297x420mm",
  "iso_a4-extra_235.5x322.3mm",
  "iso_a4-tab_225x297mm",
  "iso_a4_210x297mm",
  "iso_a5-extra_174x235mm",
  "iso_a5_148x210mm",
  "iso_a6_105x148mm",
  "iso_a7_74x105mm",
  "iso_a8_52x74mm",
  "iso_a9_37x52mm",
  "iso_b0_1000x1414mm",
  "iso_b10_31x44mm",
  "iso_b1_707x1000mm",
  "iso_b2_500x707mm",
  "iso_b3_353x500mm",
  "iso_b4_250x353mm",
  "iso_b5-extra_201x276mm",
  "iso_b5_176x250mm",
  "iso_b6_125x176mm",
  "iso_b6c4_125x324mm",
  "iso_b7_88x125mm",
  "iso_b8_62x88mm",
  "iso_b9_44x62mm",
  "iso_c0_917x1297mm",
  "iso_c10_28x40mm",
  "iso_c1_648x917mm",
  "iso_c2_458x648mm",
  "iso_c3_324x458mm",
  "iso_c4_229x324mm",
  "iso_c5_162x229mm",
  "iso_c6_114x162mm",
  "iso_c6c5_114x229mm",
  "iso_c7_81x114mm",
  "iso_c7c6_81x162mm",
  "iso_c8_57x81mm",
  "iso_c9_40x57mm",
  "iso_dl_110x220mm",
  "jis_exec_216x330mm",
  "jpn_chou2_111.1x146mm",
  "jpn_chou3_120x235mm",
  "jpn_chou4_90x205mm",
  "jpn_hagaki_100x148mm",
  "jpn_kahu_240x322.1mm",
  "jpn_kaku2_240x332mm",
  "jpn_oufuku_148x200mm",
  "jpn_you4_105x235mm",
  "na_10x11_10x11in",
  "na_10x13_10x13in",
  "na_10x14_10x14in",
  "na_10x15_10x15in",
  "na_11x12_11x12in",
  "na_11x15_11x15in",
  "na_12x19_12x19in",
  "na_5x7_5x7in",
  "na_6x9_6x9in",
  "na_7x9_7x9in",
  "na_9x11_9x11in",
  "na_a2_4.375x5.75in",
  "na_arch-a_9x12in",
  "na_arch-b_12x18in",
  "na_arch-c_18x24in",
  "na_arch-d_24x36in",
  "na_arch-e_36x48in",
  "na_b-plus_12x19.17in",
  "na_c5_6.5x9.5in",
  "na_c_17x22in",
  "na_d_22x34in",
  "na_e_34x44in",
  "na_edp_11x14in",
  "na_eur-edp_12x14in",
  "na_f_44x68in",
  "na_fanfold-eur_8.5x12in",
  "na_fanfold-us_11x14.875in",
  "na_foolscap_8.5x13in",
  "na_govt-legal_8x13in",
  "na_govt-letter_8x10in",
  "na_index-3x5_3x5in",
  "na_index-4x6-ext_6x8in",
  "na_index-4x6_4x6in",
  "na_index-5x8_5x8in",
  "na_invoice_5.5x8.5in",
  "na_ledger_11x17in",
  "na_legal-extra_9.5x15in",
  "na_legal_8.5x14in",
  "na_letter-extra_9.5x12in",
  "na_letter-plus_8.5x12.69in",
  "na_letter_8.5x11in",
  "na_number-10_4.125x9.5in",
  "na_number-11_4.5x10.375in",
  "na_number-12_4.75x11in",
  "na_number-14_5x11.5in",
  "na_personal_3.625x6.5in",
  "na_super-a_8.94x14in",
  "na_super-b_13x19in",
  "na_wide-format_30x42in",
  "om_dai-pa-kai_275x395mm",
  "om_folio-sp_215x315mm",
  "om_invite_220x220mm",
  "om_italian_110x230mm",
  "om_juuro-ku-kai_198x275mm",
  "om_large-photo_200x300",
  "om_pa-kai_267x389mm",
  "om_postfix_114x229mm",
  "om_small-photo_100x150mm",
  "prc_10_324x458mm",
  "prc_16k_146x215mm",
  "prc_1_102x165mm",
  "prc_2_102x176mm",
  "prc_32k_97x151mm",
  "prc_3_125x176mm",
  "prc_4_110x208mm",
  "prc_5_110x220mm",
  "prc_6_120x320mm",
  "prc_7_160x230mm",
  "prc_8_120x309mm",
  "roc_16k_7.75x10.75in",
  "roc_8k_10.75x15.5in",
  "jis_b0_1030x1456mm",
  "jis_b1_728x1030mm",
  "jis_b2_515x728mm",
  "jis_b3_364x515mm",
  "jis_b4_257x364mm",
  "jis_b5_182x257mm",
  "jis_b6_128x182mm",
  "jis_b7_91x128mm",
  "jis_b8_64x91mm",
  "jis_b9_45x64mm",
  "jis_b10_32x45mm",
  "direct",
  "auto_detect",
  "pac_script",
  "fixed_servers",
  "system",
  "direct",
  "auto_detect",
  "pac_script",
  "fixed_servers",
  "system",
  "tls1",
  "tls1.1",
  "tls1.2",
  "tab",
  "window",
  "local",
  "cloud",
};

const internal::SchemaData kChromeSchemaData = {
  kSchemas,
  kPropertyNodes,
  kProperties,
  kRestrictionNodes,
  kRequiredProperties,
  kIntegerEnumerations,
  kStringEnumerations,
  83,  // validation_schema root index
};


namespace {
bool CompareKeys(const internal::PropertyNode& node,
                 const std::string& key) {
  return node.key < key;
}

}  // namespace

const internal::SchemaData* GetChromeSchemaData() {
  return &kChromeSchemaData;
}

#if defined (OS_CHROMEOS)
void SetEnterpriseUsersDefaults(PolicyMap* policy_map) {
  if (!policy_map->Get(key::kAllowDinosaurEasterEgg)) {
    policy_map->Set(key::kAllowDinosaurEasterEgg,
                    POLICY_LEVEL_MANDATORY,
                    POLICY_SCOPE_USER,
                    POLICY_SOURCE_ENTERPRISE_DEFAULT,
                    std::make_unique<base::Value>(false),
                    nullptr);
  }
  if (!policy_map->Get(key::kAllowPopupsDuringPageUnload)) {
    policy_map->Set(key::kAllowPopupsDuringPageUnload,
                    POLICY_LEVEL_MANDATORY,
                    POLICY_SCOPE_USER,
                    POLICY_SOURCE_ENTERPRISE_DEFAULT,
                    std::make_unique<base::Value>(true),
                    nullptr);
  }
  if (!policy_map->Get(key::kAllowSyncXHRInPageDismissal)) {
    policy_map->Set(key::kAllowSyncXHRInPageDismissal,
                    POLICY_LEVEL_MANDATORY,
                    POLICY_SCOPE_USER,
                    POLICY_SOURCE_ENTERPRISE_DEFAULT,
                    std::make_unique<base::Value>(true),
                    nullptr);
  }
  if (!policy_map->Get(key::kDnsOverHttpsMode)) {
    policy_map->Set(key::kDnsOverHttpsMode,
                    POLICY_LEVEL_MANDATORY,
                    POLICY_SCOPE_USER,
                    POLICY_SOURCE_ENTERPRISE_DEFAULT,
                    std::make_unique<base::Value>("off"),
                    nullptr);
  }
  if (!policy_map->Get(key::kNTPCustomBackgroundEnabled)) {
    policy_map->Set(key::kNTPCustomBackgroundEnabled,
                    POLICY_LEVEL_MANDATORY,
                    POLICY_SCOPE_USER,
                    POLICY_SOURCE_ENTERPRISE_DEFAULT,
                    std::make_unique<base::Value>(true),
                    nullptr);
  }
}
#endif

const PolicyDetails* GetChromePolicyDetails(const std::string& policy) {
  // First index in kPropertyNodes of the Chrome policies.
  static const int begin_index = 75;
  // One-past-the-end of the Chrome policies in kPropertyNodes.
  static const int end_index = 380;
  const internal::PropertyNode* begin =
     kPropertyNodes + begin_index;
  const internal::PropertyNode* end = kPropertyNodes + end_index;
  const internal::PropertyNode* it =
      std::lower_bound(begin, end, policy, CompareKeys);
  if (it == end || it->key != policy)
    return nullptr;
  // This relies on kPropertyNodes from begin_index to end_index
  // having exactly the same policies (and in the same order) as
  // kChromePolicyDetails, so that binary searching on the first
  // gets the same results as a binary search on the second would.
  // However, kPropertyNodes has the policy names and
  // kChromePolicyDetails doesn't, so we obtain the index into
  // the second array by searching the first to avoid duplicating
  // the policy name pointers.
  // Offsetting |it| from |begin| here obtains the index we're
  // looking for.
  size_t index = it - begin;
  CHECK_LT(index, base::size(kChromePolicyDetails));
  return kChromePolicyDetails + index;
}

namespace key {

const char kAbusiveExperienceInterventionEnforce[] = "AbusiveExperienceInterventionEnforce";
const char kAccessibilityImageLabelsEnabled[] = "AccessibilityImageLabelsEnabled";
const char kAccessibilityShortcutsEnabled[] = "AccessibilityShortcutsEnabled";
const char kAdditionalLaunchParameters[] = "AdditionalLaunchParameters";
const char kAdsSettingForIntrusiveAdsSites[] = "AdsSettingForIntrusiveAdsSites";
const char kAdvancedProtectionAllowed[] = "AdvancedProtectionAllowed";
const char kAdvancedProtectionDeepScanningEnabled[] = "AdvancedProtectionDeepScanningEnabled";
const char kAllowCrossOriginAuthPrompt[] = "AllowCrossOriginAuthPrompt";
const char kAllowDeletingBrowserHistory[] = "AllowDeletingBrowserHistory";
const char kAllowDinosaurEasterEgg[] = "AllowDinosaurEasterEgg";
const char kAllowFileSelectionDialogs[] = "AllowFileSelectionDialogs";
const char kAllowKioskAppControlChromeVersion[] = "AllowKioskAppControlChromeVersion";
const char kAllowNativeNotifications[] = "AllowNativeNotifications";
const char kAllowOutdatedPlugins[] = "AllowOutdatedPlugins";
const char kAllowPasswordProtectedFiles[] = "AllowPasswordProtectedFiles";
const char kAllowPopupsDuringPageUnload[] = "AllowPopupsDuringPageUnload";
const char kAllowScreenLock[] = "AllowScreenLock";
const char kAllowScreenWakeLocks[] = "AllowScreenWakeLocks";
const char kAllowSyncXHRInPageDismissal[] = "AllowSyncXHRInPageDismissal";
const char kAllowWakeLocks[] = "AllowWakeLocks";
const char kAllowedDomainsForApps[] = "AllowedDomainsForApps";
const char kAllowedInputMethods[] = "AllowedInputMethods";
const char kAllowedLanguages[] = "AllowedLanguages";
const char kAlternateErrorPagesEnabled[] = "AlternateErrorPagesEnabled";
const char kAlternativeBrowserParameters[] = "AlternativeBrowserParameters";
const char kAlternativeBrowserPath[] = "AlternativeBrowserPath";
const char kAlwaysAuthorizePlugins[] = "AlwaysAuthorizePlugins";
const char kAlwaysOpenPdfExternally[] = "AlwaysOpenPdfExternally";
const char kAmbientAuthenticationInPrivateModesEnabled[] = "AmbientAuthenticationInPrivateModesEnabled";
const char kAppCacheForceEnabled[] = "AppCacheForceEnabled";
const char kAppRecommendationZeroStateEnabled[] = "AppRecommendationZeroStateEnabled";
const char kApplicationLocaleValue[] = "ApplicationLocaleValue";
const char kArcAppInstallEventLoggingEnabled[] = "ArcAppInstallEventLoggingEnabled";
const char kArcBackupRestoreEnabled[] = "ArcBackupRestoreEnabled";
const char kArcBackupRestoreServiceEnabled[] = "ArcBackupRestoreServiceEnabled";
const char kArcCertificatesSyncMode[] = "ArcCertificatesSyncMode";
const char kArcEnabled[] = "ArcEnabled";
const char kArcGoogleLocationServicesEnabled[] = "ArcGoogleLocationServicesEnabled";
const char kArcLocationServiceEnabled[] = "ArcLocationServiceEnabled";
const char kArcPolicy[] = "ArcPolicy";
const char kAttestationEnabledForDevice[] = "AttestationEnabledForDevice";
const char kAttestationEnabledForUser[] = "AttestationEnabledForUser";
const char kAttestationExtensionWhitelist[] = "AttestationExtensionWhitelist";
const char kAttestationForContentProtectionEnabled[] = "AttestationForContentProtectionEnabled";
const char kAudioCaptureAllowed[] = "AudioCaptureAllowed";
const char kAudioCaptureAllowedUrls[] = "AudioCaptureAllowedUrls";
const char kAudioOutputAllowed[] = "AudioOutputAllowed";
const char kAudioSandboxEnabled[] = "AudioSandboxEnabled";
const char kAuthAndroidNegotiateAccountType[] = "AuthAndroidNegotiateAccountType";
const char kAuthNegotiateDelegateByKdcPolicy[] = "AuthNegotiateDelegateByKdcPolicy";
const char kAuthNegotiateDelegateWhitelist[] = "AuthNegotiateDelegateWhitelist";
const char kAuthSchemes[] = "AuthSchemes";
const char kAuthServerWhitelist[] = "AuthServerWhitelist";
const char kAutoCleanUpStrategy[] = "AutoCleanUpStrategy";
const char kAutoFillEnabled[] = "AutoFillEnabled";
const char kAutoLaunchProtocolsFromOrigins[] = "AutoLaunchProtocolsFromOrigins";
const char kAutoOpenAllowedForURLs[] = "AutoOpenAllowedForURLs";
const char kAutoOpenFileTypes[] = "AutoOpenFileTypes";
const char kAutoSelectCertificateForUrls[] = "AutoSelectCertificateForUrls";
const char kAutoclickEnabled[] = "AutoclickEnabled";
const char kAutofillAddressEnabled[] = "AutofillAddressEnabled";
const char kAutofillCreditCardEnabled[] = "AutofillCreditCardEnabled";
const char kAutoplayAllowed[] = "AutoplayAllowed";
const char kAutoplayWhitelist[] = "AutoplayWhitelist";
const char kBackgroundModeEnabled[] = "BackgroundModeEnabled";
const char kBlockExternalExtensions[] = "BlockExternalExtensions";
const char kBlockLargeFileTransfer[] = "BlockLargeFileTransfer";
const char kBlockThirdPartyCookies[] = "BlockThirdPartyCookies";
const char kBlockUnsupportedFiletypes[] = "BlockUnsupportedFiletypes";
const char kBookmarkBarEnabled[] = "BookmarkBarEnabled";
const char kBrowserAddPersonEnabled[] = "BrowserAddPersonEnabled";
const char kBrowserGuestModeEnabled[] = "BrowserGuestModeEnabled";
const char kBrowserGuestModeEnforced[] = "BrowserGuestModeEnforced";
const char kBrowserNetworkTimeQueriesEnabled[] = "BrowserNetworkTimeQueriesEnabled";
const char kBrowserSignin[] = "BrowserSignin";
const char kBrowserSwitcherChromeParameters[] = "BrowserSwitcherChromeParameters";
const char kBrowserSwitcherChromePath[] = "BrowserSwitcherChromePath";
const char kBrowserSwitcherDelay[] = "BrowserSwitcherDelay";
const char kBrowserSwitcherEnabled[] = "BrowserSwitcherEnabled";
const char kBrowserSwitcherExternalGreylistUrl[] = "BrowserSwitcherExternalGreylistUrl";
const char kBrowserSwitcherExternalSitelistUrl[] = "BrowserSwitcherExternalSitelistUrl";
const char kBrowserSwitcherKeepLastChromeTab[] = "BrowserSwitcherKeepLastChromeTab";
const char kBrowserSwitcherUrlGreylist[] = "BrowserSwitcherUrlGreylist";
const char kBrowserSwitcherUrlList[] = "BrowserSwitcherUrlList";
const char kBrowserSwitcherUseIeSitelist[] = "BrowserSwitcherUseIeSitelist";
const char kBuiltInDnsClientEnabled[] = "BuiltInDnsClientEnabled";
const char kBuiltinCertificateVerifierEnabled[] = "BuiltinCertificateVerifierEnabled";
const char kCACertificateManagementAllowed[] = "CACertificateManagementAllowed";
const char kCaptivePortalAuthenticationIgnoresProxy[] = "CaptivePortalAuthenticationIgnoresProxy";
const char kCaretHighlightEnabled[] = "CaretHighlightEnabled";
const char kCastReceiverEnabled[] = "CastReceiverEnabled";
const char kCastReceiverName[] = "CastReceiverName";
const char kCertificateTransparencyEnforcementDisabledForCas[] = "CertificateTransparencyEnforcementDisabledForCas";
const char kCertificateTransparencyEnforcementDisabledForLegacyCas[] = "CertificateTransparencyEnforcementDisabledForLegacyCas";
const char kCertificateTransparencyEnforcementDisabledForUrls[] = "CertificateTransparencyEnforcementDisabledForUrls";
const char kCheckContentCompliance[] = "CheckContentCompliance";
const char kChromeCleanupEnabled[] = "ChromeCleanupEnabled";
const char kChromeCleanupReportingEnabled[] = "ChromeCleanupReportingEnabled";
const char kChromeFrameContentTypes[] = "ChromeFrameContentTypes";
const char kChromeFrameRendererSettings[] = "ChromeFrameRendererSettings";
const char kChromeOsLockOnIdleSuspend[] = "ChromeOsLockOnIdleSuspend";
const char kChromeOsMultiProfileUserBehavior[] = "ChromeOsMultiProfileUserBehavior";
const char kChromeOsReleaseChannel[] = "ChromeOsReleaseChannel";
const char kChromeOsReleaseChannelDelegated[] = "ChromeOsReleaseChannelDelegated";
const char kChromeVariations[] = "ChromeVariations";
const char kClearSiteDataOnExit[] = "ClearSiteDataOnExit";
const char kClickToCallEnabled[] = "ClickToCallEnabled";
const char kClientCertificateManagementAllowed[] = "ClientCertificateManagementAllowed";
const char kCloudExtensionRequestEnabled[] = "CloudExtensionRequestEnabled";
const char kCloudManagementEnrollmentMandatory[] = "CloudManagementEnrollmentMandatory";
const char kCloudManagementEnrollmentToken[] = "CloudManagementEnrollmentToken";
const char kCloudPolicyOverridesPlatformPolicy[] = "CloudPolicyOverridesPlatformPolicy";
const char kCloudPrintProxyEnabled[] = "CloudPrintProxyEnabled";
const char kCloudPrintSubmitEnabled[] = "CloudPrintSubmitEnabled";
const char kCloudReportingEnabled[] = "CloudReportingEnabled";
const char kCoalesceH2ConnectionsWithClientCertificatesForHosts[] = "CoalesceH2ConnectionsWithClientCertificatesForHosts";
const char kCommandLineFlagSecurityWarningsEnabled[] = "CommandLineFlagSecurityWarningsEnabled";
const char kComponentUpdatesEnabled[] = "ComponentUpdatesEnabled";
const char kContentPackDefaultFilteringBehavior[] = "ContentPackDefaultFilteringBehavior";
const char kContentPackManualBehaviorHosts[] = "ContentPackManualBehaviorHosts";
const char kContentPackManualBehaviorURLs[] = "ContentPackManualBehaviorURLs";
const char kContextualSearchEnabled[] = "ContextualSearchEnabled";
const char kContextualSuggestionsEnabled[] = "ContextualSuggestionsEnabled";
const char kCookiesAllowedForUrls[] = "CookiesAllowedForUrls";
const char kCookiesBlockedForUrls[] = "CookiesBlockedForUrls";
const char kCookiesSessionOnlyForUrls[] = "CookiesSessionOnlyForUrls";
const char kCorsLegacyModeEnabled[] = "CorsLegacyModeEnabled";
const char kCorsMitigationList[] = "CorsMitigationList";
const char kCrostiniAllowed[] = "CrostiniAllowed";
const char kCrostiniAnsiblePlaybook[] = "CrostiniAnsiblePlaybook";
const char kCrostiniArcAdbSideloadingAllowed[] = "CrostiniArcAdbSideloadingAllowed";
const char kCrostiniExportImportUIAllowed[] = "CrostiniExportImportUIAllowed";
const char kCrostiniPortForwardingAllowed[] = "CrostiniPortForwardingAllowed";
const char kCrostiniRootAccessAllowed[] = "CrostiniRootAccessAllowed";
const char kCursorHighlightEnabled[] = "CursorHighlightEnabled";
const char kDHEEnabled[] = "DHEEnabled";
const char kDNSInterceptionChecksEnabled[] = "DNSInterceptionChecksEnabled";
const char kDataCompressionProxyEnabled[] = "DataCompressionProxyEnabled";
const char kDefaultBrowserSettingEnabled[] = "DefaultBrowserSettingEnabled";
const char kDefaultCookiesSetting[] = "DefaultCookiesSetting";
const char kDefaultDownloadDirectory[] = "DefaultDownloadDirectory";
const char kDefaultGeolocationSetting[] = "DefaultGeolocationSetting";
const char kDefaultImagesSetting[] = "DefaultImagesSetting";
const char kDefaultInsecureContentSetting[] = "DefaultInsecureContentSetting";
const char kDefaultJavaScriptSetting[] = "DefaultJavaScriptSetting";
const char kDefaultKeygenSetting[] = "DefaultKeygenSetting";
const char kDefaultMediaStreamSetting[] = "DefaultMediaStreamSetting";
const char kDefaultNotificationsSetting[] = "DefaultNotificationsSetting";
const char kDefaultPluginsSetting[] = "DefaultPluginsSetting";
const char kDefaultPopupsSetting[] = "DefaultPopupsSetting";
const char kDefaultPrinterSelection[] = "DefaultPrinterSelection";
const char kDefaultSearchProviderAlternateURLs[] = "DefaultSearchProviderAlternateURLs";
const char kDefaultSearchProviderContextMenuAccessAllowed[] = "DefaultSearchProviderContextMenuAccessAllowed";
const char kDefaultSearchProviderEnabled[] = "DefaultSearchProviderEnabled";
const char kDefaultSearchProviderEncodings[] = "DefaultSearchProviderEncodings";
const char kDefaultSearchProviderIconURL[] = "DefaultSearchProviderIconURL";
const char kDefaultSearchProviderImageURL[] = "DefaultSearchProviderImageURL";
const char kDefaultSearchProviderImageURLPostParams[] = "DefaultSearchProviderImageURLPostParams";
const char kDefaultSearchProviderInstantURL[] = "DefaultSearchProviderInstantURL";
const char kDefaultSearchProviderInstantURLPostParams[] = "DefaultSearchProviderInstantURLPostParams";
const char kDefaultSearchProviderKeyword[] = "DefaultSearchProviderKeyword";
const char kDefaultSearchProviderName[] = "DefaultSearchProviderName";
const char kDefaultSearchProviderNewTabURL[] = "DefaultSearchProviderNewTabURL";
const char kDefaultSearchProviderSearchTermsReplacementKey[] = "DefaultSearchProviderSearchTermsReplacementKey";
const char kDefaultSearchProviderSearchURL[] = "DefaultSearchProviderSearchURL";
const char kDefaultSearchProviderSearchURLPostParams[] = "DefaultSearchProviderSearchURLPostParams";
const char kDefaultSearchProviderSuggestURL[] = "DefaultSearchProviderSuggestURL";
const char kDefaultSearchProviderSuggestURLPostParams[] = "DefaultSearchProviderSuggestURLPostParams";
const char kDefaultWebBluetoothGuardSetting[] = "DefaultWebBluetoothGuardSetting";
const char kDefaultWebUsbGuardSetting[] = "DefaultWebUsbGuardSetting";
const char kDelayDeliveryUntilVerdict[] = "DelayDeliveryUntilVerdict";
const char kDeletePrintJobHistoryAllowed[] = "DeletePrintJobHistoryAllowed";
const char kDeveloperToolsAvailability[] = "DeveloperToolsAvailability";
const char kDeveloperToolsDisabled[] = "DeveloperToolsDisabled";
const char kDeviceAdvancedBatteryChargeModeDayConfig[] = "DeviceAdvancedBatteryChargeModeDayConfig";
const char kDeviceAdvancedBatteryChargeModeEnabled[] = "DeviceAdvancedBatteryChargeModeEnabled";
const char kDeviceAllowBluetooth[] = "DeviceAllowBluetooth";
const char kDeviceAllowNewUsers[] = "DeviceAllowNewUsers";
const char kDeviceAllowRedeemChromeOsRegistrationOffers[] = "DeviceAllowRedeemChromeOsRegistrationOffers";
const char kDeviceAppPack[] = "DeviceAppPack";
const char kDeviceAuthDataCacheLifetime[] = "DeviceAuthDataCacheLifetime";
const char kDeviceAutoUpdateDisabled[] = "DeviceAutoUpdateDisabled";
const char kDeviceAutoUpdateP2PEnabled[] = "DeviceAutoUpdateP2PEnabled";
const char kDeviceAutoUpdateTimeRestrictions[] = "DeviceAutoUpdateTimeRestrictions";
const char kDeviceBatteryChargeCustomStartCharging[] = "DeviceBatteryChargeCustomStartCharging";
const char kDeviceBatteryChargeCustomStopCharging[] = "DeviceBatteryChargeCustomStopCharging";
const char kDeviceBatteryChargeMode[] = "DeviceBatteryChargeMode";
const char kDeviceBlockDevmode[] = "DeviceBlockDevmode";
const char kDeviceBootOnAcEnabled[] = "DeviceBootOnAcEnabled";
const char kDeviceChromeVariations[] = "DeviceChromeVariations";
const char kDeviceCrostiniArcAdbSideloadingAllowed[] = "DeviceCrostiniArcAdbSideloadingAllowed";
const char kDeviceDataRoamingEnabled[] = "DeviceDataRoamingEnabled";
const char kDeviceDisplayResolution[] = "DeviceDisplayResolution";
const char kDeviceDockMacAddressSource[] = "DeviceDockMacAddressSource";
const char kDeviceEcryptfsMigrationStrategy[] = "DeviceEcryptfsMigrationStrategy";
const char kDeviceEphemeralUsersEnabled[] = "DeviceEphemeralUsersEnabled";
const char kDeviceGpoCacheLifetime[] = "DeviceGpoCacheLifetime";
const char kDeviceGuestModeEnabled[] = "DeviceGuestModeEnabled";
const char kDeviceHostnameTemplate[] = "DeviceHostnameTemplate";
const char kDeviceIdleLogoutTimeout[] = "DeviceIdleLogoutTimeout";
const char kDeviceIdleLogoutWarningDuration[] = "DeviceIdleLogoutWarningDuration";
const char kDeviceKerberosEncryptionTypes[] = "DeviceKerberosEncryptionTypes";
const char kDeviceLocalAccountAutoLoginBailoutEnabled[] = "DeviceLocalAccountAutoLoginBailoutEnabled";
const char kDeviceLocalAccountAutoLoginDelay[] = "DeviceLocalAccountAutoLoginDelay";
const char kDeviceLocalAccountAutoLoginId[] = "DeviceLocalAccountAutoLoginId";
const char kDeviceLocalAccountManagedSessionEnabled[] = "DeviceLocalAccountManagedSessionEnabled";
const char kDeviceLocalAccountPromptForNetworkWhenOffline[] = "DeviceLocalAccountPromptForNetworkWhenOffline";
const char kDeviceLocalAccounts[] = "DeviceLocalAccounts";
const char kDeviceLoginScreenAccessibilityShortcutsEnabled[] = "DeviceLoginScreenAccessibilityShortcutsEnabled";
const char kDeviceLoginScreenAutoSelectCertificateForUrls[] = "DeviceLoginScreenAutoSelectCertificateForUrls";
const char kDeviceLoginScreenAutoclickEnabled[] = "DeviceLoginScreenAutoclickEnabled";
const char kDeviceLoginScreenCaretHighlightEnabled[] = "DeviceLoginScreenCaretHighlightEnabled";
const char kDeviceLoginScreenCursorHighlightEnabled[] = "DeviceLoginScreenCursorHighlightEnabled";
const char kDeviceLoginScreenDefaultHighContrastEnabled[] = "DeviceLoginScreenDefaultHighContrastEnabled";
const char kDeviceLoginScreenDefaultLargeCursorEnabled[] = "DeviceLoginScreenDefaultLargeCursorEnabled";
const char kDeviceLoginScreenDefaultScreenMagnifierType[] = "DeviceLoginScreenDefaultScreenMagnifierType";
const char kDeviceLoginScreenDefaultSpokenFeedbackEnabled[] = "DeviceLoginScreenDefaultSpokenFeedbackEnabled";
const char kDeviceLoginScreenDefaultVirtualKeyboardEnabled[] = "DeviceLoginScreenDefaultVirtualKeyboardEnabled";
const char kDeviceLoginScreenDictationEnabled[] = "DeviceLoginScreenDictationEnabled";
const char kDeviceLoginScreenDomainAutoComplete[] = "DeviceLoginScreenDomainAutoComplete";
const char kDeviceLoginScreenExtensions[] = "DeviceLoginScreenExtensions";
const char kDeviceLoginScreenHighContrastEnabled[] = "DeviceLoginScreenHighContrastEnabled";
const char kDeviceLoginScreenInputMethods[] = "DeviceLoginScreenInputMethods";
const char kDeviceLoginScreenIsolateOrigins[] = "DeviceLoginScreenIsolateOrigins";
const char kDeviceLoginScreenKeyboardFocusHighlightEnabled[] = "DeviceLoginScreenKeyboardFocusHighlightEnabled";
const char kDeviceLoginScreenLargeCursorEnabled[] = "DeviceLoginScreenLargeCursorEnabled";
const char kDeviceLoginScreenLocales[] = "DeviceLoginScreenLocales";
const char kDeviceLoginScreenMonoAudioEnabled[] = "DeviceLoginScreenMonoAudioEnabled";
const char kDeviceLoginScreenPowerManagement[] = "DeviceLoginScreenPowerManagement";
const char kDeviceLoginScreenPrimaryMouseButtonSwitch[] = "DeviceLoginScreenPrimaryMouseButtonSwitch";
const char kDeviceLoginScreenPrivacyScreenEnabled[] = "DeviceLoginScreenPrivacyScreenEnabled";
const char kDeviceLoginScreenSaverId[] = "DeviceLoginScreenSaverId";
const char kDeviceLoginScreenSaverTimeout[] = "DeviceLoginScreenSaverTimeout";
const char kDeviceLoginScreenScreenMagnifierType[] = "DeviceLoginScreenScreenMagnifierType";
const char kDeviceLoginScreenSelectToSpeakEnabled[] = "DeviceLoginScreenSelectToSpeakEnabled";
const char kDeviceLoginScreenShowOptionsInSystemTrayMenu[] = "DeviceLoginScreenShowOptionsInSystemTrayMenu";
const char kDeviceLoginScreenSitePerProcess[] = "DeviceLoginScreenSitePerProcess";
const char kDeviceLoginScreenSpokenFeedbackEnabled[] = "DeviceLoginScreenSpokenFeedbackEnabled";
const char kDeviceLoginScreenStickyKeysEnabled[] = "DeviceLoginScreenStickyKeysEnabled";
const char kDeviceLoginScreenSystemInfoEnforced[] = "DeviceLoginScreenSystemInfoEnforced";
const char kDeviceLoginScreenVirtualKeyboardEnabled[] = "DeviceLoginScreenVirtualKeyboardEnabled";
const char kDeviceLoginScreenWebUsbAllowDevicesForUrls[] = "DeviceLoginScreenWebUsbAllowDevicesForUrls";
const char kDeviceMachinePasswordChangeRate[] = "DeviceMachinePasswordChangeRate";
const char kDeviceMetricsReportingEnabled[] = "DeviceMetricsReportingEnabled";
const char kDeviceNativePrinters[] = "DeviceNativePrinters";
const char kDeviceNativePrintersAccessMode[] = "DeviceNativePrintersAccessMode";
const char kDeviceNativePrintersBlacklist[] = "DeviceNativePrintersBlacklist";
const char kDeviceNativePrintersWhitelist[] = "DeviceNativePrintersWhitelist";
const char kDeviceOffHours[] = "DeviceOffHours";
const char kDeviceOpenNetworkConfiguration[] = "DeviceOpenNetworkConfiguration";
const char kDevicePolicyRefreshRate[] = "DevicePolicyRefreshRate";
const char kDevicePowerPeakShiftBatteryThreshold[] = "DevicePowerPeakShiftBatteryThreshold";
const char kDevicePowerPeakShiftDayConfig[] = "DevicePowerPeakShiftDayConfig";
const char kDevicePowerPeakShiftEnabled[] = "DevicePowerPeakShiftEnabled";
const char kDevicePowerwashAllowed[] = "DevicePowerwashAllowed";
const char kDeviceQuickFixBuildToken[] = "DeviceQuickFixBuildToken";
const char kDeviceQuirksDownloadEnabled[] = "DeviceQuirksDownloadEnabled";
const char kDeviceRebootOnShutdown[] = "DeviceRebootOnShutdown";
const char kDeviceRebootOnUserSignout[] = "DeviceRebootOnUserSignout";
const char kDeviceRollbackAllowedMilestones[] = "DeviceRollbackAllowedMilestones";
const char kDeviceRollbackToTargetVersion[] = "DeviceRollbackToTargetVersion";
const char kDeviceSamlLoginAuthenticationType[] = "DeviceSamlLoginAuthenticationType";
const char kDeviceScheduledUpdateCheck[] = "DeviceScheduledUpdateCheck";
const char kDeviceSecondFactorAuthentication[] = "DeviceSecondFactorAuthentication";
const char kDeviceShowNumericKeyboardForPassword[] = "DeviceShowNumericKeyboardForPassword";
const char kDeviceShowUserNamesOnSignin[] = "DeviceShowUserNamesOnSignin";
const char kDeviceStartUpFlags[] = "DeviceStartUpFlags";
const char kDeviceStartUpUrls[] = "DeviceStartUpUrls";
const char kDeviceTargetVersionPrefix[] = "DeviceTargetVersionPrefix";
const char kDeviceTransferSAMLCookies[] = "DeviceTransferSAMLCookies";
const char kDeviceUnaffiliatedCrostiniAllowed[] = "DeviceUnaffiliatedCrostiniAllowed";
const char kDeviceUpdateAllowedConnectionTypes[] = "DeviceUpdateAllowedConnectionTypes";
const char kDeviceUpdateHttpDownloadsEnabled[] = "DeviceUpdateHttpDownloadsEnabled";
const char kDeviceUpdateScatterFactor[] = "DeviceUpdateScatterFactor";
const char kDeviceUpdateStagingSchedule[] = "DeviceUpdateStagingSchedule";
const char kDeviceUsbPowerShareEnabled[] = "DeviceUsbPowerShareEnabled";
const char kDeviceUserPolicyLoopbackProcessingMode[] = "DeviceUserPolicyLoopbackProcessingMode";
const char kDeviceUserWhitelist[] = "DeviceUserWhitelist";
const char kDeviceVariationsRestrictParameter[] = "DeviceVariationsRestrictParameter";
const char kDeviceWallpaperImage[] = "DeviceWallpaperImage";
const char kDeviceWebBasedAttestationAllowedUrls[] = "DeviceWebBasedAttestationAllowedUrls";
const char kDeviceWiFiAllowed[] = "DeviceWiFiAllowed";
const char kDeviceWiFiFastTransitionEnabled[] = "DeviceWiFiFastTransitionEnabled";
const char kDeviceWilcoDtcAllowed[] = "DeviceWilcoDtcAllowed";
const char kDeviceWilcoDtcConfiguration[] = "DeviceWilcoDtcConfiguration";
const char kDictationEnabled[] = "DictationEnabled";
const char kDisable3DAPIs[] = "Disable3DAPIs";
const char kDisableAuthNegotiateCnameLookup[] = "DisableAuthNegotiateCnameLookup";
const char kDisablePluginFinder[] = "DisablePluginFinder";
const char kDisablePrintPreview[] = "DisablePrintPreview";
const char kDisableSSLRecordSplitting[] = "DisableSSLRecordSplitting";
const char kDisableSafeBrowsingProceedAnyway[] = "DisableSafeBrowsingProceedAnyway";
const char kDisableScreenshots[] = "DisableScreenshots";
const char kDisableSpdy[] = "DisableSpdy";
const char kDisabledPlugins[] = "DisabledPlugins";
const char kDisabledPluginsExceptions[] = "DisabledPluginsExceptions";
const char kDisabledSchemes[] = "DisabledSchemes";
const char kDiskCacheDir[] = "DiskCacheDir";
const char kDiskCacheSize[] = "DiskCacheSize";
const char kDisplayRotationDefault[] = "DisplayRotationDefault";
const char kDnsOverHttpsMode[] = "DnsOverHttpsMode";
const char kDnsOverHttpsTemplates[] = "DnsOverHttpsTemplates";
const char kDnsPrefetchingEnabled[] = "DnsPrefetchingEnabled";
const char kDownloadDirectory[] = "DownloadDirectory";
const char kDownloadRestrictions[] = "DownloadRestrictions";
const char kDriveDisabled[] = "DriveDisabled";
const char kDriveDisabledOverCellular[] = "DriveDisabledOverCellular";
const char kEasyUnlockAllowed[] = "EasyUnlockAllowed";
const char kEcryptfsMigrationStrategy[] = "EcryptfsMigrationStrategy";
const char kEditBookmarksEnabled[] = "EditBookmarksEnabled";
const char kEmojiSuggestionEnabled[] = "EmojiSuggestionEnabled";
const char kEnableAuthNegotiatePort[] = "EnableAuthNegotiatePort";
const char kEnableCommonNameFallbackForLocalAnchors[] = "EnableCommonNameFallbackForLocalAnchors";
const char kEnableDeprecatedWebBasedSignin[] = "EnableDeprecatedWebBasedSignin";
const char kEnableDeprecatedWebPlatformFeatures[] = "EnableDeprecatedWebPlatformFeatures";
const char kEnableExperimentalPolicies[] = "EnableExperimentalPolicies";
const char kEnableMediaRouter[] = "EnableMediaRouter";
const char kEnableMemoryInfo[] = "EnableMemoryInfo";
const char kEnableOnlineRevocationChecks[] = "EnableOnlineRevocationChecks";
const char kEnableOriginBoundCerts[] = "EnableOriginBoundCerts";
const char kEnableSha1ForLocalAnchors[] = "EnableSha1ForLocalAnchors";
const char kEnableSymantecLegacyInfrastructure[] = "EnableSymantecLegacyInfrastructure";
const char kEnableSyncConsent[] = "EnableSyncConsent";
const char kEnabledPlugins[] = "EnabledPlugins";
const char kEnterpriseHardwarePlatformAPIEnabled[] = "EnterpriseHardwarePlatformAPIEnabled";
const char kEnterpriseWebStoreName[] = "EnterpriseWebStoreName";
const char kEnterpriseWebStoreURL[] = "EnterpriseWebStoreURL";
const char kExtensionAllowInsecureUpdates[] = "ExtensionAllowInsecureUpdates";
const char kExtensionAllowedTypes[] = "ExtensionAllowedTypes";
const char kExtensionCacheSize[] = "ExtensionCacheSize";
const char kExtensionInstallBlacklist[] = "ExtensionInstallBlacklist";
const char kExtensionInstallForcelist[] = "ExtensionInstallForcelist";
const char kExtensionInstallListsMergeEnabled[] = "ExtensionInstallListsMergeEnabled";
const char kExtensionInstallSources[] = "ExtensionInstallSources";
const char kExtensionInstallWhitelist[] = "ExtensionInstallWhitelist";
const char kExtensionSettings[] = "ExtensionSettings";
const char kExternalPrintServers[] = "ExternalPrintServers";
const char kExternalPrintServersWhitelist[] = "ExternalPrintServersWhitelist";
const char kExternalProtocolDialogShowAlwaysOpenCheckbox[] = "ExternalProtocolDialogShowAlwaysOpenCheckbox";
const char kExternalStorageDisabled[] = "ExternalStorageDisabled";
const char kExternalStorageReadOnly[] = "ExternalStorageReadOnly";
const char kFloatingAccessibilityMenuEnabled[] = "FloatingAccessibilityMenuEnabled";
const char kForceBrowserSignin[] = "ForceBrowserSignin";
const char kForceEphemeralProfiles[] = "ForceEphemeralProfiles";
const char kForceGoogleSafeSearch[] = "ForceGoogleSafeSearch";
const char kForceLegacyDefaultReferrerPolicy[] = "ForceLegacyDefaultReferrerPolicy";
const char kForceLogoutUnauthenticatedUserEnabled[] = "ForceLogoutUnauthenticatedUserEnabled";
const char kForceMaximizeOnFirstRun[] = "ForceMaximizeOnFirstRun";
const char kForceNetworkInProcess[] = "ForceNetworkInProcess";
const char kForceSafeSearch[] = "ForceSafeSearch";
const char kForceYouTubeRestrict[] = "ForceYouTubeRestrict";
const char kForceYouTubeSafetyMode[] = "ForceYouTubeSafetyMode";
const char kFullscreenAllowed[] = "FullscreenAllowed";
const char kGCFUserDataDir[] = "GCFUserDataDir";
const char kGSSAPILibraryName[] = "GSSAPILibraryName";
const char kGloballyScopeHTTPAuthCacheEnabled[] = "GloballyScopeHTTPAuthCacheEnabled";
const char kHSTSPolicyBypassList[] = "HSTSPolicyBypassList";
const char kHardwareAccelerationModeEnabled[] = "HardwareAccelerationModeEnabled";
const char kHeartbeatEnabled[] = "HeartbeatEnabled";
const char kHeartbeatFrequency[] = "HeartbeatFrequency";
const char kHideWebStoreIcon[] = "HideWebStoreIcon";
const char kHideWebStorePromo[] = "HideWebStorePromo";
const char kHighContrastEnabled[] = "HighContrastEnabled";
const char kHomepageIsNewTabPage[] = "HomepageIsNewTabPage";
const char kHomepageLocation[] = "HomepageLocation";
const char kHttp09OnNonDefaultPortsEnabled[] = "Http09OnNonDefaultPortsEnabled";
const char kIdleAction[] = "IdleAction";
const char kIdleActionAC[] = "IdleActionAC";
const char kIdleActionBattery[] = "IdleActionBattery";
const char kIdleDelayAC[] = "IdleDelayAC";
const char kIdleDelayBattery[] = "IdleDelayBattery";
const char kIdleWarningDelayAC[] = "IdleWarningDelayAC";
const char kIdleWarningDelayBattery[] = "IdleWarningDelayBattery";
const char kImagesAllowedForUrls[] = "ImagesAllowedForUrls";
const char kImagesBlockedForUrls[] = "ImagesBlockedForUrls";
const char kImportAutofillFormData[] = "ImportAutofillFormData";
const char kImportBookmarks[] = "ImportBookmarks";
const char kImportHistory[] = "ImportHistory";
const char kImportHomepage[] = "ImportHomepage";
const char kImportSavedPasswords[] = "ImportSavedPasswords";
const char kImportSearchEngine[] = "ImportSearchEngine";
const char kIncognitoEnabled[] = "IncognitoEnabled";
const char kIncognitoModeAvailability[] = "IncognitoModeAvailability";
const char kInsecureContentAllowedForUrls[] = "InsecureContentAllowedForUrls";
const char kInsecureContentBlockedForUrls[] = "InsecureContentBlockedForUrls";
const char kInstantEnabled[] = "InstantEnabled";
const char kInstantTetheringAllowed[] = "InstantTetheringAllowed";
const char kIntensiveWakeUpThrottlingEnabled[] = "IntensiveWakeUpThrottlingEnabled";
const char kIsolateOrigins[] = "IsolateOrigins";
const char kIsolateOriginsAndroid[] = "IsolateOriginsAndroid";
const char kJavaScriptAllowedForUrls[] = "JavaScriptAllowedForUrls";
const char kJavaScriptBlockedForUrls[] = "JavaScriptBlockedForUrls";
const char kJavascriptEnabled[] = "JavascriptEnabled";
const char kKerberosAccounts[] = "KerberosAccounts";
const char kKerberosAddAccountsAllowed[] = "KerberosAddAccountsAllowed";
const char kKerberosEnabled[] = "KerberosEnabled";
const char kKerberosRememberPasswordEnabled[] = "KerberosRememberPasswordEnabled";
const char kKeyPermissions[] = "KeyPermissions";
const char kKeyboardDefaultToFunctionKeys[] = "KeyboardDefaultToFunctionKeys";
const char kKeyboardFocusHighlightEnabled[] = "KeyboardFocusHighlightEnabled";
const char kKeygenAllowedForUrls[] = "KeygenAllowedForUrls";
const char kKeygenBlockedForUrls[] = "KeygenBlockedForUrls";
const char kLargeCursorEnabled[] = "LargeCursorEnabled";
const char kLegacySameSiteCookieBehaviorEnabled[] = "LegacySameSiteCookieBehaviorEnabled";
const char kLegacySameSiteCookieBehaviorEnabledForDomainList[] = "LegacySameSiteCookieBehaviorEnabledForDomainList";
const char kLidCloseAction[] = "LidCloseAction";
const char kLocalDiscoveryEnabled[] = "LocalDiscoveryEnabled";
const char kLockScreenMediaPlaybackEnabled[] = "LockScreenMediaPlaybackEnabled";
const char kLogUploadEnabled[] = "LogUploadEnabled";
const char kLoginAuthenticationBehavior[] = "LoginAuthenticationBehavior";
const char kLoginDisplayPasswordButtonEnabled[] = "LoginDisplayPasswordButtonEnabled";
const char kLoginVideoCaptureAllowedUrls[] = "LoginVideoCaptureAllowedUrls";
const char kMachineLevelUserCloudPolicyEnrollmentToken[] = "MachineLevelUserCloudPolicyEnrollmentToken";
const char kManagedBookmarks[] = "ManagedBookmarks";
const char kManagedGuestSessionAutoLaunchNotificationReduced[] = "ManagedGuestSessionAutoLaunchNotificationReduced";
const char kMaxConnectionsPerProxy[] = "MaxConnectionsPerProxy";
const char kMaxInvalidationFetchDelay[] = "MaxInvalidationFetchDelay";
const char kMediaCacheSize[] = "MediaCacheSize";
const char kMediaRouterCastAllowAllIPs[] = "MediaRouterCastAllowAllIPs";
const char kMetricsReportingEnabled[] = "MetricsReportingEnabled";
const char kMinimumChromeVersionEnforced[] = "MinimumChromeVersionEnforced";
const char kMinimumChromeVersionEolMessage[] = "MinimumChromeVersionEolMessage";
const char kMinimumRequiredChromeVersion[] = "MinimumRequiredChromeVersion";
const char kMonoAudioEnabled[] = "MonoAudioEnabled";
const char kNTLMShareAuthenticationEnabled[] = "NTLMShareAuthenticationEnabled";
const char kNTPContentSuggestionsEnabled[] = "NTPContentSuggestionsEnabled";
const char kNTPCustomBackgroundEnabled[] = "NTPCustomBackgroundEnabled";
const char kNativeMessagingBlacklist[] = "NativeMessagingBlacklist";
const char kNativeMessagingUserLevelHosts[] = "NativeMessagingUserLevelHosts";
const char kNativeMessagingWhitelist[] = "NativeMessagingWhitelist";
const char kNativePrinters[] = "NativePrinters";
const char kNativePrintersBulkAccessMode[] = "NativePrintersBulkAccessMode";
const char kNativePrintersBulkBlacklist[] = "NativePrintersBulkBlacklist";
const char kNativePrintersBulkConfiguration[] = "NativePrintersBulkConfiguration";
const char kNativePrintersBulkWhitelist[] = "NativePrintersBulkWhitelist";
const char kNativeWindowOcclusionEnabled[] = "NativeWindowOcclusionEnabled";
const char kNetBiosShareDiscoveryEnabled[] = "NetBiosShareDiscoveryEnabled";
const char kNetworkFileSharesAllowed[] = "NetworkFileSharesAllowed";
const char kNetworkFileSharesPreconfiguredShares[] = "NetworkFileSharesPreconfiguredShares";
const char kNetworkPredictionOptions[] = "NetworkPredictionOptions";
const char kNetworkThrottlingEnabled[] = "NetworkThrottlingEnabled";
const char kNewTabPageLocation[] = "NewTabPageLocation";
const char kNoteTakingAppsLockScreenWhitelist[] = "NoteTakingAppsLockScreenWhitelist";
const char kNotificationsAllowedForUrls[] = "NotificationsAllowedForUrls";
const char kNotificationsBlockedForUrls[] = "NotificationsBlockedForUrls";
const char kNtlmV2Enabled[] = "NtlmV2Enabled";
const char kOnBulkDataEntryEnterpriseConnector[] = "OnBulkDataEntryEnterpriseConnector";
const char kOnFileAttachedEnterpriseConnector[] = "OnFileAttachedEnterpriseConnector";
const char kOnFileDownloadedEnterpriseConnector[] = "OnFileDownloadedEnterpriseConnector";
const char kOnSecurityEventEnterpriseConnector[] = "OnSecurityEventEnterpriseConnector";
const char kOpenNetworkConfiguration[] = "OpenNetworkConfiguration";
const char kOverrideSecurityRestrictionsOnInsecureOrigin[] = "OverrideSecurityRestrictionsOnInsecureOrigin";
const char kPacHttpsUrlStrippingEnabled[] = "PacHttpsUrlStrippingEnabled";
const char kParentAccessCodeConfig[] = "ParentAccessCodeConfig";
const char kPasswordLeakDetectionEnabled[] = "PasswordLeakDetectionEnabled";
const char kPasswordManagerAllowShowPasswords[] = "PasswordManagerAllowShowPasswords";
const char kPasswordManagerEnabled[] = "PasswordManagerEnabled";
const char kPasswordProtectionChangePasswordURL[] = "PasswordProtectionChangePasswordURL";
const char kPasswordProtectionLoginURLs[] = "PasswordProtectionLoginURLs";
const char kPasswordProtectionWarningTrigger[] = "PasswordProtectionWarningTrigger";
const char kPaymentMethodQueryEnabled[] = "PaymentMethodQueryEnabled";
const char kPerAppTimeLimits[] = "PerAppTimeLimits";
const char kPerAppTimeLimitsWhitelist[] = "PerAppTimeLimitsWhitelist";
const char kPinUnlockAutosubmitEnabled[] = "PinUnlockAutosubmitEnabled";
const char kPinUnlockMaximumLength[] = "PinUnlockMaximumLength";
const char kPinUnlockMinimumLength[] = "PinUnlockMinimumLength";
const char kPinUnlockWeakPinsAllowed[] = "PinUnlockWeakPinsAllowed";
const char kPinnedLauncherApps[] = "PinnedLauncherApps";
const char kPluginVmAllowed[] = "PluginVmAllowed";
const char kPluginVmDataCollectionAllowed[] = "PluginVmDataCollectionAllowed";
const char kPluginVmImage[] = "PluginVmImage";
const char kPluginVmLicenseKey[] = "PluginVmLicenseKey";
const char kPluginVmUserId[] = "PluginVmUserId";
const char kPluginsAllowedForUrls[] = "PluginsAllowedForUrls";
const char kPluginsBlockedForUrls[] = "PluginsBlockedForUrls";
const char kPolicyAtomicGroupsEnabled[] = "PolicyAtomicGroupsEnabled";
const char kPolicyDictionaryMultipleSourceMergeList[] = "PolicyDictionaryMultipleSourceMergeList";
const char kPolicyListMultipleSourceMergeList[] = "PolicyListMultipleSourceMergeList";
const char kPolicyRefreshRate[] = "PolicyRefreshRate";
const char kPopupsAllowedForUrls[] = "PopupsAllowedForUrls";
const char kPopupsBlockedForUrls[] = "PopupsBlockedForUrls";
const char kPowerManagementIdleSettings[] = "PowerManagementIdleSettings";
const char kPowerManagementUsesAudioActivity[] = "PowerManagementUsesAudioActivity";
const char kPowerManagementUsesVideoActivity[] = "PowerManagementUsesVideoActivity";
const char kPowerSmartDimEnabled[] = "PowerSmartDimEnabled";
const char kPresentationIdleDelayScale[] = "PresentationIdleDelayScale";
const char kPresentationScreenDimDelayScale[] = "PresentationScreenDimDelayScale";
const char kPrimaryMouseButtonSwitch[] = "PrimaryMouseButtonSwitch";
const char kPrintHeaderFooter[] = "PrintHeaderFooter";
const char kPrintJobHistoryExpirationPeriod[] = "PrintJobHistoryExpirationPeriod";
const char kPrintPreviewUseSystemDefaultPrinter[] = "PrintPreviewUseSystemDefaultPrinter";
const char kPrintRasterizationMode[] = "PrintRasterizationMode";
const char kPrinterTypeDenyList[] = "PrinterTypeDenyList";
const char kPrintingAPIExtensionsWhitelist[] = "PrintingAPIExtensionsWhitelist";
const char kPrintingAllowedBackgroundGraphicsModes[] = "PrintingAllowedBackgroundGraphicsModes";
const char kPrintingAllowedColorModes[] = "PrintingAllowedColorModes";
const char kPrintingAllowedDuplexModes[] = "PrintingAllowedDuplexModes";
const char kPrintingAllowedPinModes[] = "PrintingAllowedPinModes";
const char kPrintingBackgroundGraphicsDefault[] = "PrintingBackgroundGraphicsDefault";
const char kPrintingColorDefault[] = "PrintingColorDefault";
const char kPrintingDuplexDefault[] = "PrintingDuplexDefault";
const char kPrintingEnabled[] = "PrintingEnabled";
const char kPrintingMaxSheetsAllowed[] = "PrintingMaxSheetsAllowed";
const char kPrintingPaperSizeDefault[] = "PrintingPaperSizeDefault";
const char kPrintingPinDefault[] = "PrintingPinDefault";
const char kPrintingSendUsernameAndFilenameEnabled[] = "PrintingSendUsernameAndFilenameEnabled";
const char kPrivacyScreenEnabled[] = "PrivacyScreenEnabled";
const char kPromotionalTabsEnabled[] = "PromotionalTabsEnabled";
const char kPromptForDownloadLocation[] = "PromptForDownloadLocation";
const char kProxyBypassList[] = "ProxyBypassList";
const char kProxyMode[] = "ProxyMode";
const char kProxyPacUrl[] = "ProxyPacUrl";
const char kProxyServer[] = "ProxyServer";
const char kProxyServerMode[] = "ProxyServerMode";
const char kProxySettings[] = "ProxySettings";
const char kQuicAllowed[] = "QuicAllowed";
const char kQuickUnlockModeWhitelist[] = "QuickUnlockModeWhitelist";
const char kQuickUnlockTimeout[] = "QuickUnlockTimeout";
const char kRC4Enabled[] = "RC4Enabled";
const char kRebootAfterUpdate[] = "RebootAfterUpdate";
const char kRegisteredProtocolHandlers[] = "RegisteredProtocolHandlers";
const char kRelaunchHeadsUpPeriod[] = "RelaunchHeadsUpPeriod";
const char kRelaunchNotification[] = "RelaunchNotification";
const char kRelaunchNotificationPeriod[] = "RelaunchNotificationPeriod";
const char kRemoteAccessClientFirewallTraversal[] = "RemoteAccessClientFirewallTraversal";
const char kRemoteAccessHostAllowClientPairing[] = "RemoteAccessHostAllowClientPairing";
const char kRemoteAccessHostAllowFileTransfer[] = "RemoteAccessHostAllowFileTransfer";
const char kRemoteAccessHostAllowGnubbyAuth[] = "RemoteAccessHostAllowGnubbyAuth";
const char kRemoteAccessHostAllowRelayedConnection[] = "RemoteAccessHostAllowRelayedConnection";
const char kRemoteAccessHostAllowUiAccessForRemoteAssistance[] = "RemoteAccessHostAllowUiAccessForRemoteAssistance";
const char kRemoteAccessHostClientDomain[] = "RemoteAccessHostClientDomain";
const char kRemoteAccessHostClientDomainList[] = "RemoteAccessHostClientDomainList";
const char kRemoteAccessHostDebugOverridePolicies[] = "RemoteAccessHostDebugOverridePolicies";
const char kRemoteAccessHostDomain[] = "RemoteAccessHostDomain";
const char kRemoteAccessHostDomainList[] = "RemoteAccessHostDomainList";
const char kRemoteAccessHostFirewallTraversal[] = "RemoteAccessHostFirewallTraversal";
const char kRemoteAccessHostMatchUsername[] = "RemoteAccessHostMatchUsername";
const char kRemoteAccessHostRequireCurtain[] = "RemoteAccessHostRequireCurtain";
const char kRemoteAccessHostRequireTwoFactor[] = "RemoteAccessHostRequireTwoFactor";
const char kRemoteAccessHostTalkGadgetPrefix[] = "RemoteAccessHostTalkGadgetPrefix";
const char kRemoteAccessHostTokenUrl[] = "RemoteAccessHostTokenUrl";
const char kRemoteAccessHostTokenValidationCertificateIssuer[] = "RemoteAccessHostTokenValidationCertificateIssuer";
const char kRemoteAccessHostTokenValidationUrl[] = "RemoteAccessHostTokenValidationUrl";
const char kRemoteAccessHostUdpPortRange[] = "RemoteAccessHostUdpPortRange";
const char kRenderInChromeFrameList[] = "RenderInChromeFrameList";
const char kRenderInHostList[] = "RenderInHostList";
const char kRendererCodeIntegrityEnabled[] = "RendererCodeIntegrityEnabled";
const char kReportArcStatusEnabled[] = "ReportArcStatusEnabled";
const char kReportCrostiniUsageEnabled[] = "ReportCrostiniUsageEnabled";
const char kReportDeviceActivityTimes[] = "ReportDeviceActivityTimes";
const char kReportDeviceAppInfo[] = "ReportDeviceAppInfo";
const char kReportDeviceBacklightInfo[] = "ReportDeviceBacklightInfo";
const char kReportDeviceBluetoothInfo[] = "ReportDeviceBluetoothInfo";
const char kReportDeviceBoardStatus[] = "ReportDeviceBoardStatus";
const char kReportDeviceBootMode[] = "ReportDeviceBootMode";
const char kReportDeviceCpuInfo[] = "ReportDeviceCpuInfo";
const char kReportDeviceCrashReportInfo[] = "ReportDeviceCrashReportInfo";
const char kReportDeviceFanInfo[] = "ReportDeviceFanInfo";
const char kReportDeviceGraphicsStatus[] = "ReportDeviceGraphicsStatus";
const char kReportDeviceHardwareStatus[] = "ReportDeviceHardwareStatus";
const char kReportDeviceLocation[] = "ReportDeviceLocation";
const char kReportDeviceMemoryInfo[] = "ReportDeviceMemoryInfo";
const char kReportDeviceNetworkInterfaces[] = "ReportDeviceNetworkInterfaces";
const char kReportDeviceOsUpdateStatus[] = "ReportDeviceOsUpdateStatus";
const char kReportDevicePowerStatus[] = "ReportDevicePowerStatus";
const char kReportDeviceSessionStatus[] = "ReportDeviceSessionStatus";
const char kReportDeviceStorageStatus[] = "ReportDeviceStorageStatus";
const char kReportDeviceTimezoneInfo[] = "ReportDeviceTimezoneInfo";
const char kReportDeviceUsers[] = "ReportDeviceUsers";
const char kReportDeviceVersionInfo[] = "ReportDeviceVersionInfo";
const char kReportDeviceVpdInfo[] = "ReportDeviceVpdInfo";
const char kReportExtensionsAndPluginsData[] = "ReportExtensionsAndPluginsData";
const char kReportMachineIDData[] = "ReportMachineIDData";
const char kReportPolicyData[] = "ReportPolicyData";
const char kReportSafeBrowsingData[] = "ReportSafeBrowsingData";
const char kReportUploadFrequency[] = "ReportUploadFrequency";
const char kReportUserIDData[] = "ReportUserIDData";
const char kReportVersionData[] = "ReportVersionData";
const char kRequireOnlineRevocationChecksForLocalAnchors[] = "RequireOnlineRevocationChecksForLocalAnchors";
const char kRequiredClientCertificateForDevice[] = "RequiredClientCertificateForDevice";
const char kRequiredClientCertificateForUser[] = "RequiredClientCertificateForUser";
const char kRestoreOnStartup[] = "RestoreOnStartup";
const char kRestoreOnStartupURLs[] = "RestoreOnStartupURLs";
const char kRestrictAccountsToPatterns[] = "RestrictAccountsToPatterns";
const char kRestrictSigninToPattern[] = "RestrictSigninToPattern";
const char kRoamingProfileLocation[] = "RoamingProfileLocation";
const char kRoamingProfileSupportEnabled[] = "RoamingProfileSupportEnabled";
const char kRunAllFlashInAllowMode[] = "RunAllFlashInAllowMode";
const char kSAMLOfflineSigninTimeLimit[] = "SAMLOfflineSigninTimeLimit";
const char kSSLErrorOverrideAllowed[] = "SSLErrorOverrideAllowed";
const char kSSLVersionFallbackMin[] = "SSLVersionFallbackMin";
const char kSSLVersionMax[] = "SSLVersionMax";
const char kSSLVersionMin[] = "SSLVersionMin";
const char kSafeBrowsingEnabled[] = "SafeBrowsingEnabled";
const char kSafeBrowsingExtendedReportingEnabled[] = "SafeBrowsingExtendedReportingEnabled";
const char kSafeBrowsingExtendedReportingOptInAllowed[] = "SafeBrowsingExtendedReportingOptInAllowed";
const char kSafeBrowsingForTrustedSourcesEnabled[] = "SafeBrowsingForTrustedSourcesEnabled";
const char kSafeBrowsingProtectionLevel[] = "SafeBrowsingProtectionLevel";
const char kSafeBrowsingWhitelistDomains[] = "SafeBrowsingWhitelistDomains";
const char kSafeSitesFilterBehavior[] = "SafeSitesFilterBehavior";
const char kSamlInSessionPasswordChangeEnabled[] = "SamlInSessionPasswordChangeEnabled";
const char kSamlLockScreenReauthenticationEnabled[] = "SamlLockScreenReauthenticationEnabled";
const char kSamlPasswordExpirationAdvanceWarningDays[] = "SamlPasswordExpirationAdvanceWarningDays";
const char kSavingBrowserHistoryDisabled[] = "SavingBrowserHistoryDisabled";
const char kSchedulerConfiguration[] = "SchedulerConfiguration";
const char kScreenBrightnessPercent[] = "ScreenBrightnessPercent";
const char kScreenCaptureAllowed[] = "ScreenCaptureAllowed";
const char kScreenDimDelayAC[] = "ScreenDimDelayAC";
const char kScreenDimDelayBattery[] = "ScreenDimDelayBattery";
const char kScreenLockDelayAC[] = "ScreenLockDelayAC";
const char kScreenLockDelayBattery[] = "ScreenLockDelayBattery";
const char kScreenLockDelays[] = "ScreenLockDelays";
const char kScreenMagnifierType[] = "ScreenMagnifierType";
const char kScreenOffDelayAC[] = "ScreenOffDelayAC";
const char kScreenOffDelayBattery[] = "ScreenOffDelayBattery";
const char kScrollToTextFragmentEnabled[] = "ScrollToTextFragmentEnabled";
const char kSearchSuggestEnabled[] = "SearchSuggestEnabled";
const char kSecondaryGoogleAccountSigninAllowed[] = "SecondaryGoogleAccountSigninAllowed";
const char kSecurityKeyPermitAttestation[] = "SecurityKeyPermitAttestation";
const char kSelectToSpeakEnabled[] = "SelectToSpeakEnabled";
const char kSendFilesForMalwareCheck[] = "SendFilesForMalwareCheck";
const char kSessionLengthLimit[] = "SessionLengthLimit";
const char kSessionLocales[] = "SessionLocales";
const char kSharedClipboardEnabled[] = "SharedClipboardEnabled";
const char kShelfAlignment[] = "ShelfAlignment";
const char kShelfAutoHideBehavior[] = "ShelfAutoHideBehavior";
const char kShowAccessibilityOptionsInSystemTrayMenu[] = "ShowAccessibilityOptionsInSystemTrayMenu";
const char kShowAppsShortcutInBookmarkBar[] = "ShowAppsShortcutInBookmarkBar";
const char kShowCastIconInToolbar[] = "ShowCastIconInToolbar";
const char kShowHomeButton[] = "ShowHomeButton";
const char kShowLogoutButtonInTray[] = "ShowLogoutButtonInTray";
const char kSignedHTTPExchangeEnabled[] = "SignedHTTPExchangeEnabled";
const char kSigninAllowed[] = "SigninAllowed";
const char kSitePerProcess[] = "SitePerProcess";
const char kSitePerProcessAndroid[] = "SitePerProcessAndroid";
const char kSkipMetadataCheck[] = "SkipMetadataCheck";
const char kSmartLockSigninAllowed[] = "SmartLockSigninAllowed";
const char kSmsMessagesAllowed[] = "SmsMessagesAllowed";
const char kSpellCheckServiceEnabled[] = "SpellCheckServiceEnabled";
const char kSpellcheckEnabled[] = "SpellcheckEnabled";
const char kSpellcheckLanguage[] = "SpellcheckLanguage";
const char kSpellcheckLanguageBlacklist[] = "SpellcheckLanguageBlacklist";
const char kSpokenFeedbackEnabled[] = "SpokenFeedbackEnabled";
const char kStartupBrowserWindowLaunchSuppressed[] = "StartupBrowserWindowLaunchSuppressed";
const char kStickyKeysEnabled[] = "StickyKeysEnabled";
const char kStricterMixedContentTreatmentEnabled[] = "StricterMixedContentTreatmentEnabled";
const char kSupervisedUserContentProviderEnabled[] = "SupervisedUserContentProviderEnabled";
const char kSupervisedUserCreationEnabled[] = "SupervisedUserCreationEnabled";
const char kSupervisedUsersEnabled[] = "SupervisedUsersEnabled";
const char kSuppressChromeFrameTurndownPrompt[] = "SuppressChromeFrameTurndownPrompt";
const char kSuppressUnsupportedOSWarning[] = "SuppressUnsupportedOSWarning";
const char kSyncDisabled[] = "SyncDisabled";
const char kSyncTypesListDisabled[] = "SyncTypesListDisabled";
const char kSystemFeaturesDisableList[] = "SystemFeaturesDisableList";
const char kSystemProxySettings[] = "SystemProxySettings";
const char kSystemTimezone[] = "SystemTimezone";
const char kSystemTimezoneAutomaticDetection[] = "SystemTimezoneAutomaticDetection";
const char kSystemUse24HourClock[] = "SystemUse24HourClock";
const char kTLS13HardeningForLocalAnchorsEnabled[] = "TLS13HardeningForLocalAnchorsEnabled";
const char kTPMFirmwareUpdateSettings[] = "TPMFirmwareUpdateSettings";
const char kTabFreezingEnabled[] = "TabFreezingEnabled";
const char kTabUnderAllowed[] = "TabUnderAllowed";
const char kTaskManagerEndProcessEnabled[] = "TaskManagerEndProcessEnabled";
const char kTermsOfServiceURL[] = "TermsOfServiceURL";
const char kThirdPartyBlockingEnabled[] = "ThirdPartyBlockingEnabled";
const char kTotalMemoryLimitMb[] = "TotalMemoryLimitMb";
const char kTouchVirtualKeyboardEnabled[] = "TouchVirtualKeyboardEnabled";
const char kTranslateEnabled[] = "TranslateEnabled";
const char kURLBlacklist[] = "URLBlacklist";
const char kURLWhitelist[] = "URLWhitelist";
const char kURLsToCheckComplianceOfDownloadedContent[] = "URLsToCheckComplianceOfDownloadedContent";
const char kURLsToCheckForMalwareOfUploadedContent[] = "URLsToCheckForMalwareOfUploadedContent";
const char kURLsToNotCheckComplianceOfUploadedContent[] = "URLsToNotCheckComplianceOfUploadedContent";
const char kURLsToNotCheckForMalwareOfDownloadedContent[] = "URLsToNotCheckForMalwareOfDownloadedContent";
const char kUnaffiliatedArcAllowed[] = "UnaffiliatedArcAllowed";
const char kUnifiedDesktopEnabledByDefault[] = "UnifiedDesktopEnabledByDefault";
const char kUnsafeEventsReportingEnabled[] = "UnsafeEventsReportingEnabled";
const char kUnsafelyTreatInsecureOriginAsSecure[] = "UnsafelyTreatInsecureOriginAsSecure";
const char kUptimeLimit[] = "UptimeLimit";
const char kUrlKeyedAnonymizedDataCollectionEnabled[] = "UrlKeyedAnonymizedDataCollectionEnabled";
const char kUsageTimeLimit[] = "UsageTimeLimit";
const char kUsbDetachableWhitelist[] = "UsbDetachableWhitelist";
const char kUseLegacyFormControls[] = "UseLegacyFormControls";
const char kUserActivityScreenDimDelayScale[] = "UserActivityScreenDimDelayScale";
const char kUserAvatarImage[] = "UserAvatarImage";
const char kUserDataDir[] = "UserDataDir";
const char kUserDataSnapshotRetentionLimit[] = "UserDataSnapshotRetentionLimit";
const char kUserDisplayName[] = "UserDisplayName";
const char kUserFeedbackAllowed[] = "UserFeedbackAllowed";
const char kUserNativePrintersAllowed[] = "UserNativePrintersAllowed";
const char kUserPluginVmAllowed[] = "UserPluginVmAllowed";
const char kVariationsRestrictParameter[] = "VariationsRestrictParameter";
const char kVideoCaptureAllowed[] = "VideoCaptureAllowed";
const char kVideoCaptureAllowedUrls[] = "VideoCaptureAllowedUrls";
const char kVirtualKeyboardEnabled[] = "VirtualKeyboardEnabled";
const char kVirtualKeyboardFeatures[] = "VirtualKeyboardFeatures";
const char kVirtualMachinesAllowed[] = "VirtualMachinesAllowed";
const char kVmManagementCliAllowed[] = "VmManagementCliAllowed";
const char kVoiceInteractionContextEnabled[] = "VoiceInteractionContextEnabled";
const char kVoiceInteractionHotwordEnabled[] = "VoiceInteractionHotwordEnabled";
const char kVoiceInteractionQuickAnswersEnabled[] = "VoiceInteractionQuickAnswersEnabled";
const char kVpnConfigAllowed[] = "VpnConfigAllowed";
const char kWPADQuickCheckEnabled[] = "WPADQuickCheckEnabled";
const char kWaitForInitialUserActivity[] = "WaitForInitialUserActivity";
const char kWallpaperImage[] = "WallpaperImage";
const char kWebAppInstallForceList[] = "WebAppInstallForceList";
const char kWebComponentsV0Enabled[] = "WebComponentsV0Enabled";
const char kWebDriverOverridesIncompatiblePolicies[] = "WebDriverOverridesIncompatiblePolicies";
const char kWebRestrictionsAuthority[] = "WebRestrictionsAuthority";
const char kWebRtcEventLogCollectionAllowed[] = "WebRtcEventLogCollectionAllowed";
const char kWebRtcLocalIpsAllowedUrls[] = "WebRtcLocalIpsAllowedUrls";
const char kWebRtcUdpPortRange[] = "WebRtcUdpPortRange";
const char kWebUsbAllowDevicesForUrls[] = "WebUsbAllowDevicesForUrls";
const char kWebUsbAskForUrls[] = "WebUsbAskForUrls";
const char kWebUsbBlockedForUrls[] = "WebUsbBlockedForUrls";
const char kWelcomePageOnOSUpgradeEnabled[] = "WelcomePageOnOSUpgradeEnabled";

}  // namespace key

namespace group {

const char kActiveDirectoryManagement[] = "ActiveDirectoryManagement";
const char kAttestation[] = "Attestation";
const char kBrowserSwitcher[] = "BrowserSwitcher";
const char kCloudReporting[] = "CloudReporting";
const char kContentPack[] = "ContentPack";
const char kCookiesSettings[] = "CookiesSettings";
const char kDateAndTime[] = "DateAndTime";
const char kDefaultSearchProvider[] = "DefaultSearchProvider";
const char kDisplay[] = "Display";
const char kDrive[] = "Drive";
const char kExtensions[] = "Extensions";
const char kGoogleCast[] = "GoogleCast";
const char kHomepage[] = "Homepage";
const char kImageSettings[] = "ImageSettings";
const char kJavascriptSettings[] = "JavascriptSettings";
const char kKeygenSettings[] = "KeygenSettings";
const char kKiosk[] = "Kiosk";
const char kLegacySameSiteCookieBehaviorSettings[] = "LegacySameSiteCookieBehaviorSettings";
const char kLoginScreenOrigins[] = "LoginScreenOrigins";
const char kNativeMessaging[] = "NativeMessaging";
const char kNetworkFileShares[] = "NetworkFileShares";
const char kNotificationsSettings[] = "NotificationsSettings";
const char kPasswordManager[] = "PasswordManager";
const char kPasswordProtection[] = "PasswordProtection";
const char kPinUnlock[] = "PinUnlock";
const char kPluginVm[] = "PluginVm";
const char kPluginsSettings[] = "PluginsSettings";
const char kPopupsSettings[] = "PopupsSettings";
const char kProxy[] = "Proxy";
const char kQuickUnlock[] = "QuickUnlock";
const char kRemoteAccess[] = "RemoteAccess";
const char kRestoreOnStartup[] = "RestoreOnStartup";
const char kSAML[] = "SAML";
const char kSafeBrowsing[] = "SafeBrowsing";
const char kSupervisedUsers[] = "SupervisedUsers";
const char kUserAndDeviceReporting[] = "UserAndDeviceReporting";
const char kWebUsbSettings[] = "WebUsbSettings";
const char kWiFi[] = "WiFi";

namespace {

const char* const ActiveDirectoryManagement[] = {key::kDeviceMachinePasswordChangeRate, key::kDeviceUserPolicyLoopbackProcessingMode, key::kDeviceKerberosEncryptionTypes, key::kDeviceGpoCacheLifetime, key::kDeviceAuthDataCacheLifetime, nullptr};
const char* const Attestation[] = {key::kAttestationEnabledForDevice, key::kAttestationEnabledForUser, key::kAttestationExtensionWhitelist, key::kAttestationForContentProtectionEnabled, nullptr};
const char* const BrowserSwitcher[] = {key::kAlternativeBrowserPath, key::kAlternativeBrowserParameters, key::kBrowserSwitcherChromePath, key::kBrowserSwitcherChromeParameters, key::kBrowserSwitcherDelay, key::kBrowserSwitcherEnabled, key::kBrowserSwitcherExternalSitelistUrl, key::kBrowserSwitcherExternalGreylistUrl, key::kBrowserSwitcherKeepLastChromeTab, key::kBrowserSwitcherUrlList, key::kBrowserSwitcherUrlGreylist, key::kBrowserSwitcherUseIeSitelist, nullptr};
const char* const CloudReporting[] = {key::kReportVersionData, key::kReportPolicyData, key::kReportMachineIDData, key::kReportUserIDData, key::kReportExtensionsAndPluginsData, key::kCloudExtensionRequestEnabled, key::kCloudReportingEnabled, nullptr};
const char* const ContentPack[] = {key::kContentPackDefaultFilteringBehavior, key::kContentPackManualBehaviorHosts, key::kContentPackManualBehaviorURLs, nullptr};
const char* const CookiesSettings[] = {key::kDefaultCookiesSetting, key::kCookiesAllowedForUrls, key::kCookiesBlockedForUrls, key::kCookiesSessionOnlyForUrls, nullptr};
const char* const DateAndTime[] = {key::kSystemTimezone, key::kSystemTimezoneAutomaticDetection, nullptr};
const char* const DefaultSearchProvider[] = {key::kDefaultSearchProviderEnabled, key::kDefaultSearchProviderName, key::kDefaultSearchProviderKeyword, key::kDefaultSearchProviderSearchURL, key::kDefaultSearchProviderSuggestURL, key::kDefaultSearchProviderInstantURL, key::kDefaultSearchProviderIconURL, key::kDefaultSearchProviderEncodings, key::kDefaultSearchProviderAlternateURLs, key::kDefaultSearchProviderSearchTermsReplacementKey, key::kDefaultSearchProviderImageURL, key::kDefaultSearchProviderNewTabURL, key::kDefaultSearchProviderSearchURLPostParams, key::kDefaultSearchProviderSuggestURLPostParams, key::kDefaultSearchProviderInstantURLPostParams, key::kDefaultSearchProviderImageURLPostParams, nullptr};
const char* const Display[] = {key::kDeviceDisplayResolution, key::kDisplayRotationDefault, nullptr};
const char* const Drive[] = {key::kDriveDisabled, key::kDriveDisabledOverCellular, nullptr};
const char* const Extensions[] = {key::kExtensionInstallBlacklist, key::kExtensionInstallWhitelist, key::kExtensionInstallForcelist, key::kExtensionInstallSources, key::kExtensionAllowedTypes, key::kExtensionAllowInsecureUpdates, key::kExtensionSettings, nullptr};
const char* const GoogleCast[] = {key::kCastReceiverEnabled, key::kCastReceiverName, nullptr};
const char* const Homepage[] = {key::kHomepageLocation, key::kHomepageIsNewTabPage, key::kNewTabPageLocation, key::kShowHomeButton, nullptr};
const char* const ImageSettings[] = {key::kDefaultImagesSetting, key::kImagesAllowedForUrls, key::kImagesBlockedForUrls, nullptr};
const char* const JavascriptSettings[] = {key::kDefaultJavaScriptSetting, key::kJavaScriptAllowedForUrls, key::kJavaScriptBlockedForUrls, nullptr};
const char* const KeygenSettings[] = {key::kDefaultKeygenSetting, key::kKeygenAllowedForUrls, key::kKeygenBlockedForUrls, nullptr};
const char* const Kiosk[] = {key::kDeviceLocalAccounts, key::kDeviceLocalAccountAutoLoginId, key::kDeviceLocalAccountAutoLoginDelay, key::kDeviceLocalAccountAutoLoginBailoutEnabled, key::kDeviceLocalAccountPromptForNetworkWhenOffline, nullptr};
const char* const LegacySameSiteCookieBehaviorSettings[] = {key::kLegacySameSiteCookieBehaviorEnabled, key::kLegacySameSiteCookieBehaviorEnabledForDomainList, nullptr};
const char* const LoginScreenOrigins[] = {key::kDeviceLoginScreenIsolateOrigins, key::kDeviceLoginScreenSitePerProcess, nullptr};
const char* const NativeMessaging[] = {key::kNativeMessagingBlacklist, key::kNativeMessagingWhitelist, key::kNativeMessagingUserLevelHosts, nullptr};
const char* const NetworkFileShares[] = {key::kNetworkFileSharesAllowed, key::kNetBiosShareDiscoveryEnabled, key::kNTLMShareAuthenticationEnabled, key::kNetworkFileSharesPreconfiguredShares, nullptr};
const char* const NotificationsSettings[] = {key::kDefaultNotificationsSetting, key::kNotificationsAllowedForUrls, key::kNotificationsBlockedForUrls, nullptr};
const char* const PasswordManager[] = {key::kPasswordManagerEnabled, key::kPasswordManagerAllowShowPasswords, nullptr};
const char* const PasswordProtection[] = {key::kPasswordProtectionWarningTrigger, key::kPasswordProtectionLoginURLs, key::kPasswordProtectionChangePasswordURL, nullptr};
const char* const PinUnlock[] = {key::kPinUnlockMinimumLength, key::kPinUnlockMaximumLength, key::kPinUnlockWeakPinsAllowed, key::kPinUnlockAutosubmitEnabled, nullptr};
const char* const PluginVm[] = {key::kPluginVmAllowed, key::kPluginVmDataCollectionAllowed, key::kPluginVmLicenseKey, key::kPluginVmImage, key::kPluginVmUserId, key::kUserPluginVmAllowed, nullptr};
const char* const PluginsSettings[] = {key::kDefaultPluginsSetting, key::kPluginsAllowedForUrls, key::kPluginsBlockedForUrls, nullptr};
const char* const PopupsSettings[] = {key::kDefaultPopupsSetting, key::kPopupsAllowedForUrls, key::kPopupsBlockedForUrls, nullptr};
const char* const Proxy[] = {key::kProxyMode, key::kProxyServerMode, key::kProxyServer, key::kProxyPacUrl, key::kProxyBypassList, key::kProxySettings, nullptr};
const char* const QuickUnlock[] = {key::kQuickUnlockModeWhitelist, key::kQuickUnlockTimeout, nullptr};
const char* const RemoteAccess[] = {key::kRemoteAccessClientFirewallTraversal, key::kRemoteAccessHostClientDomain, key::kRemoteAccessHostClientDomainList, key::kRemoteAccessHostFirewallTraversal, key::kRemoteAccessHostDomain, key::kRemoteAccessHostDomainList, key::kRemoteAccessHostRequireTwoFactor, key::kRemoteAccessHostTalkGadgetPrefix, key::kRemoteAccessHostRequireCurtain, key::kRemoteAccessHostAllowClientPairing, key::kRemoteAccessHostAllowGnubbyAuth, key::kRemoteAccessHostAllowRelayedConnection, key::kRemoteAccessHostUdpPortRange, key::kRemoteAccessHostMatchUsername, key::kRemoteAccessHostTokenUrl, key::kRemoteAccessHostTokenValidationUrl, key::kRemoteAccessHostTokenValidationCertificateIssuer, key::kRemoteAccessHostDebugOverridePolicies, key::kRemoteAccessHostAllowUiAccessForRemoteAssistance, key::kRemoteAccessHostAllowFileTransfer, nullptr};
const char* const RestoreOnStartup[] = {key::kRestoreOnStartup, key::kRestoreOnStartupURLs, nullptr};
const char* const SAML[] = {key::kDeviceSamlLoginAuthenticationType, key::kDeviceTransferSAMLCookies, nullptr};
const char* const SafeBrowsing[] = {key::kSafeBrowsingEnabled, key::kSafeBrowsingExtendedReportingEnabled, key::kSafeBrowsingProtectionLevel, key::kSafeBrowsingWhitelistDomains, nullptr};
const char* const SupervisedUsers[] = {key::kSupervisedUsersEnabled, key::kSupervisedUserCreationEnabled, key::kSupervisedUserContentProviderEnabled, nullptr};
const char* const UserAndDeviceReporting[] = {key::kReportDeviceVersionInfo, key::kReportDeviceBootMode, key::kReportDeviceUsers, key::kReportDeviceActivityTimes, key::kReportDeviceLocation, key::kReportDeviceNetworkInterfaces, key::kReportDeviceHardwareStatus, key::kReportDeviceSessionStatus, key::kReportDeviceGraphicsStatus, key::kReportDeviceCrashReportInfo, key::kReportDeviceOsUpdateStatus, key::kReportDeviceBoardStatus, key::kReportDeviceCpuInfo, key::kReportDeviceTimezoneInfo, key::kReportDeviceMemoryInfo, key::kReportDeviceBacklightInfo, key::kReportDevicePowerStatus, key::kReportDeviceStorageStatus, key::kReportDeviceAppInfo, key::kReportDeviceBluetoothInfo, key::kReportDeviceFanInfo, key::kReportDeviceVpdInfo, key::kReportUploadFrequency, key::kReportArcStatusEnabled, key::kHeartbeatEnabled, key::kHeartbeatFrequency, key::kLogUploadEnabled, key::kDeviceMetricsReportingEnabled, nullptr};
const char* const WebUsbSettings[] = {key::kDefaultWebUsbGuardSetting, key::kDeviceLoginScreenWebUsbAllowDevicesForUrls, key::kWebUsbAllowDevicesForUrls, key::kWebUsbAskForUrls, key::kWebUsbBlockedForUrls, nullptr};
const char* const WiFi[] = {key::kDeviceWiFiFastTransitionEnabled, key::kDeviceWiFiAllowed, nullptr};

}  // namespace

}  // namespace group

const AtomicGroup kPolicyAtomicGroupMappings[] = {
  {  37, group::kActiveDirectoryManagement, group::ActiveDirectoryManagement  },
  {  18, group::kAttestation, group::Attestation  },
  {  28, group::kBrowserSwitcher, group::BrowserSwitcher  },
  {  27, group::kCloudReporting, group::CloudReporting  },
  {  19, group::kContentPack, group::ContentPack  },
  {  9, group::kCookiesSettings, group::CookiesSettings  },
  {  35, group::kDateAndTime, group::DateAndTime  },
  {  7, group::kDefaultSearchProvider, group::DefaultSearchProvider  },
  {  36, group::kDisplay, group::Display  },
  {  17, group::kDrive, group::Drive  },
  {  5, group::kExtensions, group::Extensions  },
  {  21, group::kGoogleCast, group::GoogleCast  },
  {  1, group::kHomepage, group::Homepage  },
  {  8, group::kImageSettings, group::ImageSettings  },
  {  10, group::kJavascriptSettings, group::JavascriptSettings  },
  {  13, group::kKeygenSettings, group::KeygenSettings  },
  {  34, group::kKiosk, group::Kiosk  },
  {  38, group::kLegacySameSiteCookieBehaviorSettings, group::LegacySameSiteCookieBehaviorSettings  },
  {  31, group::kLoginScreenOrigins, group::LoginScreenOrigins  },
  {  16, group::kNativeMessaging, group::NativeMessaging  },
  {  26, group::kNetworkFileShares, group::NetworkFileShares  },
  {  14, group::kNotificationsSettings, group::NotificationsSettings  },
  {  3, group::kPasswordManager, group::PasswordManager  },
  {  25, group::kPasswordProtection, group::PasswordProtection  },
  {  23, group::kPinUnlock, group::PinUnlock  },
  {  29, group::kPluginVm, group::PluginVm  },
  {  11, group::kPluginsSettings, group::PluginsSettings  },
  {  12, group::kPopupsSettings, group::PopupsSettings  },
  {  4, group::kProxy, group::Proxy  },
  {  22, group::kQuickUnlock, group::QuickUnlock  },
  {  2, group::kRemoteAccess, group::RemoteAccess  },
  {  6, group::kRestoreOnStartup, group::RestoreOnStartup  },
  {  30, group::kSAML, group::SAML  },
  {  24, group::kSafeBrowsing, group::SafeBrowsing  },
  {  20, group::kSupervisedUsers, group::SupervisedUsers  },
  {  32, group::kUserAndDeviceReporting, group::UserAndDeviceReporting  },
  {  15, group::kWebUsbSettings, group::WebUsbSettings  },
  {  33, group::kWiFi, group::WiFi  },
};

const size_t kPolicyAtomicGroupMappingsLength = 38;

const IntegerPolicyAccess kIntegerPolicyAccess[] = {
  {key::kAdsSettingForIntrusiveAdsSites,
   &em::CloudPolicySettings::has_adssettingforintrusiveadssites,
   &em::CloudPolicySettings::adssettingforintrusiveadssites},
  {key::kAllowPasswordProtectedFiles,
   &em::CloudPolicySettings::has_allowpasswordprotectedfiles,
   &em::CloudPolicySettings::allowpasswordprotectedfiles},
  {key::kAmbientAuthenticationInPrivateModesEnabled,
   &em::CloudPolicySettings::has_ambientauthenticationinprivatemodesenabled,
   &em::CloudPolicySettings::ambientauthenticationinprivatemodesenabled},
  {key::kBlockLargeFileTransfer,
   &em::CloudPolicySettings::has_blocklargefiletransfer,
   &em::CloudPolicySettings::blocklargefiletransfer},
  {key::kBlockUnsupportedFiletypes,
   &em::CloudPolicySettings::has_blockunsupportedfiletypes,
   &em::CloudPolicySettings::blockunsupportedfiletypes},
  {key::kBrowserSignin,
   &em::CloudPolicySettings::has_browsersignin,
   &em::CloudPolicySettings::browsersignin},
  {key::kBrowserSwitcherDelay,
   &em::CloudPolicySettings::has_browserswitcherdelay,
   &em::CloudPolicySettings::browserswitcherdelay},
  {key::kCheckContentCompliance,
   &em::CloudPolicySettings::has_checkcontentcompliance,
   &em::CloudPolicySettings::checkcontentcompliance},
  {key::kChromeVariations,
   &em::CloudPolicySettings::has_chromevariations,
   &em::CloudPolicySettings::chromevariations},
  {key::kContentPackDefaultFilteringBehavior,
   &em::CloudPolicySettings::has_contentpackdefaultfilteringbehavior,
   &em::CloudPolicySettings::contentpackdefaultfilteringbehavior},
  {key::kDefaultCookiesSetting,
   &em::CloudPolicySettings::has_defaultcookiessetting,
   &em::CloudPolicySettings::defaultcookiessetting},
  {key::kDefaultGeolocationSetting,
   &em::CloudPolicySettings::has_defaultgeolocationsetting,
   &em::CloudPolicySettings::defaultgeolocationsetting},
  {key::kDefaultImagesSetting,
   &em::CloudPolicySettings::has_defaultimagessetting,
   &em::CloudPolicySettings::defaultimagessetting},
  {key::kDefaultInsecureContentSetting,
   &em::CloudPolicySettings::has_defaultinsecurecontentsetting,
   &em::CloudPolicySettings::defaultinsecurecontentsetting},
  {key::kDefaultJavaScriptSetting,
   &em::CloudPolicySettings::has_defaultjavascriptsetting,
   &em::CloudPolicySettings::defaultjavascriptsetting},
  {key::kDefaultMediaStreamSetting,
   &em::CloudPolicySettings::has_defaultmediastreamsetting,
   &em::CloudPolicySettings::defaultmediastreamsetting},
  {key::kDefaultNotificationsSetting,
   &em::CloudPolicySettings::has_defaultnotificationssetting,
   &em::CloudPolicySettings::defaultnotificationssetting},
  {key::kDefaultPluginsSetting,
   &em::CloudPolicySettings::has_defaultpluginssetting,
   &em::CloudPolicySettings::defaultpluginssetting},
  {key::kDefaultPopupsSetting,
   &em::CloudPolicySettings::has_defaultpopupssetting,
   &em::CloudPolicySettings::defaultpopupssetting},
  {key::kDefaultWebBluetoothGuardSetting,
   &em::CloudPolicySettings::has_defaultwebbluetoothguardsetting,
   &em::CloudPolicySettings::defaultwebbluetoothguardsetting},
  {key::kDefaultWebUsbGuardSetting,
   &em::CloudPolicySettings::has_defaultwebusbguardsetting,
   &em::CloudPolicySettings::defaultwebusbguardsetting},
  {key::kDelayDeliveryUntilVerdict,
   &em::CloudPolicySettings::has_delaydeliveryuntilverdict,
   &em::CloudPolicySettings::delaydeliveryuntilverdict},
  {key::kDeveloperToolsAvailability,
   &em::CloudPolicySettings::has_developertoolsavailability,
   &em::CloudPolicySettings::developertoolsavailability},
  {key::kDiskCacheSize,
   &em::CloudPolicySettings::has_diskcachesize,
   &em::CloudPolicySettings::diskcachesize},
  {key::kDownloadRestrictions,
   &em::CloudPolicySettings::has_downloadrestrictions,
   &em::CloudPolicySettings::downloadrestrictions},
  {key::kForceYouTubeRestrict,
   &em::CloudPolicySettings::has_forceyoutuberestrict,
   &em::CloudPolicySettings::forceyoutuberestrict},
  {key::kIncognitoModeAvailability,
   &em::CloudPolicySettings::has_incognitomodeavailability,
   &em::CloudPolicySettings::incognitomodeavailability},
  {key::kLegacySameSiteCookieBehaviorEnabled,
   &em::CloudPolicySettings::has_legacysamesitecookiebehaviorenabled,
   &em::CloudPolicySettings::legacysamesitecookiebehaviorenabled},
  {key::kMaxConnectionsPerProxy,
   &em::CloudPolicySettings::has_maxconnectionsperproxy,
   &em::CloudPolicySettings::maxconnectionsperproxy},
  {key::kMaxInvalidationFetchDelay,
   &em::CloudPolicySettings::has_maxinvalidationfetchdelay,
   &em::CloudPolicySettings::maxinvalidationfetchdelay},
  {key::kNetworkPredictionOptions,
   &em::CloudPolicySettings::has_networkpredictionoptions,
   &em::CloudPolicySettings::networkpredictionoptions},
  {key::kPasswordProtectionWarningTrigger,
   &em::CloudPolicySettings::has_passwordprotectionwarningtrigger,
   &em::CloudPolicySettings::passwordprotectionwarningtrigger},
  {key::kPolicyRefreshRate,
   &em::CloudPolicySettings::has_policyrefreshrate,
   &em::CloudPolicySettings::policyrefreshrate},
  {key::kProxyServerMode,
   &em::CloudPolicySettings::has_proxyservermode,
   &em::CloudPolicySettings::proxyservermode},
  {key::kRelaunchNotification,
   &em::CloudPolicySettings::has_relaunchnotification,
   &em::CloudPolicySettings::relaunchnotification},
  {key::kRelaunchNotificationPeriod,
   &em::CloudPolicySettings::has_relaunchnotificationperiod,
   &em::CloudPolicySettings::relaunchnotificationperiod},
  {key::kRestoreOnStartup,
   &em::CloudPolicySettings::has_restoreonstartup,
   &em::CloudPolicySettings::restoreonstartup},
  {key::kSafeBrowsingProtectionLevel,
   &em::CloudPolicySettings::has_safebrowsingprotectionlevel,
   &em::CloudPolicySettings::safebrowsingprotectionlevel},
  {key::kSafeSitesFilterBehavior,
   &em::CloudPolicySettings::has_safesitesfilterbehavior,
   &em::CloudPolicySettings::safesitesfilterbehavior},
  {key::kSendFilesForMalwareCheck,
   &em::CloudPolicySettings::has_sendfilesformalwarecheck,
   &em::CloudPolicySettings::sendfilesformalwarecheck},
  {key::kUserDataSnapshotRetentionLimit,
   &em::CloudPolicySettings::has_userdatasnapshotretentionlimit,
   &em::CloudPolicySettings::userdatasnapshotretentionlimit},
  {nullptr, nullptr, nullptr},
};

const BooleanPolicyAccess kBooleanPolicyAccess[] = {
  {key::kAbusiveExperienceInterventionEnforce,
   &em::CloudPolicySettings::has_abusiveexperienceinterventionenforce,
   &em::CloudPolicySettings::abusiveexperienceinterventionenforce},
  {key::kAccessibilityImageLabelsEnabled,
   &em::CloudPolicySettings::has_accessibilityimagelabelsenabled,
   &em::CloudPolicySettings::accessibilityimagelabelsenabled},
  {key::kAdvancedProtectionAllowed,
   &em::CloudPolicySettings::has_advancedprotectionallowed,
   &em::CloudPolicySettings::advancedprotectionallowed},
  {key::kAllowCrossOriginAuthPrompt,
   &em::CloudPolicySettings::has_allowcrossoriginauthprompt,
   &em::CloudPolicySettings::allowcrossoriginauthprompt},
  {key::kAllowDeletingBrowserHistory,
   &em::CloudPolicySettings::has_allowdeletingbrowserhistory,
   &em::CloudPolicySettings::allowdeletingbrowserhistory},
  {key::kAllowDinosaurEasterEgg,
   &em::CloudPolicySettings::has_allowdinosaureasteregg,
   &em::CloudPolicySettings::allowdinosaureasteregg},
  {key::kAllowFileSelectionDialogs,
   &em::CloudPolicySettings::has_allowfileselectiondialogs,
   &em::CloudPolicySettings::allowfileselectiondialogs},
  {key::kAllowNativeNotifications,
   &em::CloudPolicySettings::has_allownativenotifications,
   &em::CloudPolicySettings::allownativenotifications},
  {key::kAllowOutdatedPlugins,
   &em::CloudPolicySettings::has_allowoutdatedplugins,
   &em::CloudPolicySettings::allowoutdatedplugins},
  {key::kAllowPopupsDuringPageUnload,
   &em::CloudPolicySettings::has_allowpopupsduringpageunload,
   &em::CloudPolicySettings::allowpopupsduringpageunload},
  {key::kAllowSyncXHRInPageDismissal,
   &em::CloudPolicySettings::has_allowsyncxhrinpagedismissal,
   &em::CloudPolicySettings::allowsyncxhrinpagedismissal},
  {key::kAlternateErrorPagesEnabled,
   &em::CloudPolicySettings::has_alternateerrorpagesenabled,
   &em::CloudPolicySettings::alternateerrorpagesenabled},
  {key::kAlwaysOpenPdfExternally,
   &em::CloudPolicySettings::has_alwaysopenpdfexternally,
   &em::CloudPolicySettings::alwaysopenpdfexternally},
  {key::kAppCacheForceEnabled,
   &em::CloudPolicySettings::has_appcacheforceenabled,
   &em::CloudPolicySettings::appcacheforceenabled},
  {key::kAudioCaptureAllowed,
   &em::CloudPolicySettings::has_audiocaptureallowed,
   &em::CloudPolicySettings::audiocaptureallowed},
  {key::kAudioSandboxEnabled,
   &em::CloudPolicySettings::has_audiosandboxenabled,
   &em::CloudPolicySettings::audiosandboxenabled},
  {key::kAuthNegotiateDelegateByKdcPolicy,
   &em::CloudPolicySettings::has_authnegotiatedelegatebykdcpolicy,
   &em::CloudPolicySettings::authnegotiatedelegatebykdcpolicy},
  {key::kAutoFillEnabled,
   &em::CloudPolicySettings::has_autofillenabled,
   &em::CloudPolicySettings::autofillenabled},
  {key::kAutofillAddressEnabled,
   &em::CloudPolicySettings::has_autofilladdressenabled,
   &em::CloudPolicySettings::autofilladdressenabled},
  {key::kAutofillCreditCardEnabled,
   &em::CloudPolicySettings::has_autofillcreditcardenabled,
   &em::CloudPolicySettings::autofillcreditcardenabled},
  {key::kAutoplayAllowed,
   &em::CloudPolicySettings::has_autoplayallowed,
   &em::CloudPolicySettings::autoplayallowed},
  {key::kBackgroundModeEnabled,
   &em::CloudPolicySettings::has_backgroundmodeenabled,
   &em::CloudPolicySettings::backgroundmodeenabled},
  {key::kBlockExternalExtensions,
   &em::CloudPolicySettings::has_blockexternalextensions,
   &em::CloudPolicySettings::blockexternalextensions},
  {key::kBlockThirdPartyCookies,
   &em::CloudPolicySettings::has_blockthirdpartycookies,
   &em::CloudPolicySettings::blockthirdpartycookies},
  {key::kBookmarkBarEnabled,
   &em::CloudPolicySettings::has_bookmarkbarenabled,
   &em::CloudPolicySettings::bookmarkbarenabled},
  {key::kBrowserAddPersonEnabled,
   &em::CloudPolicySettings::has_browseraddpersonenabled,
   &em::CloudPolicySettings::browseraddpersonenabled},
  {key::kBrowserGuestModeEnabled,
   &em::CloudPolicySettings::has_browserguestmodeenabled,
   &em::CloudPolicySettings::browserguestmodeenabled},
  {key::kBrowserGuestModeEnforced,
   &em::CloudPolicySettings::has_browserguestmodeenforced,
   &em::CloudPolicySettings::browserguestmodeenforced},
  {key::kBrowserNetworkTimeQueriesEnabled,
   &em::CloudPolicySettings::has_browsernetworktimequeriesenabled,
   &em::CloudPolicySettings::browsernetworktimequeriesenabled},
  {key::kBrowserSwitcherEnabled,
   &em::CloudPolicySettings::has_browserswitcherenabled,
   &em::CloudPolicySettings::browserswitcherenabled},
  {key::kBrowserSwitcherKeepLastChromeTab,
   &em::CloudPolicySettings::has_browserswitcherkeeplastchrometab,
   &em::CloudPolicySettings::browserswitcherkeeplastchrometab},
  {key::kBuiltInDnsClientEnabled,
   &em::CloudPolicySettings::has_builtindnsclientenabled,
   &em::CloudPolicySettings::builtindnsclientenabled},
  {key::kClickToCallEnabled,
   &em::CloudPolicySettings::has_clicktocallenabled,
   &em::CloudPolicySettings::clicktocallenabled},
  {key::kCloudExtensionRequestEnabled,
   &em::CloudPolicySettings::has_cloudextensionrequestenabled,
   &em::CloudPolicySettings::cloudextensionrequestenabled},
  {key::kCloudManagementEnrollmentMandatory,
   &em::CloudPolicySettings::has_cloudmanagementenrollmentmandatory,
   &em::CloudPolicySettings::cloudmanagementenrollmentmandatory},
  {key::kCloudPolicyOverridesPlatformPolicy,
   &em::CloudPolicySettings::has_cloudpolicyoverridesplatformpolicy,
   &em::CloudPolicySettings::cloudpolicyoverridesplatformpolicy},
  {key::kCloudPrintProxyEnabled,
   &em::CloudPolicySettings::has_cloudprintproxyenabled,
   &em::CloudPolicySettings::cloudprintproxyenabled},
  {key::kCloudPrintSubmitEnabled,
   &em::CloudPolicySettings::has_cloudprintsubmitenabled,
   &em::CloudPolicySettings::cloudprintsubmitenabled},
  {key::kCloudReportingEnabled,
   &em::CloudPolicySettings::has_cloudreportingenabled,
   &em::CloudPolicySettings::cloudreportingenabled},
  {key::kCommandLineFlagSecurityWarningsEnabled,
   &em::CloudPolicySettings::has_commandlineflagsecuritywarningsenabled,
   &em::CloudPolicySettings::commandlineflagsecuritywarningsenabled},
  {key::kComponentUpdatesEnabled,
   &em::CloudPolicySettings::has_componentupdatesenabled,
   &em::CloudPolicySettings::componentupdatesenabled},
  {key::kCorsLegacyModeEnabled,
   &em::CloudPolicySettings::has_corslegacymodeenabled,
   &em::CloudPolicySettings::corslegacymodeenabled},
  {key::kDNSInterceptionChecksEnabled,
   &em::CloudPolicySettings::has_dnsinterceptionchecksenabled,
   &em::CloudPolicySettings::dnsinterceptionchecksenabled},
  {key::kDefaultBrowserSettingEnabled,
   &em::CloudPolicySettings::has_defaultbrowsersettingenabled,
   &em::CloudPolicySettings::defaultbrowsersettingenabled},
  {key::kDefaultSearchProviderContextMenuAccessAllowed,
   &em::CloudPolicySettings::has_defaultsearchprovidercontextmenuaccessallowed,
   &em::CloudPolicySettings::defaultsearchprovidercontextmenuaccessallowed},
  {key::kDefaultSearchProviderEnabled,
   &em::CloudPolicySettings::has_defaultsearchproviderenabled,
   &em::CloudPolicySettings::defaultsearchproviderenabled},
  {key::kDeveloperToolsDisabled,
   &em::CloudPolicySettings::has_developertoolsdisabled,
   &em::CloudPolicySettings::developertoolsdisabled},
  {key::kDisable3DAPIs,
   &em::CloudPolicySettings::has_disable3dapis,
   &em::CloudPolicySettings::disable3dapis},
  {key::kDisableAuthNegotiateCnameLookup,
   &em::CloudPolicySettings::has_disableauthnegotiatecnamelookup,
   &em::CloudPolicySettings::disableauthnegotiatecnamelookup},
  {key::kDisablePrintPreview,
   &em::CloudPolicySettings::has_disableprintpreview,
   &em::CloudPolicySettings::disableprintpreview},
  {key::kDisableSafeBrowsingProceedAnyway,
   &em::CloudPolicySettings::has_disablesafebrowsingproceedanyway,
   &em::CloudPolicySettings::disablesafebrowsingproceedanyway},
  {key::kDisableScreenshots,
   &em::CloudPolicySettings::has_disablescreenshots,
   &em::CloudPolicySettings::disablescreenshots},
  {key::kEditBookmarksEnabled,
   &em::CloudPolicySettings::has_editbookmarksenabled,
   &em::CloudPolicySettings::editbookmarksenabled},
  {key::kEnableAuthNegotiatePort,
   &em::CloudPolicySettings::has_enableauthnegotiateport,
   &em::CloudPolicySettings::enableauthnegotiateport},
  {key::kEnableMediaRouter,
   &em::CloudPolicySettings::has_enablemediarouter,
   &em::CloudPolicySettings::enablemediarouter},
  {key::kEnableOnlineRevocationChecks,
   &em::CloudPolicySettings::has_enableonlinerevocationchecks,
   &em::CloudPolicySettings::enableonlinerevocationchecks},
  {key::kEnterpriseHardwarePlatformAPIEnabled,
   &em::CloudPolicySettings::has_enterprisehardwareplatformapienabled,
   &em::CloudPolicySettings::enterprisehardwareplatformapienabled},
  {key::kExtensionInstallListsMergeEnabled,
   &em::CloudPolicySettings::has_extensioninstalllistsmergeenabled,
   &em::CloudPolicySettings::extensioninstalllistsmergeenabled},
  {key::kExternalProtocolDialogShowAlwaysOpenCheckbox,
   &em::CloudPolicySettings::has_externalprotocoldialogshowalwaysopencheckbox,
   &em::CloudPolicySettings::externalprotocoldialogshowalwaysopencheckbox},
  {key::kForceEphemeralProfiles,
   &em::CloudPolicySettings::has_forceephemeralprofiles,
   &em::CloudPolicySettings::forceephemeralprofiles},
  {key::kForceGoogleSafeSearch,
   &em::CloudPolicySettings::has_forcegooglesafesearch,
   &em::CloudPolicySettings::forcegooglesafesearch},
  {key::kForceLegacyDefaultReferrerPolicy,
   &em::CloudPolicySettings::has_forcelegacydefaultreferrerpolicy,
   &em::CloudPolicySettings::forcelegacydefaultreferrerpolicy},
  {key::kForceSafeSearch,
   &em::CloudPolicySettings::has_forcesafesearch,
   &em::CloudPolicySettings::forcesafesearch},
  {key::kForceYouTubeSafetyMode,
   &em::CloudPolicySettings::has_forceyoutubesafetymode,
   &em::CloudPolicySettings::forceyoutubesafetymode},
  {key::kFullscreenAllowed,
   &em::CloudPolicySettings::has_fullscreenallowed,
   &em::CloudPolicySettings::fullscreenallowed},
  {key::kGloballyScopeHTTPAuthCacheEnabled,
   &em::CloudPolicySettings::has_globallyscopehttpauthcacheenabled,
   &em::CloudPolicySettings::globallyscopehttpauthcacheenabled},
  {key::kHardwareAccelerationModeEnabled,
   &em::CloudPolicySettings::has_hardwareaccelerationmodeenabled,
   &em::CloudPolicySettings::hardwareaccelerationmodeenabled},
  {key::kHideWebStoreIcon,
   &em::CloudPolicySettings::has_hidewebstoreicon,
   &em::CloudPolicySettings::hidewebstoreicon},
  {key::kHomepageIsNewTabPage,
   &em::CloudPolicySettings::has_homepageisnewtabpage,
   &em::CloudPolicySettings::homepageisnewtabpage},
  {key::kImportAutofillFormData,
   &em::CloudPolicySettings::has_importautofillformdata,
   &em::CloudPolicySettings::importautofillformdata},
  {key::kImportBookmarks,
   &em::CloudPolicySettings::has_importbookmarks,
   &em::CloudPolicySettings::importbookmarks},
  {key::kImportHistory,
   &em::CloudPolicySettings::has_importhistory,
   &em::CloudPolicySettings::importhistory},
  {key::kImportHomepage,
   &em::CloudPolicySettings::has_importhomepage,
   &em::CloudPolicySettings::importhomepage},
  {key::kImportSavedPasswords,
   &em::CloudPolicySettings::has_importsavedpasswords,
   &em::CloudPolicySettings::importsavedpasswords},
  {key::kImportSearchEngine,
   &em::CloudPolicySettings::has_importsearchengine,
   &em::CloudPolicySettings::importsearchengine},
  {key::kIncognitoEnabled,
   &em::CloudPolicySettings::has_incognitoenabled,
   &em::CloudPolicySettings::incognitoenabled},
  {key::kIntensiveWakeUpThrottlingEnabled,
   &em::CloudPolicySettings::has_intensivewakeupthrottlingenabled,
   &em::CloudPolicySettings::intensivewakeupthrottlingenabled},
  {key::kJavascriptEnabled,
   &em::CloudPolicySettings::has_javascriptenabled,
   &em::CloudPolicySettings::javascriptenabled},
  {key::kLocalDiscoveryEnabled,
   &em::CloudPolicySettings::has_localdiscoveryenabled,
   &em::CloudPolicySettings::localdiscoveryenabled},
  {key::kMediaRouterCastAllowAllIPs,
   &em::CloudPolicySettings::has_mediaroutercastallowallips,
   &em::CloudPolicySettings::mediaroutercastallowallips},
  {key::kMetricsReportingEnabled,
   &em::CloudPolicySettings::has_metricsreportingenabled,
   &em::CloudPolicySettings::metricsreportingenabled},
  {key::kNTPCustomBackgroundEnabled,
   &em::CloudPolicySettings::has_ntpcustombackgroundenabled,
   &em::CloudPolicySettings::ntpcustombackgroundenabled},
  {key::kNativeMessagingUserLevelHosts,
   &em::CloudPolicySettings::has_nativemessaginguserlevelhosts,
   &em::CloudPolicySettings::nativemessaginguserlevelhosts},
  {key::kNtlmV2Enabled,
   &em::CloudPolicySettings::has_ntlmv2enabled,
   &em::CloudPolicySettings::ntlmv2enabled},
  {key::kPasswordLeakDetectionEnabled,
   &em::CloudPolicySettings::has_passwordleakdetectionenabled,
   &em::CloudPolicySettings::passwordleakdetectionenabled},
  {key::kPasswordManagerEnabled,
   &em::CloudPolicySettings::has_passwordmanagerenabled,
   &em::CloudPolicySettings::passwordmanagerenabled},
  {key::kPaymentMethodQueryEnabled,
   &em::CloudPolicySettings::has_paymentmethodqueryenabled,
   &em::CloudPolicySettings::paymentmethodqueryenabled},
  {key::kPolicyAtomicGroupsEnabled,
   &em::CloudPolicySettings::has_policyatomicgroupsenabled,
   &em::CloudPolicySettings::policyatomicgroupsenabled},
  {key::kPrintHeaderFooter,
   &em::CloudPolicySettings::has_printheaderfooter,
   &em::CloudPolicySettings::printheaderfooter},
  {key::kPrintPreviewUseSystemDefaultPrinter,
   &em::CloudPolicySettings::has_printpreviewusesystemdefaultprinter,
   &em::CloudPolicySettings::printpreviewusesystemdefaultprinter},
  {key::kPrintingEnabled,
   &em::CloudPolicySettings::has_printingenabled,
   &em::CloudPolicySettings::printingenabled},
  {key::kPromotionalTabsEnabled,
   &em::CloudPolicySettings::has_promotionaltabsenabled,
   &em::CloudPolicySettings::promotionaltabsenabled},
  {key::kPromptForDownloadLocation,
   &em::CloudPolicySettings::has_promptfordownloadlocation,
   &em::CloudPolicySettings::promptfordownloadlocation},
  {key::kQuicAllowed,
   &em::CloudPolicySettings::has_quicallowed,
   &em::CloudPolicySettings::quicallowed},
  {key::kRemoteAccessHostAllowClientPairing,
   &em::CloudPolicySettings::has_remoteaccesshostallowclientpairing,
   &em::CloudPolicySettings::remoteaccesshostallowclientpairing},
  {key::kRemoteAccessHostAllowFileTransfer,
   &em::CloudPolicySettings::has_remoteaccesshostallowfiletransfer,
   &em::CloudPolicySettings::remoteaccesshostallowfiletransfer},
  {key::kRemoteAccessHostAllowGnubbyAuth,
   &em::CloudPolicySettings::has_remoteaccesshostallowgnubbyauth,
   &em::CloudPolicySettings::remoteaccesshostallowgnubbyauth},
  {key::kRemoteAccessHostAllowRelayedConnection,
   &em::CloudPolicySettings::has_remoteaccesshostallowrelayedconnection,
   &em::CloudPolicySettings::remoteaccesshostallowrelayedconnection},
  {key::kRemoteAccessHostFirewallTraversal,
   &em::CloudPolicySettings::has_remoteaccesshostfirewalltraversal,
   &em::CloudPolicySettings::remoteaccesshostfirewalltraversal},
  {key::kRemoteAccessHostMatchUsername,
   &em::CloudPolicySettings::has_remoteaccesshostmatchusername,
   &em::CloudPolicySettings::remoteaccesshostmatchusername},
  {key::kRemoteAccessHostRequireCurtain,
   &em::CloudPolicySettings::has_remoteaccesshostrequirecurtain,
   &em::CloudPolicySettings::remoteaccesshostrequirecurtain},
  {key::kReportExtensionsAndPluginsData,
   &em::CloudPolicySettings::has_reportextensionsandpluginsdata,
   &em::CloudPolicySettings::reportextensionsandpluginsdata},
  {key::kReportMachineIDData,
   &em::CloudPolicySettings::has_reportmachineiddata,
   &em::CloudPolicySettings::reportmachineiddata},
  {key::kReportPolicyData,
   &em::CloudPolicySettings::has_reportpolicydata,
   &em::CloudPolicySettings::reportpolicydata},
  {key::kReportUserIDData,
   &em::CloudPolicySettings::has_reportuseriddata,
   &em::CloudPolicySettings::reportuseriddata},
  {key::kReportVersionData,
   &em::CloudPolicySettings::has_reportversiondata,
   &em::CloudPolicySettings::reportversiondata},
  {key::kRequireOnlineRevocationChecksForLocalAnchors,
   &em::CloudPolicySettings::has_requireonlinerevocationchecksforlocalanchors,
   &em::CloudPolicySettings::requireonlinerevocationchecksforlocalanchors},
  {key::kRunAllFlashInAllowMode,
   &em::CloudPolicySettings::has_runallflashinallowmode,
   &em::CloudPolicySettings::runallflashinallowmode},
  {key::kSSLErrorOverrideAllowed,
   &em::CloudPolicySettings::has_sslerroroverrideallowed,
   &em::CloudPolicySettings::sslerroroverrideallowed},
  {key::kSafeBrowsingEnabled,
   &em::CloudPolicySettings::has_safebrowsingenabled,
   &em::CloudPolicySettings::safebrowsingenabled},
  {key::kSafeBrowsingExtendedReportingEnabled,
   &em::CloudPolicySettings::has_safebrowsingextendedreportingenabled,
   &em::CloudPolicySettings::safebrowsingextendedreportingenabled},
  {key::kSavingBrowserHistoryDisabled,
   &em::CloudPolicySettings::has_savingbrowserhistorydisabled,
   &em::CloudPolicySettings::savingbrowserhistorydisabled},
  {key::kScreenCaptureAllowed,
   &em::CloudPolicySettings::has_screencaptureallowed,
   &em::CloudPolicySettings::screencaptureallowed},
  {key::kScrollToTextFragmentEnabled,
   &em::CloudPolicySettings::has_scrolltotextfragmentenabled,
   &em::CloudPolicySettings::scrolltotextfragmentenabled},
  {key::kSearchSuggestEnabled,
   &em::CloudPolicySettings::has_searchsuggestenabled,
   &em::CloudPolicySettings::searchsuggestenabled},
  {key::kSharedClipboardEnabled,
   &em::CloudPolicySettings::has_sharedclipboardenabled,
   &em::CloudPolicySettings::sharedclipboardenabled},
  {key::kShowAppsShortcutInBookmarkBar,
   &em::CloudPolicySettings::has_showappsshortcutinbookmarkbar,
   &em::CloudPolicySettings::showappsshortcutinbookmarkbar},
  {key::kShowCastIconInToolbar,
   &em::CloudPolicySettings::has_showcasticonintoolbar,
   &em::CloudPolicySettings::showcasticonintoolbar},
  {key::kShowHomeButton,
   &em::CloudPolicySettings::has_showhomebutton,
   &em::CloudPolicySettings::showhomebutton},
  {key::kSignedHTTPExchangeEnabled,
   &em::CloudPolicySettings::has_signedhttpexchangeenabled,
   &em::CloudPolicySettings::signedhttpexchangeenabled},
  {key::kSigninAllowed,
   &em::CloudPolicySettings::has_signinallowed,
   &em::CloudPolicySettings::signinallowed},
  {key::kSitePerProcess,
   &em::CloudPolicySettings::has_siteperprocess,
   &em::CloudPolicySettings::siteperprocess},
  {key::kSpellCheckServiceEnabled,
   &em::CloudPolicySettings::has_spellcheckserviceenabled,
   &em::CloudPolicySettings::spellcheckserviceenabled},
  {key::kSpellcheckEnabled,
   &em::CloudPolicySettings::has_spellcheckenabled,
   &em::CloudPolicySettings::spellcheckenabled},
  {key::kStricterMixedContentTreatmentEnabled,
   &em::CloudPolicySettings::has_strictermixedcontenttreatmentenabled,
   &em::CloudPolicySettings::strictermixedcontenttreatmentenabled},
  {key::kSuppressUnsupportedOSWarning,
   &em::CloudPolicySettings::has_suppressunsupportedoswarning,
   &em::CloudPolicySettings::suppressunsupportedoswarning},
  {key::kSyncDisabled,
   &em::CloudPolicySettings::has_syncdisabled,
   &em::CloudPolicySettings::syncdisabled},
  {key::kTLS13HardeningForLocalAnchorsEnabled,
   &em::CloudPolicySettings::has_tls13hardeningforlocalanchorsenabled,
   &em::CloudPolicySettings::tls13hardeningforlocalanchorsenabled},
  {key::kTaskManagerEndProcessEnabled,
   &em::CloudPolicySettings::has_taskmanagerendprocessenabled,
   &em::CloudPolicySettings::taskmanagerendprocessenabled},
  {key::kTranslateEnabled,
   &em::CloudPolicySettings::has_translateenabled,
   &em::CloudPolicySettings::translateenabled},
  {key::kUnsafeEventsReportingEnabled,
   &em::CloudPolicySettings::has_unsafeeventsreportingenabled,
   &em::CloudPolicySettings::unsafeeventsreportingenabled},
  {key::kUrlKeyedAnonymizedDataCollectionEnabled,
   &em::CloudPolicySettings::has_urlkeyedanonymizeddatacollectionenabled,
   &em::CloudPolicySettings::urlkeyedanonymizeddatacollectionenabled},
  {key::kUserFeedbackAllowed,
   &em::CloudPolicySettings::has_userfeedbackallowed,
   &em::CloudPolicySettings::userfeedbackallowed},
  {key::kVideoCaptureAllowed,
   &em::CloudPolicySettings::has_videocaptureallowed,
   &em::CloudPolicySettings::videocaptureallowed},
  {key::kWPADQuickCheckEnabled,
   &em::CloudPolicySettings::has_wpadquickcheckenabled,
   &em::CloudPolicySettings::wpadquickcheckenabled},
  {key::kWebRtcEventLogCollectionAllowed,
   &em::CloudPolicySettings::has_webrtceventlogcollectionallowed,
   &em::CloudPolicySettings::webrtceventlogcollectionallowed},
  {nullptr, nullptr, nullptr},
};

const StringPolicyAccess kStringPolicyAccess[] = {
  {key::kAllowedDomainsForApps,
   &em::CloudPolicySettings::has_alloweddomainsforapps,
   &em::CloudPolicySettings::alloweddomainsforapps,
   StringPolicyType::STRING},
  {key::kAlternativeBrowserPath,
   &em::CloudPolicySettings::has_alternativebrowserpath,
   &em::CloudPolicySettings::alternativebrowserpath,
   StringPolicyType::STRING},
  {key::kAuthNegotiateDelegateWhitelist,
   &em::CloudPolicySettings::has_authnegotiatedelegatewhitelist,
   &em::CloudPolicySettings::authnegotiatedelegatewhitelist,
   StringPolicyType::STRING},
  {key::kAuthSchemes,
   &em::CloudPolicySettings::has_authschemes,
   &em::CloudPolicySettings::authschemes,
   StringPolicyType::STRING},
  {key::kAuthServerWhitelist,
   &em::CloudPolicySettings::has_authserverwhitelist,
   &em::CloudPolicySettings::authserverwhitelist,
   StringPolicyType::STRING},
  {key::kAutoLaunchProtocolsFromOrigins,
   &em::CloudPolicySettings::has_autolaunchprotocolsfromorigins,
   &em::CloudPolicySettings::autolaunchprotocolsfromorigins,
   StringPolicyType::JSON},
  {key::kBrowserSwitcherExternalGreylistUrl,
   &em::CloudPolicySettings::has_browserswitcherexternalgreylisturl,
   &em::CloudPolicySettings::browserswitcherexternalgreylisturl,
   StringPolicyType::STRING},
  {key::kBrowserSwitcherExternalSitelistUrl,
   &em::CloudPolicySettings::has_browserswitcherexternalsitelisturl,
   &em::CloudPolicySettings::browserswitcherexternalsitelisturl,
   StringPolicyType::STRING},
  {key::kCloudManagementEnrollmentToken,
   &em::CloudPolicySettings::has_cloudmanagementenrollmenttoken,
   &em::CloudPolicySettings::cloudmanagementenrollmenttoken,
   StringPolicyType::STRING},
  {key::kContentPackManualBehaviorHosts,
   &em::CloudPolicySettings::has_contentpackmanualbehaviorhosts,
   &em::CloudPolicySettings::contentpackmanualbehaviorhosts,
   StringPolicyType::JSON},
  {key::kContentPackManualBehaviorURLs,
   &em::CloudPolicySettings::has_contentpackmanualbehaviorurls,
   &em::CloudPolicySettings::contentpackmanualbehaviorurls,
   StringPolicyType::JSON},
  {key::kDefaultDownloadDirectory,
   &em::CloudPolicySettings::has_defaultdownloaddirectory,
   &em::CloudPolicySettings::defaultdownloaddirectory,
   StringPolicyType::STRING},
  {key::kDefaultPrinterSelection,
   &em::CloudPolicySettings::has_defaultprinterselection,
   &em::CloudPolicySettings::defaultprinterselection,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderIconURL,
   &em::CloudPolicySettings::has_defaultsearchprovidericonurl,
   &em::CloudPolicySettings::defaultsearchprovidericonurl,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderImageURL,
   &em::CloudPolicySettings::has_defaultsearchproviderimageurl,
   &em::CloudPolicySettings::defaultsearchproviderimageurl,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderImageURLPostParams,
   &em::CloudPolicySettings::has_defaultsearchproviderimageurlpostparams,
   &em::CloudPolicySettings::defaultsearchproviderimageurlpostparams,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderKeyword,
   &em::CloudPolicySettings::has_defaultsearchproviderkeyword,
   &em::CloudPolicySettings::defaultsearchproviderkeyword,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderName,
   &em::CloudPolicySettings::has_defaultsearchprovidername,
   &em::CloudPolicySettings::defaultsearchprovidername,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderNewTabURL,
   &em::CloudPolicySettings::has_defaultsearchprovidernewtaburl,
   &em::CloudPolicySettings::defaultsearchprovidernewtaburl,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderSearchURL,
   &em::CloudPolicySettings::has_defaultsearchprovidersearchurl,
   &em::CloudPolicySettings::defaultsearchprovidersearchurl,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderSearchURLPostParams,
   &em::CloudPolicySettings::has_defaultsearchprovidersearchurlpostparams,
   &em::CloudPolicySettings::defaultsearchprovidersearchurlpostparams,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderSuggestURL,
   &em::CloudPolicySettings::has_defaultsearchprovidersuggesturl,
   &em::CloudPolicySettings::defaultsearchprovidersuggesturl,
   StringPolicyType::STRING},
  {key::kDefaultSearchProviderSuggestURLPostParams,
   &em::CloudPolicySettings::has_defaultsearchprovidersuggesturlpostparams,
   &em::CloudPolicySettings::defaultsearchprovidersuggesturlpostparams,
   StringPolicyType::STRING},
  {key::kDiskCacheDir,
   &em::CloudPolicySettings::has_diskcachedir,
   &em::CloudPolicySettings::diskcachedir,
   StringPolicyType::STRING},
  {key::kDnsOverHttpsMode,
   &em::CloudPolicySettings::has_dnsoverhttpsmode,
   &em::CloudPolicySettings::dnsoverhttpsmode,
   StringPolicyType::STRING},
  {key::kDnsOverHttpsTemplates,
   &em::CloudPolicySettings::has_dnsoverhttpstemplates,
   &em::CloudPolicySettings::dnsoverhttpstemplates,
   StringPolicyType::STRING},
  {key::kDownloadDirectory,
   &em::CloudPolicySettings::has_downloaddirectory,
   &em::CloudPolicySettings::downloaddirectory,
   StringPolicyType::STRING},
  {key::kExtensionSettings,
   &em::CloudPolicySettings::has_extensionsettings,
   &em::CloudPolicySettings::extensionsettings,
   StringPolicyType::JSON},
  {key::kGSSAPILibraryName,
   &em::CloudPolicySettings::has_gssapilibraryname,
   &em::CloudPolicySettings::gssapilibraryname,
   StringPolicyType::STRING},
  {key::kHomepageLocation,
   &em::CloudPolicySettings::has_homepagelocation,
   &em::CloudPolicySettings::homepagelocation,
   StringPolicyType::STRING},
  {key::kIsolateOrigins,
   &em::CloudPolicySettings::has_isolateorigins,
   &em::CloudPolicySettings::isolateorigins,
   StringPolicyType::STRING},
  {key::kManagedBookmarks,
   &em::CloudPolicySettings::has_managedbookmarks,
   &em::CloudPolicySettings::managedbookmarks,
   StringPolicyType::JSON},
  {key::kNewTabPageLocation,
   &em::CloudPolicySettings::has_newtabpagelocation,
   &em::CloudPolicySettings::newtabpagelocation,
   StringPolicyType::STRING},
  {key::kOnBulkDataEntryEnterpriseConnector,
   &em::CloudPolicySettings::has_onbulkdataentryenterpriseconnector,
   &em::CloudPolicySettings::onbulkdataentryenterpriseconnector,
   StringPolicyType::JSON},
  {key::kOnFileAttachedEnterpriseConnector,
   &em::CloudPolicySettings::has_onfileattachedenterpriseconnector,
   &em::CloudPolicySettings::onfileattachedenterpriseconnector,
   StringPolicyType::JSON},
  {key::kOnFileDownloadedEnterpriseConnector,
   &em::CloudPolicySettings::has_onfiledownloadedenterpriseconnector,
   &em::CloudPolicySettings::onfiledownloadedenterpriseconnector,
   StringPolicyType::JSON},
  {key::kOnSecurityEventEnterpriseConnector,
   &em::CloudPolicySettings::has_onsecurityevententerpriseconnector,
   &em::CloudPolicySettings::onsecurityevententerpriseconnector,
   StringPolicyType::JSON},
  {key::kPasswordProtectionChangePasswordURL,
   &em::CloudPolicySettings::has_passwordprotectionchangepasswordurl,
   &em::CloudPolicySettings::passwordprotectionchangepasswordurl,
   StringPolicyType::STRING},
  {key::kPrintingAllowedBackgroundGraphicsModes,
   &em::CloudPolicySettings::has_printingallowedbackgroundgraphicsmodes,
   &em::CloudPolicySettings::printingallowedbackgroundgraphicsmodes,
   StringPolicyType::STRING},
  {key::kPrintingBackgroundGraphicsDefault,
   &em::CloudPolicySettings::has_printingbackgroundgraphicsdefault,
   &em::CloudPolicySettings::printingbackgroundgraphicsdefault,
   StringPolicyType::STRING},
  {key::kPrintingPaperSizeDefault,
   &em::CloudPolicySettings::has_printingpapersizedefault,
   &em::CloudPolicySettings::printingpapersizedefault,
   StringPolicyType::JSON},
  {key::kProxyBypassList,
   &em::CloudPolicySettings::has_proxybypasslist,
   &em::CloudPolicySettings::proxybypasslist,
   StringPolicyType::STRING},
  {key::kProxyMode,
   &em::CloudPolicySettings::has_proxymode,
   &em::CloudPolicySettings::proxymode,
   StringPolicyType::STRING},
  {key::kProxyPacUrl,
   &em::CloudPolicySettings::has_proxypacurl,
   &em::CloudPolicySettings::proxypacurl,
   StringPolicyType::STRING},
  {key::kProxyServer,
   &em::CloudPolicySettings::has_proxyserver,
   &em::CloudPolicySettings::proxyserver,
   StringPolicyType::STRING},
  {key::kProxySettings,
   &em::CloudPolicySettings::has_proxysettings,
   &em::CloudPolicySettings::proxysettings,
   StringPolicyType::JSON},
  {key::kRegisteredProtocolHandlers,
   &em::CloudPolicySettings::has_registeredprotocolhandlers,
   &em::CloudPolicySettings::registeredprotocolhandlers,
   StringPolicyType::JSON},
  {key::kRemoteAccessHostClientDomain,
   &em::CloudPolicySettings::has_remoteaccesshostclientdomain,
   &em::CloudPolicySettings::remoteaccesshostclientdomain,
   StringPolicyType::STRING},
  {key::kRemoteAccessHostDomain,
   &em::CloudPolicySettings::has_remoteaccesshostdomain,
   &em::CloudPolicySettings::remoteaccesshostdomain,
   StringPolicyType::STRING},
  {key::kRemoteAccessHostTokenUrl,
   &em::CloudPolicySettings::has_remoteaccesshosttokenurl,
   &em::CloudPolicySettings::remoteaccesshosttokenurl,
   StringPolicyType::STRING},
  {key::kRemoteAccessHostTokenValidationCertificateIssuer,
   &em::CloudPolicySettings::has_remoteaccesshosttokenvalidationcertificateissuer,
   &em::CloudPolicySettings::remoteaccesshosttokenvalidationcertificateissuer,
   StringPolicyType::STRING},
  {key::kRemoteAccessHostTokenValidationUrl,
   &em::CloudPolicySettings::has_remoteaccesshosttokenvalidationurl,
   &em::CloudPolicySettings::remoteaccesshosttokenvalidationurl,
   StringPolicyType::STRING},
  {key::kRemoteAccessHostUdpPortRange,
   &em::CloudPolicySettings::has_remoteaccesshostudpportrange,
   &em::CloudPolicySettings::remoteaccesshostudpportrange,
   StringPolicyType::STRING},
  {key::kRestrictSigninToPattern,
   &em::CloudPolicySettings::has_restrictsignintopattern,
   &em::CloudPolicySettings::restrictsignintopattern,
   StringPolicyType::STRING},
  {key::kSSLVersionMin,
   &em::CloudPolicySettings::has_sslversionmin,
   &em::CloudPolicySettings::sslversionmin,
   StringPolicyType::STRING},
  {key::kVariationsRestrictParameter,
   &em::CloudPolicySettings::has_variationsrestrictparameter,
   &em::CloudPolicySettings::variationsrestrictparameter,
   StringPolicyType::STRING},
  {key::kWebAppInstallForceList,
   &em::CloudPolicySettings::has_webappinstallforcelist,
   &em::CloudPolicySettings::webappinstallforcelist,
   StringPolicyType::JSON},
  {key::kWebRtcUdpPortRange,
   &em::CloudPolicySettings::has_webrtcudpportrange,
   &em::CloudPolicySettings::webrtcudpportrange,
   StringPolicyType::STRING},
  {key::kWebUsbAllowDevicesForUrls,
   &em::CloudPolicySettings::has_webusballowdevicesforurls,
   &em::CloudPolicySettings::webusballowdevicesforurls,
   StringPolicyType::JSON},
  {nullptr, nullptr, nullptr},
};

const StringListPolicyAccess kStringListPolicyAccess[] = {
  {key::kAlternativeBrowserParameters,
   &em::CloudPolicySettings::has_alternativebrowserparameters,
   &em::CloudPolicySettings::alternativebrowserparameters},
  {key::kAudioCaptureAllowedUrls,
   &em::CloudPolicySettings::has_audiocaptureallowedurls,
   &em::CloudPolicySettings::audiocaptureallowedurls},
  {key::kAutoOpenAllowedForURLs,
   &em::CloudPolicySettings::has_autoopenallowedforurls,
   &em::CloudPolicySettings::autoopenallowedforurls},
  {key::kAutoOpenFileTypes,
   &em::CloudPolicySettings::has_autoopenfiletypes,
   &em::CloudPolicySettings::autoopenfiletypes},
  {key::kAutoSelectCertificateForUrls,
   &em::CloudPolicySettings::has_autoselectcertificateforurls,
   &em::CloudPolicySettings::autoselectcertificateforurls},
  {key::kAutoplayWhitelist,
   &em::CloudPolicySettings::has_autoplaywhitelist,
   &em::CloudPolicySettings::autoplaywhitelist},
  {key::kBrowserSwitcherUrlGreylist,
   &em::CloudPolicySettings::has_browserswitcherurlgreylist,
   &em::CloudPolicySettings::browserswitcherurlgreylist},
  {key::kBrowserSwitcherUrlList,
   &em::CloudPolicySettings::has_browserswitcherurllist,
   &em::CloudPolicySettings::browserswitcherurllist},
  {key::kCertificateTransparencyEnforcementDisabledForCas,
   &em::CloudPolicySettings::has_certificatetransparencyenforcementdisabledforcas,
   &em::CloudPolicySettings::certificatetransparencyenforcementdisabledforcas},
  {key::kCertificateTransparencyEnforcementDisabledForLegacyCas,
   &em::CloudPolicySettings::has_certificatetransparencyenforcementdisabledforlegacycas,
   &em::CloudPolicySettings::certificatetransparencyenforcementdisabledforlegacycas},
  {key::kCertificateTransparencyEnforcementDisabledForUrls,
   &em::CloudPolicySettings::has_certificatetransparencyenforcementdisabledforurls,
   &em::CloudPolicySettings::certificatetransparencyenforcementdisabledforurls},
  {key::kCoalesceH2ConnectionsWithClientCertificatesForHosts,
   &em::CloudPolicySettings::has_coalesceh2connectionswithclientcertificatesforhosts,
   &em::CloudPolicySettings::coalesceh2connectionswithclientcertificatesforhosts},
  {key::kCookiesAllowedForUrls,
   &em::CloudPolicySettings::has_cookiesallowedforurls,
   &em::CloudPolicySettings::cookiesallowedforurls},
  {key::kCookiesBlockedForUrls,
   &em::CloudPolicySettings::has_cookiesblockedforurls,
   &em::CloudPolicySettings::cookiesblockedforurls},
  {key::kCookiesSessionOnlyForUrls,
   &em::CloudPolicySettings::has_cookiessessiononlyforurls,
   &em::CloudPolicySettings::cookiessessiononlyforurls},
  {key::kCorsMitigationList,
   &em::CloudPolicySettings::has_corsmitigationlist,
   &em::CloudPolicySettings::corsmitigationlist},
  {key::kDefaultSearchProviderAlternateURLs,
   &em::CloudPolicySettings::has_defaultsearchprovideralternateurls,
   &em::CloudPolicySettings::defaultsearchprovideralternateurls},
  {key::kDefaultSearchProviderEncodings,
   &em::CloudPolicySettings::has_defaultsearchproviderencodings,
   &em::CloudPolicySettings::defaultsearchproviderencodings},
  {key::kDisabledPlugins,
   &em::CloudPolicySettings::has_disabledplugins,
   &em::CloudPolicySettings::disabledplugins},
  {key::kDisabledPluginsExceptions,
   &em::CloudPolicySettings::has_disabledpluginsexceptions,
   &em::CloudPolicySettings::disabledpluginsexceptions},
  {key::kDisabledSchemes,
   &em::CloudPolicySettings::has_disabledschemes,
   &em::CloudPolicySettings::disabledschemes},
  {key::kEnableDeprecatedWebPlatformFeatures,
   &em::CloudPolicySettings::has_enabledeprecatedwebplatformfeatures,
   &em::CloudPolicySettings::enabledeprecatedwebplatformfeatures},
  {key::kEnableExperimentalPolicies,
   &em::CloudPolicySettings::has_enableexperimentalpolicies,
   &em::CloudPolicySettings::enableexperimentalpolicies},
  {key::kEnabledPlugins,
   &em::CloudPolicySettings::has_enabledplugins,
   &em::CloudPolicySettings::enabledplugins},
  {key::kExtensionAllowedTypes,
   &em::CloudPolicySettings::has_extensionallowedtypes,
   &em::CloudPolicySettings::extensionallowedtypes},
  {key::kExtensionInstallBlacklist,
   &em::CloudPolicySettings::has_extensioninstallblacklist,
   &em::CloudPolicySettings::extensioninstallblacklist},
  {key::kExtensionInstallForcelist,
   &em::CloudPolicySettings::has_extensioninstallforcelist,
   &em::CloudPolicySettings::extensioninstallforcelist},
  {key::kExtensionInstallSources,
   &em::CloudPolicySettings::has_extensioninstallsources,
   &em::CloudPolicySettings::extensioninstallsources},
  {key::kExtensionInstallWhitelist,
   &em::CloudPolicySettings::has_extensioninstallwhitelist,
   &em::CloudPolicySettings::extensioninstallwhitelist},
  {key::kHSTSPolicyBypassList,
   &em::CloudPolicySettings::has_hstspolicybypasslist,
   &em::CloudPolicySettings::hstspolicybypasslist},
  {key::kImagesAllowedForUrls,
   &em::CloudPolicySettings::has_imagesallowedforurls,
   &em::CloudPolicySettings::imagesallowedforurls},
  {key::kImagesBlockedForUrls,
   &em::CloudPolicySettings::has_imagesblockedforurls,
   &em::CloudPolicySettings::imagesblockedforurls},
  {key::kInsecureContentAllowedForUrls,
   &em::CloudPolicySettings::has_insecurecontentallowedforurls,
   &em::CloudPolicySettings::insecurecontentallowedforurls},
  {key::kInsecureContentBlockedForUrls,
   &em::CloudPolicySettings::has_insecurecontentblockedforurls,
   &em::CloudPolicySettings::insecurecontentblockedforurls},
  {key::kJavaScriptAllowedForUrls,
   &em::CloudPolicySettings::has_javascriptallowedforurls,
   &em::CloudPolicySettings::javascriptallowedforurls},
  {key::kJavaScriptBlockedForUrls,
   &em::CloudPolicySettings::has_javascriptblockedforurls,
   &em::CloudPolicySettings::javascriptblockedforurls},
  {key::kLegacySameSiteCookieBehaviorEnabledForDomainList,
   &em::CloudPolicySettings::has_legacysamesitecookiebehaviorenabledfordomainlist,
   &em::CloudPolicySettings::legacysamesitecookiebehaviorenabledfordomainlist},
  {key::kNativeMessagingBlacklist,
   &em::CloudPolicySettings::has_nativemessagingblacklist,
   &em::CloudPolicySettings::nativemessagingblacklist},
  {key::kNativeMessagingWhitelist,
   &em::CloudPolicySettings::has_nativemessagingwhitelist,
   &em::CloudPolicySettings::nativemessagingwhitelist},
  {key::kNotificationsAllowedForUrls,
   &em::CloudPolicySettings::has_notificationsallowedforurls,
   &em::CloudPolicySettings::notificationsallowedforurls},
  {key::kNotificationsBlockedForUrls,
   &em::CloudPolicySettings::has_notificationsblockedforurls,
   &em::CloudPolicySettings::notificationsblockedforurls},
  {key::kOverrideSecurityRestrictionsOnInsecureOrigin,
   &em::CloudPolicySettings::has_overridesecurityrestrictionsoninsecureorigin,
   &em::CloudPolicySettings::overridesecurityrestrictionsoninsecureorigin},
  {key::kPasswordProtectionLoginURLs,
   &em::CloudPolicySettings::has_passwordprotectionloginurls,
   &em::CloudPolicySettings::passwordprotectionloginurls},
  {key::kPluginsAllowedForUrls,
   &em::CloudPolicySettings::has_pluginsallowedforurls,
   &em::CloudPolicySettings::pluginsallowedforurls},
  {key::kPluginsBlockedForUrls,
   &em::CloudPolicySettings::has_pluginsblockedforurls,
   &em::CloudPolicySettings::pluginsblockedforurls},
  {key::kPolicyDictionaryMultipleSourceMergeList,
   &em::CloudPolicySettings::has_policydictionarymultiplesourcemergelist,
   &em::CloudPolicySettings::policydictionarymultiplesourcemergelist},
  {key::kPolicyListMultipleSourceMergeList,
   &em::CloudPolicySettings::has_policylistmultiplesourcemergelist,
   &em::CloudPolicySettings::policylistmultiplesourcemergelist},
  {key::kPopupsAllowedForUrls,
   &em::CloudPolicySettings::has_popupsallowedforurls,
   &em::CloudPolicySettings::popupsallowedforurls},
  {key::kPopupsBlockedForUrls,
   &em::CloudPolicySettings::has_popupsblockedforurls,
   &em::CloudPolicySettings::popupsblockedforurls},
  {key::kPrinterTypeDenyList,
   &em::CloudPolicySettings::has_printertypedenylist,
   &em::CloudPolicySettings::printertypedenylist},
  {key::kRemoteAccessHostClientDomainList,
   &em::CloudPolicySettings::has_remoteaccesshostclientdomainlist,
   &em::CloudPolicySettings::remoteaccesshostclientdomainlist},
  {key::kRemoteAccessHostDomainList,
   &em::CloudPolicySettings::has_remoteaccesshostdomainlist,
   &em::CloudPolicySettings::remoteaccesshostdomainlist},
  {key::kRestoreOnStartupURLs,
   &em::CloudPolicySettings::has_restoreonstartupurls,
   &em::CloudPolicySettings::restoreonstartupurls},
  {key::kSafeBrowsingWhitelistDomains,
   &em::CloudPolicySettings::has_safebrowsingwhitelistdomains,
   &em::CloudPolicySettings::safebrowsingwhitelistdomains},
  {key::kSecurityKeyPermitAttestation,
   &em::CloudPolicySettings::has_securitykeypermitattestation,
   &em::CloudPolicySettings::securitykeypermitattestation},
  {key::kSpellcheckLanguage,
   &em::CloudPolicySettings::has_spellchecklanguage,
   &em::CloudPolicySettings::spellchecklanguage},
  {key::kSpellcheckLanguageBlacklist,
   &em::CloudPolicySettings::has_spellchecklanguageblacklist,
   &em::CloudPolicySettings::spellchecklanguageblacklist},
  {key::kSyncTypesListDisabled,
   &em::CloudPolicySettings::has_synctypeslistdisabled,
   &em::CloudPolicySettings::synctypeslistdisabled},
  {key::kURLBlacklist,
   &em::CloudPolicySettings::has_urlblacklist,
   &em::CloudPolicySettings::urlblacklist},
  {key::kURLWhitelist,
   &em::CloudPolicySettings::has_urlwhitelist,
   &em::CloudPolicySettings::urlwhitelist},
  {key::kURLsToCheckComplianceOfDownloadedContent,
   &em::CloudPolicySettings::has_urlstocheckcomplianceofdownloadedcontent,
   &em::CloudPolicySettings::urlstocheckcomplianceofdownloadedcontent},
  {key::kURLsToCheckForMalwareOfUploadedContent,
   &em::CloudPolicySettings::has_urlstocheckformalwareofuploadedcontent,
   &em::CloudPolicySettings::urlstocheckformalwareofuploadedcontent},
  {key::kURLsToNotCheckComplianceOfUploadedContent,
   &em::CloudPolicySettings::has_urlstonotcheckcomplianceofuploadedcontent,
   &em::CloudPolicySettings::urlstonotcheckcomplianceofuploadedcontent},
  {key::kURLsToNotCheckForMalwareOfDownloadedContent,
   &em::CloudPolicySettings::has_urlstonotcheckformalwareofdownloadedcontent,
   &em::CloudPolicySettings::urlstonotcheckformalwareofdownloadedcontent},
  {key::kUnsafelyTreatInsecureOriginAsSecure,
   &em::CloudPolicySettings::has_unsafelytreatinsecureoriginassecure,
   &em::CloudPolicySettings::unsafelytreatinsecureoriginassecure},
  {key::kVideoCaptureAllowedUrls,
   &em::CloudPolicySettings::has_videocaptureallowedurls,
   &em::CloudPolicySettings::videocaptureallowedurls},
  {key::kWebRtcLocalIpsAllowedUrls,
   &em::CloudPolicySettings::has_webrtclocalipsallowedurls,
   &em::CloudPolicySettings::webrtclocalipsallowedurls},
  {key::kWebUsbAskForUrls,
   &em::CloudPolicySettings::has_webusbaskforurls,
   &em::CloudPolicySettings::webusbaskforurls},
  {key::kWebUsbBlockedForUrls,
   &em::CloudPolicySettings::has_webusbblockedforurls,
   &em::CloudPolicySettings::webusbblockedforurls},
  {nullptr, nullptr, nullptr},
};


}  // namespace policy
