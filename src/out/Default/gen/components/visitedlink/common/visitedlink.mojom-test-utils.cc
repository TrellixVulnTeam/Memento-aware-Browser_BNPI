// components/visitedlink/common/visitedlink.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif


#include "components/visitedlink/common/visitedlink.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"
#include "mojo/public/mojom/base/shared_memory.mojom.h"


#ifndef COMPONENTS_VISITEDLINK_COMMON_VISITEDLINK_MOJOM_JUMBO_H_
#define COMPONENTS_VISITEDLINK_COMMON_VISITEDLINK_MOJOM_JUMBO_H_
#endif


namespace visitedlink {
namespace mojom {


void VisitedLinkNotificationSinkInterceptorForTesting::UpdateVisitedLinks(::base::ReadOnlySharedMemoryRegion table_region) {
  GetForwardingInterface()->UpdateVisitedLinks(std::move(table_region));
}
void VisitedLinkNotificationSinkInterceptorForTesting::AddVisitedLinks(const std::vector<uint64_t>& link_hashes) {
  GetForwardingInterface()->AddVisitedLinks(std::move(link_hashes));
}
void VisitedLinkNotificationSinkInterceptorForTesting::ResetVisitedLinks(bool invalidate_cached_hashes) {
  GetForwardingInterface()->ResetVisitedLinks(std::move(invalidate_cached_hashes));
}
VisitedLinkNotificationSinkAsyncWaiter::VisitedLinkNotificationSinkAsyncWaiter(
    VisitedLinkNotificationSink* proxy) : proxy_(proxy) {}

VisitedLinkNotificationSinkAsyncWaiter::~VisitedLinkNotificationSinkAsyncWaiter() = default;






}  // namespace mojom
}  // namespace visitedlink

#if defined(__clang__)
#pragma clang diagnostic pop
#endif