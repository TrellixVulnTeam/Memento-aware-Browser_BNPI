// device/bluetooth/public/mojom/adapter.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('bluetooth.mojom.DeviceInfo');




goog.provide('bluetooth.mojom.ConnectResult');
goog.provide('bluetooth.mojom.ConnectResultSpec');
/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
bluetooth.mojom.ConnectResultSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
bluetooth.mojom.ConnectResult = {
  
  SUCCESS: 0,
  AUTH_CANCELED: 1,
  AUTH_FAILED: 2,
  AUTH_REJECTED: 3,
  AUTH_TIMEOUT: 4,
  FAILED: 5,
  INPROGRESS: 6,
  UNKNOWN: 7,
  UNSUPPORTED_DEVICE: 8,
  DEVICE_NO_LONGER_IN_RANGE: 9,
  MIN_VALUE: 0,
  MAX_VALUE: 9,
};



goog.provide('bluetooth.mojom.DiscoverySession');
goog.provide('bluetooth.mojom.DiscoverySessionReceiver');
goog.provide('bluetooth.mojom.DiscoverySessionCallbackRouter');
goog.provide('bluetooth.mojom.DiscoverySessionInterface');
goog.provide('bluetooth.mojom.DiscoverySessionRemote');
goog.provide('bluetooth.mojom.DiscoverySessionPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
bluetooth.mojom.DiscoverySessionPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};

/** @interface */
bluetooth.mojom.DiscoverySessionInterface = class {
  
  /**
   * @return {Promise<{
        active: !boolean,
   *  }>}
   */

  isActive() {}
  
  /**
   * @return {Promise<{
        success: !boolean,
   *  }>}
   */

  stop() {}
};

/**
 * @export
 * @implements { bluetooth.mojom.DiscoverySessionInterface }
 */
bluetooth.mojom.DiscoverySessionRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!bluetooth.mojom.DiscoverySessionPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          bluetooth.mojom.DiscoverySessionPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!bluetooth.mojom.DiscoverySessionPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @return {Promise<{
        active: !boolean,
   *  }>}
   */

  isActive() {
    return this.proxy.sendMessage(
        1967102996,
        bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {Promise<{
        success: !boolean,
   *  }>}
   */

  stop() {
    return this.proxy.sendMessage(
        1376399581,
        bluetooth.mojom.DiscoverySession_Stop_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the DiscoverySession
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
bluetooth.mojom.DiscoverySessionReceiver = class {
  /**
   * @param {!bluetooth.mojom.DiscoverySessionInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!bluetooth.mojom.DiscoverySessionRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        bluetooth.mojom.DiscoverySessionRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.DiscoverySessionRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1967102996,
        bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec.$,
        impl.isActive.bind(impl));
    this.helper_internal_.registerHandler(
        1376399581,
        bluetooth.mojom.DiscoverySession_Stop_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec.$,
        impl.stop.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
bluetooth.mojom.DiscoverySession = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.DiscoverySession";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!bluetooth.mojom.DiscoverySessionRemote}
   * @export
   */
  static getRemote() {
    let remote = new bluetooth.mojom.DiscoverySessionRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the DiscoverySession
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
bluetooth.mojom.DiscoverySessionCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      bluetooth.mojom.DiscoverySessionRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.DiscoverySessionRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.isActive =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1967102996,
        bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec.$,
        this.isActive.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.stop =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1376399581,
        bluetooth.mojom.DiscoverySession_Stop_ParamsSpec.$,
        bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec.$,
        this.stop.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('bluetooth.mojom.Adapter');
goog.provide('bluetooth.mojom.AdapterReceiver');
goog.provide('bluetooth.mojom.AdapterCallbackRouter');
goog.provide('bluetooth.mojom.AdapterInterface');
goog.provide('bluetooth.mojom.AdapterRemote');
goog.provide('bluetooth.mojom.AdapterPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
bluetooth.mojom.AdapterPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};

/** @interface */
bluetooth.mojom.AdapterInterface = class {
  
  /**
   * @param { !string } address
   * @return {Promise<{
        result: !bluetooth.mojom.ConnectResult,
        device: ?bluetooth.mojom.DeviceRemote,
   *  }>}
   */

  connectToDevice(address) {}
  
  /**
   * @return {Promise<{
        devices: !Array<!bluetooth.mojom.DeviceInfo>,
   *  }>}
   */

  getDevices() {}
  
  /**
   * @return {Promise<{
        info: !bluetooth.mojom.AdapterInfo,
   *  }>}
   */

  getInfo() {}
  
  /**
   * @param { !bluetooth.mojom.AdapterClientRemote } client
   */

  setClient(client) {}
  
  /**
   * @return {Promise<{
        session: ?bluetooth.mojom.DiscoverySessionRemote,
   *  }>}
   */

  startDiscoverySession() {}
};

/**
 * @export
 * @implements { bluetooth.mojom.AdapterInterface }
 */
bluetooth.mojom.AdapterRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!bluetooth.mojom.AdapterPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          bluetooth.mojom.AdapterPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!bluetooth.mojom.AdapterPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !string } address
   * @return {Promise<{
        result: !bluetooth.mojom.ConnectResult,
        device: ?bluetooth.mojom.DeviceRemote,
   *  }>}
   */

  connectToDevice(
      address) {
    return this.proxy.sendMessage(
        9003070,
        bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec.$,
        bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec.$,
        [
          address
        ]);
  }

  
  /**
   * @return {Promise<{
        devices: !Array<!bluetooth.mojom.DeviceInfo>,
   *  }>}
   */

  getDevices() {
    return this.proxy.sendMessage(
        1443083521,
        bluetooth.mojom.Adapter_GetDevices_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {Promise<{
        info: !bluetooth.mojom.AdapterInfo,
   *  }>}
   */

  getInfo() {
    return this.proxy.sendMessage(
        1294678178,
        bluetooth.mojom.Adapter_GetInfo_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !bluetooth.mojom.AdapterClientRemote } client
   */

  setClient(
      client) {
    this.proxy.sendMessage(
        2017800022,
        bluetooth.mojom.Adapter_SetClient_ParamsSpec.$,
        null,
        [
          client
        ]);
  }

  
  /**
   * @return {Promise<{
        session: ?bluetooth.mojom.DiscoverySessionRemote,
   *  }>}
   */

  startDiscoverySession() {
    return this.proxy.sendMessage(
        326121044,
        bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec.$,
        bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec.$,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the Adapter
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
bluetooth.mojom.AdapterReceiver = class {
  /**
   * @param {!bluetooth.mojom.AdapterInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!bluetooth.mojom.AdapterRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        bluetooth.mojom.AdapterRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.AdapterRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        9003070,
        bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec.$,
        bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec.$,
        impl.connectToDevice.bind(impl));
    this.helper_internal_.registerHandler(
        1443083521,
        bluetooth.mojom.Adapter_GetDevices_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec.$,
        impl.getDevices.bind(impl));
    this.helper_internal_.registerHandler(
        1294678178,
        bluetooth.mojom.Adapter_GetInfo_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec.$,
        impl.getInfo.bind(impl));
    this.helper_internal_.registerHandler(
        2017800022,
        bluetooth.mojom.Adapter_SetClient_ParamsSpec.$,
        null,
        impl.setClient.bind(impl));
    this.helper_internal_.registerHandler(
        326121044,
        bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec.$,
        bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec.$,
        impl.startDiscoverySession.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
bluetooth.mojom.Adapter = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.Adapter";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!bluetooth.mojom.AdapterRemote}
   * @export
   */
  static getRemote() {
    let remote = new bluetooth.mojom.AdapterRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the Adapter
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
bluetooth.mojom.AdapterCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      bluetooth.mojom.AdapterRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.AdapterRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.connectToDevice =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        9003070,
        bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec.$,
        bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec.$,
        this.connectToDevice.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getDevices =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1443083521,
        bluetooth.mojom.Adapter_GetDevices_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec.$,
        this.getDevices.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getInfo =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1294678178,
        bluetooth.mojom.Adapter_GetInfo_ParamsSpec.$,
        bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec.$,
        this.getInfo.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setClient =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2017800022,
        bluetooth.mojom.Adapter_SetClient_ParamsSpec.$,
        null,
        this.setClient.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.startDiscoverySession =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        326121044,
        bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec.$,
        bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec.$,
        this.startDiscoverySession.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('bluetooth.mojom.AdapterClient');
goog.provide('bluetooth.mojom.AdapterClientReceiver');
goog.provide('bluetooth.mojom.AdapterClientCallbackRouter');
goog.provide('bluetooth.mojom.AdapterClientInterface');
goog.provide('bluetooth.mojom.AdapterClientRemote');
goog.provide('bluetooth.mojom.AdapterClientPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
bluetooth.mojom.AdapterClientPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};

/** @interface */
bluetooth.mojom.AdapterClientInterface = class {
  
  /**
   * @param { !boolean } present
   */

  presentChanged(present) {}
  
  /**
   * @param { !boolean } powered
   */

  poweredChanged(powered) {}
  
  /**
   * @param { !boolean } discoverable
   */

  discoverableChanged(discoverable) {}
  
  /**
   * @param { !boolean } discovering
   */

  discoveringChanged(discovering) {}
  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceAdded(device) {}
  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceChanged(device) {}
  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceRemoved(device) {}
};

/**
 * @export
 * @implements { bluetooth.mojom.AdapterClientInterface }
 */
bluetooth.mojom.AdapterClientRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!bluetooth.mojom.AdapterClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          bluetooth.mojom.AdapterClientPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!bluetooth.mojom.AdapterClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !boolean } present
   */

  presentChanged(
      present) {
    this.proxy.sendMessage(
        1285856385,
        bluetooth.mojom.AdapterClient_PresentChanged_ParamsSpec.$,
        null,
        [
          present
        ]);
  }

  
  /**
   * @param { !boolean } powered
   */

  poweredChanged(
      powered) {
    this.proxy.sendMessage(
        144963001,
        bluetooth.mojom.AdapterClient_PoweredChanged_ParamsSpec.$,
        null,
        [
          powered
        ]);
  }

  
  /**
   * @param { !boolean } discoverable
   */

  discoverableChanged(
      discoverable) {
    this.proxy.sendMessage(
        221956933,
        bluetooth.mojom.AdapterClient_DiscoverableChanged_ParamsSpec.$,
        null,
        [
          discoverable
        ]);
  }

  
  /**
   * @param { !boolean } discovering
   */

  discoveringChanged(
      discovering) {
    this.proxy.sendMessage(
        779354670,
        bluetooth.mojom.AdapterClient_DiscoveringChanged_ParamsSpec.$,
        null,
        [
          discovering
        ]);
  }

  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceAdded(
      device) {
    this.proxy.sendMessage(
        955910210,
        bluetooth.mojom.AdapterClient_DeviceAdded_ParamsSpec.$,
        null,
        [
          device
        ]);
  }

  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceChanged(
      device) {
    this.proxy.sendMessage(
        300530936,
        bluetooth.mojom.AdapterClient_DeviceChanged_ParamsSpec.$,
        null,
        [
          device
        ]);
  }

  
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */

  deviceRemoved(
      device) {
    this.proxy.sendMessage(
        1801858927,
        bluetooth.mojom.AdapterClient_DeviceRemoved_ParamsSpec.$,
        null,
        [
          device
        ]);
  }
};

/**
 * An object which receives request messages for the AdapterClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
bluetooth.mojom.AdapterClientReceiver = class {
  /**
   * @param {!bluetooth.mojom.AdapterClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!bluetooth.mojom.AdapterClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        bluetooth.mojom.AdapterClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.AdapterClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1285856385,
        bluetooth.mojom.AdapterClient_PresentChanged_ParamsSpec.$,
        null,
        impl.presentChanged.bind(impl));
    this.helper_internal_.registerHandler(
        144963001,
        bluetooth.mojom.AdapterClient_PoweredChanged_ParamsSpec.$,
        null,
        impl.poweredChanged.bind(impl));
    this.helper_internal_.registerHandler(
        221956933,
        bluetooth.mojom.AdapterClient_DiscoverableChanged_ParamsSpec.$,
        null,
        impl.discoverableChanged.bind(impl));
    this.helper_internal_.registerHandler(
        779354670,
        bluetooth.mojom.AdapterClient_DiscoveringChanged_ParamsSpec.$,
        null,
        impl.discoveringChanged.bind(impl));
    this.helper_internal_.registerHandler(
        955910210,
        bluetooth.mojom.AdapterClient_DeviceAdded_ParamsSpec.$,
        null,
        impl.deviceAdded.bind(impl));
    this.helper_internal_.registerHandler(
        300530936,
        bluetooth.mojom.AdapterClient_DeviceChanged_ParamsSpec.$,
        null,
        impl.deviceChanged.bind(impl));
    this.helper_internal_.registerHandler(
        1801858927,
        bluetooth.mojom.AdapterClient_DeviceRemoved_ParamsSpec.$,
        null,
        impl.deviceRemoved.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
bluetooth.mojom.AdapterClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "bluetooth.mojom.AdapterClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!bluetooth.mojom.AdapterClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new bluetooth.mojom.AdapterClientRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the AdapterClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
bluetooth.mojom.AdapterClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      bluetooth.mojom.AdapterClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!bluetooth.mojom.AdapterClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.presentChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1285856385,
        bluetooth.mojom.AdapterClient_PresentChanged_ParamsSpec.$,
        null,
        this.presentChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.poweredChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        144963001,
        bluetooth.mojom.AdapterClient_PoweredChanged_ParamsSpec.$,
        null,
        this.poweredChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.discoverableChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        221956933,
        bluetooth.mojom.AdapterClient_DiscoverableChanged_ParamsSpec.$,
        null,
        this.discoverableChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.discoveringChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        779354670,
        bluetooth.mojom.AdapterClient_DiscoveringChanged_ParamsSpec.$,
        null,
        this.discoveringChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deviceAdded =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        955910210,
        bluetooth.mojom.AdapterClient_DeviceAdded_ParamsSpec.$,
        null,
        this.deviceAdded.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deviceChanged =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        300530936,
        bluetooth.mojom.AdapterClient_DeviceChanged_ParamsSpec.$,
        null,
        this.deviceChanged.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deviceRemoved =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1801858927,
        bluetooth.mojom.AdapterClient_DeviceRemoved_ParamsSpec.$,
        null,
        this.deviceRemoved.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('bluetooth.mojom.AdapterInfoSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterInfoSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.DiscoverySession_Stop_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.DiscoverySession_Stop_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_GetDevices_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_GetDevices_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_GetInfo_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_GetInfo_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_SetClient_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_SetClient_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterClient_PresentChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterClient_PresentChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterClient_PoweredChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterClient_PoweredChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterClient_DiscoverableChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterClient_DiscoverableChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterClient_DiscoveringChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterClient_DiscoveringChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterClient_DeviceAdded_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterClient_DeviceAdded_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterClient_DeviceChanged_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterClient_DeviceChanged_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('bluetooth.mojom.AdapterClient_DeviceRemoved_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
bluetooth.mojom.AdapterClient_DeviceRemoved_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    bluetooth.mojom.AdapterInfoSpec.$,
    'AdapterInfo',
    32,
    [
      mojo.internal.StructField(
        'address', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'name', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'systemName', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'initialized', 24,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'present', 24,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'powered', 24,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'discoverable', 24,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'discovering', 24,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.AdapterInfo');

/** @record */
bluetooth.mojom.AdapterInfo = class {
  constructor() {
    /** @type { !string } */
    this.address;
    /** @type { !string } */
    this.name;
    /** @type { !string } */
    this.systemName;
    /** @type { !boolean } */
    this.initialized;
    /** @type { !boolean } */
    this.present;
    /** @type { !boolean } */
    this.powered;
    /** @type { !boolean } */
    this.discoverable;
    /** @type { !boolean } */
    this.discovering;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.DiscoverySession_IsActive_ParamsSpec.$,
    'DiscoverySession_IsActive_Params',
    0,
    [
    ]);



goog.provide('bluetooth.mojom.DiscoverySession_IsActive_Params');

/** @record */
bluetooth.mojom.DiscoverySession_IsActive_Params = class {
  constructor() {
  }
};



mojo.internal.Struct(
    bluetooth.mojom.DiscoverySession_IsActive_ResponseParamsSpec.$,
    'DiscoverySession_IsActive_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'active', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.DiscoverySession_IsActive_ResponseParams');

/** @record */
bluetooth.mojom.DiscoverySession_IsActive_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.active;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.DiscoverySession_Stop_ParamsSpec.$,
    'DiscoverySession_Stop_Params',
    0,
    [
    ]);



goog.provide('bluetooth.mojom.DiscoverySession_Stop_Params');

/** @record */
bluetooth.mojom.DiscoverySession_Stop_Params = class {
  constructor() {
  }
};



mojo.internal.Struct(
    bluetooth.mojom.DiscoverySession_Stop_ResponseParamsSpec.$,
    'DiscoverySession_Stop_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.DiscoverySession_Stop_ResponseParams');

/** @record */
bluetooth.mojom.DiscoverySession_Stop_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.Adapter_ConnectToDevice_ParamsSpec.$,
    'Adapter_ConnectToDevice_Params',
    8,
    [
      mojo.internal.StructField(
        'address', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.Adapter_ConnectToDevice_Params');

/** @record */
bluetooth.mojom.Adapter_ConnectToDevice_Params = class {
  constructor() {
    /** @type { !string } */
    this.address;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.Adapter_ConnectToDevice_ResponseParamsSpec.$,
    'Adapter_ConnectToDevice_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        bluetooth.mojom.ConnectResultSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'device', 4,
        0,
        mojo.internal.InterfaceProxy(bluetooth.mojom.DeviceRemote),
        null,
        true /* nullable */),
    ]);



goog.provide('bluetooth.mojom.Adapter_ConnectToDevice_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_ConnectToDevice_ResponseParams = class {
  constructor() {
    /** @type { !bluetooth.mojom.ConnectResult } */
    this.result;
    /** @type { (bluetooth.mojom.DeviceRemote|undefined) } */
    this.device;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.Adapter_GetDevices_ParamsSpec.$,
    'Adapter_GetDevices_Params',
    0,
    [
    ]);



goog.provide('bluetooth.mojom.Adapter_GetDevices_Params');

/** @record */
bluetooth.mojom.Adapter_GetDevices_Params = class {
  constructor() {
  }
};



mojo.internal.Struct(
    bluetooth.mojom.Adapter_GetDevices_ResponseParamsSpec.$,
    'Adapter_GetDevices_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'devices', 0,
        0,
        mojo.internal.Array(bluetooth.mojom.DeviceInfoSpec.$, false),
        null,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.Adapter_GetDevices_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_GetDevices_ResponseParams = class {
  constructor() {
    /** @type { !Array<!bluetooth.mojom.DeviceInfo> } */
    this.devices;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.Adapter_GetInfo_ParamsSpec.$,
    'Adapter_GetInfo_Params',
    0,
    [
    ]);



goog.provide('bluetooth.mojom.Adapter_GetInfo_Params');

/** @record */
bluetooth.mojom.Adapter_GetInfo_Params = class {
  constructor() {
  }
};



mojo.internal.Struct(
    bluetooth.mojom.Adapter_GetInfo_ResponseParamsSpec.$,
    'Adapter_GetInfo_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'info', 0,
        0,
        bluetooth.mojom.AdapterInfoSpec.$,
        null,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.Adapter_GetInfo_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_GetInfo_ResponseParams = class {
  constructor() {
    /** @type { !bluetooth.mojom.AdapterInfo } */
    this.info;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.Adapter_SetClient_ParamsSpec.$,
    'Adapter_SetClient_Params',
    8,
    [
      mojo.internal.StructField(
        'client', 0,
        0,
        mojo.internal.InterfaceProxy(bluetooth.mojom.AdapterClientRemote),
        null,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.Adapter_SetClient_Params');

/** @record */
bluetooth.mojom.Adapter_SetClient_Params = class {
  constructor() {
    /** @type { !bluetooth.mojom.AdapterClientRemote } */
    this.client;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.Adapter_StartDiscoverySession_ParamsSpec.$,
    'Adapter_StartDiscoverySession_Params',
    0,
    [
    ]);



goog.provide('bluetooth.mojom.Adapter_StartDiscoverySession_Params');

/** @record */
bluetooth.mojom.Adapter_StartDiscoverySession_Params = class {
  constructor() {
  }
};



mojo.internal.Struct(
    bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParamsSpec.$,
    'Adapter_StartDiscoverySession_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'session', 0,
        0,
        mojo.internal.InterfaceProxy(bluetooth.mojom.DiscoverySessionRemote),
        null,
        true /* nullable */),
    ]);



goog.provide('bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParams');

/** @record */
bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParams = class {
  constructor() {
    /** @type { (bluetooth.mojom.DiscoverySessionRemote|undefined) } */
    this.session;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.AdapterClient_PresentChanged_ParamsSpec.$,
    'AdapterClient_PresentChanged_Params',
    8,
    [
      mojo.internal.StructField(
        'present', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.AdapterClient_PresentChanged_Params');

/** @record */
bluetooth.mojom.AdapterClient_PresentChanged_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.present;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.AdapterClient_PoweredChanged_ParamsSpec.$,
    'AdapterClient_PoweredChanged_Params',
    8,
    [
      mojo.internal.StructField(
        'powered', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.AdapterClient_PoweredChanged_Params');

/** @record */
bluetooth.mojom.AdapterClient_PoweredChanged_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.powered;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.AdapterClient_DiscoverableChanged_ParamsSpec.$,
    'AdapterClient_DiscoverableChanged_Params',
    8,
    [
      mojo.internal.StructField(
        'discoverable', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.AdapterClient_DiscoverableChanged_Params');

/** @record */
bluetooth.mojom.AdapterClient_DiscoverableChanged_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.discoverable;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.AdapterClient_DiscoveringChanged_ParamsSpec.$,
    'AdapterClient_DiscoveringChanged_Params',
    8,
    [
      mojo.internal.StructField(
        'discovering', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.AdapterClient_DiscoveringChanged_Params');

/** @record */
bluetooth.mojom.AdapterClient_DiscoveringChanged_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.discovering;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.AdapterClient_DeviceAdded_ParamsSpec.$,
    'AdapterClient_DeviceAdded_Params',
    8,
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth.mojom.DeviceInfoSpec.$,
        null,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.AdapterClient_DeviceAdded_Params');

/** @record */
bluetooth.mojom.AdapterClient_DeviceAdded_Params = class {
  constructor() {
    /** @type { !bluetooth.mojom.DeviceInfo } */
    this.device;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.AdapterClient_DeviceChanged_ParamsSpec.$,
    'AdapterClient_DeviceChanged_Params',
    8,
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth.mojom.DeviceInfoSpec.$,
        null,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.AdapterClient_DeviceChanged_Params');

/** @record */
bluetooth.mojom.AdapterClient_DeviceChanged_Params = class {
  constructor() {
    /** @type { !bluetooth.mojom.DeviceInfo } */
    this.device;
  }
};



mojo.internal.Struct(
    bluetooth.mojom.AdapterClient_DeviceRemoved_ParamsSpec.$,
    'AdapterClient_DeviceRemoved_Params',
    8,
    [
      mojo.internal.StructField(
        'device', 0,
        0,
        bluetooth.mojom.DeviceInfoSpec.$,
        null,
        false /* nullable */),
    ]);



goog.provide('bluetooth.mojom.AdapterClient_DeviceRemoved_Params');

/** @record */
bluetooth.mojom.AdapterClient_DeviceRemoved_Params = class {
  constructor() {
    /** @type { !bluetooth.mojom.DeviceInfo } */
    this.device;
  }
};

