// device/bluetooth/public/mojom/adapter.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
bluetooth.mojom.ConnectResult = {};
bluetooth.mojom.ConnectResult.SUCCESS;
bluetooth.mojom.ConnectResult.AUTH_CANCELED;
bluetooth.mojom.ConnectResult.AUTH_FAILED;
bluetooth.mojom.ConnectResult.AUTH_REJECTED;
bluetooth.mojom.ConnectResult.AUTH_TIMEOUT;
bluetooth.mojom.ConnectResult.FAILED;
bluetooth.mojom.ConnectResult.INPROGRESS;
bluetooth.mojom.ConnectResult.UNKNOWN;
bluetooth.mojom.ConnectResult.UNSUPPORTED_DEVICE;
bluetooth.mojom.ConnectResult.DEVICE_NO_LONGER_IN_RANGE;
goog.provide('bluetooth.mojom.DiscoverySession');
goog.provide('bluetooth.mojom.DiscoverySessionImpl');
goog.provide('bluetooth.mojom.DiscoverySessionPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
bluetooth.mojom.DiscoverySession;

/** @interface */
bluetooth.mojom.DiscoverySessionImpl = class {
  /**
   * @return {Promise}
   */
  isActive() {}
  /**
   * @return {Promise}
   */
  stop() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { bluetooth.mojom.DiscoverySessionImpl }
 */
bluetooth.mojom.DiscoverySessionPtr = class {
  /**
   * @return {Promise}
   */
  isActive() {}
  /**
   * @return {Promise}
   */
  stop() {}
};

goog.provide('bluetooth.mojom.Adapter');
goog.provide('bluetooth.mojom.AdapterImpl');
goog.provide('bluetooth.mojom.AdapterPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
bluetooth.mojom.Adapter;

/** @interface */
bluetooth.mojom.AdapterImpl = class {
  /**
   * @param { !string } address
   * @return {Promise}
   */
  connectToDevice(address) {}
  /**
   * @return {Promise}
   */
  getDevices() {}
  /**
   * @return {Promise}
   */
  getInfo() {}
  /**
   * @param { !bluetooth.mojom.AdapterClientPtr } client
   */
  setClient(client) {}
  /**
   * @return {Promise}
   */
  startDiscoverySession() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { bluetooth.mojom.AdapterImpl }
 */
bluetooth.mojom.AdapterPtr = class {
  /**
   * @param { !string } address
   * @return {Promise}
   */
  connectToDevice(address) {}
  /**
   * @return {Promise}
   */
  getDevices() {}
  /**
   * @return {Promise}
   */
  getInfo() {}
  /**
   * @param { !bluetooth.mojom.AdapterClientPtr } client
   */
  setClient(client) {}
  /**
   * @return {Promise}
   */
  startDiscoverySession() {}
};

goog.provide('bluetooth.mojom.AdapterClient');
goog.provide('bluetooth.mojom.AdapterClientImpl');
goog.provide('bluetooth.mojom.AdapterClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
bluetooth.mojom.AdapterClient;

/** @interface */
bluetooth.mojom.AdapterClientImpl = class {
  /**
   * @param { !boolean } present
   */
  presentChanged(present) {}
  /**
   * @param { !boolean } powered
   */
  poweredChanged(powered) {}
  /**
   * @param { !boolean } discoverable
   */
  discoverableChanged(discoverable) {}
  /**
   * @param { !boolean } discovering
   */
  discoveringChanged(discovering) {}
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */
  deviceAdded(device) {}
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */
  deviceChanged(device) {}
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */
  deviceRemoved(device) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { bluetooth.mojom.AdapterClientImpl }
 */
bluetooth.mojom.AdapterClientPtr = class {
  /**
   * @param { !boolean } present
   */
  presentChanged(present) {}
  /**
   * @param { !boolean } powered
   */
  poweredChanged(powered) {}
  /**
   * @param { !boolean } discoverable
   */
  discoverableChanged(discoverable) {}
  /**
   * @param { !boolean } discovering
   */
  discoveringChanged(discovering) {}
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */
  deviceAdded(device) {}
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */
  deviceChanged(device) {}
  /**
   * @param { !bluetooth.mojom.DeviceInfo } device
   */
  deviceRemoved(device) {}
};

goog.provide('bluetooth.mojom.AdapterInfo');

bluetooth.mojom.AdapterInfo = class {
  constructor() {
    /** @type { !string } */
    this.address;
    /** @type { !string } */
    this.name;
    /** @type { !string } */
    this.systemName;
    /** @type { !boolean } */
    this.initialized;
    /** @type { !boolean } */
    this.present;
    /** @type { !boolean } */
    this.powered;
    /** @type { !boolean } */
    this.discoverable;
    /** @type { !boolean } */
    this.discovering;
  }
};

goog.provide('bluetooth.mojom.DiscoverySession_IsActive_Params');

bluetooth.mojom.DiscoverySession_IsActive_Params = class {
  constructor() {
  }
};

goog.provide('bluetooth.mojom.DiscoverySession_IsActive_ResponseParams');

bluetooth.mojom.DiscoverySession_IsActive_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.active;
  }
};

goog.provide('bluetooth.mojom.DiscoverySession_Stop_Params');

bluetooth.mojom.DiscoverySession_Stop_Params = class {
  constructor() {
  }
};

goog.provide('bluetooth.mojom.DiscoverySession_Stop_ResponseParams');

bluetooth.mojom.DiscoverySession_Stop_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('bluetooth.mojom.Adapter_ConnectToDevice_Params');

bluetooth.mojom.Adapter_ConnectToDevice_Params = class {
  constructor() {
    /** @type { !string } */
    this.address;
  }
};

goog.provide('bluetooth.mojom.Adapter_ConnectToDevice_ResponseParams');

bluetooth.mojom.Adapter_ConnectToDevice_ResponseParams = class {
  constructor() {
    /** @type { !bluetooth.mojom.ConnectResult } */
    this.result;
    /** @type { bluetooth.mojom.DevicePtr } */
    this.device;
  }
};

goog.provide('bluetooth.mojom.Adapter_GetDevices_Params');

bluetooth.mojom.Adapter_GetDevices_Params = class {
  constructor() {
  }
};

goog.provide('bluetooth.mojom.Adapter_GetDevices_ResponseParams');

bluetooth.mojom.Adapter_GetDevices_ResponseParams = class {
  constructor() {
    /** @type { !Array<bluetooth.mojom.DeviceInfo> } */
    this.devices;
  }
};

goog.provide('bluetooth.mojom.Adapter_GetInfo_Params');

bluetooth.mojom.Adapter_GetInfo_Params = class {
  constructor() {
  }
};

goog.provide('bluetooth.mojom.Adapter_GetInfo_ResponseParams');

bluetooth.mojom.Adapter_GetInfo_ResponseParams = class {
  constructor() {
    /** @type { !bluetooth.mojom.AdapterInfo } */
    this.info;
  }
};

goog.provide('bluetooth.mojom.Adapter_SetClient_Params');

bluetooth.mojom.Adapter_SetClient_Params = class {
  constructor() {
    /** @type { !bluetooth.mojom.AdapterClientPtr } */
    this.client;
  }
};

goog.provide('bluetooth.mojom.Adapter_StartDiscoverySession_Params');

bluetooth.mojom.Adapter_StartDiscoverySession_Params = class {
  constructor() {
  }
};

goog.provide('bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParams');

bluetooth.mojom.Adapter_StartDiscoverySession_ResponseParams = class {
  constructor() {
    /** @type { bluetooth.mojom.DiscoverySessionPtr } */
    this.session;
  }
};

goog.provide('bluetooth.mojom.AdapterClient_PresentChanged_Params');

bluetooth.mojom.AdapterClient_PresentChanged_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.present;
  }
};

goog.provide('bluetooth.mojom.AdapterClient_PoweredChanged_Params');

bluetooth.mojom.AdapterClient_PoweredChanged_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.powered;
  }
};

goog.provide('bluetooth.mojom.AdapterClient_DiscoverableChanged_Params');

bluetooth.mojom.AdapterClient_DiscoverableChanged_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.discoverable;
  }
};

goog.provide('bluetooth.mojom.AdapterClient_DiscoveringChanged_Params');

bluetooth.mojom.AdapterClient_DiscoveringChanged_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.discovering;
  }
};

goog.provide('bluetooth.mojom.AdapterClient_DeviceAdded_Params');

bluetooth.mojom.AdapterClient_DeviceAdded_Params = class {
  constructor() {
    /** @type { !bluetooth.mojom.DeviceInfo } */
    this.device;
  }
};

goog.provide('bluetooth.mojom.AdapterClient_DeviceChanged_Params');

bluetooth.mojom.AdapterClient_DeviceChanged_Params = class {
  constructor() {
    /** @type { !bluetooth.mojom.DeviceInfo } */
    this.device;
  }
};

goog.provide('bluetooth.mojom.AdapterClient_DeviceRemoved_Params');

bluetooth.mojom.AdapterClient_DeviceRemoved_Params = class {
  constructor() {
    /** @type { !bluetooth.mojom.DeviceInfo } */
    this.device;
  }
};
