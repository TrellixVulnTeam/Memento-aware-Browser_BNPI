// services/resource_coordinator/public/mojom/memory_instrumentation/memory_instrumentation.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('memoryInstrumentation.mojom');





/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
memoryInstrumentation.mojom.DumpTypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
memoryInstrumentation.mojom.DumpType = {
  
  PERIODIC_INTERVAL: 0,
  EXPLICITLY_TRIGGERED: 1,
  SUMMARY_ONLY: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};


/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
memoryInstrumentation.mojom.LevelOfDetailSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
memoryInstrumentation.mojom.LevelOfDetail = {
  
  BACKGROUND: 0,
  LIGHT: 1,
  DETAILED: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};


/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
memoryInstrumentation.mojom.DeterminismSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
memoryInstrumentation.mojom.Determinism = {
  
  NONE: 0,
  FORCE_GC: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};


/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
memoryInstrumentation.mojom.ProcessTypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
memoryInstrumentation.mojom.ProcessType = {
  
  OTHER: 0,
  BROWSER: 1,
  RENDERER: 2,
  GPU: 3,
  UTILITY: 4,
  PLUGIN: 5,
  ARC: 6,
  MIN_VALUE: 0,
  MAX_VALUE: 6,
};


/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
memoryInstrumentation.mojom.MemoryMapOptionSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
memoryInstrumentation.mojom.MemoryMapOption = {
  
  NONE: 0,
  MODULES: 1,
  FULL: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};





/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
memoryInstrumentation.mojom.ClientProcessPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { memoryInstrumentation.mojom.ClientProcessInterface }
 */
memoryInstrumentation.mojom.ClientProcessRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!memoryInstrumentation.mojom.ClientProcessPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          memoryInstrumentation.mojom.ClientProcessPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!memoryInstrumentation.mojom.ClientProcessPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !memoryInstrumentation.mojom.RequestArgs } args
   * @return {Promise<{
        success: !boolean,
        dumpId: !number,
        rawProcessMemoryDump: ?memoryInstrumentation.mojom.RawProcessMemoryDump,
   *  }>}
   */

  requestChromeMemoryDump(
      args) {
    return this.proxy.sendMessage(
        131796302,
        memoryInstrumentation.mojom.ClientProcess_RequestChromeMemoryDump_ParamsSpec.$,
        memoryInstrumentation.mojom.ClientProcess_RequestChromeMemoryDump_ResponseParamsSpec.$,
        [
          args
        ]);
  }

  
  /**
   * @param { !memoryInstrumentation.mojom.MemoryMapOption } option
   * @param { !Array<!mojoBase.mojom.ProcessId> } pids
   * @return {Promise<{
        success: !boolean,
        dumps: !Map<!mojoBase.mojom.ProcessId, !memoryInstrumentation.mojom.RawOSMemDump>,
   *  }>}
   */

  requestOSMemoryDump(
      option,
      pids) {
    return this.proxy.sendMessage(
        1780496339,
        memoryInstrumentation.mojom.ClientProcess_RequestOSMemoryDump_ParamsSpec.$,
        memoryInstrumentation.mojom.ClientProcess_RequestOSMemoryDump_ResponseParamsSpec.$,
        [
          option,
          pids
        ]);
  }
};

/**
 * An object which receives request messages for the ClientProcess
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
memoryInstrumentation.mojom.ClientProcessReceiver = class {
  /**
   * @param {!memoryInstrumentation.mojom.ClientProcessInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!memoryInstrumentation.mojom.ClientProcessRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        memoryInstrumentation.mojom.ClientProcessRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.ClientProcessRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        131796302,
        memoryInstrumentation.mojom.ClientProcess_RequestChromeMemoryDump_ParamsSpec.$,
        memoryInstrumentation.mojom.ClientProcess_RequestChromeMemoryDump_ResponseParamsSpec.$,
        impl.requestChromeMemoryDump.bind(impl));
    this.helper_internal_.registerHandler(
        1780496339,
        memoryInstrumentation.mojom.ClientProcess_RequestOSMemoryDump_ParamsSpec.$,
        memoryInstrumentation.mojom.ClientProcess_RequestOSMemoryDump_ResponseParamsSpec.$,
        impl.requestOSMemoryDump.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
memoryInstrumentation.mojom.ClientProcess = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "memory_instrumentation.mojom.ClientProcess";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!memoryInstrumentation.mojom.ClientProcessRemote}
   * @export
   */
  static getRemote() {
    let remote = new memoryInstrumentation.mojom.ClientProcessRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the ClientProcess
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
memoryInstrumentation.mojom.ClientProcessCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      memoryInstrumentation.mojom.ClientProcessRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.ClientProcessRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.requestChromeMemoryDump =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        131796302,
        memoryInstrumentation.mojom.ClientProcess_RequestChromeMemoryDump_ParamsSpec.$,
        memoryInstrumentation.mojom.ClientProcess_RequestChromeMemoryDump_ResponseParamsSpec.$,
        this.requestChromeMemoryDump.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.requestOSMemoryDump =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1780496339,
        memoryInstrumentation.mojom.ClientProcess_RequestOSMemoryDump_ParamsSpec.$,
        memoryInstrumentation.mojom.ClientProcess_RequestOSMemoryDump_ResponseParamsSpec.$,
        this.requestOSMemoryDump.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
memoryInstrumentation.mojom.HeapProfilerPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { memoryInstrumentation.mojom.HeapProfilerInterface }
 */
memoryInstrumentation.mojom.HeapProfilerRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!memoryInstrumentation.mojom.HeapProfilerPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          memoryInstrumentation.mojom.HeapProfilerPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!memoryInstrumentation.mojom.HeapProfilerPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !boolean } stripPathFromMappedFiles
   * @return {Promise<{
        results: !Array<!memoryInstrumentation.mojom.HeapProfileResult>,
   *  }>}
   */

  dumpProcessesForTracing(
      stripPathFromMappedFiles) {
    return this.proxy.sendMessage(
        1668550231,
        memoryInstrumentation.mojom.HeapProfiler_DumpProcessesForTracing_ParamsSpec.$,
        memoryInstrumentation.mojom.HeapProfiler_DumpProcessesForTracing_ResponseParamsSpec.$,
        [
          stripPathFromMappedFiles
        ]);
  }
};

/**
 * An object which receives request messages for the HeapProfiler
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
memoryInstrumentation.mojom.HeapProfilerReceiver = class {
  /**
   * @param {!memoryInstrumentation.mojom.HeapProfilerInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!memoryInstrumentation.mojom.HeapProfilerRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        memoryInstrumentation.mojom.HeapProfilerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.HeapProfilerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1668550231,
        memoryInstrumentation.mojom.HeapProfiler_DumpProcessesForTracing_ParamsSpec.$,
        memoryInstrumentation.mojom.HeapProfiler_DumpProcessesForTracing_ResponseParamsSpec.$,
        impl.dumpProcessesForTracing.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
memoryInstrumentation.mojom.HeapProfiler = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "memory_instrumentation.mojom.HeapProfiler";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!memoryInstrumentation.mojom.HeapProfilerRemote}
   * @export
   */
  static getRemote() {
    let remote = new memoryInstrumentation.mojom.HeapProfilerRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the HeapProfiler
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
memoryInstrumentation.mojom.HeapProfilerCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      memoryInstrumentation.mojom.HeapProfilerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.HeapProfilerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.dumpProcessesForTracing =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1668550231,
        memoryInstrumentation.mojom.HeapProfiler_DumpProcessesForTracing_ParamsSpec.$,
        memoryInstrumentation.mojom.HeapProfiler_DumpProcessesForTracing_ResponseParamsSpec.$,
        this.dumpProcessesForTracing.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
memoryInstrumentation.mojom.HeapProfilerHelperPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { memoryInstrumentation.mojom.HeapProfilerHelperInterface }
 */
memoryInstrumentation.mojom.HeapProfilerHelperRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!memoryInstrumentation.mojom.HeapProfilerHelperPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          memoryInstrumentation.mojom.HeapProfilerHelperPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!memoryInstrumentation.mojom.HeapProfilerHelperPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !Array<!mojoBase.mojom.ProcessId> } pids
   * @return {Promise<{
        vmRegions: !Map<!mojoBase.mojom.ProcessId, !Array<!memoryInstrumentation.mojom.VmRegion>>,
   *  }>}
   */

  getVmRegionsForHeapProfiler(
      pids) {
    return this.proxy.sendMessage(
        1948053848,
        memoryInstrumentation.mojom.HeapProfilerHelper_GetVmRegionsForHeapProfiler_ParamsSpec.$,
        memoryInstrumentation.mojom.HeapProfilerHelper_GetVmRegionsForHeapProfiler_ResponseParamsSpec.$,
        [
          pids
        ]);
  }
};

/**
 * An object which receives request messages for the HeapProfilerHelper
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
memoryInstrumentation.mojom.HeapProfilerHelperReceiver = class {
  /**
   * @param {!memoryInstrumentation.mojom.HeapProfilerHelperInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!memoryInstrumentation.mojom.HeapProfilerHelperRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        memoryInstrumentation.mojom.HeapProfilerHelperRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.HeapProfilerHelperRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1948053848,
        memoryInstrumentation.mojom.HeapProfilerHelper_GetVmRegionsForHeapProfiler_ParamsSpec.$,
        memoryInstrumentation.mojom.HeapProfilerHelper_GetVmRegionsForHeapProfiler_ResponseParamsSpec.$,
        impl.getVmRegionsForHeapProfiler.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
memoryInstrumentation.mojom.HeapProfilerHelper = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "memory_instrumentation.mojom.HeapProfilerHelper";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!memoryInstrumentation.mojom.HeapProfilerHelperRemote}
   * @export
   */
  static getRemote() {
    let remote = new memoryInstrumentation.mojom.HeapProfilerHelperRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the HeapProfilerHelper
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
memoryInstrumentation.mojom.HeapProfilerHelperCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      memoryInstrumentation.mojom.HeapProfilerHelperRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.HeapProfilerHelperRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getVmRegionsForHeapProfiler =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1948053848,
        memoryInstrumentation.mojom.HeapProfilerHelper_GetVmRegionsForHeapProfiler_ParamsSpec.$,
        memoryInstrumentation.mojom.HeapProfilerHelper_GetVmRegionsForHeapProfiler_ResponseParamsSpec.$,
        this.getVmRegionsForHeapProfiler.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
memoryInstrumentation.mojom.CoordinatorPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { memoryInstrumentation.mojom.CoordinatorInterface }
 */
memoryInstrumentation.mojom.CoordinatorRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!memoryInstrumentation.mojom.CoordinatorPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          memoryInstrumentation.mojom.CoordinatorPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!memoryInstrumentation.mojom.CoordinatorPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !memoryInstrumentation.mojom.DumpType } dumpType
   * @param { !memoryInstrumentation.mojom.LevelOfDetail } levelOfDetail
   * @param { !memoryInstrumentation.mojom.Determinism } determinsm
   * @param { !Array<!string> } allocatorDumpNames
   * @return {Promise<{
        success: !boolean,
        globalMemoryDump: ?memoryInstrumentation.mojom.GlobalMemoryDump,
   *  }>}
   */

  requestGlobalMemoryDump(
      dumpType,
      levelOfDetail,
      determinsm,
      allocatorDumpNames) {
    return this.proxy.sendMessage(
        956236168,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDump_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDump_ResponseParamsSpec.$,
        [
          dumpType,
          levelOfDetail,
          determinsm,
          allocatorDumpNames
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.ProcessId } pid
   * @param { !Array<!string> } allocatorDumpNames
   * @return {Promise<{
        success: !boolean,
        globalMemoryDump: ?memoryInstrumentation.mojom.GlobalMemoryDump,
   *  }>}
   */

  requestGlobalMemoryDumpForPid(
      pid,
      allocatorDumpNames) {
    return this.proxy.sendMessage(
        1701121816,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpForPid_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpForPid_ResponseParamsSpec.$,
        [
          pid,
          allocatorDumpNames
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.ProcessId } pid
   * @return {Promise<{
        success: !boolean,
        globalMemoryDump: ?memoryInstrumentation.mojom.GlobalMemoryDump,
   *  }>}
   */

  requestPrivateMemoryFootprint(
      pid) {
    return this.proxy.sendMessage(
        1774967508,
        memoryInstrumentation.mojom.Coordinator_RequestPrivateMemoryFootprint_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestPrivateMemoryFootprint_ResponseParamsSpec.$,
        [
          pid
        ]);
  }

  
  /**
   * @param { !memoryInstrumentation.mojom.DumpType } dumpType
   * @param { !memoryInstrumentation.mojom.LevelOfDetail } levelOfDetail
   * @param { !memoryInstrumentation.mojom.Determinism } determinism
   * @return {Promise<{
        success: !boolean,
        dumpId: !number,
   *  }>}
   */

  requestGlobalMemoryDumpAndAppendToTrace(
      dumpType,
      levelOfDetail,
      determinism) {
    return this.proxy.sendMessage(
        1658697187,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ResponseParamsSpec.$,
        [
          dumpType,
          levelOfDetail,
          determinism
        ]);
  }
};

/**
 * An object which receives request messages for the Coordinator
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
memoryInstrumentation.mojom.CoordinatorReceiver = class {
  /**
   * @param {!memoryInstrumentation.mojom.CoordinatorInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!memoryInstrumentation.mojom.CoordinatorRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        memoryInstrumentation.mojom.CoordinatorRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.CoordinatorRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        956236168,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDump_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDump_ResponseParamsSpec.$,
        impl.requestGlobalMemoryDump.bind(impl));
    this.helper_internal_.registerHandler(
        1701121816,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpForPid_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpForPid_ResponseParamsSpec.$,
        impl.requestGlobalMemoryDumpForPid.bind(impl));
    this.helper_internal_.registerHandler(
        1774967508,
        memoryInstrumentation.mojom.Coordinator_RequestPrivateMemoryFootprint_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestPrivateMemoryFootprint_ResponseParamsSpec.$,
        impl.requestPrivateMemoryFootprint.bind(impl));
    this.helper_internal_.registerHandler(
        1658697187,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ResponseParamsSpec.$,
        impl.requestGlobalMemoryDumpAndAppendToTrace.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
memoryInstrumentation.mojom.Coordinator = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "memory_instrumentation.mojom.Coordinator";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!memoryInstrumentation.mojom.CoordinatorRemote}
   * @export
   */
  static getRemote() {
    let remote = new memoryInstrumentation.mojom.CoordinatorRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the Coordinator
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
memoryInstrumentation.mojom.CoordinatorCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      memoryInstrumentation.mojom.CoordinatorRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.CoordinatorRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.requestGlobalMemoryDump =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        956236168,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDump_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDump_ResponseParamsSpec.$,
        this.requestGlobalMemoryDump.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.requestGlobalMemoryDumpForPid =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1701121816,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpForPid_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpForPid_ResponseParamsSpec.$,
        this.requestGlobalMemoryDumpForPid.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.requestPrivateMemoryFootprint =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1774967508,
        memoryInstrumentation.mojom.Coordinator_RequestPrivateMemoryFootprint_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestPrivateMemoryFootprint_ResponseParamsSpec.$,
        this.requestPrivateMemoryFootprint.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.requestGlobalMemoryDumpAndAppendToTrace =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1658697187,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ParamsSpec.$,
        memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ResponseParamsSpec.$,
        this.requestGlobalMemoryDumpAndAppendToTrace.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
memoryInstrumentation.mojom.CoordinatorConnectorPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { memoryInstrumentation.mojom.CoordinatorConnectorInterface }
 */
memoryInstrumentation.mojom.CoordinatorConnectorRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!memoryInstrumentation.mojom.CoordinatorConnectorPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          memoryInstrumentation.mojom.CoordinatorConnectorPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!memoryInstrumentation.mojom.CoordinatorConnectorPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !memoryInstrumentation.mojom.CoordinatorPendingReceiver } receiver
   * @param { !memoryInstrumentation.mojom.ClientProcessRemote } clientProcess
   */

  registerCoordinatorClient(
      receiver,
      clientProcess) {
    this.proxy.sendMessage(
        647164229,
        memoryInstrumentation.mojom.CoordinatorConnector_RegisterCoordinatorClient_ParamsSpec.$,
        null,
        [
          receiver,
          clientProcess
        ]);
  }
};

/**
 * An object which receives request messages for the CoordinatorConnector
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
memoryInstrumentation.mojom.CoordinatorConnectorReceiver = class {
  /**
   * @param {!memoryInstrumentation.mojom.CoordinatorConnectorInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!memoryInstrumentation.mojom.CoordinatorConnectorRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        memoryInstrumentation.mojom.CoordinatorConnectorRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.CoordinatorConnectorRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        647164229,
        memoryInstrumentation.mojom.CoordinatorConnector_RegisterCoordinatorClient_ParamsSpec.$,
        null,
        impl.registerCoordinatorClient.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
memoryInstrumentation.mojom.CoordinatorConnector = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "memory_instrumentation.mojom.CoordinatorConnector";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!memoryInstrumentation.mojom.CoordinatorConnectorRemote}
   * @export
   */
  static getRemote() {
    let remote = new memoryInstrumentation.mojom.CoordinatorConnectorRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the CoordinatorConnector
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
memoryInstrumentation.mojom.CoordinatorConnectorCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      memoryInstrumentation.mojom.CoordinatorConnectorRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.CoordinatorConnectorRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.registerCoordinatorClient =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        647164229,
        memoryInstrumentation.mojom.CoordinatorConnector_RegisterCoordinatorClient_ParamsSpec.$,
        null,
        this.registerCoordinatorClient.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
memoryInstrumentation.mojom.CoordinatorControllerPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { memoryInstrumentation.mojom.CoordinatorControllerInterface }
 */
memoryInstrumentation.mojom.CoordinatorControllerRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!memoryInstrumentation.mojom.CoordinatorControllerPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          memoryInstrumentation.mojom.CoordinatorControllerPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!memoryInstrumentation.mojom.CoordinatorControllerPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !memoryInstrumentation.mojom.CoordinatorPendingReceiver } receiver
   * @param { !memoryInstrumentation.mojom.ClientProcessRemote } clientProcess
   * @param { !memoryInstrumentation.mojom.ProcessType } processType
   * @param { !mojoBase.mojom.ProcessId } processId
   * @param { ?string } serviceName
   */

  registerClientProcess(
      receiver,
      clientProcess,
      processType,
      processId,
      serviceName) {
    this.proxy.sendMessage(
        1514601783,
        memoryInstrumentation.mojom.CoordinatorController_RegisterClientProcess_ParamsSpec.$,
        null,
        [
          receiver,
          clientProcess,
          processType,
          processId,
          serviceName
        ]);
  }
};

/**
 * An object which receives request messages for the CoordinatorController
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
memoryInstrumentation.mojom.CoordinatorControllerReceiver = class {
  /**
   * @param {!memoryInstrumentation.mojom.CoordinatorControllerInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!memoryInstrumentation.mojom.CoordinatorControllerRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        memoryInstrumentation.mojom.CoordinatorControllerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.CoordinatorControllerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1514601783,
        memoryInstrumentation.mojom.CoordinatorController_RegisterClientProcess_ParamsSpec.$,
        null,
        impl.registerClientProcess.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
memoryInstrumentation.mojom.CoordinatorController = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "memory_instrumentation.mojom.CoordinatorController";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!memoryInstrumentation.mojom.CoordinatorControllerRemote}
   * @export
   */
  static getRemote() {
    let remote = new memoryInstrumentation.mojom.CoordinatorControllerRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the CoordinatorController
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
memoryInstrumentation.mojom.CoordinatorControllerCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      memoryInstrumentation.mojom.CoordinatorControllerRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!memoryInstrumentation.mojom.CoordinatorControllerRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.registerClientProcess =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1514601783,
        memoryInstrumentation.mojom.CoordinatorController_RegisterClientProcess_ParamsSpec.$,
        null,
        this.registerClientProcess.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};



/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.RequestArgsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.RawAllocatorDumpEdgeSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.RawAllocatorDumpEntrySpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.RawAllocatorDumpSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.RawProcessMemoryDumpSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.VmRegionSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.PlatformPrivateFootprintSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.RawOSMemDumpSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.OSMemDumpSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.AllocatorMemDumpSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.ProcessMemoryDumpSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.AggregatedMetricsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.GlobalMemoryDumpSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.HeapProfileResultSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.ClientProcess_RequestChromeMemoryDump_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.ClientProcess_RequestChromeMemoryDump_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.ClientProcess_RequestOSMemoryDump_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.ClientProcess_RequestOSMemoryDump_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.HeapProfiler_DumpProcessesForTracing_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.HeapProfiler_DumpProcessesForTracing_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.HeapProfilerHelper_GetVmRegionsForHeapProfiler_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.HeapProfilerHelper_GetVmRegionsForHeapProfiler_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDump_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDump_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpForPid_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpForPid_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.Coordinator_RequestPrivateMemoryFootprint_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.Coordinator_RequestPrivateMemoryFootprint_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.CoordinatorConnector_RegisterCoordinatorClient_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
memoryInstrumentation.mojom.CoordinatorController_RegisterClientProcess_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType} }
 * @export
 */
memoryInstrumentation.mojom.RawAllocatorDumpEntryValueSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    memoryInstrumentation.mojom.RequestArgsSpec.$,
    'RequestArgs',
    24,
    [
      mojo.internal.StructField(
        'dumpGuid', 0,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'dumpType', 8,
        0,
        memoryInstrumentation.mojom.DumpTypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'levelOfDetail', 12,
        0,
        memoryInstrumentation.mojom.LevelOfDetailSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'determinism', 16,
        0,
        memoryInstrumentation.mojom.DeterminismSpec.$,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.RawAllocatorDumpEdgeSpec.$,
    'RawAllocatorDumpEdge',
    24,
    [
      mojo.internal.StructField(
        'sourceId', 0,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'targetId', 8,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'importance', 16,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'overridable', 20,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.RawAllocatorDumpEntrySpec.$,
    'RawAllocatorDumpEntry',
    32,
    [
      mojo.internal.StructField(
        'name', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'units', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'value', 16,
        0,
        memoryInstrumentation.mojom.RawAllocatorDumpEntryValueSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.RawAllocatorDumpSpec.$,
    'RawAllocatorDump',
    32,
    [
      mojo.internal.StructField(
        'id', 0,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'absoluteName', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'weak', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'levelOfDetail', 20,
        0,
        memoryInstrumentation.mojom.LevelOfDetailSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'entries', 24,
        0,
        mojo.internal.Array(memoryInstrumentation.mojom.RawAllocatorDumpEntrySpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.RawProcessMemoryDumpSpec.$,
    'RawProcessMemoryDump',
    24,
    [
      mojo.internal.StructField(
        'levelOfDetail', 0,
        0,
        memoryInstrumentation.mojom.LevelOfDetailSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'allocatorDumpEdges', 8,
        0,
        mojo.internal.Array(memoryInstrumentation.mojom.RawAllocatorDumpEdgeSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'allocatorDumps', 16,
        0,
        mojo.internal.Array(memoryInstrumentation.mojom.RawAllocatorDumpSpec.$, false),
        null,
        false /* nullable */),
    ]);





/**
 * @const { !number }
 * @export
 */
memoryInstrumentation.mojom.VmRegion_PROTECTION_FLAGS_READ =
    4;

/**
 * @const { !number }
 * @export
 */
memoryInstrumentation.mojom.VmRegion_PROTECTION_FLAGS_WRITE =
    2;

/**
 * @const { !number }
 * @export
 */
memoryInstrumentation.mojom.VmRegion_PROTECTION_FLAGS_EXEC =
    1;

/**
 * @const { !number }
 * @export
 */
memoryInstrumentation.mojom.VmRegion_PROTECTION_FLAGS_MAYSHARE =
    128;



mojo.internal.Struct(
    memoryInstrumentation.mojom.VmRegionSpec.$,
    'VmRegion',
    112,
    [
      mojo.internal.StructField(
        'startAddress', 0,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'sizeInBytes', 8,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'moduleTimestamp', 16,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'moduleDebugid', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'moduleDebugPath', 32,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'protectionFlags', 40,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'mappedFile', 48,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'byteStatsPrivateDirtyResident', 56,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'byteStatsPrivateCleanResident', 64,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'byteStatsSharedDirtyResident', 72,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'byteStatsSharedCleanResident', 80,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'byteStatsSwapped', 88,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'byteLocked', 96,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'byteStatsProportionalResident', 104,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.PlatformPrivateFootprintSpec.$,
    'PlatformPrivateFootprint',
    48,
    [
      mojo.internal.StructField(
        'physFootprintBytes', 0,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'internalBytes', 8,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'compressedBytes', 16,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'rssAnonBytes', 24,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'vmSwapBytes', 32,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'privateBytes', 40,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.RawOSMemDumpSpec.$,
    'RawOSMemDump',
    40,
    [
      mojo.internal.StructField(
        'residentSetKb', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'peakResidentSetKb', 4,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'isPeakRssResettable', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'platformPrivateFootprint', 16,
        0,
        memoryInstrumentation.mojom.PlatformPrivateFootprintSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'memoryMaps', 24,
        0,
        mojo.internal.Array(memoryInstrumentation.mojom.VmRegionSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'nativeLibraryPagesBitmap', 32,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.OSMemDumpSpec.$,
    'OSMemDump',
    24,
    [
      mojo.internal.StructField(
        'residentSetKb', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'peakResidentSetKb', 4,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'isPeakRssResettable', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'privateFootprintKb', 12,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'sharedFootprintKb', 16,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'privateFootprintSwapKb', 20,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.AllocatorMemDumpSpec.$,
    'AllocatorMemDump',
    8,
    [
      mojo.internal.StructField(
        'numericEntries', 0,
        0,
        mojo.internal.Map(mojo.internal.String, mojo.internal.Uint64, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.ProcessMemoryDumpSpec.$,
    'ProcessMemoryDump',
    40,
    [
      mojo.internal.StructField(
        'processType', 0,
        0,
        memoryInstrumentation.mojom.ProcessTypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'osDump', 8,
        0,
        memoryInstrumentation.mojom.OSMemDumpSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'chromeAllocatorDumps', 16,
        0,
        mojo.internal.Map(mojo.internal.String, memoryInstrumentation.mojom.AllocatorMemDumpSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'pid', 24,
        0,
        mojoBase.mojom.ProcessIdSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'serviceName', 32,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.AggregatedMetricsSpec.$,
    'AggregatedMetrics',
    16,
    [
      mojo.internal.StructField(
        'nativeLibraryResidentKb', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'nativeLibraryResidentNotOrderedKb', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'nativeLibraryNotResidentOrderedKb', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.GlobalMemoryDumpSpec.$,
    'GlobalMemoryDump',
    24,
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase.mojom.TimeTicksSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'processDumps', 8,
        0,
        mojo.internal.Array(memoryInstrumentation.mojom.ProcessMemoryDumpSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'aggregatedMetrics', 16,
        0,
        memoryInstrumentation.mojom.AggregatedMetricsSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.HeapProfileResultSpec.$,
    'HeapProfileResult',
    16,
    [
      mojo.internal.StructField(
        'pid', 0,
        0,
        mojoBase.mojom.ProcessIdSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'json', 8,
        0,
        mojoBase.mojom.BigStringSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.ClientProcess_RequestChromeMemoryDump_ParamsSpec.$,
    'ClientProcess_RequestChromeMemoryDump_Params',
    8,
    [
      mojo.internal.StructField(
        'args', 0,
        0,
        memoryInstrumentation.mojom.RequestArgsSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.ClientProcess_RequestChromeMemoryDump_ResponseParamsSpec.$,
    'ClientProcess_RequestChromeMemoryDump_ResponseParams',
    24,
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'dumpId', 8,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'rawProcessMemoryDump', 16,
        0,
        memoryInstrumentation.mojom.RawProcessMemoryDumpSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.ClientProcess_RequestOSMemoryDump_ParamsSpec.$,
    'ClientProcess_RequestOSMemoryDump_Params',
    16,
    [
      mojo.internal.StructField(
        'option', 0,
        0,
        memoryInstrumentation.mojom.MemoryMapOptionSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'pids', 8,
        0,
        mojo.internal.Array(mojoBase.mojom.ProcessIdSpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.ClientProcess_RequestOSMemoryDump_ResponseParamsSpec.$,
    'ClientProcess_RequestOSMemoryDump_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'dumps', 8,
        0,
        mojo.internal.Map(mojoBase.mojom.ProcessIdSpec.$, memoryInstrumentation.mojom.RawOSMemDumpSpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.HeapProfiler_DumpProcessesForTracing_ParamsSpec.$,
    'HeapProfiler_DumpProcessesForTracing_Params',
    8,
    [
      mojo.internal.StructField(
        'stripPathFromMappedFiles', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.HeapProfiler_DumpProcessesForTracing_ResponseParamsSpec.$,
    'HeapProfiler_DumpProcessesForTracing_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'results', 0,
        0,
        mojo.internal.Array(memoryInstrumentation.mojom.HeapProfileResultSpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.HeapProfilerHelper_GetVmRegionsForHeapProfiler_ParamsSpec.$,
    'HeapProfilerHelper_GetVmRegionsForHeapProfiler_Params',
    8,
    [
      mojo.internal.StructField(
        'pids', 0,
        0,
        mojo.internal.Array(mojoBase.mojom.ProcessIdSpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.HeapProfilerHelper_GetVmRegionsForHeapProfiler_ResponseParamsSpec.$,
    'HeapProfilerHelper_GetVmRegionsForHeapProfiler_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'vmRegions', 0,
        0,
        mojo.internal.Map(mojoBase.mojom.ProcessIdSpec.$, mojo.internal.Array(memoryInstrumentation.mojom.VmRegionSpec.$, false), false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDump_ParamsSpec.$,
    'Coordinator_RequestGlobalMemoryDump_Params',
    24,
    [
      mojo.internal.StructField(
        'dumpType', 0,
        0,
        memoryInstrumentation.mojom.DumpTypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'levelOfDetail', 4,
        0,
        memoryInstrumentation.mojom.LevelOfDetailSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'determinsm', 8,
        0,
        memoryInstrumentation.mojom.DeterminismSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'allocatorDumpNames', 16,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDump_ResponseParamsSpec.$,
    'Coordinator_RequestGlobalMemoryDump_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'globalMemoryDump', 8,
        0,
        memoryInstrumentation.mojom.GlobalMemoryDumpSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpForPid_ParamsSpec.$,
    'Coordinator_RequestGlobalMemoryDumpForPid_Params',
    16,
    [
      mojo.internal.StructField(
        'pid', 0,
        0,
        mojoBase.mojom.ProcessIdSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'allocatorDumpNames', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpForPid_ResponseParamsSpec.$,
    'Coordinator_RequestGlobalMemoryDumpForPid_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'globalMemoryDump', 8,
        0,
        memoryInstrumentation.mojom.GlobalMemoryDumpSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.Coordinator_RequestPrivateMemoryFootprint_ParamsSpec.$,
    'Coordinator_RequestPrivateMemoryFootprint_Params',
    8,
    [
      mojo.internal.StructField(
        'pid', 0,
        0,
        mojoBase.mojom.ProcessIdSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.Coordinator_RequestPrivateMemoryFootprint_ResponseParamsSpec.$,
    'Coordinator_RequestPrivateMemoryFootprint_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'globalMemoryDump', 8,
        0,
        memoryInstrumentation.mojom.GlobalMemoryDumpSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ParamsSpec.$,
    'Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_Params',
    16,
    [
      mojo.internal.StructField(
        'dumpType', 0,
        0,
        memoryInstrumentation.mojom.DumpTypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'levelOfDetail', 4,
        0,
        memoryInstrumentation.mojom.LevelOfDetailSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'determinism', 8,
        0,
        memoryInstrumentation.mojom.DeterminismSpec.$,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ResponseParamsSpec.$,
    'Coordinator_RequestGlobalMemoryDumpAndAppendToTrace_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'dumpId', 8,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.CoordinatorConnector_RegisterCoordinatorClient_ParamsSpec.$,
    'CoordinatorConnector_RegisterCoordinatorClient_Params',
    16,
    [
      mojo.internal.StructField(
        'receiver', 0,
        0,
        mojo.internal.InterfaceRequest(memoryInstrumentation.mojom.CoordinatorPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'clientProcess', 4,
        0,
        mojo.internal.InterfaceProxy(memoryInstrumentation.mojom.ClientProcessRemote),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    memoryInstrumentation.mojom.CoordinatorController_RegisterClientProcess_ParamsSpec.$,
    'CoordinatorController_RegisterClientProcess_Params',
    32,
    [
      mojo.internal.StructField(
        'receiver', 0,
        0,
        mojo.internal.InterfaceRequest(memoryInstrumentation.mojom.CoordinatorPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'clientProcess', 4,
        0,
        mojo.internal.InterfaceProxy(memoryInstrumentation.mojom.ClientProcessRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'processType', 12,
        0,
        memoryInstrumentation.mojom.ProcessTypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'processId', 16,
        0,
        mojoBase.mojom.ProcessIdSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'serviceName', 24,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
    ]);







mojo.internal.Union(
    memoryInstrumentation.mojom.RawAllocatorDumpEntryValueSpec.$, 'RawAllocatorDumpEntryValue',
    {
      'valueUint64': {
        'ordinal': 0,
        'type': mojo.internal.Uint64,
      },
      'valueString': {
        'ordinal': 1,
        'type': mojo.internal.String,
      },
    });

/**
 * @typedef { {
 *   valueUint64: (!number|undefined),
 *   valueString: (!string|undefined),
 * } }
 */
memoryInstrumentation.mojom.RawAllocatorDumpEntryValue;
