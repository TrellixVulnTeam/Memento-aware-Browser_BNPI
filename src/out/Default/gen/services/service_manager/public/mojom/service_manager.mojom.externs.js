// services/service_manager/public/mojom/service_manager.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
serviceManager.mojom.InstanceState = {};
serviceManager.mojom.InstanceState.kCreated;
serviceManager.mojom.InstanceState.kStarted;
serviceManager.mojom.InstanceState.kUnreachable;
goog.provide('serviceManager.mojom.ServiceManagerListener');
goog.provide('serviceManager.mojom.ServiceManagerListenerImpl');
goog.provide('serviceManager.mojom.ServiceManagerListenerPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
serviceManager.mojom.ServiceManagerListener;

/** @interface */
serviceManager.mojom.ServiceManagerListenerImpl = class {
  /**
   * @param { !Array<serviceManager.mojom.RunningServiceInfo> } runningServices
   */
  onInit(runningServices) {}
  /**
   * @param { !serviceManager.mojom.RunningServiceInfo } service
   */
  onServiceCreated(service) {}
  /**
   * @param { !serviceManager.mojom.Identity } identity
   * @param { !number } pidDeprecated
   */
  onServiceStarted(identity, pidDeprecated) {}
  /**
   * @param { !serviceManager.mojom.Identity } identity
   * @param { !number } pid
   */
  onServicePIDReceived(identity, pid) {}
  /**
   * @param { !serviceManager.mojom.Identity } identity
   */
  onServiceFailedToStart(identity) {}
  /**
   * @param { !serviceManager.mojom.Identity } identity
   */
  onServiceStopped(identity) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { serviceManager.mojom.ServiceManagerListenerImpl }
 */
serviceManager.mojom.ServiceManagerListenerPtr = class {
  /**
   * @param { !Array<serviceManager.mojom.RunningServiceInfo> } runningServices
   */
  onInit(runningServices) {}
  /**
   * @param { !serviceManager.mojom.RunningServiceInfo } service
   */
  onServiceCreated(service) {}
  /**
   * @param { !serviceManager.mojom.Identity } identity
   * @param { !number } pidDeprecated
   */
  onServiceStarted(identity, pidDeprecated) {}
  /**
   * @param { !serviceManager.mojom.Identity } identity
   * @param { !number } pid
   */
  onServicePIDReceived(identity, pid) {}
  /**
   * @param { !serviceManager.mojom.Identity } identity
   */
  onServiceFailedToStart(identity) {}
  /**
   * @param { !serviceManager.mojom.Identity } identity
   */
  onServiceStopped(identity) {}
};

goog.provide('serviceManager.mojom.ServiceManager');
goog.provide('serviceManager.mojom.ServiceManagerImpl');
goog.provide('serviceManager.mojom.ServiceManagerPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
serviceManager.mojom.ServiceManager;

/** @interface */
serviceManager.mojom.ServiceManagerImpl = class {
  /**
   * @param { !serviceManager.mojom.ServiceManagerListenerPtr } listener
   */
  addListener(listener) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { serviceManager.mojom.ServiceManagerImpl }
 */
serviceManager.mojom.ServiceManagerPtr = class {
  /**
   * @param { !serviceManager.mojom.ServiceManagerListenerPtr } listener
   */
  addListener(listener) {}
};

goog.provide('serviceManager.mojom.RunningServiceInfo');

serviceManager.mojom.RunningServiceInfo = class {
  constructor() {
    /** @type { !serviceManager.mojom.Identity } */
    this.identity;
    /** @type { !number } */
    this.pid;
    /** @type { !serviceManager.mojom.InstanceState } */
    this.state;
  }
};

goog.provide('serviceManager.mojom.ServiceManagerListener_OnInit_Params');

serviceManager.mojom.ServiceManagerListener_OnInit_Params = class {
  constructor() {
    /** @type { !Array<serviceManager.mojom.RunningServiceInfo> } */
    this.runningServices;
  }
};

goog.provide('serviceManager.mojom.ServiceManagerListener_OnServiceCreated_Params');

serviceManager.mojom.ServiceManagerListener_OnServiceCreated_Params = class {
  constructor() {
    /** @type { !serviceManager.mojom.RunningServiceInfo } */
    this.service;
  }
};

goog.provide('serviceManager.mojom.ServiceManagerListener_OnServiceStarted_Params');

serviceManager.mojom.ServiceManagerListener_OnServiceStarted_Params = class {
  constructor() {
    /** @type { !serviceManager.mojom.Identity } */
    this.identity;
    /** @type { !number } */
    this.pidDeprecated;
  }
};

goog.provide('serviceManager.mojom.ServiceManagerListener_OnServicePIDReceived_Params');

serviceManager.mojom.ServiceManagerListener_OnServicePIDReceived_Params = class {
  constructor() {
    /** @type { !serviceManager.mojom.Identity } */
    this.identity;
    /** @type { !number } */
    this.pid;
  }
};

goog.provide('serviceManager.mojom.ServiceManagerListener_OnServiceFailedToStart_Params');

serviceManager.mojom.ServiceManagerListener_OnServiceFailedToStart_Params = class {
  constructor() {
    /** @type { !serviceManager.mojom.Identity } */
    this.identity;
  }
};

goog.provide('serviceManager.mojom.ServiceManagerListener_OnServiceStopped_Params');

serviceManager.mojom.ServiceManagerListener_OnServiceStopped_Params = class {
  constructor() {
    /** @type { !serviceManager.mojom.Identity } */
    this.identity;
  }
};

goog.provide('serviceManager.mojom.ServiceManager_AddListener_Params');

serviceManager.mojom.ServiceManager_AddListener_Params = class {
  constructor() {
    /** @type { !serviceManager.mojom.ServiceManagerListenerPtr } */
    this.listener;
  }
};
