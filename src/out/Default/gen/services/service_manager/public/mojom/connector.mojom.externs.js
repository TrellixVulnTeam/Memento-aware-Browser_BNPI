// services/service_manager/public/mojom/connector.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
serviceManager.mojom.ConnectResult = {};
serviceManager.mojom.ConnectResult.SUCCEEDED;
serviceManager.mojom.ConnectResult.INVALID_ARGUMENT;
serviceManager.mojom.ConnectResult.ACCESS_DENIED;
/** @enum {number} */
serviceManager.mojom.BindInterfacePriority = {};
serviceManager.mojom.BindInterfacePriority.kImportant;
serviceManager.mojom.BindInterfacePriority.kBestEffort;
goog.provide('serviceManager.mojom.ProcessMetadata');
goog.provide('serviceManager.mojom.ProcessMetadataImpl');
goog.provide('serviceManager.mojom.ProcessMetadataPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
serviceManager.mojom.ProcessMetadata;

/** @interface */
serviceManager.mojom.ProcessMetadataImpl = class {
  /**
   * @param { !mojoBase.mojom.ProcessId } pid
   */
  setPID(pid) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { serviceManager.mojom.ProcessMetadataImpl }
 */
serviceManager.mojom.ProcessMetadataPtr = class {
  /**
   * @param { !mojoBase.mojom.ProcessId } pid
   */
  setPID(pid) {}
};

goog.provide('serviceManager.mojom.Connector');
goog.provide('serviceManager.mojom.ConnectorImpl');
goog.provide('serviceManager.mojom.ConnectorPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
serviceManager.mojom.Connector;

/** @interface */
serviceManager.mojom.ConnectorImpl = class {
  /**
   * @param { !serviceManager.mojom.ServiceFilter } filter
   * @param { !string } interfaceName
   * @param { !MojoHandle } interfacePipe
   * @param { !serviceManager.mojom.BindInterfacePriority } priority
   * @return {Promise}
   */
  bindInterface(filter, interfaceName, interfacePipe, priority) {}
  /**
   * @param { !string } serviceName
   * @return {Promise}
   */
  queryService(serviceName) {}
  /**
   * @param { !serviceManager.mojom.ServiceFilter } filter
   * @return {Promise}
   */
  warmService(filter) {}
  /**
   * @param { !serviceManager.mojom.Identity } identity
   * @param { !MojoHandle } service
   * @param { mojo.InterfaceRequest } metadataReceiver
   * @return {Promise}
   */
  registerServiceInstance(identity, service, metadataReceiver) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   */
  clone(receiver) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { serviceManager.mojom.ConnectorImpl }
 */
serviceManager.mojom.ConnectorPtr = class {
  /**
   * @param { !serviceManager.mojom.ServiceFilter } filter
   * @param { !string } interfaceName
   * @param { !MojoHandle } interfacePipe
   * @param { !serviceManager.mojom.BindInterfacePriority } priority
   * @return {Promise}
   */
  bindInterface(filter, interfaceName, interfacePipe, priority) {}
  /**
   * @param { !string } serviceName
   * @return {Promise}
   */
  queryService(serviceName) {}
  /**
   * @param { !serviceManager.mojom.ServiceFilter } filter
   * @return {Promise}
   */
  warmService(filter) {}
  /**
   * @param { !serviceManager.mojom.Identity } identity
   * @param { !MojoHandle } service
   * @param { mojo.InterfaceRequest } metadataReceiver
   * @return {Promise}
   */
  registerServiceInstance(identity, service, metadataReceiver) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   */
  clone(receiver) {}
};

goog.provide('serviceManager.mojom.Identity');

serviceManager.mojom.Identity = class {
  constructor() {
    /** @type { !string } */
    this.name;
    /** @type { !mojoBase.mojom.Token } */
    this.instanceGroup;
    /** @type { !mojoBase.mojom.Token } */
    this.instanceId;
    /** @type { !mojoBase.mojom.Token } */
    this.globallyUniqueId;
  }
};

goog.provide('serviceManager.mojom.ServiceInfo');

serviceManager.mojom.ServiceInfo = class {
  constructor() {
    /** @type { !string } */
    this.sandboxType;
  }
};

goog.provide('serviceManager.mojom.ProcessMetadata_SetPID_Params');

serviceManager.mojom.ProcessMetadata_SetPID_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.ProcessId } */
    this.pid;
  }
};

goog.provide('serviceManager.mojom.Connector_BindInterface_Params');

serviceManager.mojom.Connector_BindInterface_Params = class {
  constructor() {
    /** @type { !serviceManager.mojom.ServiceFilter } */
    this.filter;
    /** @type { !string } */
    this.interfaceName;
    /** @type { !MojoHandle } */
    this.interfacePipe;
    /** @type { !serviceManager.mojom.BindInterfacePriority } */
    this.priority;
  }
};

goog.provide('serviceManager.mojom.Connector_BindInterface_ResponseParams');

serviceManager.mojom.Connector_BindInterface_ResponseParams = class {
  constructor() {
    /** @type { !serviceManager.mojom.ConnectResult } */
    this.result;
    /** @type { serviceManager.mojom.Identity } */
    this.identity;
  }
};

goog.provide('serviceManager.mojom.Connector_QueryService_Params');

serviceManager.mojom.Connector_QueryService_Params = class {
  constructor() {
    /** @type { !string } */
    this.serviceName;
  }
};

goog.provide('serviceManager.mojom.Connector_QueryService_ResponseParams');

serviceManager.mojom.Connector_QueryService_ResponseParams = class {
  constructor() {
    /** @type { serviceManager.mojom.ServiceInfo } */
    this.info;
  }
};

goog.provide('serviceManager.mojom.Connector_WarmService_Params');

serviceManager.mojom.Connector_WarmService_Params = class {
  constructor() {
    /** @type { !serviceManager.mojom.ServiceFilter } */
    this.filter;
  }
};

goog.provide('serviceManager.mojom.Connector_WarmService_ResponseParams');

serviceManager.mojom.Connector_WarmService_ResponseParams = class {
  constructor() {
    /** @type { !serviceManager.mojom.ConnectResult } */
    this.result;
    /** @type { serviceManager.mojom.Identity } */
    this.identity;
  }
};

goog.provide('serviceManager.mojom.Connector_RegisterServiceInstance_Params');

serviceManager.mojom.Connector_RegisterServiceInstance_Params = class {
  constructor() {
    /** @type { !serviceManager.mojom.Identity } */
    this.identity;
    /** @type { !MojoHandle } */
    this.service;
    /** @type { mojo.InterfaceRequest } */
    this.metadataReceiver;
  }
};

goog.provide('serviceManager.mojom.Connector_RegisterServiceInstance_ResponseParams');

serviceManager.mojom.Connector_RegisterServiceInstance_ResponseParams = class {
  constructor() {
    /** @type { !serviceManager.mojom.ConnectResult } */
    this.result;
  }
};

goog.provide('serviceManager.mojom.Connector_Clone_Params');

serviceManager.mojom.Connector_Clone_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.receiver;
  }
};
