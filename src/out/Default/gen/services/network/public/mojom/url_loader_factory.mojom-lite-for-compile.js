// services/network/public/mojom/url_loader_factory.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('network.mojom.MutableNetworkTrafficAnnotationTag');
goog.require('network.mojom.URLRequest');



goog.provide('network.mojom.URL_LOAD_OPTION_NONE');
/**
 * @const { !number }
 * @export
 */
network.mojom.URL_LOAD_OPTION_NONE =
    0;
goog.provide('network.mojom.URL_LOAD_OPTION_SEND_SSL_INFO_WITH_RESPONSE');
/**
 * @const { !number }
 * @export
 */
network.mojom.URL_LOAD_OPTION_SEND_SSL_INFO_WITH_RESPONSE =
    1;
goog.provide('network.mojom.URL_LOAD_OPTION_SNIFF_MIME_TYPE');
/**
 * @const { !number }
 * @export
 */
network.mojom.URL_LOAD_OPTION_SNIFF_MIME_TYPE =
    2;
goog.provide('network.mojom.URL_LOAD_OPTION_SYNCHRONOUS');
/**
 * @const { !number }
 * @export
 */
network.mojom.URL_LOAD_OPTION_SYNCHRONOUS =
    4;
goog.provide('network.mojom.URL_LOAD_OPTION_SEND_SSL_INFO_FOR_CERTIFICATE_ERROR');
/**
 * @const { !number }
 * @export
 */
network.mojom.URL_LOAD_OPTION_SEND_SSL_INFO_FOR_CERTIFICATE_ERROR =
    8;
goog.provide('network.mojom.URL_LOAD_OPTION_USE_HEADER_CLIENT');
/**
 * @const { !number }
 * @export
 */
network.mojom.URL_LOAD_OPTION_USE_HEADER_CLIENT =
    16;
goog.provide('network.mojom.URL_LOAD_OPTION_BLOCK_ALL_COOKIES');
/**
 * @const { !number }
 * @export
 */
network.mojom.URL_LOAD_OPTION_BLOCK_ALL_COOKIES =
    32;
goog.provide('network.mojom.URL_LOAD_OPTION_BLOCK_THIRD_PARTY_COOKIES');
/**
 * @const { !number }
 * @export
 */
network.mojom.URL_LOAD_OPTION_BLOCK_THIRD_PARTY_COOKIES =
    64;
goog.provide('network.mojom.URL_LOAD_OPTION_AS_CORS_PREFLIGHT');
/**
 * @const { !number }
 * @export
 */
network.mojom.URL_LOAD_OPTION_AS_CORS_PREFLIGHT =
    128;



goog.provide('network.mojom.URLLoaderFactory');
goog.provide('network.mojom.URLLoaderFactoryReceiver');
goog.provide('network.mojom.URLLoaderFactoryCallbackRouter');
goog.provide('network.mojom.URLLoaderFactoryInterface');
goog.provide('network.mojom.URLLoaderFactoryRemote');
goog.provide('network.mojom.URLLoaderFactoryPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.URLLoaderFactoryPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};

/** @interface */
network.mojom.URLLoaderFactoryInterface = class {
  
  /**
   * @param { !network.mojom.URLLoaderPendingReceiver } loader
   * @param { !number } routingId
   * @param { !number } requestId
   * @param { !number } options
   * @param { !network.mojom.URLRequest } request
   * @param { !network.mojom.URLLoaderClientRemote } client
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   */

  createLoaderAndStart(loader, routingId, requestId, options, request, client, trafficAnnotation) {}
  
  /**
   * @param { !network.mojom.URLLoaderFactoryPendingReceiver } factory
   */

  clone(factory) {}
};

/**
 * @export
 * @implements { network.mojom.URLLoaderFactoryInterface }
 */
network.mojom.URLLoaderFactoryRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.URLLoaderFactoryPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.URLLoaderFactoryPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.URLLoaderFactoryPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !network.mojom.URLLoaderPendingReceiver } loader
   * @param { !number } routingId
   * @param { !number } requestId
   * @param { !number } options
   * @param { !network.mojom.URLRequest } request
   * @param { !network.mojom.URLLoaderClientRemote } client
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   */

  createLoaderAndStart(
      loader,
      routingId,
      requestId,
      options,
      request,
      client,
      trafficAnnotation) {
    this.proxy.sendMessage(
        1357806557,
        network.mojom.URLLoaderFactory_CreateLoaderAndStart_ParamsSpec.$,
        null,
        [
          loader,
          routingId,
          requestId,
          options,
          request,
          client,
          trafficAnnotation
        ]);
  }

  
  /**
   * @param { !network.mojom.URLLoaderFactoryPendingReceiver } factory
   */

  clone(
      factory) {
    this.proxy.sendMessage(
        550306755,
        network.mojom.URLLoaderFactory_Clone_ParamsSpec.$,
        null,
        [
          factory
        ]);
  }
};

/**
 * An object which receives request messages for the URLLoaderFactory
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.URLLoaderFactoryReceiver = class {
  /**
   * @param {!network.mojom.URLLoaderFactoryInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.URLLoaderFactoryRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.URLLoaderFactoryRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.URLLoaderFactoryRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1357806557,
        network.mojom.URLLoaderFactory_CreateLoaderAndStart_ParamsSpec.$,
        null,
        impl.createLoaderAndStart.bind(impl));
    this.helper_internal_.registerHandler(
        550306755,
        network.mojom.URLLoaderFactory_Clone_ParamsSpec.$,
        null,
        impl.clone.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.URLLoaderFactory = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.URLLoaderFactory";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.URLLoaderFactoryRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.URLLoaderFactoryRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the URLLoaderFactory
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.URLLoaderFactoryCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.URLLoaderFactoryRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.URLLoaderFactoryRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createLoaderAndStart =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1357806557,
        network.mojom.URLLoaderFactory_CreateLoaderAndStart_ParamsSpec.$,
        null,
        this.createLoaderAndStart.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clone =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        550306755,
        network.mojom.URLLoaderFactory_Clone_ParamsSpec.$,
        null,
        this.clone.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('network.mojom.URLLoaderFactory_CreateLoaderAndStart_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.URLLoaderFactory_CreateLoaderAndStart_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

goog.provide('network.mojom.URLLoaderFactory_Clone_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.URLLoaderFactory_Clone_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    network.mojom.URLLoaderFactory_CreateLoaderAndStart_ParamsSpec.$,
    'URLLoaderFactory_CreateLoaderAndStart_Params',
    40,
    [
      mojo.internal.StructField(
        'loader', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.URLLoaderPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'routingId', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'requestId', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'options', 12,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'request', 16,
        0,
        network.mojom.URLRequestSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'client', 24,
        0,
        mojo.internal.InterfaceProxy(network.mojom.URLLoaderClientRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'trafficAnnotation', 32,
        0,
        network.mojom.MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */),
    ]);



goog.provide('network.mojom.URLLoaderFactory_CreateLoaderAndStart_Params');

/** @record */
network.mojom.URLLoaderFactory_CreateLoaderAndStart_Params = class {
  constructor() {
    /** @type { !network.mojom.URLLoaderPendingReceiver } */
    this.loader;
    /** @type { !number } */
    this.routingId;
    /** @type { !number } */
    this.requestId;
    /** @type { !number } */
    this.options;
    /** @type { !network.mojom.URLRequest } */
    this.request;
    /** @type { !network.mojom.URLLoaderClientRemote } */
    this.client;
    /** @type { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
  }
};



mojo.internal.Struct(
    network.mojom.URLLoaderFactory_Clone_ParamsSpec.$,
    'URLLoaderFactory_Clone_Params',
    8,
    [
      mojo.internal.StructField(
        'factory', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.URLLoaderFactoryPendingReceiver),
        null,
        false /* nullable */),
    ]);



goog.provide('network.mojom.URLLoaderFactory_Clone_Params');

/** @record */
network.mojom.URLLoaderFactory_Clone_Params = class {
  constructor() {
    /** @type { !network.mojom.URLLoaderFactoryPendingReceiver } */
    this.factory;
  }
};

