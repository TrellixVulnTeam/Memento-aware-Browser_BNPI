// services/network/public/mojom/udp_socket.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



goog.provide('network.mojom.UDPSocket');
goog.provide('network.mojom.UDPSocketImpl');
goog.provide('network.mojom.UDPSocketPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.UDPSocket;

/** @interface */
network.mojom.UDPSocketImpl = class {
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { network.mojom.UDPSocketOptions } socketOptions
   * @return {Promise}
   */
  bind(localAddr, socketOptions) {}
  /**
   * @param { !network.mojom.IPEndPoint } remoteAddr
   * @param { network.mojom.UDPSocketOptions } socketOptions
   * @return {Promise}
   */
  connect(remoteAddr, socketOptions) {}
  /**
   * @param { !boolean } broadcast
   * @return {Promise}
   */
  setBroadcast(broadcast) {}
  /**
   * @param { !number } sendBufferSize
   * @return {Promise}
   */
  setSendBufferSize(sendBufferSize) {}
  /**
   * @param { !number } receiveBufferSize
   * @return {Promise}
   */
  setReceiveBufferSize(receiveBufferSize) {}
  /**
   * @param { !network.mojom.IPAddress } groupAddress
   * @return {Promise}
   */
  joinGroup(groupAddress) {}
  /**
   * @param { !network.mojom.IPAddress } groupAddress
   * @return {Promise}
   */
  leaveGroup(groupAddress) {}
  /**
   * @param { !number } numAdditionalDatagrams
   */
  receiveMore(numAdditionalDatagrams) {}
  /**
   * @param { !number } numAdditionalDatagrams
   * @param { !number } bufferSize
   */
  receiveMoreWithBufferSize(numAdditionalDatagrams, bufferSize) {}
  /**
   * @param { !network.mojom.IPEndPoint } destAddr
   * @param { !mojoBase.mojom.ReadOnlyBuffer } data
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @return {Promise}
   */
  sendTo(destAddr, data, trafficAnnotation) {}
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } data
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @return {Promise}
   */
  send(data, trafficAnnotation) {}
  /**
   */
  close() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.UDPSocketImpl }
 */
network.mojom.UDPSocketPtr = class {
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { network.mojom.UDPSocketOptions } socketOptions
   * @return {Promise}
   */
  bind(localAddr, socketOptions) {}
  /**
   * @param { !network.mojom.IPEndPoint } remoteAddr
   * @param { network.mojom.UDPSocketOptions } socketOptions
   * @return {Promise}
   */
  connect(remoteAddr, socketOptions) {}
  /**
   * @param { !boolean } broadcast
   * @return {Promise}
   */
  setBroadcast(broadcast) {}
  /**
   * @param { !number } sendBufferSize
   * @return {Promise}
   */
  setSendBufferSize(sendBufferSize) {}
  /**
   * @param { !number } receiveBufferSize
   * @return {Promise}
   */
  setReceiveBufferSize(receiveBufferSize) {}
  /**
   * @param { !network.mojom.IPAddress } groupAddress
   * @return {Promise}
   */
  joinGroup(groupAddress) {}
  /**
   * @param { !network.mojom.IPAddress } groupAddress
   * @return {Promise}
   */
  leaveGroup(groupAddress) {}
  /**
   * @param { !number } numAdditionalDatagrams
   */
  receiveMore(numAdditionalDatagrams) {}
  /**
   * @param { !number } numAdditionalDatagrams
   * @param { !number } bufferSize
   */
  receiveMoreWithBufferSize(numAdditionalDatagrams, bufferSize) {}
  /**
   * @param { !network.mojom.IPEndPoint } destAddr
   * @param { !mojoBase.mojom.ReadOnlyBuffer } data
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @return {Promise}
   */
  sendTo(destAddr, data, trafficAnnotation) {}
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } data
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @return {Promise}
   */
  send(data, trafficAnnotation) {}
  /**
   */
  close() {}
};

goog.provide('network.mojom.UDPSocketListener');
goog.provide('network.mojom.UDPSocketListenerImpl');
goog.provide('network.mojom.UDPSocketListenerPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.UDPSocketListener;

/** @interface */
network.mojom.UDPSocketListenerImpl = class {
  /**
   * @param { !number } result
   * @param { network.mojom.IPEndPoint } srcAddr
   * @param { mojoBase.mojom.ReadOnlyBuffer } data
   */
  onReceived(result, srcAddr, data) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.UDPSocketListenerImpl }
 */
network.mojom.UDPSocketListenerPtr = class {
  /**
   * @param { !number } result
   * @param { network.mojom.IPEndPoint } srcAddr
   * @param { mojoBase.mojom.ReadOnlyBuffer } data
   */
  onReceived(result, srcAddr, data) {}
};

goog.provide('network.mojom.UDPSocketOptions');

network.mojom.UDPSocketOptions = class {
  constructor() {
    /** @type { !boolean } */
    this.allowAddressReuse;
    /** @type { !boolean } */
    this.allowBroadcast;
    /** @type { !boolean } */
    this.allowAddressSharingForMulticast;
    /** @type { !boolean } */
    this.multicastLoopbackMode;
    /** @type { !number } */
    this.multicastInterface;
    /** @type { !number } */
    this.multicastTimeToLive;
    /** @type { !number } */
    this.sendBufferSize;
    /** @type { !number } */
    this.receiveBufferSize;
  }
};

goog.provide('network.mojom.UDPSocket_Bind_Params');

network.mojom.UDPSocket_Bind_Params = class {
  constructor() {
    /** @type { !network.mojom.IPEndPoint } */
    this.localAddr;
    /** @type { network.mojom.UDPSocketOptions } */
    this.socketOptions;
  }
};

goog.provide('network.mojom.UDPSocket_Bind_ResponseParams');

network.mojom.UDPSocket_Bind_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { network.mojom.IPEndPoint } */
    this.localAddrOut;
  }
};

goog.provide('network.mojom.UDPSocket_Connect_Params');

network.mojom.UDPSocket_Connect_Params = class {
  constructor() {
    /** @type { !network.mojom.IPEndPoint } */
    this.remoteAddr;
    /** @type { network.mojom.UDPSocketOptions } */
    this.socketOptions;
  }
};

goog.provide('network.mojom.UDPSocket_Connect_ResponseParams');

network.mojom.UDPSocket_Connect_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { network.mojom.IPEndPoint } */
    this.localAddrOut;
  }
};

goog.provide('network.mojom.UDPSocket_SetBroadcast_Params');

network.mojom.UDPSocket_SetBroadcast_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.broadcast;
  }
};

goog.provide('network.mojom.UDPSocket_SetBroadcast_ResponseParams');

network.mojom.UDPSocket_SetBroadcast_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
  }
};

goog.provide('network.mojom.UDPSocket_SetSendBufferSize_Params');

network.mojom.UDPSocket_SetSendBufferSize_Params = class {
  constructor() {
    /** @type { !number } */
    this.sendBufferSize;
  }
};

goog.provide('network.mojom.UDPSocket_SetSendBufferSize_ResponseParams');

network.mojom.UDPSocket_SetSendBufferSize_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
  }
};

goog.provide('network.mojom.UDPSocket_SetReceiveBufferSize_Params');

network.mojom.UDPSocket_SetReceiveBufferSize_Params = class {
  constructor() {
    /** @type { !number } */
    this.receiveBufferSize;
  }
};

goog.provide('network.mojom.UDPSocket_SetReceiveBufferSize_ResponseParams');

network.mojom.UDPSocket_SetReceiveBufferSize_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
  }
};

goog.provide('network.mojom.UDPSocket_JoinGroup_Params');

network.mojom.UDPSocket_JoinGroup_Params = class {
  constructor() {
    /** @type { !network.mojom.IPAddress } */
    this.groupAddress;
  }
};

goog.provide('network.mojom.UDPSocket_JoinGroup_ResponseParams');

network.mojom.UDPSocket_JoinGroup_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
  }
};

goog.provide('network.mojom.UDPSocket_LeaveGroup_Params');

network.mojom.UDPSocket_LeaveGroup_Params = class {
  constructor() {
    /** @type { !network.mojom.IPAddress } */
    this.groupAddress;
  }
};

goog.provide('network.mojom.UDPSocket_LeaveGroup_ResponseParams');

network.mojom.UDPSocket_LeaveGroup_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
  }
};

goog.provide('network.mojom.UDPSocket_ReceiveMore_Params');

network.mojom.UDPSocket_ReceiveMore_Params = class {
  constructor() {
    /** @type { !number } */
    this.numAdditionalDatagrams;
  }
};

goog.provide('network.mojom.UDPSocket_ReceiveMoreWithBufferSize_Params');

network.mojom.UDPSocket_ReceiveMoreWithBufferSize_Params = class {
  constructor() {
    /** @type { !number } */
    this.numAdditionalDatagrams;
    /** @type { !number } */
    this.bufferSize;
  }
};

goog.provide('network.mojom.UDPSocket_SendTo_Params');

network.mojom.UDPSocket_SendTo_Params = class {
  constructor() {
    /** @type { !network.mojom.IPEndPoint } */
    this.destAddr;
    /** @type { !mojoBase.mojom.ReadOnlyBuffer } */
    this.data;
    /** @type { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
  }
};

goog.provide('network.mojom.UDPSocket_SendTo_ResponseParams');

network.mojom.UDPSocket_SendTo_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
  }
};

goog.provide('network.mojom.UDPSocket_Send_Params');

network.mojom.UDPSocket_Send_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.ReadOnlyBuffer } */
    this.data;
    /** @type { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
  }
};

goog.provide('network.mojom.UDPSocket_Send_ResponseParams');

network.mojom.UDPSocket_Send_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
  }
};

goog.provide('network.mojom.UDPSocket_Close_Params');

network.mojom.UDPSocket_Close_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.UDPSocketListener_OnReceived_Params');

network.mojom.UDPSocketListener_OnReceived_Params = class {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { network.mojom.IPEndPoint } */
    this.srcAddr;
    /** @type { mojoBase.mojom.ReadOnlyBuffer } */
    this.data;
  }
};
