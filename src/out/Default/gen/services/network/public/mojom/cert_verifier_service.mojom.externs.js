// services/network/public/mojom/cert_verifier_service.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



goog.provide('certVerifier.mojom.URLLoaderFactoryConnector');
goog.provide('certVerifier.mojom.URLLoaderFactoryConnectorImpl');
goog.provide('certVerifier.mojom.URLLoaderFactoryConnectorPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
certVerifier.mojom.URLLoaderFactoryConnector;

/** @interface */
certVerifier.mojom.URLLoaderFactoryConnectorImpl = class {
  /**
   * @param { !mojo.InterfaceRequest } urlLoaderFactory
   */
  createURLLoaderFactory(urlLoaderFactory) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { certVerifier.mojom.URLLoaderFactoryConnectorImpl }
 */
certVerifier.mojom.URLLoaderFactoryConnectorPtr = class {
  /**
   * @param { !mojo.InterfaceRequest } urlLoaderFactory
   */
  createURLLoaderFactory(urlLoaderFactory) {}
};

goog.provide('certVerifier.mojom.CertVerifierService');
goog.provide('certVerifier.mojom.CertVerifierServiceImpl');
goog.provide('certVerifier.mojom.CertVerifierServicePtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
certVerifier.mojom.CertVerifierService;

/** @interface */
certVerifier.mojom.CertVerifierServiceImpl = class {
  /**
   * @param { !network.mojom.URLLoaderFactoryPtr } urlLoaderFactory
   * @param { certVerifier.mojom.URLLoaderFactoryConnectorPtr } reconnector
   */
  enableNetworkAccess(urlLoaderFactory, reconnector) {}
  /**
   * @param { !certVerifier.mojom.RequestParams } params
   * @param { !certVerifier.mojom.CertVerifierRequestPtr } certVerifierRequest
   */
  verify(params, certVerifierRequest) {}
  /**
   * @param { !certVerifier.mojom.CertVerifierConfig } config
   */
  setConfig(config) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { certVerifier.mojom.CertVerifierServiceImpl }
 */
certVerifier.mojom.CertVerifierServicePtr = class {
  /**
   * @param { !network.mojom.URLLoaderFactoryPtr } urlLoaderFactory
   * @param { certVerifier.mojom.URLLoaderFactoryConnectorPtr } reconnector
   */
  enableNetworkAccess(urlLoaderFactory, reconnector) {}
  /**
   * @param { !certVerifier.mojom.RequestParams } params
   * @param { !certVerifier.mojom.CertVerifierRequestPtr } certVerifierRequest
   */
  verify(params, certVerifierRequest) {}
  /**
   * @param { !certVerifier.mojom.CertVerifierConfig } config
   */
  setConfig(config) {}
};

goog.provide('certVerifier.mojom.CertVerifierRequest');
goog.provide('certVerifier.mojom.CertVerifierRequestImpl');
goog.provide('certVerifier.mojom.CertVerifierRequestPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
certVerifier.mojom.CertVerifierRequest;

/** @interface */
certVerifier.mojom.CertVerifierRequestImpl = class {
  /**
   * @param { !network.mojom.CertVerifyResult } result
   * @param { !number } netError
   */
  complete(result, netError) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { certVerifier.mojom.CertVerifierRequestImpl }
 */
certVerifier.mojom.CertVerifierRequestPtr = class {
  /**
   * @param { !network.mojom.CertVerifyResult } result
   * @param { !number } netError
   */
  complete(result, netError) {}
};

goog.provide('certVerifier.mojom.RequestParams');

certVerifier.mojom.RequestParams = class {
  constructor() {
    /** @type { !network.mojom.X509Certificate } */
    this.certificate;
    /** @type { !string } */
    this.hostname;
    /** @type { !number } */
    this.flags;
    /** @type { !string } */
    this.ocspResponse;
    /** @type { !string } */
    this.sctList;
  }
};

goog.provide('certVerifier.mojom.CertVerifierConfig');

certVerifier.mojom.CertVerifierConfig = class {
  constructor() {
    /** @type { !boolean } */
    this.enableRevChecking;
    /** @type { !boolean } */
    this.requireRevCheckingLocalAnchors;
    /** @type { !boolean } */
    this.enableSha1LocalAnchors;
    /** @type { !boolean } */
    this.disableSymantecEnforcement;
    /** @type { !Object } */
    this.crlSet;
    /** @type { !Array<network.mojom.X509Certificate> } */
    this.additionalTrustAnchors;
  }
};

goog.provide('certVerifier.mojom.URLLoaderFactoryConnector_CreateURLLoaderFactory_Params');

certVerifier.mojom.URLLoaderFactoryConnector_CreateURLLoaderFactory_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.urlLoaderFactory;
  }
};

goog.provide('certVerifier.mojom.CertVerifierService_EnableNetworkAccess_Params');

certVerifier.mojom.CertVerifierService_EnableNetworkAccess_Params = class {
  constructor() {
    /** @type { !network.mojom.URLLoaderFactoryPtr } */
    this.urlLoaderFactory;
    /** @type { certVerifier.mojom.URLLoaderFactoryConnectorPtr } */
    this.reconnector;
  }
};

goog.provide('certVerifier.mojom.CertVerifierService_Verify_Params');

certVerifier.mojom.CertVerifierService_Verify_Params = class {
  constructor() {
    /** @type { !certVerifier.mojom.RequestParams } */
    this.params;
    /** @type { !certVerifier.mojom.CertVerifierRequestPtr } */
    this.certVerifierRequest;
  }
};

goog.provide('certVerifier.mojom.CertVerifierService_SetConfig_Params');

certVerifier.mojom.CertVerifierService_SetConfig_Params = class {
  constructor() {
    /** @type { !certVerifier.mojom.CertVerifierConfig } */
    this.config;
  }
};

goog.provide('certVerifier.mojom.CertVerifierRequest_Complete_Params');

certVerifier.mojom.CertVerifierRequest_Complete_Params = class {
  constructor() {
    /** @type { !network.mojom.CertVerifyResult } */
    this.result;
    /** @type { !number } */
    this.netError;
  }
};
