// services/network/public/mojom/proxy_resolving_socket.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



goog.provide('network.mojom.ProxyResolvingSocket');
goog.provide('network.mojom.ProxyResolvingSocketImpl');
goog.provide('network.mojom.ProxyResolvingSocketPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.ProxyResolvingSocket;

/** @interface */
network.mojom.ProxyResolvingSocketImpl = class {
  /**
   * @param { !network.mojom.HostPortPair } hostPortPair
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !mojo.InterfaceRequest } receiver
   * @param { network.mojom.SocketObserverPtr } observer
   * @return {Promise}
   */
  upgradeToTLS(hostPortPair, trafficAnnotation, receiver, observer) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.ProxyResolvingSocketImpl }
 */
network.mojom.ProxyResolvingSocketPtr = class {
  /**
   * @param { !network.mojom.HostPortPair } hostPortPair
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !mojo.InterfaceRequest } receiver
   * @param { network.mojom.SocketObserverPtr } observer
   * @return {Promise}
   */
  upgradeToTLS(hostPortPair, trafficAnnotation, receiver, observer) {}
};

goog.provide('network.mojom.ProxyResolvingSocketFactory');
goog.provide('network.mojom.ProxyResolvingSocketFactoryImpl');
goog.provide('network.mojom.ProxyResolvingSocketFactoryPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.ProxyResolvingSocketFactory;

/** @interface */
network.mojom.ProxyResolvingSocketFactoryImpl = class {
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { network.mojom.ProxyResolvingSocketOptions } options
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !mojo.InterfaceRequest } socket
   * @param { network.mojom.SocketObserverPtr } observer
   * @return {Promise}
   */
  createProxyResolvingSocket(url, networkIsolationKey, options, trafficAnnotation, socket, observer) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.ProxyResolvingSocketFactoryImpl }
 */
network.mojom.ProxyResolvingSocketFactoryPtr = class {
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { network.mojom.ProxyResolvingSocketOptions } options
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !mojo.InterfaceRequest } socket
   * @param { network.mojom.SocketObserverPtr } observer
   * @return {Promise}
   */
  createProxyResolvingSocket(url, networkIsolationKey, options, trafficAnnotation, socket, observer) {}
};

goog.provide('network.mojom.ProxyResolvingSocketOptions');

network.mojom.ProxyResolvingSocketOptions = class {
  constructor() {
    /** @type { !boolean } */
    this.useTls;
    /** @type { !boolean } */
    this.fakeTlsHandshake;
  }
};

goog.provide('network.mojom.ProxyResolvingSocket_UpgradeToTLS_Params');

network.mojom.ProxyResolvingSocket_UpgradeToTLS_Params = class {
  constructor() {
    /** @type { !network.mojom.HostPortPair } */
    this.hostPortPair;
    /** @type { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
    /** @type { !mojo.InterfaceRequest } */
    this.receiver;
    /** @type { network.mojom.SocketObserverPtr } */
    this.observer;
  }
};

goog.provide('network.mojom.ProxyResolvingSocket_UpgradeToTLS_ResponseParams');

network.mojom.ProxyResolvingSocket_UpgradeToTLS_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.netError;
    /** @type { MojoHandle } */
    this.receiveStream;
    /** @type { MojoHandle } */
    this.sendStream;
  }
};

goog.provide('network.mojom.ProxyResolvingSocketFactory_CreateProxyResolvingSocket_Params');

network.mojom.ProxyResolvingSocketFactory_CreateProxyResolvingSocket_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { network.mojom.ProxyResolvingSocketOptions } */
    this.options;
    /** @type { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
    /** @type { !mojo.InterfaceRequest } */
    this.socket;
    /** @type { network.mojom.SocketObserverPtr } */
    this.observer;
  }
};

goog.provide('network.mojom.ProxyResolvingSocketFactory_CreateProxyResolvingSocket_ResponseParams');

network.mojom.ProxyResolvingSocketFactory_CreateProxyResolvingSocket_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { MojoHandle } */
    this.receiveStream;
    /** @type { network.mojom.IPEndPoint } */
    this.localAddr;
    /** @type { network.mojom.IPEndPoint } */
    this.peerAddr;
    /** @type { MojoHandle } */
    this.sendStream;
  }
};
