// services/network/public/mojom/proxy_lookup_client.mojom-lite-for-compile.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';

goog.require('mojo.internal');
goog.require('mojo.internal.interfaceSupport');

goog.require('proxyResolver.mojom.ProxyInfo');






goog.provide('network.mojom.ProxyLookupClient');
goog.provide('network.mojom.ProxyLookupClientReceiver');
goog.provide('network.mojom.ProxyLookupClientCallbackRouter');
goog.provide('network.mojom.ProxyLookupClientInterface');
goog.provide('network.mojom.ProxyLookupClientRemote');
goog.provide('network.mojom.ProxyLookupClientPendingReceiver');


/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.ProxyLookupClientPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};

/** @interface */
network.mojom.ProxyLookupClientInterface = class {
  
  /**
   * @param { !number } netError
   * @param { ?proxyResolver.mojom.ProxyInfo } proxyInfo
   */

  onProxyLookupComplete(netError, proxyInfo) {}
};

/**
 * @export
 * @implements { network.mojom.ProxyLookupClientInterface }
 */
network.mojom.ProxyLookupClientRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.ProxyLookupClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.ProxyLookupClientPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.ProxyLookupClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } netError
   * @param { ?proxyResolver.mojom.ProxyInfo } proxyInfo
   */

  onProxyLookupComplete(
      netError,
      proxyInfo) {
    this.proxy.sendMessage(
        420387900,
        network.mojom.ProxyLookupClient_OnProxyLookupComplete_ParamsSpec.$,
        null,
        [
          netError,
          proxyInfo
        ]);
  }
};

/**
 * An object which receives request messages for the ProxyLookupClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.ProxyLookupClientReceiver = class {
  /**
   * @param {!network.mojom.ProxyLookupClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.ProxyLookupClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.ProxyLookupClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.ProxyLookupClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        420387900,
        network.mojom.ProxyLookupClient_OnProxyLookupComplete_ParamsSpec.$,
        null,
        impl.onProxyLookupComplete.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.ProxyLookupClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.ProxyLookupClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.ProxyLookupClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.ProxyLookupClientRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the ProxyLookupClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.ProxyLookupClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.ProxyLookupClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.ProxyLookupClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onProxyLookupComplete =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        420387900,
        network.mojom.ProxyLookupClient_OnProxyLookupComplete_ParamsSpec.$,
        null,
        this.onProxyLookupComplete.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};


goog.provide('network.mojom.ProxyLookupClient_OnProxyLookupComplete_ParamsSpec');
/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.ProxyLookupClient_OnProxyLookupComplete_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    network.mojom.ProxyLookupClient_OnProxyLookupComplete_ParamsSpec.$,
    'ProxyLookupClient_OnProxyLookupComplete_Params',
    16,
    [
      mojo.internal.StructField(
        'netError', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'proxyInfo', 8,
        0,
        proxyResolver.mojom.ProxyInfoSpec.$,
        null,
        true /* nullable */),
    ]);



goog.provide('network.mojom.ProxyLookupClient_OnProxyLookupComplete_Params');

/** @record */
network.mojom.ProxyLookupClient_OnProxyLookupComplete_Params = class {
  constructor() {
    /** @type { !number } */
    this.netError;
    /** @type { (proxyResolver.mojom.ProxyInfo|undefined) } */
    this.proxyInfo;
  }
};

