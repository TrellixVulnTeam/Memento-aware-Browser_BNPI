// services/network/public/mojom/content_security_policy.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
network.mojom.ContentSecurityPolicyType = {};
network.mojom.ContentSecurityPolicyType.kReport;
network.mojom.ContentSecurityPolicyType.kEnforce;
/** @enum {number} */
network.mojom.ContentSecurityPolicySource = {};
network.mojom.ContentSecurityPolicySource.kHTTP;
network.mojom.ContentSecurityPolicySource.kMeta;
network.mojom.ContentSecurityPolicySource.kOriginPolicy;
/** @enum {number} */
network.mojom.CSPDisposition = {};
network.mojom.CSPDisposition.CHECK;
network.mojom.CSPDisposition.DO_NOT_CHECK;
/** @enum {number} */
network.mojom.CSPDirectiveName = {};
network.mojom.CSPDirectiveName.Unknown;
network.mojom.CSPDirectiveName.DefaultSrc;
network.mojom.CSPDirectiveName.ChildSrc;
network.mojom.CSPDirectiveName.FrameSrc;
network.mojom.CSPDirectiveName.FormAction;
network.mojom.CSPDirectiveName.NavigateTo;
network.mojom.CSPDirectiveName.FrameAncestors;
goog.provide('network.mojom.ContentSecurityPolicyHeader');

network.mojom.ContentSecurityPolicyHeader = class {
  constructor() {
    /** @type { !string } */
    this.headerValue;
    /** @type { !network.mojom.ContentSecurityPolicyType } */
    this.type;
    /** @type { !network.mojom.ContentSecurityPolicySource } */
    this.source;
  }
};

goog.provide('network.mojom.CSPSource');

network.mojom.CSPSource = class {
  constructor() {
    /** @type { !string } */
    this.scheme;
    /** @type { !string } */
    this.host;
    /** @type { !number } */
    this.port;
    /** @type { !boolean } */
    this.isHostWildcard;
    /** @type { !boolean } */
    this.isPortWildcard;
    /** @type { !string } */
    this.path;
  }
};

goog.provide('network.mojom.CSPSourceList');

network.mojom.CSPSourceList = class {
  constructor() {
    /** @type { !Array<network.mojom.CSPSource> } */
    this.sources;
    /** @type { !boolean } */
    this.allowSelf;
    /** @type { !boolean } */
    this.allowStar;
    /** @type { !boolean } */
    this.allowResponseRedirects;
  }
};

goog.provide('network.mojom.ContentSecurityPolicy');

network.mojom.ContentSecurityPolicy = class {
  constructor() {
    /** @type { !Map<network.mojom.CSPDirectiveName, network.mojom.CSPSourceList> } */
    this.directives;
    /** @type { !boolean } */
    this.upgradeInsecureRequests;
    /** @type { !boolean } */
    this.treatAsPublicAddress;
    /** @type { !boolean } */
    this.useReportingApi;
    /** @type { !network.mojom.WebSandboxFlags } */
    this.sandbox;
    /** @type { !network.mojom.ContentSecurityPolicyHeader } */
    this.header;
    /** @type { !Array<string> } */
    this.reportEndpoints;
  }
};

goog.provide('network.mojom.CSPViolation');

network.mojom.CSPViolation = class {
  constructor() {
    /** @type { !string } */
    this.directive;
    /** @type { !string } */
    this.effectiveDirective;
    /** @type { !string } */
    this.consoleMessage;
    /** @type { !url.mojom.Url } */
    this.blockedUrl;
    /** @type { !Array<string> } */
    this.reportEndpoints;
    /** @type { !boolean } */
    this.useReportingApi;
    /** @type { !boolean } */
    this.afterRedirect;
    /** @type { !network.mojom.ContentSecurityPolicyType } */
    this.type;
    /** @type { !string } */
    this.header;
    /** @type { !network.mojom.SourceLocation } */
    this.sourceLocation;
  }
};
