// services/network/public/mojom/cookie_manager.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
network.mojom.CookieAccessDelegateType = {};
network.mojom.CookieAccessDelegateType.USE_CONTENT_SETTINGS;
network.mojom.CookieAccessDelegateType.ALWAYS_LEGACY;
/** @enum {number} */
network.mojom.CookiePriority = {};
network.mojom.CookiePriority.LOW;
network.mojom.CookiePriority.MEDIUM;
network.mojom.CookiePriority.HIGH;
/** @enum {number} */
network.mojom.CookieSourceScheme = {};
network.mojom.CookieSourceScheme.kUnset;
network.mojom.CookieSourceScheme.kNonSecure;
network.mojom.CookieSourceScheme.kSecure;
/** @enum {number} */
network.mojom.CookieSameSite = {};
network.mojom.CookieSameSite.UNSPECIFIED;
network.mojom.CookieSameSite.NO_RESTRICTION;
network.mojom.CookieSameSite.LAX_MODE;
network.mojom.CookieSameSite.STRICT_MODE;
/** @enum {number} */
network.mojom.CookieEffectiveSameSite = {};
network.mojom.CookieEffectiveSameSite.kNoRestriction;
network.mojom.CookieEffectiveSameSite.kLaxMode;
network.mojom.CookieEffectiveSameSite.kStrictMode;
network.mojom.CookieEffectiveSameSite.kLaxModeAllowUnsafe;
/** @enum {number} */
network.mojom.ContextType = {};
network.mojom.ContextType.CROSS_SITE;
network.mojom.ContextType.SAME_SITE_LAX_METHOD_UNSAFE;
network.mojom.ContextType.SAME_SITE_LAX;
network.mojom.ContextType.SAME_SITE_STRICT;
/** @enum {number} */
network.mojom.CookieAccessSemantics = {};
network.mojom.CookieAccessSemantics.UNKNOWN;
network.mojom.CookieAccessSemantics.NONLEGACY;
network.mojom.CookieAccessSemantics.LEGACY;
/** @enum {number} */
network.mojom.CookieChangeCause = {};
network.mojom.CookieChangeCause.INSERTED;
network.mojom.CookieChangeCause.EXPLICIT;
network.mojom.CookieChangeCause.UNKNOWN_DELETION;
network.mojom.CookieChangeCause.OVERWRITE;
network.mojom.CookieChangeCause.EXPIRED;
network.mojom.CookieChangeCause.EVICTED;
network.mojom.CookieChangeCause.EXPIRED_OVERWRITE;
/** @enum {number} */
network.mojom.CookieDeletionSessionControl = {};
network.mojom.CookieDeletionSessionControl.IGNORE_CONTROL;
network.mojom.CookieDeletionSessionControl.SESSION_COOKIES;
network.mojom.CookieDeletionSessionControl.PERSISTENT_COOKIES;
goog.provide('network.mojom.CookieChangeListener');
goog.provide('network.mojom.CookieChangeListenerImpl');
goog.provide('network.mojom.CookieChangeListenerPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.CookieChangeListener;

/** @interface */
network.mojom.CookieChangeListenerImpl = class {
  /**
   * @param { !network.mojom.CookieChangeInfo } change
   */
  onCookieChange(change) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.CookieChangeListenerImpl }
 */
network.mojom.CookieChangeListenerPtr = class {
  /**
   * @param { !network.mojom.CookieChangeInfo } change
   */
  onCookieChange(change) {}
};

goog.provide('network.mojom.CookieManager');
goog.provide('network.mojom.CookieManagerImpl');
goog.provide('network.mojom.CookieManagerPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.CookieManager;

/** @interface */
network.mojom.CookieManagerImpl = class {
  /**
   * @return {Promise}
   */
  getAllCookies() {}
  /**
   * @return {Promise}
   */
  getAllCookiesWithAccessSemantics() {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.CookieOptions } cookieOptions
   * @return {Promise}
   */
  getCookieList(url, cookieOptions) {}
  /**
   * @param { !network.mojom.CanonicalCookie } cookie
   * @param { !url.mojom.Url } sourceUrl
   * @param { !network.mojom.CookieOptions } cookieOptions
   * @return {Promise}
   */
  setCanonicalCookie(cookie, sourceUrl, cookieOptions) {}
  /**
   * @param { !network.mojom.CanonicalCookie } cookie
   * @return {Promise}
   */
  deleteCanonicalCookie(cookie) {}
  /**
   * @param { !network.mojom.CookieDeletionFilter } filter
   * @return {Promise}
   */
  deleteCookies(filter) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { string } name
   * @param { !network.mojom.CookieChangeListenerPtr } listener
   */
  addCookieChangeListener(url, name, listener) {}
  /**
   * @param { !network.mojom.CookieChangeListenerPtr } notificationPointer
   */
  addGlobalChangeListener(notificationPointer) {}
  /**
   * @param { !mojo.InterfaceRequest } newInterface
   */
  cloneInterface(newInterface) {}
  /**
   * @return {Promise}
   */
  flushCookieStore() {}
  /**
   * @param { !boolean } allow
   * @return {Promise}
   */
  allowFileSchemeCookies(allow) {}
  /**
   * @param { !Array<contentSettings.mojom.ContentSettingPatternSource> } settings
   */
  setContentSettings(settings) {}
  /**
   */
  setForceKeepSessionState() {}
  /**
   * @param { !boolean } block
   */
  blockThirdPartyCookies(block) {}
  /**
   * @param { !Array<contentSettings.mojom.ContentSettingPatternSource> } settings
   */
  setContentSettingsForLegacyCookieAccess(settings) {}
  /**
   * @param { !Array<contentSettings.mojom.ContentSettingPatternSource> } settings
   * @return {Promise}
   */
  setStorageAccessGrantSettings(settings) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.CookieManagerImpl }
 */
network.mojom.CookieManagerPtr = class {
  /**
   * @return {Promise}
   */
  getAllCookies() {}
  /**
   * @return {Promise}
   */
  getAllCookiesWithAccessSemantics() {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.CookieOptions } cookieOptions
   * @return {Promise}
   */
  getCookieList(url, cookieOptions) {}
  /**
   * @param { !network.mojom.CanonicalCookie } cookie
   * @param { !url.mojom.Url } sourceUrl
   * @param { !network.mojom.CookieOptions } cookieOptions
   * @return {Promise}
   */
  setCanonicalCookie(cookie, sourceUrl, cookieOptions) {}
  /**
   * @param { !network.mojom.CanonicalCookie } cookie
   * @return {Promise}
   */
  deleteCanonicalCookie(cookie) {}
  /**
   * @param { !network.mojom.CookieDeletionFilter } filter
   * @return {Promise}
   */
  deleteCookies(filter) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { string } name
   * @param { !network.mojom.CookieChangeListenerPtr } listener
   */
  addCookieChangeListener(url, name, listener) {}
  /**
   * @param { !network.mojom.CookieChangeListenerPtr } notificationPointer
   */
  addGlobalChangeListener(notificationPointer) {}
  /**
   * @param { !mojo.InterfaceRequest } newInterface
   */
  cloneInterface(newInterface) {}
  /**
   * @return {Promise}
   */
  flushCookieStore() {}
  /**
   * @param { !boolean } allow
   * @return {Promise}
   */
  allowFileSchemeCookies(allow) {}
  /**
   * @param { !Array<contentSettings.mojom.ContentSettingPatternSource> } settings
   */
  setContentSettings(settings) {}
  /**
   */
  setForceKeepSessionState() {}
  /**
   * @param { !boolean } block
   */
  blockThirdPartyCookies(block) {}
  /**
   * @param { !Array<contentSettings.mojom.ContentSettingPatternSource> } settings
   */
  setContentSettingsForLegacyCookieAccess(settings) {}
  /**
   * @param { !Array<contentSettings.mojom.ContentSettingPatternSource> } settings
   * @return {Promise}
   */
  setStorageAccessGrantSettings(settings) {}
};

goog.provide('network.mojom.CookieManagerParams');

network.mojom.CookieManagerParams = class {
  constructor() {
    /** @type { !boolean } */
    this.blockThirdPartyCookies;
    /** @type { !boolean } */
    this.allowFileSchemeCookies;
    /** @type { !network.mojom.CookieAccessDelegateType } */
    this.cookieAccessDelegateType;
    /** @type { !Array<contentSettings.mojom.ContentSettingPatternSource> } */
    this.settings;
    /** @type { !Array<string> } */
    this.secureOriginCookiesAllowedSchemes;
    /** @type { !Array<string> } */
    this.matchingSchemeCookiesAllowedSchemes;
    /** @type { !Array<string> } */
    this.thirdPartyCookiesAllowedSchemes;
    /** @type { !Array<contentSettings.mojom.ContentSettingPatternSource> } */
    this.settingsForLegacyCookieAccess;
    /** @type { !Array<contentSettings.mojom.ContentSettingPatternSource> } */
    this.settingsForStorageAccess;
  }
};

goog.provide('network.mojom.CookieSameSiteContext');

network.mojom.CookieSameSiteContext = class {
  constructor() {
    /** @type { !network.mojom.ContextType } */
    this.context;
    /** @type { !network.mojom.ContextType } */
    this.schemefulContext;
  }
};

goog.provide('network.mojom.CookieOptions');

network.mojom.CookieOptions = class {
  constructor() {
    /** @type { !boolean } */
    this.excludeHttponly;
    /** @type { !boolean } */
    this.updateAccessTime;
    /** @type { !boolean } */
    this.returnExcludedCookies;
    /** @type { !network.mojom.CookieSameSiteContext } */
    this.sameSiteCookieContext;
  }
};

goog.provide('network.mojom.CanonicalCookie');

network.mojom.CanonicalCookie = class {
  constructor() {
    /** @type { !string } */
    this.name;
    /** @type { !string } */
    this.value;
    /** @type { !string } */
    this.domain;
    /** @type { !string } */
    this.path;
    /** @type { !mojoBase.mojom.Time } */
    this.creation;
    /** @type { !mojoBase.mojom.Time } */
    this.expiry;
    /** @type { !mojoBase.mojom.Time } */
    this.lastAccess;
    /** @type { !boolean } */
    this.secure;
    /** @type { !boolean } */
    this.httponly;
    /** @type { !network.mojom.CookieSameSite } */
    this.siteRestrictions;
    /** @type { !network.mojom.CookiePriority } */
    this.priority;
    /** @type { !network.mojom.CookieSourceScheme } */
    this.sourceScheme;
  }
};

goog.provide('network.mojom.CookieInclusionStatus');

network.mojom.CookieInclusionStatus = class {
  constructor() {
    /** @type { !number } */
    this.exclusionReasons;
    /** @type { !number } */
    this.warningReasons;
  }
};

goog.provide('network.mojom.CookieWithStatus');

network.mojom.CookieWithStatus = class {
  constructor() {
    /** @type { !network.mojom.CanonicalCookie } */
    this.cookie;
    /** @type { !network.mojom.CookieInclusionStatus } */
    this.status;
  }
};

goog.provide('network.mojom.CookieAndLineWithStatus');

network.mojom.CookieAndLineWithStatus = class {
  constructor() {
    /** @type { network.mojom.CanonicalCookie } */
    this.cookie;
    /** @type { !string } */
    this.cookieString;
    /** @type { !network.mojom.CookieInclusionStatus } */
    this.status;
  }
};

goog.provide('network.mojom.CookieAccessResult');

network.mojom.CookieAccessResult = class {
  constructor() {
    /** @type { !network.mojom.CookieEffectiveSameSite } */
    this.effectiveSameSite;
    /** @type { !network.mojom.CookieInclusionStatus } */
    this.status;
  }
};

goog.provide('network.mojom.CookieWithAccessResult');

network.mojom.CookieWithAccessResult = class {
  constructor() {
    /** @type { !network.mojom.CanonicalCookie } */
    this.cookie;
    /** @type { !network.mojom.CookieAccessResult } */
    this.accessResult;
  }
};

goog.provide('network.mojom.CookieChangeInfo');

network.mojom.CookieChangeInfo = class {
  constructor() {
    /** @type { !network.mojom.CanonicalCookie } */
    this.cookie;
    /** @type { !network.mojom.CookieAccessSemantics } */
    this.accessSemantics;
    /** @type { !network.mojom.CookieChangeCause } */
    this.cause;
  }
};

goog.provide('network.mojom.CookieDeletionFilter');

network.mojom.CookieDeletionFilter = class {
  constructor() {
    /** @type { mojoBase.mojom.Time } */
    this.createdAfterTime;
    /** @type { mojoBase.mojom.Time } */
    this.createdBeforeTime;
    /** @type { Array<string> } */
    this.excludingDomains;
    /** @type { Array<string> } */
    this.includingDomains;
    /** @type { string } */
    this.cookieName;
    /** @type { string } */
    this.hostName;
    /** @type { url.mojom.Url } */
    this.url;
    /** @type { !network.mojom.CookieDeletionSessionControl } */
    this.sessionControl;
  }
};

goog.provide('network.mojom.CookieChangeListener_OnCookieChange_Params');

network.mojom.CookieChangeListener_OnCookieChange_Params = class {
  constructor() {
    /** @type { !network.mojom.CookieChangeInfo } */
    this.change;
  }
};

goog.provide('network.mojom.CookieManager_GetAllCookies_Params');

network.mojom.CookieManager_GetAllCookies_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.CookieManager_GetAllCookies_ResponseParams');

network.mojom.CookieManager_GetAllCookies_ResponseParams = class {
  constructor() {
    /** @type { !Array<network.mojom.CanonicalCookie> } */
    this.cookies;
  }
};

goog.provide('network.mojom.CookieManager_GetAllCookiesWithAccessSemantics_Params');

network.mojom.CookieManager_GetAllCookiesWithAccessSemantics_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.CookieManager_GetAllCookiesWithAccessSemantics_ResponseParams');

network.mojom.CookieManager_GetAllCookiesWithAccessSemantics_ResponseParams = class {
  constructor() {
    /** @type { !Array<network.mojom.CanonicalCookie> } */
    this.cookies;
    /** @type { !Array<network.mojom.CookieAccessSemantics> } */
    this.accessSemanticsList;
  }
};

goog.provide('network.mojom.CookieManager_GetCookieList_Params');

network.mojom.CookieManager_GetCookieList_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !network.mojom.CookieOptions } */
    this.cookieOptions;
  }
};

goog.provide('network.mojom.CookieManager_GetCookieList_ResponseParams');

network.mojom.CookieManager_GetCookieList_ResponseParams = class {
  constructor() {
    /** @type { !Array<network.mojom.CookieWithAccessResult> } */
    this.cookies;
    /** @type { !Array<network.mojom.CookieWithAccessResult> } */
    this.excludedCookies;
  }
};

goog.provide('network.mojom.CookieManager_SetCanonicalCookie_Params');

network.mojom.CookieManager_SetCanonicalCookie_Params = class {
  constructor() {
    /** @type { !network.mojom.CanonicalCookie } */
    this.cookie;
    /** @type { !url.mojom.Url } */
    this.sourceUrl;
    /** @type { !network.mojom.CookieOptions } */
    this.cookieOptions;
  }
};

goog.provide('network.mojom.CookieManager_SetCanonicalCookie_ResponseParams');

network.mojom.CookieManager_SetCanonicalCookie_ResponseParams = class {
  constructor() {
    /** @type { !network.mojom.CookieInclusionStatus } */
    this.status;
  }
};

goog.provide('network.mojom.CookieManager_DeleteCanonicalCookie_Params');

network.mojom.CookieManager_DeleteCanonicalCookie_Params = class {
  constructor() {
    /** @type { !network.mojom.CanonicalCookie } */
    this.cookie;
  }
};

goog.provide('network.mojom.CookieManager_DeleteCanonicalCookie_ResponseParams');

network.mojom.CookieManager_DeleteCanonicalCookie_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('network.mojom.CookieManager_DeleteCookies_Params');

network.mojom.CookieManager_DeleteCookies_Params = class {
  constructor() {
    /** @type { !network.mojom.CookieDeletionFilter } */
    this.filter;
  }
};

goog.provide('network.mojom.CookieManager_DeleteCookies_ResponseParams');

network.mojom.CookieManager_DeleteCookies_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.numDeleted;
  }
};

goog.provide('network.mojom.CookieManager_AddCookieChangeListener_Params');

network.mojom.CookieManager_AddCookieChangeListener_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { string } */
    this.name;
    /** @type { !network.mojom.CookieChangeListenerPtr } */
    this.listener;
  }
};

goog.provide('network.mojom.CookieManager_AddGlobalChangeListener_Params');

network.mojom.CookieManager_AddGlobalChangeListener_Params = class {
  constructor() {
    /** @type { !network.mojom.CookieChangeListenerPtr } */
    this.notificationPointer;
  }
};

goog.provide('network.mojom.CookieManager_CloneInterface_Params');

network.mojom.CookieManager_CloneInterface_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.newInterface;
  }
};

goog.provide('network.mojom.CookieManager_FlushCookieStore_Params');

network.mojom.CookieManager_FlushCookieStore_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.CookieManager_FlushCookieStore_ResponseParams');

network.mojom.CookieManager_FlushCookieStore_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.CookieManager_AllowFileSchemeCookies_Params');

network.mojom.CookieManager_AllowFileSchemeCookies_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.allow;
  }
};

goog.provide('network.mojom.CookieManager_AllowFileSchemeCookies_ResponseParams');

network.mojom.CookieManager_AllowFileSchemeCookies_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('network.mojom.CookieManager_SetContentSettings_Params');

network.mojom.CookieManager_SetContentSettings_Params = class {
  constructor() {
    /** @type { !Array<contentSettings.mojom.ContentSettingPatternSource> } */
    this.settings;
  }
};

goog.provide('network.mojom.CookieManager_SetForceKeepSessionState_Params');

network.mojom.CookieManager_SetForceKeepSessionState_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.CookieManager_BlockThirdPartyCookies_Params');

network.mojom.CookieManager_BlockThirdPartyCookies_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.block;
  }
};

goog.provide('network.mojom.CookieManager_SetContentSettingsForLegacyCookieAccess_Params');

network.mojom.CookieManager_SetContentSettingsForLegacyCookieAccess_Params = class {
  constructor() {
    /** @type { !Array<contentSettings.mojom.ContentSettingPatternSource> } */
    this.settings;
  }
};

goog.provide('network.mojom.CookieManager_SetStorageAccessGrantSettings_Params');

network.mojom.CookieManager_SetStorageAccessGrantSettings_Params = class {
  constructor() {
    /** @type { !Array<contentSettings.mojom.ContentSettingPatternSource> } */
    this.settings;
  }
};

goog.provide('network.mojom.CookieManager_SetStorageAccessGrantSettings_ResponseParams');

network.mojom.CookieManager_SetStorageAccessGrantSettings_ResponseParams = class {
  constructor() {
  }
};
