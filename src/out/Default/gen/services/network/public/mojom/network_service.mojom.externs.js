// services/network/public/mojom/network_service.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



goog.provide('network.mojom.NetworkServiceClient');
goog.provide('network.mojom.NetworkServiceClientImpl');
goog.provide('network.mojom.NetworkServiceClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.NetworkServiceClient;

/** @interface */
network.mojom.NetworkServiceClientImpl = class {
  /**
   * @param { !Array<network.mojom.LoadInfo> } infos
   * @return {Promise}
   */
  onLoadingStateUpdate(infos) {}
  /**
   * @param { !number } networkTrafficAnnotationIdHash
   * @param { !number } recvBytes
   * @param { !number } sentBytes
   */
  onDataUseUpdate(networkTrafficAnnotationIdHash, recvBytes, sentBytes) {}
  /**
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !string } devtoolRequestId
   * @param { !Array<network.mojom.CookieWithAccessResult> } cookiesWithAccessResult
   * @param { !Array<network.mojom.HttpRawHeaderPair> } headers
   */
  onRawRequest(processId, routingId, devtoolRequestId, cookiesWithAccessResult, headers) {}
  /**
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !string } devtoolRequestId
   * @param { !Array<network.mojom.CookieAndLineWithStatus> } cookiesWithStatus
   * @param { !Array<network.mojom.HttpRawHeaderPair> } headers
   * @param { string } rawResponseHeaders
   */
  onRawResponse(processId, routingId, devtoolRequestId, cookiesWithStatus, headers, rawResponseHeaders) {}
  /**
   * @param { !number } processId
   * @param { !number } renderFrameId
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !network.mojom.URLRequest } request
   * @param { !url.mojom.Url } initiatorUrl
   */
  onCorsPreflightRequest(processId, renderFrameId, devtoolRequestId, request, initiatorUrl) {}
  /**
   * @param { !number } processId
   * @param { !number } renderFrameId
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.URLResponseHead } head
   */
  onCorsPreflightResponse(processId, renderFrameId, devtoolRequestId, url, head) {}
  /**
   * @param { !number } processId
   * @param { !number } renderFrameId
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !network.mojom.URLLoaderCompletionStatus } status
   */
  onCorsPreflightRequestCompleted(processId, renderFrameId, devtoolRequestId, status) {}
  /**
   * @param { !string } isolatedWorldHostname
   */
  logCrossOriginFetchFromContentScript3(isolatedWorldHostname) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.NetworkServiceClientImpl }
 */
network.mojom.NetworkServiceClientPtr = class {
  /**
   * @param { !Array<network.mojom.LoadInfo> } infos
   * @return {Promise}
   */
  onLoadingStateUpdate(infos) {}
  /**
   * @param { !number } networkTrafficAnnotationIdHash
   * @param { !number } recvBytes
   * @param { !number } sentBytes
   */
  onDataUseUpdate(networkTrafficAnnotationIdHash, recvBytes, sentBytes) {}
  /**
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !string } devtoolRequestId
   * @param { !Array<network.mojom.CookieWithAccessResult> } cookiesWithAccessResult
   * @param { !Array<network.mojom.HttpRawHeaderPair> } headers
   */
  onRawRequest(processId, routingId, devtoolRequestId, cookiesWithAccessResult, headers) {}
  /**
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !string } devtoolRequestId
   * @param { !Array<network.mojom.CookieAndLineWithStatus> } cookiesWithStatus
   * @param { !Array<network.mojom.HttpRawHeaderPair> } headers
   * @param { string } rawResponseHeaders
   */
  onRawResponse(processId, routingId, devtoolRequestId, cookiesWithStatus, headers, rawResponseHeaders) {}
  /**
   * @param { !number } processId
   * @param { !number } renderFrameId
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !network.mojom.URLRequest } request
   * @param { !url.mojom.Url } initiatorUrl
   */
  onCorsPreflightRequest(processId, renderFrameId, devtoolRequestId, request, initiatorUrl) {}
  /**
   * @param { !number } processId
   * @param { !number } renderFrameId
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.URLResponseHead } head
   */
  onCorsPreflightResponse(processId, renderFrameId, devtoolRequestId, url, head) {}
  /**
   * @param { !number } processId
   * @param { !number } renderFrameId
   * @param { !mojoBase.mojom.UnguessableToken } devtoolRequestId
   * @param { !network.mojom.URLLoaderCompletionStatus } status
   */
  onCorsPreflightRequestCompleted(processId, renderFrameId, devtoolRequestId, status) {}
  /**
   * @param { !string } isolatedWorldHostname
   */
  logCrossOriginFetchFromContentScript3(isolatedWorldHostname) {}
};

goog.provide('network.mojom.NetworkService');
goog.provide('network.mojom.NetworkServiceImpl');
goog.provide('network.mojom.NetworkServicePtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.NetworkService;

/** @interface */
network.mojom.NetworkServiceImpl = class {
  /**
   * @param { !network.mojom.NetworkServiceClientPtr } client
   * @param { !network.mojom.NetworkServiceParams } params
   */
  setClient(client, params) {}
  /**
   * @param { !mojoBase.mojom.File } file
   * @param { !network.mojom.NetLogCaptureMode } captureMode
   * @param { !mojoBase.mojom.DictionaryValue } constants
   */
  startNetLog(file, captureMode, constants) {}
  /**
   * @param { !network.mojom.NetLogProxySourcePtr } proxySource
   * @param { !mojo.InterfaceRequest } proxySink
   */
  attachNetLogProxy(proxySource, proxySink) {}
  /**
   * @param { !mojoBase.mojom.File } file
   */
  setSSLKeyLogFile(file) {}
  /**
   * @param { !mojo.InterfaceRequest } context
   * @param { !network.mojom.NetworkContextParams } params
   */
  createNetworkContext(context, params) {}
  /**
   * @param { !boolean } insecureDnsClientEnabled
   * @param { !network.mojom.SecureDnsMode } secureDnsMode
   * @param { Array<network.mojom.DnsOverHttpsServer> } dnsOverHttpsServers
   */
  configureStubHostResolver(insecureDnsClientEnabled, secureDnsMode, dnsOverHttpsServers) {}
  /**
   */
  disableQuic() {}
  /**
   * @param { !network.mojom.HttpAuthStaticParams } httpAuthStaticParams
   */
  setUpHttpAuth(httpAuthStaticParams) {}
  /**
   * @param { !network.mojom.HttpAuthDynamicParams } httpAuthDynamicParams
   */
  configureHttpAuthPrefs(httpAuthDynamicParams) {}
  /**
   * @param { !number } processId
   * @param { !Array<url.mojom.Origin> } origins
   */
  setRawHeadersAccess(processId, origins) {}
  /**
   * @param { !number } maxConnections
   */
  setMaxConnectionsPerProxy(maxConnections) {}
  /**
   * @param { !mojo.InterfaceRequest } networkChangeManager
   */
  getNetworkChangeManager(networkChangeManager) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   */
  getNetworkQualityEstimatorManager(receiver) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   */
  getDnsConfigChangeManager(receiver) {}
  /**
   * @return {Promise}
   */
  getTotalNetworkUsages() {}
  /**
   * @param { !number } policy
   * @return {Promise}
   */
  getNetworkList(policy) {}
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } crlSet
   * @return {Promise}
   */
  updateCRLSet(crlSet) {}
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } config
   * @return {Promise}
   */
  updateLegacyTLSConfig(config) {}
  /**
   */
  onCertDBChanged() {}
  /**
   * @param { !network.mojom.CryptConfig } cryptConfig
   */
  setCryptConfig(cryptConfig) {}
  /**
   * @param { !number } processId
   */
  addCorbExceptionForPlugin(processId) {}
  /**
   * @param { !number } processId
   * @param { !url.mojom.Origin } allowedRequestInitiator
   */
  addAllowedRequestInitiatorForPlugin(processId, allowedRequestInitiator) {}
  /**
   * @param { !number } processId
   */
  removeSecurityExceptionsForPlugin(processId) {}
  /**
   * @param { !mojoBase.mojom.MemoryPressureLevel } memoryPressureLevel
   */
  onMemoryPressure(memoryPressureLevel) {}
  /**
   * @param { !number } count
   */
  onPeerToPeerConnectionsCountChange(count) {}
  /**
   * @param { !Array<network.mojom.EnvironmentVariable> } environment
   */
  setEnvironment(environment) {}
  /**
   * @param { !string } rawCommitments
   * @return {Promise}
   */
  setTrustTokenKeyCommitments(rawCommitments) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   */
  bindTestInterface(receiver) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.NetworkServiceImpl }
 */
network.mojom.NetworkServicePtr = class {
  /**
   * @param { !network.mojom.NetworkServiceClientPtr } client
   * @param { !network.mojom.NetworkServiceParams } params
   */
  setClient(client, params) {}
  /**
   * @param { !mojoBase.mojom.File } file
   * @param { !network.mojom.NetLogCaptureMode } captureMode
   * @param { !mojoBase.mojom.DictionaryValue } constants
   */
  startNetLog(file, captureMode, constants) {}
  /**
   * @param { !network.mojom.NetLogProxySourcePtr } proxySource
   * @param { !mojo.InterfaceRequest } proxySink
   */
  attachNetLogProxy(proxySource, proxySink) {}
  /**
   * @param { !mojoBase.mojom.File } file
   */
  setSSLKeyLogFile(file) {}
  /**
   * @param { !mojo.InterfaceRequest } context
   * @param { !network.mojom.NetworkContextParams } params
   */
  createNetworkContext(context, params) {}
  /**
   * @param { !boolean } insecureDnsClientEnabled
   * @param { !network.mojom.SecureDnsMode } secureDnsMode
   * @param { Array<network.mojom.DnsOverHttpsServer> } dnsOverHttpsServers
   */
  configureStubHostResolver(insecureDnsClientEnabled, secureDnsMode, dnsOverHttpsServers) {}
  /**
   */
  disableQuic() {}
  /**
   * @param { !network.mojom.HttpAuthStaticParams } httpAuthStaticParams
   */
  setUpHttpAuth(httpAuthStaticParams) {}
  /**
   * @param { !network.mojom.HttpAuthDynamicParams } httpAuthDynamicParams
   */
  configureHttpAuthPrefs(httpAuthDynamicParams) {}
  /**
   * @param { !number } processId
   * @param { !Array<url.mojom.Origin> } origins
   */
  setRawHeadersAccess(processId, origins) {}
  /**
   * @param { !number } maxConnections
   */
  setMaxConnectionsPerProxy(maxConnections) {}
  /**
   * @param { !mojo.InterfaceRequest } networkChangeManager
   */
  getNetworkChangeManager(networkChangeManager) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   */
  getNetworkQualityEstimatorManager(receiver) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   */
  getDnsConfigChangeManager(receiver) {}
  /**
   * @return {Promise}
   */
  getTotalNetworkUsages() {}
  /**
   * @param { !number } policy
   * @return {Promise}
   */
  getNetworkList(policy) {}
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } crlSet
   * @return {Promise}
   */
  updateCRLSet(crlSet) {}
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } config
   * @return {Promise}
   */
  updateLegacyTLSConfig(config) {}
  /**
   */
  onCertDBChanged() {}
  /**
   * @param { !network.mojom.CryptConfig } cryptConfig
   */
  setCryptConfig(cryptConfig) {}
  /**
   * @param { !number } processId
   */
  addCorbExceptionForPlugin(processId) {}
  /**
   * @param { !number } processId
   * @param { !url.mojom.Origin } allowedRequestInitiator
   */
  addAllowedRequestInitiatorForPlugin(processId, allowedRequestInitiator) {}
  /**
   * @param { !number } processId
   */
  removeSecurityExceptionsForPlugin(processId) {}
  /**
   * @param { !mojoBase.mojom.MemoryPressureLevel } memoryPressureLevel
   */
  onMemoryPressure(memoryPressureLevel) {}
  /**
   * @param { !number } count
   */
  onPeerToPeerConnectionsCountChange(count) {}
  /**
   * @param { !Array<network.mojom.EnvironmentVariable> } environment
   */
  setEnvironment(environment) {}
  /**
   * @param { !string } rawCommitments
   * @return {Promise}
   */
  setTrustTokenKeyCommitments(rawCommitments) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   */
  bindTestInterface(receiver) {}
};

goog.provide('network.mojom.LoadInfo');

network.mojom.LoadInfo = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.routingId;
    /** @type { !string } */
    this.host;
    /** @type { !number } */
    this.loadState;
    /** @type { !mojoBase.mojom.String16 } */
    this.stateParam;
    /** @type { !number } */
    this.uploadPosition;
    /** @type { !number } */
    this.uploadSize;
  }
};

goog.provide('network.mojom.HttpAuthStaticParams');

network.mojom.HttpAuthStaticParams = class {
  constructor() {
    /** @type { !Array<string> } */
    this.supportedSchemes;
    /** @type { !string } */
    this.gssapiLibraryName;
  }
};

goog.provide('network.mojom.HttpAuthDynamicParams');

network.mojom.HttpAuthDynamicParams = class {
  constructor() {
    /** @type { !string } */
    this.serverAllowlist;
    /** @type { !string } */
    this.delegateAllowlist;
    /** @type { !boolean } */
    this.delegateByKdcPolicy;
    /** @type { !boolean } */
    this.negotiateDisableCnameLookup;
    /** @type { !boolean } */
    this.enableNegotiatePort;
    /** @type { !boolean } */
    this.ntlmV2Enabled;
    /** @type { !boolean } */
    this.allowGssapiLibraryLoad;
    /** @type { !string } */
    this.androidNegotiateAccountType;
  }
};

goog.provide('network.mojom.CryptConfig');

network.mojom.CryptConfig = class {
  constructor() {
    /** @type { !string } */
    this.store;
    /** @type { !string } */
    this.productName;
    /** @type { !boolean } */
    this.shouldUsePreference;
    /** @type { !mojoBase.mojom.FilePath } */
    this.userDataPath;
  }
};

goog.provide('network.mojom.EnvironmentVariable');

network.mojom.EnvironmentVariable = class {
  constructor() {
    /** @type { !string } */
    this.name;
    /** @type { !string } */
    this.value;
  }
};

goog.provide('network.mojom.NetworkServiceParams');

network.mojom.NetworkServiceParams = class {
  constructor() {
    /** @type { !network.mojom.ConnectionType } */
    this.initialConnectionType;
    /** @type { !network.mojom.ConnectionSubtype } */
    this.initialConnectionSubtype;
    /** @type { !Array<network.mojom.EnvironmentVariable> } */
    this.environment;
  }
};

goog.provide('network.mojom.NetworkServiceClient_OnLoadingStateUpdate_Params');

network.mojom.NetworkServiceClient_OnLoadingStateUpdate_Params = class {
  constructor() {
    /** @type { !Array<network.mojom.LoadInfo> } */
    this.infos;
  }
};

goog.provide('network.mojom.NetworkServiceClient_OnLoadingStateUpdate_ResponseParams');

network.mojom.NetworkServiceClient_OnLoadingStateUpdate_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkServiceClient_OnDataUseUpdate_Params');

network.mojom.NetworkServiceClient_OnDataUseUpdate_Params = class {
  constructor() {
    /** @type { !number } */
    this.networkTrafficAnnotationIdHash;
    /** @type { !number } */
    this.recvBytes;
    /** @type { !number } */
    this.sentBytes;
  }
};

goog.provide('network.mojom.NetworkServiceClient_OnRawRequest_Params');

network.mojom.NetworkServiceClient_OnRawRequest_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.routingId;
    /** @type { !string } */
    this.devtoolRequestId;
    /** @type { !Array<network.mojom.CookieWithAccessResult> } */
    this.cookiesWithAccessResult;
    /** @type { !Array<network.mojom.HttpRawHeaderPair> } */
    this.headers;
  }
};

goog.provide('network.mojom.NetworkServiceClient_OnRawResponse_Params');

network.mojom.NetworkServiceClient_OnRawResponse_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.routingId;
    /** @type { !string } */
    this.devtoolRequestId;
    /** @type { !Array<network.mojom.CookieAndLineWithStatus> } */
    this.cookiesWithStatus;
    /** @type { !Array<network.mojom.HttpRawHeaderPair> } */
    this.headers;
    /** @type { string } */
    this.rawResponseHeaders;
  }
};

goog.provide('network.mojom.NetworkServiceClient_OnCorsPreflightRequest_Params');

network.mojom.NetworkServiceClient_OnCorsPreflightRequest_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.renderFrameId;
    /** @type { !mojoBase.mojom.UnguessableToken } */
    this.devtoolRequestId;
    /** @type { !network.mojom.URLRequest } */
    this.request;
    /** @type { !url.mojom.Url } */
    this.initiatorUrl;
  }
};

goog.provide('network.mojom.NetworkServiceClient_OnCorsPreflightResponse_Params');

network.mojom.NetworkServiceClient_OnCorsPreflightResponse_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.renderFrameId;
    /** @type { !mojoBase.mojom.UnguessableToken } */
    this.devtoolRequestId;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !network.mojom.URLResponseHead } */
    this.head;
  }
};

goog.provide('network.mojom.NetworkServiceClient_OnCorsPreflightRequestCompleted_Params');

network.mojom.NetworkServiceClient_OnCorsPreflightRequestCompleted_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.renderFrameId;
    /** @type { !mojoBase.mojom.UnguessableToken } */
    this.devtoolRequestId;
    /** @type { !network.mojom.URLLoaderCompletionStatus } */
    this.status;
  }
};

goog.provide('network.mojom.NetworkServiceClient_LogCrossOriginFetchFromContentScript3_Params');

network.mojom.NetworkServiceClient_LogCrossOriginFetchFromContentScript3_Params = class {
  constructor() {
    /** @type { !string } */
    this.isolatedWorldHostname;
  }
};

goog.provide('network.mojom.NetworkService_SetClient_Params');

network.mojom.NetworkService_SetClient_Params = class {
  constructor() {
    /** @type { !network.mojom.NetworkServiceClientPtr } */
    this.client;
    /** @type { !network.mojom.NetworkServiceParams } */
    this.params;
  }
};

goog.provide('network.mojom.NetworkService_StartNetLog_Params');

network.mojom.NetworkService_StartNetLog_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.File } */
    this.file;
    /** @type { !network.mojom.NetLogCaptureMode } */
    this.captureMode;
    /** @type { !mojoBase.mojom.DictionaryValue } */
    this.constants;
  }
};

goog.provide('network.mojom.NetworkService_AttachNetLogProxy_Params');

network.mojom.NetworkService_AttachNetLogProxy_Params = class {
  constructor() {
    /** @type { !network.mojom.NetLogProxySourcePtr } */
    this.proxySource;
    /** @type { !mojo.InterfaceRequest } */
    this.proxySink;
  }
};

goog.provide('network.mojom.NetworkService_SetSSLKeyLogFile_Params');

network.mojom.NetworkService_SetSSLKeyLogFile_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.File } */
    this.file;
  }
};

goog.provide('network.mojom.NetworkService_CreateNetworkContext_Params');

network.mojom.NetworkService_CreateNetworkContext_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.context;
    /** @type { !network.mojom.NetworkContextParams } */
    this.params;
  }
};

goog.provide('network.mojom.NetworkService_ConfigureStubHostResolver_Params');

network.mojom.NetworkService_ConfigureStubHostResolver_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.insecureDnsClientEnabled;
    /** @type { !network.mojom.SecureDnsMode } */
    this.secureDnsMode;
    /** @type { Array<network.mojom.DnsOverHttpsServer> } */
    this.dnsOverHttpsServers;
  }
};

goog.provide('network.mojom.NetworkService_DisableQuic_Params');

network.mojom.NetworkService_DisableQuic_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkService_SetUpHttpAuth_Params');

network.mojom.NetworkService_SetUpHttpAuth_Params = class {
  constructor() {
    /** @type { !network.mojom.HttpAuthStaticParams } */
    this.httpAuthStaticParams;
  }
};

goog.provide('network.mojom.NetworkService_ConfigureHttpAuthPrefs_Params');

network.mojom.NetworkService_ConfigureHttpAuthPrefs_Params = class {
  constructor() {
    /** @type { !network.mojom.HttpAuthDynamicParams } */
    this.httpAuthDynamicParams;
  }
};

goog.provide('network.mojom.NetworkService_SetRawHeadersAccess_Params');

network.mojom.NetworkService_SetRawHeadersAccess_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !Array<url.mojom.Origin> } */
    this.origins;
  }
};

goog.provide('network.mojom.NetworkService_SetMaxConnectionsPerProxy_Params');

network.mojom.NetworkService_SetMaxConnectionsPerProxy_Params = class {
  constructor() {
    /** @type { !number } */
    this.maxConnections;
  }
};

goog.provide('network.mojom.NetworkService_GetNetworkChangeManager_Params');

network.mojom.NetworkService_GetNetworkChangeManager_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.networkChangeManager;
  }
};

goog.provide('network.mojom.NetworkService_GetNetworkQualityEstimatorManager_Params');

network.mojom.NetworkService_GetNetworkQualityEstimatorManager_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.receiver;
  }
};

goog.provide('network.mojom.NetworkService_GetDnsConfigChangeManager_Params');

network.mojom.NetworkService_GetDnsConfigChangeManager_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.receiver;
  }
};

goog.provide('network.mojom.NetworkService_GetTotalNetworkUsages_Params');

network.mojom.NetworkService_GetTotalNetworkUsages_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkService_GetTotalNetworkUsages_ResponseParams');

network.mojom.NetworkService_GetTotalNetworkUsages_ResponseParams = class {
  constructor() {
    /** @type { !Array<network.mojom.NetworkUsage> } */
    this.totalNetworkUsages;
  }
};

goog.provide('network.mojom.NetworkService_GetNetworkList_Params');

network.mojom.NetworkService_GetNetworkList_Params = class {
  constructor() {
    /** @type { !number } */
    this.policy;
  }
};

goog.provide('network.mojom.NetworkService_GetNetworkList_ResponseParams');

network.mojom.NetworkService_GetNetworkList_ResponseParams = class {
  constructor() {
    /** @type { Array<network.mojom.NetworkInterface> } */
    this.networks;
  }
};

goog.provide('network.mojom.NetworkService_UpdateCRLSet_Params');

network.mojom.NetworkService_UpdateCRLSet_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.ReadOnlyBuffer } */
    this.crlSet;
  }
};

goog.provide('network.mojom.NetworkService_UpdateCRLSet_ResponseParams');

network.mojom.NetworkService_UpdateCRLSet_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkService_UpdateLegacyTLSConfig_Params');

network.mojom.NetworkService_UpdateLegacyTLSConfig_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.ReadOnlyBuffer } */
    this.config;
  }
};

goog.provide('network.mojom.NetworkService_UpdateLegacyTLSConfig_ResponseParams');

network.mojom.NetworkService_UpdateLegacyTLSConfig_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkService_OnCertDBChanged_Params');

network.mojom.NetworkService_OnCertDBChanged_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkService_SetCryptConfig_Params');

network.mojom.NetworkService_SetCryptConfig_Params = class {
  constructor() {
    /** @type { !network.mojom.CryptConfig } */
    this.cryptConfig;
  }
};

goog.provide('network.mojom.NetworkService_AddCorbExceptionForPlugin_Params');

network.mojom.NetworkService_AddCorbExceptionForPlugin_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
  }
};

goog.provide('network.mojom.NetworkService_AddAllowedRequestInitiatorForPlugin_Params');

network.mojom.NetworkService_AddAllowedRequestInitiatorForPlugin_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !url.mojom.Origin } */
    this.allowedRequestInitiator;
  }
};

goog.provide('network.mojom.NetworkService_RemoveSecurityExceptionsForPlugin_Params');

network.mojom.NetworkService_RemoveSecurityExceptionsForPlugin_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
  }
};

goog.provide('network.mojom.NetworkService_OnMemoryPressure_Params');

network.mojom.NetworkService_OnMemoryPressure_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.MemoryPressureLevel } */
    this.memoryPressureLevel;
  }
};

goog.provide('network.mojom.NetworkService_OnPeerToPeerConnectionsCountChange_Params');

network.mojom.NetworkService_OnPeerToPeerConnectionsCountChange_Params = class {
  constructor() {
    /** @type { !number } */
    this.count;
  }
};

goog.provide('network.mojom.NetworkService_SetEnvironment_Params');

network.mojom.NetworkService_SetEnvironment_Params = class {
  constructor() {
    /** @type { !Array<network.mojom.EnvironmentVariable> } */
    this.environment;
  }
};

goog.provide('network.mojom.NetworkService_SetTrustTokenKeyCommitments_Params');

network.mojom.NetworkService_SetTrustTokenKeyCommitments_Params = class {
  constructor() {
    /** @type { !string } */
    this.rawCommitments;
  }
};

goog.provide('network.mojom.NetworkService_SetTrustTokenKeyCommitments_ResponseParams');

network.mojom.NetworkService_SetTrustTokenKeyCommitments_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkService_BindTestInterface_Params');

network.mojom.NetworkService_BindTestInterface_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.receiver;
  }
};
