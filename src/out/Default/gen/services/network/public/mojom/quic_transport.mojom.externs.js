// services/network/public/mojom/quic_transport.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



goog.provide('network.mojom.QuicTransport');
goog.provide('network.mojom.QuicTransportImpl');
goog.provide('network.mojom.QuicTransportPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.QuicTransport;

/** @interface */
network.mojom.QuicTransportImpl = class {
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } data
   * @return {Promise}
   */
  sendDatagram(data) {}
  /**
   * @param { !MojoHandle } readable
   * @param { MojoHandle } writable
   * @return {Promise}
   */
  createStream(readable, writable) {}
  /**
   * @return {Promise}
   */
  acceptBidirectionalStream() {}
  /**
   * @return {Promise}
   */
  acceptUnidirectionalStream() {}
  /**
   * @param { !number } streamId
   */
  sendFin(streamId) {}
  /**
   * @param { !number } streamId
   * @param { !number } code
   */
  abortStream(streamId, code) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.QuicTransportImpl }
 */
network.mojom.QuicTransportPtr = class {
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } data
   * @return {Promise}
   */
  sendDatagram(data) {}
  /**
   * @param { !MojoHandle } readable
   * @param { MojoHandle } writable
   * @return {Promise}
   */
  createStream(readable, writable) {}
  /**
   * @return {Promise}
   */
  acceptBidirectionalStream() {}
  /**
   * @return {Promise}
   */
  acceptUnidirectionalStream() {}
  /**
   * @param { !number } streamId
   */
  sendFin(streamId) {}
  /**
   * @param { !number } streamId
   * @param { !number } code
   */
  abortStream(streamId, code) {}
};

goog.provide('network.mojom.QuicTransportClient');
goog.provide('network.mojom.QuicTransportClientImpl');
goog.provide('network.mojom.QuicTransportClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.QuicTransportClient;

/** @interface */
network.mojom.QuicTransportClientImpl = class {
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } data
   */
  onDatagramReceived(data) {}
  /**
   * @param { !number } streamId
   * @param { !boolean } finReceived
   */
  onIncomingStreamClosed(streamId, finReceived) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.QuicTransportClientImpl }
 */
network.mojom.QuicTransportClientPtr = class {
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } data
   */
  onDatagramReceived(data) {}
  /**
   * @param { !number } streamId
   * @param { !boolean } finReceived
   */
  onIncomingStreamClosed(streamId, finReceived) {}
};

goog.provide('network.mojom.QuicTransportHandshakeClient');
goog.provide('network.mojom.QuicTransportHandshakeClientImpl');
goog.provide('network.mojom.QuicTransportHandshakeClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.QuicTransportHandshakeClient;

/** @interface */
network.mojom.QuicTransportHandshakeClientImpl = class {
  /**
   * @param { !network.mojom.QuicTransportPtr } transport
   * @param { !mojo.InterfaceRequest } client
   */
  onConnectionEstablished(transport, client) {}
  /**
   * @param { network.mojom.QuicTransportError } error
   */
  onHandshakeFailed(error) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.QuicTransportHandshakeClientImpl }
 */
network.mojom.QuicTransportHandshakeClientPtr = class {
  /**
   * @param { !network.mojom.QuicTransportPtr } transport
   * @param { !mojo.InterfaceRequest } client
   */
  onConnectionEstablished(transport, client) {}
  /**
   * @param { network.mojom.QuicTransportError } error
   */
  onHandshakeFailed(error) {}
};

goog.provide('network.mojom.QuicTransportError');

network.mojom.QuicTransportError = class {
  constructor() {
    /** @type { !number } */
    this.netError;
    /** @type { !number } */
    this.quicError;
    /** @type { !string } */
    this.details;
    /** @type { !boolean } */
    this.safeToReportDetails;
  }
};

goog.provide('network.mojom.QuicTransportCertificateFingerprint');

network.mojom.QuicTransportCertificateFingerprint = class {
  constructor() {
    /** @type { !string } */
    this.algorithm;
    /** @type { !string } */
    this.fingerprint;
  }
};

goog.provide('network.mojom.QuicTransport_SendDatagram_Params');

network.mojom.QuicTransport_SendDatagram_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.ReadOnlyBuffer } */
    this.data;
  }
};

goog.provide('network.mojom.QuicTransport_SendDatagram_ResponseParams');

network.mojom.QuicTransport_SendDatagram_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.result;
  }
};

goog.provide('network.mojom.QuicTransport_CreateStream_Params');

network.mojom.QuicTransport_CreateStream_Params = class {
  constructor() {
    /** @type { !MojoHandle } */
    this.readable;
    /** @type { MojoHandle } */
    this.writable;
  }
};

goog.provide('network.mojom.QuicTransport_CreateStream_ResponseParams');

network.mojom.QuicTransport_CreateStream_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.succeeded;
    /** @type { !number } */
    this.streamId;
  }
};

goog.provide('network.mojom.QuicTransport_AcceptBidirectionalStream_Params');

network.mojom.QuicTransport_AcceptBidirectionalStream_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.QuicTransport_AcceptBidirectionalStream_ResponseParams');

network.mojom.QuicTransport_AcceptBidirectionalStream_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.streamId;
    /** @type { !MojoHandle } */
    this.readable;
    /** @type { !MojoHandle } */
    this.writable;
  }
};

goog.provide('network.mojom.QuicTransport_AcceptUnidirectionalStream_Params');

network.mojom.QuicTransport_AcceptUnidirectionalStream_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.QuicTransport_AcceptUnidirectionalStream_ResponseParams');

network.mojom.QuicTransport_AcceptUnidirectionalStream_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.streamId;
    /** @type { !MojoHandle } */
    this.readable;
  }
};

goog.provide('network.mojom.QuicTransport_SendFin_Params');

network.mojom.QuicTransport_SendFin_Params = class {
  constructor() {
    /** @type { !number } */
    this.streamId;
  }
};

goog.provide('network.mojom.QuicTransport_AbortStream_Params');

network.mojom.QuicTransport_AbortStream_Params = class {
  constructor() {
    /** @type { !number } */
    this.streamId;
    /** @type { !number } */
    this.code;
  }
};

goog.provide('network.mojom.QuicTransportClient_OnDatagramReceived_Params');

network.mojom.QuicTransportClient_OnDatagramReceived_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.ReadOnlyBuffer } */
    this.data;
  }
};

goog.provide('network.mojom.QuicTransportClient_OnIncomingStreamClosed_Params');

network.mojom.QuicTransportClient_OnIncomingStreamClosed_Params = class {
  constructor() {
    /** @type { !number } */
    this.streamId;
    /** @type { !boolean } */
    this.finReceived;
  }
};

goog.provide('network.mojom.QuicTransportHandshakeClient_OnConnectionEstablished_Params');

network.mojom.QuicTransportHandshakeClient_OnConnectionEstablished_Params = class {
  constructor() {
    /** @type { !network.mojom.QuicTransportPtr } */
    this.transport;
    /** @type { !mojo.InterfaceRequest } */
    this.client;
  }
};

goog.provide('network.mojom.QuicTransportHandshakeClient_OnHandshakeFailed_Params');

network.mojom.QuicTransportHandshakeClient_OnHandshakeFailed_Params = class {
  constructor() {
    /** @type { network.mojom.QuicTransportError } */
    this.error;
  }
};
