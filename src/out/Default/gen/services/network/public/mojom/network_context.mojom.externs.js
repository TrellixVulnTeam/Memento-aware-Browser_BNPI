// services/network/public/mojom/network_context.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


/** @type { !number } */
goog.provide('network.mojom.WEB_SOCKET_OPTION_NONE');
/** @type { !number } */
goog.provide('network.mojom.WEB_SOCKET_OPTION_BLOCK_ALL_COOKIES');
/** @type { !number } */
goog.provide('network.mojom.WEB_SOCKET_OPTION_BLOCK_THIRD_PARTY_COOKIES');
/** @type { !number } */
goog.provide('network.mojom.BROWSER_PROCESS_ID');
/** @type { !number } */
goog.provide('network.mojom.INVALID_PROCESS_ID');

/** @enum {number} */
network.mojom.TrustTokenRedemptionPolicy = {};
network.mojom.TrustTokenRedemptionPolicy.kForbid;
network.mojom.TrustTokenRedemptionPolicy.kPotentiallyPermit;
goog.provide('network.mojom.CustomProxyConfigClient');
goog.provide('network.mojom.CustomProxyConfigClientImpl');
goog.provide('network.mojom.CustomProxyConfigClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.CustomProxyConfigClient;

/** @interface */
network.mojom.CustomProxyConfigClientImpl = class {
  /**
   * @param { !network.mojom.CustomProxyConfig } proxyConfig
   */
  onCustomProxyConfigUpdated(proxyConfig) {}
  /**
   * @param { !mojoBase.mojom.TimeDelta } bypassDuration
   * @param { !network.mojom.ProxyList } badProxies
   * @return {Promise}
   */
  markProxiesAsBad(bypassDuration, badProxies) {}
  /**
   */
  clearBadProxiesCache() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.CustomProxyConfigClientImpl }
 */
network.mojom.CustomProxyConfigClientPtr = class {
  /**
   * @param { !network.mojom.CustomProxyConfig } proxyConfig
   */
  onCustomProxyConfigUpdated(proxyConfig) {}
  /**
   * @param { !mojoBase.mojom.TimeDelta } bypassDuration
   * @param { !network.mojom.ProxyList } badProxies
   * @return {Promise}
   */
  markProxiesAsBad(bypassDuration, badProxies) {}
  /**
   */
  clearBadProxiesCache() {}
};

goog.provide('network.mojom.TrustedHeaderClient');
goog.provide('network.mojom.TrustedHeaderClientImpl');
goog.provide('network.mojom.TrustedHeaderClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.TrustedHeaderClient;

/** @interface */
network.mojom.TrustedHeaderClientImpl = class {
  /**
   * @param { !network.mojom.HttpRequestHeaders } headers
   * @return {Promise}
   */
  onBeforeSendHeaders(headers) {}
  /**
   * @param { !string } headers
   * @param { !network.mojom.IPEndPoint } remoteEndpoint
   * @return {Promise}
   */
  onHeadersReceived(headers, remoteEndpoint) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.TrustedHeaderClientImpl }
 */
network.mojom.TrustedHeaderClientPtr = class {
  /**
   * @param { !network.mojom.HttpRequestHeaders } headers
   * @return {Promise}
   */
  onBeforeSendHeaders(headers) {}
  /**
   * @param { !string } headers
   * @param { !network.mojom.IPEndPoint } remoteEndpoint
   * @return {Promise}
   */
  onHeadersReceived(headers, remoteEndpoint) {}
};

goog.provide('network.mojom.TrustedURLLoaderHeaderClient');
goog.provide('network.mojom.TrustedURLLoaderHeaderClientImpl');
goog.provide('network.mojom.TrustedURLLoaderHeaderClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.TrustedURLLoaderHeaderClient;

/** @interface */
network.mojom.TrustedURLLoaderHeaderClientImpl = class {
  /**
   * @param { !number } requestId
   * @param { !mojo.InterfaceRequest } headerClient
   */
  onLoaderCreated(requestId, headerClient) {}
  /**
   * @param { !network.mojom.URLRequest } request
   * @param { !mojo.InterfaceRequest } headerClient
   */
  onLoaderForCorsPreflightCreated(request, headerClient) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.TrustedURLLoaderHeaderClientImpl }
 */
network.mojom.TrustedURLLoaderHeaderClientPtr = class {
  /**
   * @param { !number } requestId
   * @param { !mojo.InterfaceRequest } headerClient
   */
  onLoaderCreated(requestId, headerClient) {}
  /**
   * @param { !network.mojom.URLRequest } request
   * @param { !mojo.InterfaceRequest } headerClient
   */
  onLoaderForCorsPreflightCreated(request, headerClient) {}
};

goog.provide('network.mojom.AuthChallengeResponder');
goog.provide('network.mojom.AuthChallengeResponderImpl');
goog.provide('network.mojom.AuthChallengeResponderPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.AuthChallengeResponder;

/** @interface */
network.mojom.AuthChallengeResponderImpl = class {
  /**
   * @param { network.mojom.AuthCredentials } credentials
   */
  onAuthCredentials(credentials) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.AuthChallengeResponderImpl }
 */
network.mojom.AuthChallengeResponderPtr = class {
  /**
   * @param { network.mojom.AuthCredentials } credentials
   */
  onAuthCredentials(credentials) {}
};

goog.provide('network.mojom.ClientCertificateResponder');
goog.provide('network.mojom.ClientCertificateResponderImpl');
goog.provide('network.mojom.ClientCertificateResponderPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.ClientCertificateResponder;

/** @interface */
network.mojom.ClientCertificateResponderImpl = class {
  /**
   * @param { !network.mojom.X509Certificate } x509Certificate
   * @param { !string } providerName
   * @param { !Array<number> } algorithmPreferences
   * @param { !network.mojom.SSLPrivateKeyPtr } sslPrivateKey
   */
  continueWithCertificate(x509Certificate, providerName, algorithmPreferences, sslPrivateKey) {}
  /**
   */
  continueWithoutCertificate() {}
  /**
   */
  cancelRequest() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.ClientCertificateResponderImpl }
 */
network.mojom.ClientCertificateResponderPtr = class {
  /**
   * @param { !network.mojom.X509Certificate } x509Certificate
   * @param { !string } providerName
   * @param { !Array<number> } algorithmPreferences
   * @param { !network.mojom.SSLPrivateKeyPtr } sslPrivateKey
   */
  continueWithCertificate(x509Certificate, providerName, algorithmPreferences, sslPrivateKey) {}
  /**
   */
  continueWithoutCertificate() {}
  /**
   */
  cancelRequest() {}
};

goog.provide('network.mojom.SSLPrivateKey');
goog.provide('network.mojom.SSLPrivateKeyImpl');
goog.provide('network.mojom.SSLPrivateKeyPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.SSLPrivateKey;

/** @interface */
network.mojom.SSLPrivateKeyImpl = class {
  /**
   * @param { !number } algorithm
   * @param { !Array<number> } input
   * @return {Promise}
   */
  sign(algorithm, input) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.SSLPrivateKeyImpl }
 */
network.mojom.SSLPrivateKeyPtr = class {
  /**
   * @param { !number } algorithm
   * @param { !Array<number> } input
   * @return {Promise}
   */
  sign(algorithm, input) {}
};

goog.provide('network.mojom.NetworkContextClient');
goog.provide('network.mojom.NetworkContextClientImpl');
goog.provide('network.mojom.NetworkContextClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.NetworkContextClient;

/** @interface */
network.mojom.NetworkContextClientImpl = class {
  /**
   * @param { mojoBase.mojom.UnguessableToken } windowId
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !number } requestId
   * @param { !url.mojom.Url } url
   * @param { !boolean } firstAuthAttempt
   * @param { !network.mojom.AuthChallengeInfo } authInfo
   * @param { network.mojom.URLResponseHead } head
   * @param { !network.mojom.AuthChallengeResponderPtr } authChallengeResponder
   */
  onAuthRequired(windowId, processId, routingId, requestId, url, firstAuthAttempt, authInfo, head, authChallengeResponder) {}
  /**
   * @param { mojoBase.mojom.UnguessableToken } windowId
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !number } requestId
   * @param { !network.mojom.SSLCertRequestInfo } certInfo
   * @param { !network.mojom.ClientCertificateResponderPtr } certResponder
   */
  onCertificateRequested(windowId, processId, routingId, requestId, certInfo, certResponder) {}
  /**
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !url.mojom.Url } url
   * @param { !number } netError
   * @param { !network.mojom.SSLInfo } sslInfo
   * @param { !boolean } fatal
   * @return {Promise}
   */
  onSSLCertificateError(processId, routingId, url, netError, sslInfo, fatal) {}
  /**
   * @param { !number } processId
   * @param { !boolean } async
   * @param { !Array<mojoBase.mojom.FilePath> } filePaths
   * @return {Promise}
   */
  onFileUploadRequested(processId, async, filePaths) {}
  /**
   * @param { !Array<url.mojom.Origin> } origins
   * @return {Promise}
   */
  onCanSendReportingReports(origins) {}
  /**
   * @param { !url.mojom.Url } origin
   * @return {Promise}
   */
  onCanSendDomainReliabilityUpload(origin) {}
  /**
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !url.mojom.Url } url
   * @param { !string } headerValue
   * @param { !number } loadFlags
   * @return {Promise}
   */
  onClearSiteData(processId, routingId, url, headerValue, loadFlags) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.NetworkContextClientImpl }
 */
network.mojom.NetworkContextClientPtr = class {
  /**
   * @param { mojoBase.mojom.UnguessableToken } windowId
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !number } requestId
   * @param { !url.mojom.Url } url
   * @param { !boolean } firstAuthAttempt
   * @param { !network.mojom.AuthChallengeInfo } authInfo
   * @param { network.mojom.URLResponseHead } head
   * @param { !network.mojom.AuthChallengeResponderPtr } authChallengeResponder
   */
  onAuthRequired(windowId, processId, routingId, requestId, url, firstAuthAttempt, authInfo, head, authChallengeResponder) {}
  /**
   * @param { mojoBase.mojom.UnguessableToken } windowId
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !number } requestId
   * @param { !network.mojom.SSLCertRequestInfo } certInfo
   * @param { !network.mojom.ClientCertificateResponderPtr } certResponder
   */
  onCertificateRequested(windowId, processId, routingId, requestId, certInfo, certResponder) {}
  /**
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !url.mojom.Url } url
   * @param { !number } netError
   * @param { !network.mojom.SSLInfo } sslInfo
   * @param { !boolean } fatal
   * @return {Promise}
   */
  onSSLCertificateError(processId, routingId, url, netError, sslInfo, fatal) {}
  /**
   * @param { !number } processId
   * @param { !boolean } async
   * @param { !Array<mojoBase.mojom.FilePath> } filePaths
   * @return {Promise}
   */
  onFileUploadRequested(processId, async, filePaths) {}
  /**
   * @param { !Array<url.mojom.Origin> } origins
   * @return {Promise}
   */
  onCanSendReportingReports(origins) {}
  /**
   * @param { !url.mojom.Url } origin
   * @return {Promise}
   */
  onCanSendDomainReliabilityUpload(origin) {}
  /**
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !url.mojom.Url } url
   * @param { !string } headerValue
   * @param { !number } loadFlags
   * @return {Promise}
   */
  onClearSiteData(processId, routingId, url, headerValue, loadFlags) {}
};

goog.provide('network.mojom.NetworkContext');
goog.provide('network.mojom.NetworkContextImpl');
goog.provide('network.mojom.NetworkContextPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.NetworkContext;

/** @interface */
network.mojom.NetworkContextImpl = class {
  /**
   * @param { !network.mojom.NetworkContextClientPtr } client
   */
  setClient(client) {}
  /**
   * @param { !mojo.InterfaceRequest } urlLoaderFactory
   * @param { !network.mojom.URLLoaderFactoryParams } params
   */
  createURLLoaderFactory(urlLoaderFactory, params) {}
  /**
   */
  resetURLLoaderFactories() {}
  /**
   * @param { !mojo.InterfaceRequest } cookieManager
   */
  getCookieManager(cookieManager) {}
  /**
   * @param { !mojo.InterfaceRequest } restrictedCookieManager
   * @param { !network.mojom.RestrictedCookieManagerRole } role
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.SiteForCookies } siteForCookies
   * @param { !url.mojom.Origin } topFrameOrigin
   * @param { network.mojom.CookieAccessObserverPtr } cookieObserver
   */
  getRestrictedCookieManager(restrictedCookieManager, role, origin, siteForCookies, topFrameOrigin, cookieObserver) {}
  /**
   * @param { !mojo.InterfaceRequest } hasTrustTokensAnswerer
   * @param { !url.mojom.Origin } topFrameOrigin
   */
  getHasTrustTokensAnswerer(hasTrustTokensAnswerer, topFrameOrigin) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearTrustTokenData(filter) {}
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @return {Promise}
   */
  clearNetworkingHistorySince(startTime) {}
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearHttpCache(startTime, endTime, filter) {}
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @return {Promise}
   */
  computeHttpCacheSize(startTime, endTime) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !string } httpMethod
   * @param { !network.mojom.NetworkIsolationKey } key
   */
  notifyExternalCacheHit(url, httpMethod, key) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearHostCache(filter) {}
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @return {Promise}
   */
  clearHttpAuthCache(startTime) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearReportingCacheReports(filter) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearReportingCacheClients(filter) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearNetworkErrorLogging(filter) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @param { !network.mojom.DomainReliabilityClearMode } mode
   * @return {Promise}
   */
  clearDomainReliability(filter, mode) {}
  /**
   * @return {Promise}
   */
  getDomainReliabilityJSON() {}
  /**
   * @param { !string } type
   * @param { !string } group
   * @param { !url.mojom.Url } url
   * @param { string } userAgent
   * @param { !mojoBase.mojom.DictionaryValue } body
   */
  queueReport(type, group, url, userAgent, body) {}
  /**
   * @param { !network.mojom.SignedExchangeReport } report
   */
  queueSignedExchangeReport(report) {}
  /**
   * @return {Promise}
   */
  closeAllConnections() {}
  /**
   * @return {Promise}
   */
  closeIdleConnections() {}
  /**
   * @param { !mojoBase.mojom.UnguessableToken } throttlingProfileId
   * @param { network.mojom.NetworkConditions } conditions
   */
  setNetworkConditions(throttlingProfileId, conditions) {}
  /**
   * @param { !string } newAcceptLanguage
   */
  setAcceptLanguage(newAcceptLanguage) {}
  /**
   * @param { !boolean } enableReferrers
   */
  setEnableReferrers(enableReferrers) {}
  /**
   * @param { !network.mojom.CTPolicy } ctPolicy
   */
  setCTPolicy(ctPolicy) {}
  /**
   * @param { !string } host
   * @param { !mojoBase.mojom.Time } expiry
   * @param { !boolean } enforce
   * @param { !url.mojom.Url } reportUri
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {Promise}
   */
  addExpectCT(host, expiry, enforce, reportUri, networkIsolationKey) {}
  /**
   * @param { !url.mojom.Url } reportUri
   * @return {Promise}
   */
  setExpectCTTestReport(reportUri) {}
  /**
   * @param { !string } domain
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {Promise}
   */
  getExpectCTState(domain, networkIsolationKey) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   * @param { network.mojom.UDPSocketListenerPtr } listener
   */
  createUDPSocket(receiver, listener) {}
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { !number } backlog
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !mojo.InterfaceRequest } socket
   * @return {Promise}
   */
  createTCPServerSocket(localAddr, backlog, trafficAnnotation, socket) {}
  /**
   * @param { network.mojom.IPEndPoint } localAddr
   * @param { !network.mojom.AddressList } remoteAddrList
   * @param { network.mojom.TCPConnectedSocketOptions } tcpConnectedSocketOptions
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !mojo.InterfaceRequest } socket
   * @param { network.mojom.SocketObserverPtr } observer
   * @return {Promise}
   */
  createTCPConnectedSocket(localAddr, remoteAddrList, tcpConnectedSocketOptions, trafficAnnotation, socket, observer) {}
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !mojo.InterfaceRequest } socket
   * @return {Promise}
   */
  createTCPBoundSocket(localAddr, trafficAnnotation, socket) {}
  /**
   * @param { !mojo.InterfaceRequest } factory
   */
  createProxyResolvingSocketFactory(factory) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.ProxyLookupClientPtr } proxyLookupClient
   */
  lookUpProxyForURL(url, networkIsolationKey, proxyLookupClient) {}
  /**
   * @return {Promise}
   */
  forceReloadProxyConfig() {}
  /**
   * @return {Promise}
   */
  clearBadProxiesCache() {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !Array<string> } requestedProtocols
   * @param { !network.mojom.SiteForCookies } siteForCookies
   * @param { !network.mojom.IsolationInfo } isolationInfo
   * @param { !Array<network.mojom.HttpHeader> } additionalHeaders
   * @param { !number } processId
   * @param { !number } renderFrameId
   * @param { !url.mojom.Origin } origin
   * @param { !number } options
   * @param { !network.mojom.WebSocketHandshakeClientPtr } handshakeClient
   * @param { network.mojom.AuthenticationHandlerPtr } authHandler
   * @param { network.mojom.TrustedHeaderClientPtr } headerClient
   */
  createWebSocket(url, requestedProtocols, siteForCookies, isolationInfo, additionalHeaders, processId, renderFrameId, origin, options, handshakeClient, authHandler, headerClient) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !Array<network.mojom.QuicTransportCertificateFingerprint> } fingerprints
   * @param { !network.mojom.QuicTransportHandshakeClientPtr } handshakeClient
   */
  createQuicTransport(url, origin, networkIsolationKey, fingerprints, handshakeClient) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   */
  createNetLogExporter(receiver) {}
  /**
   * @param { !number } numStreams
   * @param { !url.mojom.Url } url
   * @param { !boolean } allowCredentials
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   */
  preconnectSockets(numStreams, url, allowCredentials, networkIsolationKey) {}
  /**
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.P2PTrustedSocketManagerClientPtr } client
   * @param { !mojo.InterfaceRequest } trustedSocketManager
   * @param { !mojo.InterfaceRequest } socketManager
   */
  createP2PSocketManager(networkIsolationKey, client, trustedSocketManager, socketManager) {}
  /**
   * @param { !mojo.InterfaceRequest } responderReceiver
   */
  createMdnsResponder(responderReceiver) {}
  /**
   * @param { !network.mojom.HostPortPair } host
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { network.mojom.ResolveHostParameters } optionalParameters
   * @param { !network.mojom.ResolveHostClientPtr } responseClient
   */
  resolveHost(host, networkIsolationKey, optionalParameters, responseClient) {}
  /**
   * @param { network.mojom.DnsConfigOverrides } configOverrides
   * @param { !mojo.InterfaceRequest } hostResolver
   */
  createHostResolver(configOverrides, hostResolver) {}
  /**
   * @param { !network.mojom.X509Certificate } certificate
   * @param { !url.mojom.Url } url
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {Promise}
   */
  verifyCertForSignedExchange(certificate, url, ocspResponse, sctList) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.HttpResponseHeaders } headers
   * @return {Promise}
   */
  parseHeaders(url, headers) {}
  /**
   * @param { !string } host
   * @param { !mojoBase.mojom.Time } expiry
   * @param { !boolean } includeSubdomains
   * @return {Promise}
   */
  addHSTS(host, expiry, includeSubdomains) {}
  /**
   * @param { !string } host
   * @return {Promise}
   */
  isHSTSActiveForHost(host) {}
  /**
   * @param { !string } domain
   * @return {Promise}
   */
  getHSTSState(domain) {}
  /**
   * @param { !url.mojom.Origin } sourceOrigin
   * @param { !Array<network.mojom.CorsOriginPattern> } allowPatterns
   * @param { !Array<network.mojom.CorsOriginPattern> } blockPatterns
   * @return {Promise}
   */
  setCorsOriginAccessListsForOrigin(sourceOrigin, allowPatterns, blockPatterns) {}
  /**
   * @param { !Array<string> } corsExtraSafelistedRequestHeaderNames
   */
  setCorsExtraSafelistedRequestHeaderNames(corsExtraSafelistedRequestHeaderNames) {}
  /**
   * @param { !string } host
   * @return {Promise}
   */
  deleteDynamicDataForHost(host) {}
  /**
   * @param { !boolean } splitAuthCacheByNetworkIsolationKey
   */
  setSplitAuthCacheByNetworkIsolationKey(splitAuthCacheByNetworkIsolationKey) {}
  /**
   * @return {Promise}
   */
  saveHttpAuthCacheProxyEntries() {}
  /**
   * @param { !mojoBase.mojom.UnguessableToken } cacheKey
   * @return {Promise}
   */
  loadHttpAuthCacheProxyEntries(cacheKey) {}
  /**
   * @param { !network.mojom.AuthChallengeInfo } challenge
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.AuthCredentials } credentials
   * @return {Promise}
   */
  addAuthCacheEntry(challenge, networkIsolationKey, credentials) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {Promise}
   */
  lookupServerBasicAuthCredentials(url, networkIsolationKey) {}
  /**
   * @return {Promise}
   */
  enableStaticKeyPinningForTesting() {}
  /**
   * @param { !network.mojom.X509Certificate } certificate
   * @param { !string } hostname
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {Promise}
   */
  verifyCertificateForTesting(certificate, hostname, ocspResponse, sctList) {}
  /**
   * @param { !url.mojom.Url } origin
   * @param { !url.mojom.Url } uploadUrl
   * @return {Promise}
   */
  addDomainReliabilityContextForTesting(origin, uploadUrl) {}
  /**
   * @return {Promise}
   */
  forceDomainReliabilityUploadsForTesting() {}
  /**
   * @param { !mojo.InterfaceRequest } originPolicyManager
   */
  getOriginPolicyManager(originPolicyManager) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.NetworkContextImpl }
 */
network.mojom.NetworkContextPtr = class {
  /**
   * @param { !network.mojom.NetworkContextClientPtr } client
   */
  setClient(client) {}
  /**
   * @param { !mojo.InterfaceRequest } urlLoaderFactory
   * @param { !network.mojom.URLLoaderFactoryParams } params
   */
  createURLLoaderFactory(urlLoaderFactory, params) {}
  /**
   */
  resetURLLoaderFactories() {}
  /**
   * @param { !mojo.InterfaceRequest } cookieManager
   */
  getCookieManager(cookieManager) {}
  /**
   * @param { !mojo.InterfaceRequest } restrictedCookieManager
   * @param { !network.mojom.RestrictedCookieManagerRole } role
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.SiteForCookies } siteForCookies
   * @param { !url.mojom.Origin } topFrameOrigin
   * @param { network.mojom.CookieAccessObserverPtr } cookieObserver
   */
  getRestrictedCookieManager(restrictedCookieManager, role, origin, siteForCookies, topFrameOrigin, cookieObserver) {}
  /**
   * @param { !mojo.InterfaceRequest } hasTrustTokensAnswerer
   * @param { !url.mojom.Origin } topFrameOrigin
   */
  getHasTrustTokensAnswerer(hasTrustTokensAnswerer, topFrameOrigin) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearTrustTokenData(filter) {}
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @return {Promise}
   */
  clearNetworkingHistorySince(startTime) {}
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearHttpCache(startTime, endTime, filter) {}
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @return {Promise}
   */
  computeHttpCacheSize(startTime, endTime) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !string } httpMethod
   * @param { !network.mojom.NetworkIsolationKey } key
   */
  notifyExternalCacheHit(url, httpMethod, key) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearHostCache(filter) {}
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @return {Promise}
   */
  clearHttpAuthCache(startTime) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearReportingCacheReports(filter) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearReportingCacheClients(filter) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */
  clearNetworkErrorLogging(filter) {}
  /**
   * @param { network.mojom.ClearDataFilter } filter
   * @param { !network.mojom.DomainReliabilityClearMode } mode
   * @return {Promise}
   */
  clearDomainReliability(filter, mode) {}
  /**
   * @return {Promise}
   */
  getDomainReliabilityJSON() {}
  /**
   * @param { !string } type
   * @param { !string } group
   * @param { !url.mojom.Url } url
   * @param { string } userAgent
   * @param { !mojoBase.mojom.DictionaryValue } body
   */
  queueReport(type, group, url, userAgent, body) {}
  /**
   * @param { !network.mojom.SignedExchangeReport } report
   */
  queueSignedExchangeReport(report) {}
  /**
   * @return {Promise}
   */
  closeAllConnections() {}
  /**
   * @return {Promise}
   */
  closeIdleConnections() {}
  /**
   * @param { !mojoBase.mojom.UnguessableToken } throttlingProfileId
   * @param { network.mojom.NetworkConditions } conditions
   */
  setNetworkConditions(throttlingProfileId, conditions) {}
  /**
   * @param { !string } newAcceptLanguage
   */
  setAcceptLanguage(newAcceptLanguage) {}
  /**
   * @param { !boolean } enableReferrers
   */
  setEnableReferrers(enableReferrers) {}
  /**
   * @param { !network.mojom.CTPolicy } ctPolicy
   */
  setCTPolicy(ctPolicy) {}
  /**
   * @param { !string } host
   * @param { !mojoBase.mojom.Time } expiry
   * @param { !boolean } enforce
   * @param { !url.mojom.Url } reportUri
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {Promise}
   */
  addExpectCT(host, expiry, enforce, reportUri, networkIsolationKey) {}
  /**
   * @param { !url.mojom.Url } reportUri
   * @return {Promise}
   */
  setExpectCTTestReport(reportUri) {}
  /**
   * @param { !string } domain
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {Promise}
   */
  getExpectCTState(domain, networkIsolationKey) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   * @param { network.mojom.UDPSocketListenerPtr } listener
   */
  createUDPSocket(receiver, listener) {}
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { !number } backlog
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !mojo.InterfaceRequest } socket
   * @return {Promise}
   */
  createTCPServerSocket(localAddr, backlog, trafficAnnotation, socket) {}
  /**
   * @param { network.mojom.IPEndPoint } localAddr
   * @param { !network.mojom.AddressList } remoteAddrList
   * @param { network.mojom.TCPConnectedSocketOptions } tcpConnectedSocketOptions
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !mojo.InterfaceRequest } socket
   * @param { network.mojom.SocketObserverPtr } observer
   * @return {Promise}
   */
  createTCPConnectedSocket(localAddr, remoteAddrList, tcpConnectedSocketOptions, trafficAnnotation, socket, observer) {}
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !mojo.InterfaceRequest } socket
   * @return {Promise}
   */
  createTCPBoundSocket(localAddr, trafficAnnotation, socket) {}
  /**
   * @param { !mojo.InterfaceRequest } factory
   */
  createProxyResolvingSocketFactory(factory) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.ProxyLookupClientPtr } proxyLookupClient
   */
  lookUpProxyForURL(url, networkIsolationKey, proxyLookupClient) {}
  /**
   * @return {Promise}
   */
  forceReloadProxyConfig() {}
  /**
   * @return {Promise}
   */
  clearBadProxiesCache() {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !Array<string> } requestedProtocols
   * @param { !network.mojom.SiteForCookies } siteForCookies
   * @param { !network.mojom.IsolationInfo } isolationInfo
   * @param { !Array<network.mojom.HttpHeader> } additionalHeaders
   * @param { !number } processId
   * @param { !number } renderFrameId
   * @param { !url.mojom.Origin } origin
   * @param { !number } options
   * @param { !network.mojom.WebSocketHandshakeClientPtr } handshakeClient
   * @param { network.mojom.AuthenticationHandlerPtr } authHandler
   * @param { network.mojom.TrustedHeaderClientPtr } headerClient
   */
  createWebSocket(url, requestedProtocols, siteForCookies, isolationInfo, additionalHeaders, processId, renderFrameId, origin, options, handshakeClient, authHandler, headerClient) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !Array<network.mojom.QuicTransportCertificateFingerprint> } fingerprints
   * @param { !network.mojom.QuicTransportHandshakeClientPtr } handshakeClient
   */
  createQuicTransport(url, origin, networkIsolationKey, fingerprints, handshakeClient) {}
  /**
   * @param { !mojo.InterfaceRequest } receiver
   */
  createNetLogExporter(receiver) {}
  /**
   * @param { !number } numStreams
   * @param { !url.mojom.Url } url
   * @param { !boolean } allowCredentials
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   */
  preconnectSockets(numStreams, url, allowCredentials, networkIsolationKey) {}
  /**
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.P2PTrustedSocketManagerClientPtr } client
   * @param { !mojo.InterfaceRequest } trustedSocketManager
   * @param { !mojo.InterfaceRequest } socketManager
   */
  createP2PSocketManager(networkIsolationKey, client, trustedSocketManager, socketManager) {}
  /**
   * @param { !mojo.InterfaceRequest } responderReceiver
   */
  createMdnsResponder(responderReceiver) {}
  /**
   * @param { !network.mojom.HostPortPair } host
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { network.mojom.ResolveHostParameters } optionalParameters
   * @param { !network.mojom.ResolveHostClientPtr } responseClient
   */
  resolveHost(host, networkIsolationKey, optionalParameters, responseClient) {}
  /**
   * @param { network.mojom.DnsConfigOverrides } configOverrides
   * @param { !mojo.InterfaceRequest } hostResolver
   */
  createHostResolver(configOverrides, hostResolver) {}
  /**
   * @param { !network.mojom.X509Certificate } certificate
   * @param { !url.mojom.Url } url
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {Promise}
   */
  verifyCertForSignedExchange(certificate, url, ocspResponse, sctList) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.HttpResponseHeaders } headers
   * @return {Promise}
   */
  parseHeaders(url, headers) {}
  /**
   * @param { !string } host
   * @param { !mojoBase.mojom.Time } expiry
   * @param { !boolean } includeSubdomains
   * @return {Promise}
   */
  addHSTS(host, expiry, includeSubdomains) {}
  /**
   * @param { !string } host
   * @return {Promise}
   */
  isHSTSActiveForHost(host) {}
  /**
   * @param { !string } domain
   * @return {Promise}
   */
  getHSTSState(domain) {}
  /**
   * @param { !url.mojom.Origin } sourceOrigin
   * @param { !Array<network.mojom.CorsOriginPattern> } allowPatterns
   * @param { !Array<network.mojom.CorsOriginPattern> } blockPatterns
   * @return {Promise}
   */
  setCorsOriginAccessListsForOrigin(sourceOrigin, allowPatterns, blockPatterns) {}
  /**
   * @param { !Array<string> } corsExtraSafelistedRequestHeaderNames
   */
  setCorsExtraSafelistedRequestHeaderNames(corsExtraSafelistedRequestHeaderNames) {}
  /**
   * @param { !string } host
   * @return {Promise}
   */
  deleteDynamicDataForHost(host) {}
  /**
   * @param { !boolean } splitAuthCacheByNetworkIsolationKey
   */
  setSplitAuthCacheByNetworkIsolationKey(splitAuthCacheByNetworkIsolationKey) {}
  /**
   * @return {Promise}
   */
  saveHttpAuthCacheProxyEntries() {}
  /**
   * @param { !mojoBase.mojom.UnguessableToken } cacheKey
   * @return {Promise}
   */
  loadHttpAuthCacheProxyEntries(cacheKey) {}
  /**
   * @param { !network.mojom.AuthChallengeInfo } challenge
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.AuthCredentials } credentials
   * @return {Promise}
   */
  addAuthCacheEntry(challenge, networkIsolationKey, credentials) {}
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {Promise}
   */
  lookupServerBasicAuthCredentials(url, networkIsolationKey) {}
  /**
   * @return {Promise}
   */
  enableStaticKeyPinningForTesting() {}
  /**
   * @param { !network.mojom.X509Certificate } certificate
   * @param { !string } hostname
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {Promise}
   */
  verifyCertificateForTesting(certificate, hostname, ocspResponse, sctList) {}
  /**
   * @param { !url.mojom.Url } origin
   * @param { !url.mojom.Url } uploadUrl
   * @return {Promise}
   */
  addDomainReliabilityContextForTesting(origin, uploadUrl) {}
  /**
   * @return {Promise}
   */
  forceDomainReliabilityUploadsForTesting() {}
  /**
   * @param { !mojo.InterfaceRequest } originPolicyManager
   */
  getOriginPolicyManager(originPolicyManager) {}
};

goog.provide('network.mojom.CustomProxyConfig');

network.mojom.CustomProxyConfig = class {
  constructor() {
    /** @type { !network.mojom.ProxyRules } */
    this.rules;
    /** @type { !boolean } */
    this.shouldOverrideExistingConfig;
    /** @type { !boolean } */
    this.allowNonIdempotentMethods;
    /** @type { !network.mojom.HttpRequestHeaders } */
    this.connectTunnelHeaders;
  }
};

goog.provide('network.mojom.CertVerifierCreationParams');

network.mojom.CertVerifierCreationParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.CertVerifierServiceRemoteParams');

network.mojom.CertVerifierServiceRemoteParams = class {
  constructor() {
    /** @type { certVerifier.mojom.CertVerifierServicePtr } */
    this.certVerifierService;
  }
};

goog.provide('network.mojom.HttpAuthStaticNetworkContextParams');

network.mojom.HttpAuthStaticNetworkContextParams = class {
  constructor() {
    /** @type { !network.mojom.DefaultCredentials } */
    this.allowDefaultCredentials;
  }
};

goog.provide('network.mojom.CTPolicy');

network.mojom.CTPolicy = class {
  constructor() {
    /** @type { !Array<string> } */
    this.requiredHosts;
    /** @type { !Array<string> } */
    this.excludedHosts;
    /** @type { !Array<string> } */
    this.excludedSpkis;
    /** @type { !Array<string> } */
    this.excludedLegacySpkis;
  }
};

goog.provide('network.mojom.NetworkContextParams');

network.mojom.NetworkContextParams = class {
  constructor() {
    /** @type { string } */
    this.contextName;
    /** @type { !string } */
    this.userAgent;
    /** @type { !string } */
    this.acceptLanguage;
    /** @type { !boolean } */
    this.enableBrotli;
    /** @type { !boolean } */
    this.enableReferrers;
    /** @type { !boolean } */
    this.validateReferrerPolicyOnInitialRequest;
    /** @type { !boolean } */
    this.enableEncryptedCookies;
    /** @type { !boolean } */
    this.restoreOldSessionCookies;
    /** @type { !boolean } */
    this.persistSessionCookies;
    /** @type { !boolean } */
    this.httpCacheEnabled;
    /** @type { !boolean } */
    this.enableFtpUrlSupport;
    /** @type { !boolean } */
    this.disableIdleSocketsCloseOnMemoryPressure;
    /** @type { !boolean } */
    this.pacQuickCheckEnabled;
    /** @type { !boolean } */
    this.enableCertificateReporting;
    /** @type { !boolean } */
    this.enforceChromeCtPolicy;
    /** @type { !boolean } */
    this.enableExpectCtReporting;
    /** @type { !boolean } */
    this.enableDomainReliability;
    /** @type { !boolean } */
    this.discardDomainReliablityUploads;
    /** @type { !boolean } */
    this.skipReportingSendPermissionCheck;
    /** @type { !boolean } */
    this.allowAnyCorsExemptHeaderForBrowser;
    /** @type { !boolean } */
    this.resetHttpCacheBackend;
    /** @type { !boolean } */
    this.splitAuthCacheByNetworkIsolationKey;
    /** @type { !boolean } */
    this.requireNetworkIsolationKey;
    /** @type { !number } */
    this.httpCacheMaxSize;
    /** @type { !string } */
    this.quicUserAgentId;
    /** @type { proxyResolver.mojom.ProxyResolverFactoryPtr } */
    this.proxyResolverFactory;
    /** @type { mojoBase.mojom.FilePath } */
    this.cookiePath;
    /** @type { mojoBase.mojom.FilePath } */
    this.trustTokenPath;
    /** @type { mojoBase.mojom.FilePath } */
    this.httpCachePath;
    /** @type { mojoBase.mojom.FilePath } */
    this.httpServerPropertiesPath;
    /** @type { mojoBase.mojom.FilePath } */
    this.transportSecurityPersisterPath;
    /** @type { network.mojom.SSLConfig } */
    this.initialSslConfig;
    /** @type { mojo.InterfaceRequest } */
    this.sslConfigClientReceiver;
    /** @type { mojo.InterfaceRequest } */
    this.proxyConfigClientReceiver;
    /** @type { network.mojom.ProxyConfigWithAnnotation } */
    this.initialProxyConfig;
    /** @type { network.mojom.CustomProxyConfig } */
    this.initialCustomProxyConfig;
    /** @type { mojo.InterfaceRequest } */
    this.customProxyConfigClientReceiver;
    /** @type { network.mojom.ProxyConfigPollerClientPtr } */
    this.proxyConfigPollerClient;
    /** @type { network.mojom.ProxyErrorClientPtr } */
    this.proxyErrorClient;
    /** @type { !network.mojom.CorsMode } */
    this.corsMode;
    /** @type { !Array<network.mojom.CTLogInfo> } */
    this.ctLogs;
    /** @type { network.mojom.CTPolicy } */
    this.ctPolicy;
    /** @type { !mojoBase.mojom.Time } */
    this.ctLogUpdateTime;
    /** @type { Object } */
    this.certVerifierParams;
    /** @type { network.mojom.CookieManagerParams } */
    this.cookieManagerParams;
    /** @type { !string } */
    this.domainReliabilityUploadReporter;
    /** @type { mojoBase.mojom.TimeDelta } */
    this.reportingDeliveryInterval;
    /** @type { !Array<network.mojom.CorsOriginAccessPatterns> } */
    this.corsOriginAccessList;
    /** @type { !Array<string> } */
    this.corsExemptHeaderList;
    /** @type { !Array<string> } */
    this.hstsPolicyBypassList;
    /** @type { !Array<string> } */
    this.corsExtraSafelistedRequestHeaderNames;
    /** @type { mojoBase.mojom.FilePath } */
    this.reportingAndNelStorePath;
    /** @type { network.mojom.HttpAuthStaticNetworkContextParams } */
    this.httpAuthStaticNetworkContextParams;
  }
};

goog.provide('network.mojom.NetworkConditions');

network.mojom.NetworkConditions = class {
  constructor() {
    /** @type { !boolean } */
    this.offline;
    /** @type { !mojoBase.mojom.TimeDelta } */
    this.latency;
    /** @type { !number } */
    this.downloadThroughput;
    /** @type { !number } */
    this.uploadThroughput;
  }
};

goog.provide('network.mojom.ClearDataFilter');

network.mojom.ClearDataFilter = class {
  constructor() {
    /** @type { !network.mojom.Type } */
    this.type;
    /** @type { !Array<string> } */
    this.domains;
    /** @type { !Array<url.mojom.Origin> } */
    this.origins;
  }
};

goog.provide('network.mojom.NetworkUsage');

network.mojom.NetworkUsage = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.routingId;
    /** @type { !number } */
    this.totalBytesReceived;
    /** @type { !number } */
    this.totalBytesSent;
  }
};

goog.provide('network.mojom.SignedExchangeReport');

network.mojom.SignedExchangeReport = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
    /** @type { !number } */
    this.statusCode;
    /** @type { !string } */
    this.type;
    /** @type { !url.mojom.Url } */
    this.outerUrl;
    /** @type { !url.mojom.Url } */
    this.innerUrl;
    /** @type { !url.mojom.Url } */
    this.certUrl;
    /** @type { !string } */
    this.referrer;
    /** @type { !network.mojom.IPAddress } */
    this.serverIpAddress;
    /** @type { !string } */
    this.protocol;
    /** @type { !string } */
    this.method;
    /** @type { !mojoBase.mojom.TimeDelta } */
    this.elapsedTime;
  }
};

goog.provide('network.mojom.URLLoaderFactoryOverride');

network.mojom.URLLoaderFactoryOverride = class {
  constructor() {
    /** @type { !network.mojom.URLLoaderFactoryPtr } */
    this.overridingFactory;
    /** @type { mojo.InterfaceRequest } */
    this.overriddenFactoryReceiver;
    /** @type { !boolean } */
    this.skipCorsEnabledSchemeCheck;
  }
};

goog.provide('network.mojom.ClientSecurityState');

network.mojom.ClientSecurityState = class {
  constructor() {
    /** @type { !network.mojom.CrossOriginEmbedderPolicy } */
    this.crossOriginEmbedderPolicy;
    /** @type { !boolean } */
    this.isWebSecureContext;
    /** @type { !network.mojom.IPAddressSpace } */
    this.ipAddressSpace;
  }
};

goog.provide('network.mojom.URLLoaderFactoryParams');

network.mojom.URLLoaderFactoryParams = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !boolean } */
    this.isCorbEnabled;
    /** @type { !boolean } */
    this.ignoreIsolatedWorldOrigin;
    /** @type { !boolean } */
    this.unsafeNonWebbyInitiator;
    /** @type { !boolean } */
    this.disableWebSecurity;
    /** @type { !boolean } */
    this.disableSecureDns;
    /** @type { !boolean } */
    this.isTrusted;
    /** @type { !boolean } */
    this.automaticallyAssignIsolationInfo;
    /** @type { url.mojom.Origin } */
    this.requestInitiatorSiteLock;
    /** @type { network.mojom.TrustedURLLoaderHeaderClientPtr } */
    this.headerClient;
    /** @type { network.mojom.CorsOriginAccessPatterns } */
    this.factoryBoundAccessPatterns;
    /** @type { !network.mojom.IsolationInfo } */
    this.isolationInfo;
    /** @type { mojoBase.mojom.UnguessableToken } */
    this.topFrameId;
    /** @type { network.mojom.URLLoaderFactoryOverride } */
    this.factoryOverride;
    /** @type { network.mojom.ClientSecurityState } */
    this.clientSecurityState;
    /** @type { network.mojom.CrossOriginEmbedderPolicyReporterPtr } */
    this.coepReporter;
    /** @type { network.mojom.CookieAccessObserverPtr } */
    this.cookieObserver;
    /** @type { !network.mojom.TrustTokenRedemptionPolicy } */
    this.trustTokenRedemptionPolicy;
  }
};

goog.provide('network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_Params');

network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_Params = class {
  constructor() {
    /** @type { !network.mojom.CustomProxyConfig } */
    this.proxyConfig;
  }
};

goog.provide('network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_Params');

network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.TimeDelta } */
    this.bypassDuration;
    /** @type { !network.mojom.ProxyList } */
    this.badProxies;
  }
};

goog.provide('network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParams');

network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_Params');

network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_Params');

network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_Params = class {
  constructor() {
    /** @type { !network.mojom.HttpRequestHeaders } */
    this.headers;
  }
};

goog.provide('network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParams');

network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { network.mojom.HttpRequestHeaders } */
    this.headers;
  }
};

goog.provide('network.mojom.TrustedHeaderClient_OnHeadersReceived_Params');

network.mojom.TrustedHeaderClient_OnHeadersReceived_Params = class {
  constructor() {
    /** @type { !string } */
    this.headers;
    /** @type { !network.mojom.IPEndPoint } */
    this.remoteEndpoint;
  }
};

goog.provide('network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParams');

network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { string } */
    this.headers;
    /** @type { url.mojom.Url } */
    this.preserveFragmentOnRedirectUrl;
  }
};

goog.provide('network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_Params');

network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_Params = class {
  constructor() {
    /** @type { !number } */
    this.requestId;
    /** @type { !mojo.InterfaceRequest } */
    this.headerClient;
  }
};

goog.provide('network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_Params');

network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_Params = class {
  constructor() {
    /** @type { !network.mojom.URLRequest } */
    this.request;
    /** @type { !mojo.InterfaceRequest } */
    this.headerClient;
  }
};

goog.provide('network.mojom.AuthChallengeResponder_OnAuthCredentials_Params');

network.mojom.AuthChallengeResponder_OnAuthCredentials_Params = class {
  constructor() {
    /** @type { network.mojom.AuthCredentials } */
    this.credentials;
  }
};

goog.provide('network.mojom.ClientCertificateResponder_ContinueWithCertificate_Params');

network.mojom.ClientCertificateResponder_ContinueWithCertificate_Params = class {
  constructor() {
    /** @type { !network.mojom.X509Certificate } */
    this.x509Certificate;
    /** @type { !string } */
    this.providerName;
    /** @type { !Array<number> } */
    this.algorithmPreferences;
    /** @type { !network.mojom.SSLPrivateKeyPtr } */
    this.sslPrivateKey;
  }
};

goog.provide('network.mojom.ClientCertificateResponder_ContinueWithoutCertificate_Params');

network.mojom.ClientCertificateResponder_ContinueWithoutCertificate_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.ClientCertificateResponder_CancelRequest_Params');

network.mojom.ClientCertificateResponder_CancelRequest_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.SSLPrivateKey_Sign_Params');

network.mojom.SSLPrivateKey_Sign_Params = class {
  constructor() {
    /** @type { !number } */
    this.algorithm;
    /** @type { !Array<number> } */
    this.input;
  }
};

goog.provide('network.mojom.SSLPrivateKey_Sign_ResponseParams');

network.mojom.SSLPrivateKey_Sign_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.netError;
    /** @type { !Array<number> } */
    this.signature;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnAuthRequired_Params');

network.mojom.NetworkContextClient_OnAuthRequired_Params = class {
  constructor() {
    /** @type { mojoBase.mojom.UnguessableToken } */
    this.windowId;
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.routingId;
    /** @type { !number } */
    this.requestId;
    /** @type { !boolean } */
    this.firstAuthAttempt;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !network.mojom.AuthChallengeInfo } */
    this.authInfo;
    /** @type { network.mojom.URLResponseHead } */
    this.head;
    /** @type { !network.mojom.AuthChallengeResponderPtr } */
    this.authChallengeResponder;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnCertificateRequested_Params');

network.mojom.NetworkContextClient_OnCertificateRequested_Params = class {
  constructor() {
    /** @type { mojoBase.mojom.UnguessableToken } */
    this.windowId;
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.routingId;
    /** @type { !number } */
    this.requestId;
    /** @type { !network.mojom.SSLCertRequestInfo } */
    this.certInfo;
    /** @type { !network.mojom.ClientCertificateResponderPtr } */
    this.certResponder;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnSSLCertificateError_Params');

network.mojom.NetworkContextClient_OnSSLCertificateError_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.routingId;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !number } */
    this.netError;
    /** @type { !boolean } */
    this.fatal;
    /** @type { !network.mojom.SSLInfo } */
    this.sslInfo;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnSSLCertificateError_ResponseParams');

network.mojom.NetworkContextClient_OnSSLCertificateError_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.netError;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnFileUploadRequested_Params');

network.mojom.NetworkContextClient_OnFileUploadRequested_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !boolean } */
    this.async;
    /** @type { !Array<mojoBase.mojom.FilePath> } */
    this.filePaths;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParams');

network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.netError;
    /** @type { !Array<mojoBase.mojom.File> } */
    this.files;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnCanSendReportingReports_Params');

network.mojom.NetworkContextClient_OnCanSendReportingReports_Params = class {
  constructor() {
    /** @type { !Array<url.mojom.Origin> } */
    this.origins;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParams');

network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParams = class {
  constructor() {
    /** @type { !Array<url.mojom.Origin> } */
    this.origins;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_Params');

network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.origin;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParams');

network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.allowed;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnClearSiteData_Params');

network.mojom.NetworkContextClient_OnClearSiteData_Params = class {
  constructor() {
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.routingId;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !string } */
    this.headerValue;
    /** @type { !number } */
    this.loadFlags;
  }
};

goog.provide('network.mojom.NetworkContextClient_OnClearSiteData_ResponseParams');

network.mojom.NetworkContextClient_OnClearSiteData_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_SetClient_Params');

network.mojom.NetworkContext_SetClient_Params = class {
  constructor() {
    /** @type { !network.mojom.NetworkContextClientPtr } */
    this.client;
  }
};

goog.provide('network.mojom.NetworkContext_CreateURLLoaderFactory_Params');

network.mojom.NetworkContext_CreateURLLoaderFactory_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.urlLoaderFactory;
    /** @type { !network.mojom.URLLoaderFactoryParams } */
    this.params;
  }
};

goog.provide('network.mojom.NetworkContext_ResetURLLoaderFactories_Params');

network.mojom.NetworkContext_ResetURLLoaderFactories_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_GetCookieManager_Params');

network.mojom.NetworkContext_GetCookieManager_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.cookieManager;
  }
};

goog.provide('network.mojom.NetworkContext_GetRestrictedCookieManager_Params');

network.mojom.NetworkContext_GetRestrictedCookieManager_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.restrictedCookieManager;
    /** @type { !network.mojom.RestrictedCookieManagerRole } */
    this.role;
    /** @type { !url.mojom.Origin } */
    this.origin;
    /** @type { !network.mojom.SiteForCookies } */
    this.siteForCookies;
    /** @type { !url.mojom.Origin } */
    this.topFrameOrigin;
    /** @type { network.mojom.CookieAccessObserverPtr } */
    this.cookieObserver;
  }
};

goog.provide('network.mojom.NetworkContext_GetHasTrustTokensAnswerer_Params');

network.mojom.NetworkContext_GetHasTrustTokensAnswerer_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.hasTrustTokensAnswerer;
    /** @type { !url.mojom.Origin } */
    this.topFrameOrigin;
  }
};

goog.provide('network.mojom.NetworkContext_ClearTrustTokenData_Params');

network.mojom.NetworkContext_ClearTrustTokenData_Params = class {
  constructor() {
    /** @type { network.mojom.ClearDataFilter } */
    this.filter;
  }
};

goog.provide('network.mojom.NetworkContext_ClearTrustTokenData_ResponseParams');

network.mojom.NetworkContext_ClearTrustTokenData_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ClearNetworkingHistorySince_Params');

network.mojom.NetworkContext_ClearNetworkingHistorySince_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.Time } */
    this.startTime;
  }
};

goog.provide('network.mojom.NetworkContext_ClearNetworkingHistorySince_ResponseParams');

network.mojom.NetworkContext_ClearNetworkingHistorySince_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ClearHttpCache_Params');

network.mojom.NetworkContext_ClearHttpCache_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.Time } */
    this.startTime;
    /** @type { !mojoBase.mojom.Time } */
    this.endTime;
    /** @type { network.mojom.ClearDataFilter } */
    this.filter;
  }
};

goog.provide('network.mojom.NetworkContext_ClearHttpCache_ResponseParams');

network.mojom.NetworkContext_ClearHttpCache_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ComputeHttpCacheSize_Params');

network.mojom.NetworkContext_ComputeHttpCacheSize_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.Time } */
    this.startTime;
    /** @type { !mojoBase.mojom.Time } */
    this.endTime;
  }
};

goog.provide('network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParams');

network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.isUpperBound;
    /** @type { !number } */
    this.sizeOrError;
  }
};

goog.provide('network.mojom.NetworkContext_NotifyExternalCacheHit_Params');

network.mojom.NetworkContext_NotifyExternalCacheHit_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !string } */
    this.httpMethod;
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.key;
  }
};

goog.provide('network.mojom.NetworkContext_ClearHostCache_Params');

network.mojom.NetworkContext_ClearHostCache_Params = class {
  constructor() {
    /** @type { network.mojom.ClearDataFilter } */
    this.filter;
  }
};

goog.provide('network.mojom.NetworkContext_ClearHostCache_ResponseParams');

network.mojom.NetworkContext_ClearHostCache_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ClearHttpAuthCache_Params');

network.mojom.NetworkContext_ClearHttpAuthCache_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.Time } */
    this.startTime;
  }
};

goog.provide('network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParams');

network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ClearReportingCacheReports_Params');

network.mojom.NetworkContext_ClearReportingCacheReports_Params = class {
  constructor() {
    /** @type { network.mojom.ClearDataFilter } */
    this.filter;
  }
};

goog.provide('network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParams');

network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ClearReportingCacheClients_Params');

network.mojom.NetworkContext_ClearReportingCacheClients_Params = class {
  constructor() {
    /** @type { network.mojom.ClearDataFilter } */
    this.filter;
  }
};

goog.provide('network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParams');

network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ClearNetworkErrorLogging_Params');

network.mojom.NetworkContext_ClearNetworkErrorLogging_Params = class {
  constructor() {
    /** @type { network.mojom.ClearDataFilter } */
    this.filter;
  }
};

goog.provide('network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParams');

network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ClearDomainReliability_Params');

network.mojom.NetworkContext_ClearDomainReliability_Params = class {
  constructor() {
    /** @type { network.mojom.ClearDataFilter } */
    this.filter;
    /** @type { !network.mojom.DomainReliabilityClearMode } */
    this.mode;
  }
};

goog.provide('network.mojom.NetworkContext_ClearDomainReliability_ResponseParams');

network.mojom.NetworkContext_ClearDomainReliability_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_GetDomainReliabilityJSON_Params');

network.mojom.NetworkContext_GetDomainReliabilityJSON_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_GetDomainReliabilityJSON_ResponseParams');

network.mojom.NetworkContext_GetDomainReliabilityJSON_ResponseParams = class {
  constructor() {
    /** @type { !Object } */
    this.data;
  }
};

goog.provide('network.mojom.NetworkContext_QueueReport_Params');

network.mojom.NetworkContext_QueueReport_Params = class {
  constructor() {
    /** @type { !string } */
    this.type;
    /** @type { !string } */
    this.group;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { string } */
    this.userAgent;
    /** @type { !mojoBase.mojom.DictionaryValue } */
    this.body;
  }
};

goog.provide('network.mojom.NetworkContext_QueueSignedExchangeReport_Params');

network.mojom.NetworkContext_QueueSignedExchangeReport_Params = class {
  constructor() {
    /** @type { !network.mojom.SignedExchangeReport } */
    this.report;
  }
};

goog.provide('network.mojom.NetworkContext_CloseAllConnections_Params');

network.mojom.NetworkContext_CloseAllConnections_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_CloseAllConnections_ResponseParams');

network.mojom.NetworkContext_CloseAllConnections_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_CloseIdleConnections_Params');

network.mojom.NetworkContext_CloseIdleConnections_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_CloseIdleConnections_ResponseParams');

network.mojom.NetworkContext_CloseIdleConnections_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_SetNetworkConditions_Params');

network.mojom.NetworkContext_SetNetworkConditions_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.UnguessableToken } */
    this.throttlingProfileId;
    /** @type { network.mojom.NetworkConditions } */
    this.conditions;
  }
};

goog.provide('network.mojom.NetworkContext_SetAcceptLanguage_Params');

network.mojom.NetworkContext_SetAcceptLanguage_Params = class {
  constructor() {
    /** @type { !string } */
    this.newAcceptLanguage;
  }
};

goog.provide('network.mojom.NetworkContext_SetEnableReferrers_Params');

network.mojom.NetworkContext_SetEnableReferrers_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.enableReferrers;
  }
};

goog.provide('network.mojom.NetworkContext_SetCTPolicy_Params');

network.mojom.NetworkContext_SetCTPolicy_Params = class {
  constructor() {
    /** @type { !network.mojom.CTPolicy } */
    this.ctPolicy;
  }
};

goog.provide('network.mojom.NetworkContext_AddExpectCT_Params');

network.mojom.NetworkContext_AddExpectCT_Params = class {
  constructor() {
    /** @type { !string } */
    this.host;
    /** @type { !mojoBase.mojom.Time } */
    this.expiry;
    /** @type { !boolean } */
    this.enforce;
    /** @type { !url.mojom.Url } */
    this.reportUri;
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
  }
};

goog.provide('network.mojom.NetworkContext_AddExpectCT_ResponseParams');

network.mojom.NetworkContext_AddExpectCT_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('network.mojom.NetworkContext_SetExpectCTTestReport_Params');

network.mojom.NetworkContext_SetExpectCTTestReport_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.reportUri;
  }
};

goog.provide('network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParams');

network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('network.mojom.NetworkContext_GetExpectCTState_Params');

network.mojom.NetworkContext_GetExpectCTState_Params = class {
  constructor() {
    /** @type { !string } */
    this.domain;
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
  }
};

goog.provide('network.mojom.NetworkContext_GetExpectCTState_ResponseParams');

network.mojom.NetworkContext_GetExpectCTState_ResponseParams = class {
  constructor() {
    /** @type { !mojoBase.mojom.DictionaryValue } */
    this.state;
  }
};

goog.provide('network.mojom.NetworkContext_CreateUDPSocket_Params');

network.mojom.NetworkContext_CreateUDPSocket_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.receiver;
    /** @type { network.mojom.UDPSocketListenerPtr } */
    this.listener;
  }
};

goog.provide('network.mojom.NetworkContext_CreateTCPServerSocket_Params');

network.mojom.NetworkContext_CreateTCPServerSocket_Params = class {
  constructor() {
    /** @type { !network.mojom.IPEndPoint } */
    this.localAddr;
    /** @type { !number } */
    this.backlog;
    /** @type { !mojo.InterfaceRequest } */
    this.socket;
    /** @type { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
  }
};

goog.provide('network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParams');

network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { network.mojom.IPEndPoint } */
    this.localAddrOut;
  }
};

goog.provide('network.mojom.NetworkContext_CreateTCPConnectedSocket_Params');

network.mojom.NetworkContext_CreateTCPConnectedSocket_Params = class {
  constructor() {
    /** @type { network.mojom.IPEndPoint } */
    this.localAddr;
    /** @type { !network.mojom.AddressList } */
    this.remoteAddrList;
    /** @type { network.mojom.TCPConnectedSocketOptions } */
    this.tcpConnectedSocketOptions;
    /** @type { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
    /** @type { !mojo.InterfaceRequest } */
    this.socket;
    /** @type { network.mojom.SocketObserverPtr } */
    this.observer;
  }
};

goog.provide('network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParams');

network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { MojoHandle } */
    this.receiveStream;
    /** @type { network.mojom.IPEndPoint } */
    this.localAddr;
    /** @type { network.mojom.IPEndPoint } */
    this.peerAddr;
    /** @type { MojoHandle } */
    this.sendStream;
  }
};

goog.provide('network.mojom.NetworkContext_CreateTCPBoundSocket_Params');

network.mojom.NetworkContext_CreateTCPBoundSocket_Params = class {
  constructor() {
    /** @type { !network.mojom.IPEndPoint } */
    this.localAddr;
    /** @type { !network.mojom.MutableNetworkTrafficAnnotationTag } */
    this.trafficAnnotation;
    /** @type { !mojo.InterfaceRequest } */
    this.socket;
  }
};

goog.provide('network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParams');

network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.result;
    /** @type { network.mojom.IPEndPoint } */
    this.localAddr;
  }
};

goog.provide('network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_Params');

network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.factory;
  }
};

goog.provide('network.mojom.NetworkContext_LookUpProxyForURL_Params');

network.mojom.NetworkContext_LookUpProxyForURL_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { !network.mojom.ProxyLookupClientPtr } */
    this.proxyLookupClient;
  }
};

goog.provide('network.mojom.NetworkContext_ForceReloadProxyConfig_Params');

network.mojom.NetworkContext_ForceReloadProxyConfig_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParams');

network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ClearBadProxiesCache_Params');

network.mojom.NetworkContext_ClearBadProxiesCache_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParams');

network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_CreateWebSocket_Params');

network.mojom.NetworkContext_CreateWebSocket_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !Array<string> } */
    this.requestedProtocols;
    /** @type { !network.mojom.SiteForCookies } */
    this.siteForCookies;
    /** @type { !network.mojom.IsolationInfo } */
    this.isolationInfo;
    /** @type { !Array<network.mojom.HttpHeader> } */
    this.additionalHeaders;
    /** @type { !number } */
    this.processId;
    /** @type { !number } */
    this.renderFrameId;
    /** @type { !url.mojom.Origin } */
    this.origin;
    /** @type { !number } */
    this.options;
    /** @type { !network.mojom.WebSocketHandshakeClientPtr } */
    this.handshakeClient;
    /** @type { network.mojom.AuthenticationHandlerPtr } */
    this.authHandler;
    /** @type { network.mojom.TrustedHeaderClientPtr } */
    this.headerClient;
  }
};

goog.provide('network.mojom.NetworkContext_CreateQuicTransport_Params');

network.mojom.NetworkContext_CreateQuicTransport_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !url.mojom.Origin } */
    this.origin;
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { !Array<network.mojom.QuicTransportCertificateFingerprint> } */
    this.fingerprints;
    /** @type { !network.mojom.QuicTransportHandshakeClientPtr } */
    this.handshakeClient;
  }
};

goog.provide('network.mojom.NetworkContext_CreateNetLogExporter_Params');

network.mojom.NetworkContext_CreateNetLogExporter_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.receiver;
  }
};

goog.provide('network.mojom.NetworkContext_PreconnectSockets_Params');

network.mojom.NetworkContext_PreconnectSockets_Params = class {
  constructor() {
    /** @type { !number } */
    this.numStreams;
    /** @type { !boolean } */
    this.allowCredentials;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
  }
};

goog.provide('network.mojom.NetworkContext_CreateP2PSocketManager_Params');

network.mojom.NetworkContext_CreateP2PSocketManager_Params = class {
  constructor() {
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { !network.mojom.P2PTrustedSocketManagerClientPtr } */
    this.client;
    /** @type { !mojo.InterfaceRequest } */
    this.trustedSocketManager;
    /** @type { !mojo.InterfaceRequest } */
    this.socketManager;
  }
};

goog.provide('network.mojom.NetworkContext_CreateMdnsResponder_Params');

network.mojom.NetworkContext_CreateMdnsResponder_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.responderReceiver;
  }
};

goog.provide('network.mojom.NetworkContext_ResolveHost_Params');

network.mojom.NetworkContext_ResolveHost_Params = class {
  constructor() {
    /** @type { !network.mojom.HostPortPair } */
    this.host;
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { network.mojom.ResolveHostParameters } */
    this.optionalParameters;
    /** @type { !network.mojom.ResolveHostClientPtr } */
    this.responseClient;
  }
};

goog.provide('network.mojom.NetworkContext_CreateHostResolver_Params');

network.mojom.NetworkContext_CreateHostResolver_Params = class {
  constructor() {
    /** @type { network.mojom.DnsConfigOverrides } */
    this.configOverrides;
    /** @type { !mojo.InterfaceRequest } */
    this.hostResolver;
  }
};

goog.provide('network.mojom.NetworkContext_VerifyCertForSignedExchange_Params');

network.mojom.NetworkContext_VerifyCertForSignedExchange_Params = class {
  constructor() {
    /** @type { !network.mojom.X509Certificate } */
    this.certificate;
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !string } */
    this.ocspResponse;
    /** @type { !string } */
    this.sctList;
  }
};

goog.provide('network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParams');

network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.errorCode;
    /** @type { !network.mojom.CertVerifyResult } */
    this.cvResult;
    /** @type { !network.mojom.CTVerifyResult } */
    this.ctResult;
  }
};

goog.provide('network.mojom.NetworkContext_ParseHeaders_Params');

network.mojom.NetworkContext_ParseHeaders_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !network.mojom.HttpResponseHeaders } */
    this.headers;
  }
};

goog.provide('network.mojom.NetworkContext_ParseHeaders_ResponseParams');

network.mojom.NetworkContext_ParseHeaders_ResponseParams = class {
  constructor() {
    /** @type { !network.mojom.ParsedHeaders } */
    this.parsedHeaders;
  }
};

goog.provide('network.mojom.NetworkContext_AddHSTS_Params');

network.mojom.NetworkContext_AddHSTS_Params = class {
  constructor() {
    /** @type { !string } */
    this.host;
    /** @type { !mojoBase.mojom.Time } */
    this.expiry;
    /** @type { !boolean } */
    this.includeSubdomains;
  }
};

goog.provide('network.mojom.NetworkContext_AddHSTS_ResponseParams');

network.mojom.NetworkContext_AddHSTS_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_IsHSTSActiveForHost_Params');

network.mojom.NetworkContext_IsHSTSActiveForHost_Params = class {
  constructor() {
    /** @type { !string } */
    this.host;
  }
};

goog.provide('network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParams');

network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.result;
  }
};

goog.provide('network.mojom.NetworkContext_GetHSTSState_Params');

network.mojom.NetworkContext_GetHSTSState_Params = class {
  constructor() {
    /** @type { !string } */
    this.domain;
  }
};

goog.provide('network.mojom.NetworkContext_GetHSTSState_ResponseParams');

network.mojom.NetworkContext_GetHSTSState_ResponseParams = class {
  constructor() {
    /** @type { !mojoBase.mojom.DictionaryValue } */
    this.state;
  }
};

goog.provide('network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_Params');

network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_Params = class {
  constructor() {
    /** @type { !url.mojom.Origin } */
    this.sourceOrigin;
    /** @type { !Array<network.mojom.CorsOriginPattern> } */
    this.allowPatterns;
    /** @type { !Array<network.mojom.CorsOriginPattern> } */
    this.blockPatterns;
  }
};

goog.provide('network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParams');

network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_SetCorsExtraSafelistedRequestHeaderNames_Params');

network.mojom.NetworkContext_SetCorsExtraSafelistedRequestHeaderNames_Params = class {
  constructor() {
    /** @type { !Array<string> } */
    this.corsExtraSafelistedRequestHeaderNames;
  }
};

goog.provide('network.mojom.NetworkContext_DeleteDynamicDataForHost_Params');

network.mojom.NetworkContext_DeleteDynamicDataForHost_Params = class {
  constructor() {
    /** @type { !string } */
    this.host;
  }
};

goog.provide('network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParams');

network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.result;
  }
};

goog.provide('network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_Params');

network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.splitAuthCacheByNetworkIsolationKey;
  }
};

goog.provide('network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_Params');

network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParams');

network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParams = class {
  constructor() {
    /** @type { !mojoBase.mojom.UnguessableToken } */
    this.cacheKey;
  }
};

goog.provide('network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_Params');

network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.UnguessableToken } */
    this.cacheKey;
  }
};

goog.provide('network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParams');

network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_AddAuthCacheEntry_Params');

network.mojom.NetworkContext_AddAuthCacheEntry_Params = class {
  constructor() {
    /** @type { !network.mojom.AuthChallengeInfo } */
    this.challenge;
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
    /** @type { !network.mojom.AuthCredentials } */
    this.credentials;
  }
};

goog.provide('network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParams');

network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_LookupServerBasicAuthCredentials_Params');

network.mojom.NetworkContext_LookupServerBasicAuthCredentials_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !network.mojom.NetworkIsolationKey } */
    this.networkIsolationKey;
  }
};

goog.provide('network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParams');

network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParams = class {
  constructor() {
    /** @type { network.mojom.AuthCredentials } */
    this.credentials;
  }
};

goog.provide('network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_Params');

network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParams');

network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_VerifyCertificateForTesting_Params');

network.mojom.NetworkContext_VerifyCertificateForTesting_Params = class {
  constructor() {
    /** @type { !network.mojom.X509Certificate } */
    this.certificate;
    /** @type { !string } */
    this.hostname;
    /** @type { !string } */
    this.ocspResponse;
    /** @type { !string } */
    this.sctList;
  }
};

goog.provide('network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParams');

network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.errorCode;
  }
};

goog.provide('network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_Params');

network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_Params = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.origin;
    /** @type { !url.mojom.Url } */
    this.uploadUrl;
  }
};

goog.provide('network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParams');

network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_Params');

network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParams');

network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParams = class {
  constructor() {
  }
};

goog.provide('network.mojom.NetworkContext_GetOriginPolicyManager_Params');

network.mojom.NetworkContext_GetOriginPolicyManager_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.originPolicyManager;
  }
};
