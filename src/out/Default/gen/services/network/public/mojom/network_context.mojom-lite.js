// services/network/public/mojom/network_context.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('network.mojom');




/**
 * @const { !number }
 * @export
 */
network.mojom.WEB_SOCKET_OPTION_NONE =
    0;

/**
 * @const { !number }
 * @export
 */
network.mojom.WEB_SOCKET_OPTION_BLOCK_ALL_COOKIES =
    1;

/**
 * @const { !number }
 * @export
 */
network.mojom.WEB_SOCKET_OPTION_BLOCK_THIRD_PARTY_COOKIES =
    2;

/**
 * @const { !number }
 * @export
 */
network.mojom.BROWSER_PROCESS_ID =
    0;

/**
 * @const { !number }
 * @export
 */
network.mojom.INVALID_PROCESS_ID =
    -1;


/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
network.mojom.TrustTokenRedemptionPolicySpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
network.mojom.TrustTokenRedemptionPolicy = {
  
  kForbid: 0,
  kPotentiallyPermit: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};





/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.CustomProxyConfigClientPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.CustomProxyConfigClientInterface }
 */
network.mojom.CustomProxyConfigClientRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.CustomProxyConfigClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.CustomProxyConfigClientPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.CustomProxyConfigClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !network.mojom.CustomProxyConfig } proxyConfig
   */

  onCustomProxyConfigUpdated(
      proxyConfig) {
    this.proxy.sendMessage(
        1050478131,
        network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
        null,
        [
          proxyConfig
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.TimeDelta } bypassDuration
   * @param { !network.mojom.ProxyList } badProxies
   * @return {Promise}
   */

  markProxiesAsBad(
      bypassDuration,
      badProxies) {
    return this.proxy.sendMessage(
        2042762015,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
        [
          bypassDuration,
          badProxies
        ]);
  }

  
  /**
   */

  clearBadProxiesCache() {
    this.proxy.sendMessage(
        1164496472,
        network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
        null,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the CustomProxyConfigClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.CustomProxyConfigClientReceiver = class {
  /**
   * @param {!network.mojom.CustomProxyConfigClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.CustomProxyConfigClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.CustomProxyConfigClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.CustomProxyConfigClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1050478131,
        network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
        null,
        impl.onCustomProxyConfigUpdated.bind(impl));
    this.helper_internal_.registerHandler(
        2042762015,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
        impl.markProxiesAsBad.bind(impl));
    this.helper_internal_.registerHandler(
        1164496472,
        network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
        null,
        impl.clearBadProxiesCache.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.CustomProxyConfigClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.CustomProxyConfigClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.CustomProxyConfigClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.CustomProxyConfigClientRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the CustomProxyConfigClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.CustomProxyConfigClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.CustomProxyConfigClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.CustomProxyConfigClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCustomProxyConfigUpdated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1050478131,
        network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
        null,
        this.onCustomProxyConfigUpdated.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.markProxiesAsBad =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2042762015,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
        network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
        this.markProxiesAsBad.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearBadProxiesCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1164496472,
        network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
        null,
        this.clearBadProxiesCache.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.TrustedHeaderClientPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.TrustedHeaderClientInterface }
 */
network.mojom.TrustedHeaderClientRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.TrustedHeaderClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.TrustedHeaderClientPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.TrustedHeaderClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !network.mojom.HttpRequestHeaders } headers
   * @return {Promise<{
        result: !number,
        headers: ?network.mojom.HttpRequestHeaders,
   *  }>}
   */

  onBeforeSendHeaders(
      headers) {
    return this.proxy.sendMessage(
        1061911933,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
        [
          headers
        ]);
  }

  
  /**
   * @param { !string } headers
   * @param { !network.mojom.IPEndPoint } remoteEndpoint
   * @return {Promise<{
        result: !number,
        headers: ?string,
        preserveFragmentOnRedirectUrl: ?url.mojom.Url,
   *  }>}
   */

  onHeadersReceived(
      headers,
      remoteEndpoint) {
    return this.proxy.sendMessage(
        1716893608,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
        [
          headers,
          remoteEndpoint
        ]);
  }
};

/**
 * An object which receives request messages for the TrustedHeaderClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.TrustedHeaderClientReceiver = class {
  /**
   * @param {!network.mojom.TrustedHeaderClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.TrustedHeaderClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.TrustedHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.TrustedHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1061911933,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
        impl.onBeforeSendHeaders.bind(impl));
    this.helper_internal_.registerHandler(
        1716893608,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
        impl.onHeadersReceived.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.TrustedHeaderClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.TrustedHeaderClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.TrustedHeaderClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.TrustedHeaderClientRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the TrustedHeaderClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.TrustedHeaderClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.TrustedHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.TrustedHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onBeforeSendHeaders =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1061911933,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
        this.onBeforeSendHeaders.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onHeadersReceived =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1716893608,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
        network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
        this.onHeadersReceived.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.TrustedURLLoaderHeaderClientPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.TrustedURLLoaderHeaderClientInterface }
 */
network.mojom.TrustedURLLoaderHeaderClientRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.TrustedURLLoaderHeaderClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.TrustedURLLoaderHeaderClientPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.TrustedURLLoaderHeaderClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } requestId
   * @param { !network.mojom.TrustedHeaderClientPendingReceiver } headerClient
   */

  onLoaderCreated(
      requestId,
      headerClient) {
    this.proxy.sendMessage(
        248602258,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
        null,
        [
          requestId,
          headerClient
        ]);
  }

  
  /**
   * @param { !network.mojom.URLRequest } request
   * @param { !network.mojom.TrustedHeaderClientPendingReceiver } headerClient
   */

  onLoaderForCorsPreflightCreated(
      request,
      headerClient) {
    this.proxy.sendMessage(
        1233005640,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
        null,
        [
          request,
          headerClient
        ]);
  }
};

/**
 * An object which receives request messages for the TrustedURLLoaderHeaderClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.TrustedURLLoaderHeaderClientReceiver = class {
  /**
   * @param {!network.mojom.TrustedURLLoaderHeaderClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.TrustedURLLoaderHeaderClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.TrustedURLLoaderHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.TrustedURLLoaderHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        248602258,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
        null,
        impl.onLoaderCreated.bind(impl));
    this.helper_internal_.registerHandler(
        1233005640,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
        null,
        impl.onLoaderForCorsPreflightCreated.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.TrustedURLLoaderHeaderClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.TrustedURLLoaderHeaderClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.TrustedURLLoaderHeaderClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.TrustedURLLoaderHeaderClientRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the TrustedURLLoaderHeaderClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.TrustedURLLoaderHeaderClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.TrustedURLLoaderHeaderClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.TrustedURLLoaderHeaderClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onLoaderCreated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        248602258,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
        null,
        this.onLoaderCreated.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onLoaderForCorsPreflightCreated =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1233005640,
        network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
        null,
        this.onLoaderForCorsPreflightCreated.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.AuthChallengeResponderPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.AuthChallengeResponderInterface }
 */
network.mojom.AuthChallengeResponderRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.AuthChallengeResponderPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.AuthChallengeResponderPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.AuthChallengeResponderPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { ?network.mojom.AuthCredentials } credentials
   */

  onAuthCredentials(
      credentials) {
    this.proxy.sendMessage(
        1908983425,
        network.mojom.AuthChallengeResponder_OnAuthCredentials_ParamsSpec.$,
        null,
        [
          credentials
        ]);
  }
};

/**
 * An object which receives request messages for the AuthChallengeResponder
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.AuthChallengeResponderReceiver = class {
  /**
   * @param {!network.mojom.AuthChallengeResponderInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.AuthChallengeResponderRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.AuthChallengeResponderRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.AuthChallengeResponderRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1908983425,
        network.mojom.AuthChallengeResponder_OnAuthCredentials_ParamsSpec.$,
        null,
        impl.onAuthCredentials.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.AuthChallengeResponder = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.AuthChallengeResponder";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.AuthChallengeResponderRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.AuthChallengeResponderRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the AuthChallengeResponder
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.AuthChallengeResponderCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.AuthChallengeResponderRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.AuthChallengeResponderRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onAuthCredentials =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1908983425,
        network.mojom.AuthChallengeResponder_OnAuthCredentials_ParamsSpec.$,
        null,
        this.onAuthCredentials.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.ClientCertificateResponderPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.ClientCertificateResponderInterface }
 */
network.mojom.ClientCertificateResponderRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.ClientCertificateResponderPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.ClientCertificateResponderPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.ClientCertificateResponderPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !network.mojom.X509Certificate } x509Certificate
   * @param { !string } providerName
   * @param { !Array<!number> } algorithmPreferences
   * @param { !network.mojom.SSLPrivateKeyRemote } sslPrivateKey
   */

  continueWithCertificate(
      x509Certificate,
      providerName,
      algorithmPreferences,
      sslPrivateKey) {
    this.proxy.sendMessage(
        736559861,
        network.mojom.ClientCertificateResponder_ContinueWithCertificate_ParamsSpec.$,
        null,
        [
          x509Certificate,
          providerName,
          algorithmPreferences,
          sslPrivateKey
        ]);
  }

  
  /**
   */

  continueWithoutCertificate() {
    this.proxy.sendMessage(
        1226599287,
        network.mojom.ClientCertificateResponder_ContinueWithoutCertificate_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   */

  cancelRequest() {
    this.proxy.sendMessage(
        474512564,
        network.mojom.ClientCertificateResponder_CancelRequest_ParamsSpec.$,
        null,
        [
        ]);
  }
};

/**
 * An object which receives request messages for the ClientCertificateResponder
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.ClientCertificateResponderReceiver = class {
  /**
   * @param {!network.mojom.ClientCertificateResponderInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.ClientCertificateResponderRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.ClientCertificateResponderRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.ClientCertificateResponderRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        736559861,
        network.mojom.ClientCertificateResponder_ContinueWithCertificate_ParamsSpec.$,
        null,
        impl.continueWithCertificate.bind(impl));
    this.helper_internal_.registerHandler(
        1226599287,
        network.mojom.ClientCertificateResponder_ContinueWithoutCertificate_ParamsSpec.$,
        null,
        impl.continueWithoutCertificate.bind(impl));
    this.helper_internal_.registerHandler(
        474512564,
        network.mojom.ClientCertificateResponder_CancelRequest_ParamsSpec.$,
        null,
        impl.cancelRequest.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.ClientCertificateResponder = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.ClientCertificateResponder";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.ClientCertificateResponderRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.ClientCertificateResponderRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the ClientCertificateResponder
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.ClientCertificateResponderCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.ClientCertificateResponderRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.ClientCertificateResponderRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.continueWithCertificate =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        736559861,
        network.mojom.ClientCertificateResponder_ContinueWithCertificate_ParamsSpec.$,
        null,
        this.continueWithCertificate.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.continueWithoutCertificate =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1226599287,
        network.mojom.ClientCertificateResponder_ContinueWithoutCertificate_ParamsSpec.$,
        null,
        this.continueWithoutCertificate.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.cancelRequest =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        474512564,
        network.mojom.ClientCertificateResponder_CancelRequest_ParamsSpec.$,
        null,
        this.cancelRequest.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.SSLPrivateKeyPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.SSLPrivateKeyInterface }
 */
network.mojom.SSLPrivateKeyRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.SSLPrivateKeyPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.SSLPrivateKeyPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.SSLPrivateKeyPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !number } algorithm
   * @param { !Array<!number> } input
   * @return {Promise<{
        netError: !number,
        signature: !Array<!number>,
   *  }>}
   */

  sign(
      algorithm,
      input) {
    return this.proxy.sendMessage(
        1607215135,
        network.mojom.SSLPrivateKey_Sign_ParamsSpec.$,
        network.mojom.SSLPrivateKey_Sign_ResponseParamsSpec.$,
        [
          algorithm,
          input
        ]);
  }
};

/**
 * An object which receives request messages for the SSLPrivateKey
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.SSLPrivateKeyReceiver = class {
  /**
   * @param {!network.mojom.SSLPrivateKeyInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.SSLPrivateKeyRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.SSLPrivateKeyRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.SSLPrivateKeyRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1607215135,
        network.mojom.SSLPrivateKey_Sign_ParamsSpec.$,
        network.mojom.SSLPrivateKey_Sign_ResponseParamsSpec.$,
        impl.sign.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.SSLPrivateKey = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.SSLPrivateKey";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.SSLPrivateKeyRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.SSLPrivateKeyRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the SSLPrivateKey
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.SSLPrivateKeyCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.SSLPrivateKeyRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.SSLPrivateKeyRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sign =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1607215135,
        network.mojom.SSLPrivateKey_Sign_ParamsSpec.$,
        network.mojom.SSLPrivateKey_Sign_ResponseParamsSpec.$,
        this.sign.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.NetworkContextClientPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.NetworkContextClientInterface }
 */
network.mojom.NetworkContextClientRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.NetworkContextClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.NetworkContextClientPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.NetworkContextClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { ?mojoBase.mojom.UnguessableToken } windowId
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !number } requestId
   * @param { !url.mojom.Url } url
   * @param { !boolean } firstAuthAttempt
   * @param { !network.mojom.AuthChallengeInfo } authInfo
   * @param { ?network.mojom.URLResponseHead } head
   * @param { !network.mojom.AuthChallengeResponderRemote } authChallengeResponder
   */

  onAuthRequired(
      windowId,
      processId,
      routingId,
      requestId,
      url,
      firstAuthAttempt,
      authInfo,
      head,
      authChallengeResponder) {
    this.proxy.sendMessage(
        479654362,
        network.mojom.NetworkContextClient_OnAuthRequired_ParamsSpec.$,
        null,
        [
          windowId,
          processId,
          routingId,
          requestId,
          url,
          firstAuthAttempt,
          authInfo,
          head,
          authChallengeResponder
        ]);
  }

  
  /**
   * @param { ?mojoBase.mojom.UnguessableToken } windowId
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !number } requestId
   * @param { !network.mojom.SSLCertRequestInfo } certInfo
   * @param { !network.mojom.ClientCertificateResponderRemote } certResponder
   */

  onCertificateRequested(
      windowId,
      processId,
      routingId,
      requestId,
      certInfo,
      certResponder) {
    this.proxy.sendMessage(
        1700869215,
        network.mojom.NetworkContextClient_OnCertificateRequested_ParamsSpec.$,
        null,
        [
          windowId,
          processId,
          routingId,
          requestId,
          certInfo,
          certResponder
        ]);
  }

  
  /**
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !url.mojom.Url } url
   * @param { !number } netError
   * @param { !network.mojom.SSLInfo } sslInfo
   * @param { !boolean } fatal
   * @return {Promise<{
        netError: !number,
   *  }>}
   */

  onSSLCertificateError(
      processId,
      routingId,
      url,
      netError,
      sslInfo,
      fatal) {
    return this.proxy.sendMessage(
        365788770,
        network.mojom.NetworkContextClient_OnSSLCertificateError_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnSSLCertificateError_ResponseParamsSpec.$,
        [
          processId,
          routingId,
          url,
          netError,
          sslInfo,
          fatal
        ]);
  }

  
  /**
   * @param { !number } processId
   * @param { !boolean } async
   * @param { !Array<!mojoBase.mojom.FilePath> } filePaths
   * @return {Promise<{
        netError: !number,
        files: !Array<!mojoBase.mojom.File>,
   *  }>}
   */

  onFileUploadRequested(
      processId,
      async,
      filePaths) {
    return this.proxy.sendMessage(
        984053514,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
        [
          processId,
          async,
          filePaths
        ]);
  }

  
  /**
   * @param { !Array<!url.mojom.Origin> } origins
   * @return {Promise<{
        origins: !Array<!url.mojom.Origin>,
   *  }>}
   */

  onCanSendReportingReports(
      origins) {
    return this.proxy.sendMessage(
        289760283,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
        [
          origins
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } origin
   * @return {Promise<{
        allowed: !boolean,
   *  }>}
   */

  onCanSendDomainReliabilityUpload(
      origin) {
    return this.proxy.sendMessage(
        1648084953,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
        [
          origin
        ]);
  }

  
  /**
   * @param { !number } processId
   * @param { !number } routingId
   * @param { !url.mojom.Url } url
   * @param { !string } headerValue
   * @param { !number } loadFlags
   * @return {Promise}
   */

  onClearSiteData(
      processId,
      routingId,
      url,
      headerValue,
      loadFlags) {
    return this.proxy.sendMessage(
        614399500,
        network.mojom.NetworkContextClient_OnClearSiteData_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnClearSiteData_ResponseParamsSpec.$,
        [
          processId,
          routingId,
          url,
          headerValue,
          loadFlags
        ]);
  }
};

/**
 * An object which receives request messages for the NetworkContextClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.NetworkContextClientReceiver = class {
  /**
   * @param {!network.mojom.NetworkContextClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.NetworkContextClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.NetworkContextClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.NetworkContextClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        479654362,
        network.mojom.NetworkContextClient_OnAuthRequired_ParamsSpec.$,
        null,
        impl.onAuthRequired.bind(impl));
    this.helper_internal_.registerHandler(
        1700869215,
        network.mojom.NetworkContextClient_OnCertificateRequested_ParamsSpec.$,
        null,
        impl.onCertificateRequested.bind(impl));
    this.helper_internal_.registerHandler(
        365788770,
        network.mojom.NetworkContextClient_OnSSLCertificateError_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnSSLCertificateError_ResponseParamsSpec.$,
        impl.onSSLCertificateError.bind(impl));
    this.helper_internal_.registerHandler(
        984053514,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
        impl.onFileUploadRequested.bind(impl));
    this.helper_internal_.registerHandler(
        289760283,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
        impl.onCanSendReportingReports.bind(impl));
    this.helper_internal_.registerHandler(
        1648084953,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
        impl.onCanSendDomainReliabilityUpload.bind(impl));
    this.helper_internal_.registerHandler(
        614399500,
        network.mojom.NetworkContextClient_OnClearSiteData_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnClearSiteData_ResponseParamsSpec.$,
        impl.onClearSiteData.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.NetworkContextClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.NetworkContextClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.NetworkContextClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.NetworkContextClientRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the NetworkContextClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.NetworkContextClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.NetworkContextClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.NetworkContextClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onAuthRequired =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        479654362,
        network.mojom.NetworkContextClient_OnAuthRequired_ParamsSpec.$,
        null,
        this.onAuthRequired.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCertificateRequested =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1700869215,
        network.mojom.NetworkContextClient_OnCertificateRequested_ParamsSpec.$,
        null,
        this.onCertificateRequested.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onSSLCertificateError =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        365788770,
        network.mojom.NetworkContextClient_OnSSLCertificateError_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnSSLCertificateError_ResponseParamsSpec.$,
        this.onSSLCertificateError.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onFileUploadRequested =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        984053514,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
        this.onFileUploadRequested.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCanSendReportingReports =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        289760283,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
        this.onCanSendReportingReports.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onCanSendDomainReliabilityUpload =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1648084953,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
        this.onCanSendDomainReliabilityUpload.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onClearSiteData =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        614399500,
        network.mojom.NetworkContextClient_OnClearSiteData_ParamsSpec.$,
        network.mojom.NetworkContextClient_OnClearSiteData_ResponseParamsSpec.$,
        this.onClearSiteData.createReceiverHandler(true /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.NetworkContextPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.NetworkContextInterface }
 */
network.mojom.NetworkContextRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.NetworkContextPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.NetworkContextPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.NetworkContextPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !network.mojom.NetworkContextClientRemote } client
   */

  setClient(
      client) {
    this.proxy.sendMessage(
        216922779,
        network.mojom.NetworkContext_SetClient_ParamsSpec.$,
        null,
        [
          client
        ]);
  }

  
  /**
   * @param { !network.mojom.URLLoaderFactoryPendingReceiver } urlLoaderFactory
   * @param { !network.mojom.URLLoaderFactoryParams } params
   */

  createURLLoaderFactory(
      urlLoaderFactory,
      params) {
    this.proxy.sendMessage(
        880048848,
        network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
        null,
        [
          urlLoaderFactory,
          params
        ]);
  }

  
  /**
   */

  resetURLLoaderFactories() {
    this.proxy.sendMessage(
        647033224,
        network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
        null,
        [
        ]);
  }

  
  /**
   * @param { !network.mojom.CookieManagerPendingReceiver } cookieManager
   */

  getCookieManager(
      cookieManager) {
    this.proxy.sendMessage(
        1823877985,
        network.mojom.NetworkContext_GetCookieManager_ParamsSpec.$,
        null,
        [
          cookieManager
        ]);
  }

  
  /**
   * @param { !network.mojom.RestrictedCookieManagerPendingReceiver } restrictedCookieManager
   * @param { !network.mojom.RestrictedCookieManagerRole } role
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.SiteForCookies } siteForCookies
   * @param { !url.mojom.Origin } topFrameOrigin
   * @param { ?network.mojom.CookieAccessObserverRemote } cookieObserver
   */

  getRestrictedCookieManager(
      restrictedCookieManager,
      role,
      origin,
      siteForCookies,
      topFrameOrigin,
      cookieObserver) {
    this.proxy.sendMessage(
        1352545329,
        network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
        null,
        [
          restrictedCookieManager,
          role,
          origin,
          siteForCookies,
          topFrameOrigin,
          cookieObserver
        ]);
  }

  
  /**
   * @param { !network.mojom.HasTrustTokensAnswererPendingReceiver } hasTrustTokensAnswerer
   * @param { !url.mojom.Origin } topFrameOrigin
   */

  getHasTrustTokensAnswerer(
      hasTrustTokensAnswerer,
      topFrameOrigin) {
    this.proxy.sendMessage(
        1372283282,
        network.mojom.NetworkContext_GetHasTrustTokensAnswerer_ParamsSpec.$,
        null,
        [
          hasTrustTokensAnswerer,
          topFrameOrigin
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */

  clearTrustTokenData(
      filter) {
    return this.proxy.sendMessage(
        1975211222,
        network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec.$,
        network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @return {Promise}
   */

  clearNetworkingHistorySince(
      startTime) {
    return this.proxy.sendMessage(
        891190236,
        network.mojom.NetworkContext_ClearNetworkingHistorySince_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkingHistorySince_ResponseParamsSpec.$,
        [
          startTime
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */

  clearHttpCache(
      startTime,
      endTime,
      filter) {
    return this.proxy.sendMessage(
        51272481,
        network.mojom.NetworkContext_ClearHttpCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
        [
          startTime,
          endTime,
          filter
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @param { !mojoBase.mojom.Time } endTime
   * @return {Promise<{
        isUpperBound: !boolean,
        sizeOrError: !number,
   *  }>}
   */

  computeHttpCacheSize(
      startTime,
      endTime) {
    return this.proxy.sendMessage(
        135095796,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
        [
          startTime,
          endTime
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !string } httpMethod
   * @param { !network.mojom.NetworkIsolationKey } key
   */

  notifyExternalCacheHit(
      url,
      httpMethod,
      key) {
    this.proxy.sendMessage(
        190214603,
        network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
        null,
        [
          url,
          httpMethod,
          key
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */

  clearHostCache(
      filter) {
    return this.proxy.sendMessage(
        1743857347,
        network.mojom.NetworkContext_ClearHostCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.Time } startTime
   * @return {Promise}
   */

  clearHttpAuthCache(
      startTime) {
    return this.proxy.sendMessage(
        1563746879,
        network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
        [
          startTime
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */

  clearReportingCacheReports(
      filter) {
    return this.proxy.sendMessage(
        617143980,
        network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */

  clearReportingCacheClients(
      filter) {
    return this.proxy.sendMessage(
        1434283458,
        network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @return {Promise}
   */

  clearNetworkErrorLogging(
      filter) {
    return this.proxy.sendMessage(
        1066602619,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
        [
          filter
        ]);
  }

  
  /**
   * @param { ?network.mojom.ClearDataFilter } filter
   * @param { !network.mojom.NetworkContext_DomainReliabilityClearMode } mode
   * @return {Promise}
   */

  clearDomainReliability(
      filter,
      mode) {
    return this.proxy.sendMessage(
        463902774,
        network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec.$,
        network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
        [
          filter,
          mode
        ]);
  }

  
  /**
   * @return {Promise<{
        data: !mojoBase.mojom.Value,
   *  }>}
   */

  getDomainReliabilityJSON() {
    return this.proxy.sendMessage(
        1064661002,
        network.mojom.NetworkContext_GetDomainReliabilityJSON_ParamsSpec.$,
        network.mojom.NetworkContext_GetDomainReliabilityJSON_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !string } type
   * @param { !string } group
   * @param { !url.mojom.Url } url
   * @param { ?string } userAgent
   * @param { !mojoBase.mojom.DictionaryValue } body
   */

  queueReport(
      type,
      group,
      url,
      userAgent,
      body) {
    this.proxy.sendMessage(
        435932712,
        network.mojom.NetworkContext_QueueReport_ParamsSpec.$,
        null,
        [
          type,
          group,
          url,
          userAgent,
          body
        ]);
  }

  
  /**
   * @param { !network.mojom.SignedExchangeReport } report
   */

  queueSignedExchangeReport(
      report) {
    this.proxy.sendMessage(
        314016158,
        network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
        null,
        [
          report
        ]);
  }

  
  /**
   * @return {Promise}
   */

  closeAllConnections() {
    return this.proxy.sendMessage(
        1411136539,
        network.mojom.NetworkContext_CloseAllConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {Promise}
   */

  closeIdleConnections() {
    return this.proxy.sendMessage(
        1754964273,
        network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } throttlingProfileId
   * @param { ?network.mojom.NetworkConditions } conditions
   */

  setNetworkConditions(
      throttlingProfileId,
      conditions) {
    this.proxy.sendMessage(
        148365804,
        network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec.$,
        null,
        [
          throttlingProfileId,
          conditions
        ]);
  }

  
  /**
   * @param { !string } newAcceptLanguage
   */

  setAcceptLanguage(
      newAcceptLanguage) {
    this.proxy.sendMessage(
        1806036477,
        network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec.$,
        null,
        [
          newAcceptLanguage
        ]);
  }

  
  /**
   * @param { !boolean } enableReferrers
   */

  setEnableReferrers(
      enableReferrers) {
    this.proxy.sendMessage(
        51129693,
        network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec.$,
        null,
        [
          enableReferrers
        ]);
  }

  
  /**
   * @param { !network.mojom.CTPolicy } ctPolicy
   */

  setCTPolicy(
      ctPolicy) {
    this.proxy.sendMessage(
        939530602,
        network.mojom.NetworkContext_SetCTPolicy_ParamsSpec.$,
        null,
        [
          ctPolicy
        ]);
  }

  
  /**
   * @param { !string } host
   * @param { !mojoBase.mojom.Time } expiry
   * @param { !boolean } enforce
   * @param { !url.mojom.Url } reportUri
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {Promise<{
        success: !boolean,
   *  }>}
   */

  addExpectCT(
      host,
      expiry,
      enforce,
      reportUri,
      networkIsolationKey) {
    return this.proxy.sendMessage(
        739810070,
        network.mojom.NetworkContext_AddExpectCT_ParamsSpec.$,
        network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec.$,
        [
          host,
          expiry,
          enforce,
          reportUri,
          networkIsolationKey
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } reportUri
   * @return {Promise<{
        success: !boolean,
   *  }>}
   */

  setExpectCTTestReport(
      reportUri) {
    return this.proxy.sendMessage(
        1482668219,
        network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
        network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
        [
          reportUri
        ]);
  }

  
  /**
   * @param { !string } domain
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {Promise<{
        state: !mojoBase.mojom.DictionaryValue,
   *  }>}
   */

  getExpectCTState(
      domain,
      networkIsolationKey) {
    return this.proxy.sendMessage(
        1794890382,
        network.mojom.NetworkContext_GetExpectCTState_ParamsSpec.$,
        network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
        [
          domain,
          networkIsolationKey
        ]);
  }

  
  /**
   * @param { !network.mojom.UDPSocketPendingReceiver } receiver
   * @param { ?network.mojom.UDPSocketListenerRemote } listener
   */

  createUDPSocket(
      receiver,
      listener) {
    this.proxy.sendMessage(
        988668856,
        network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec.$,
        null,
        [
          receiver,
          listener
        ]);
  }

  
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { !number } backlog
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.TCPServerSocketPendingReceiver } socket
   * @return {Promise<{
        result: !number,
        localAddrOut: ?network.mojom.IPEndPoint,
   *  }>}
   */

  createTCPServerSocket(
      localAddr,
      backlog,
      trafficAnnotation,
      socket) {
    return this.proxy.sendMessage(
        1121920220,
        network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
        [
          localAddr,
          backlog,
          trafficAnnotation,
          socket
        ]);
  }

  
  /**
   * @param { ?network.mojom.IPEndPoint } localAddr
   * @param { !network.mojom.AddressList } remoteAddrList
   * @param { ?network.mojom.TCPConnectedSocketOptions } tcpConnectedSocketOptions
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.TCPConnectedSocketPendingReceiver } socket
   * @param { ?network.mojom.SocketObserverRemote } observer
   * @return {Promise<{
        result: !number,
        localAddr: ?network.mojom.IPEndPoint,
        peerAddr: ?network.mojom.IPEndPoint,
        receiveStream: ?MojoHandle,
        sendStream: ?MojoHandle,
   *  }>}
   */

  createTCPConnectedSocket(
      localAddr,
      remoteAddrList,
      tcpConnectedSocketOptions,
      trafficAnnotation,
      socket,
      observer) {
    return this.proxy.sendMessage(
        342316660,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
        [
          localAddr,
          remoteAddrList,
          tcpConnectedSocketOptions,
          trafficAnnotation,
          socket,
          observer
        ]);
  }

  
  /**
   * @param { !network.mojom.IPEndPoint } localAddr
   * @param { !network.mojom.MutableNetworkTrafficAnnotationTag } trafficAnnotation
   * @param { !network.mojom.TCPBoundSocketPendingReceiver } socket
   * @return {Promise<{
        result: !number,
        localAddr: ?network.mojom.IPEndPoint,
   *  }>}
   */

  createTCPBoundSocket(
      localAddr,
      trafficAnnotation,
      socket) {
    return this.proxy.sendMessage(
        1492598671,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
        [
          localAddr,
          trafficAnnotation,
          socket
        ]);
  }

  
  /**
   * @param { !network.mojom.ProxyResolvingSocketFactoryPendingReceiver } factory
   */

  createProxyResolvingSocketFactory(
      factory) {
    this.proxy.sendMessage(
        1107722363,
        network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
        null,
        [
          factory
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.ProxyLookupClientRemote } proxyLookupClient
   */

  lookUpProxyForURL(
      url,
      networkIsolationKey,
      proxyLookupClient) {
    this.proxy.sendMessage(
        1679088351,
        network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec.$,
        null,
        [
          url,
          networkIsolationKey,
          proxyLookupClient
        ]);
  }

  
  /**
   * @return {Promise}
   */

  forceReloadProxyConfig() {
    return this.proxy.sendMessage(
        1298253961,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {Promise}
   */

  clearBadProxiesCache() {
    return this.proxy.sendMessage(
        1672065233,
        network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !Array<!string> } requestedProtocols
   * @param { !network.mojom.SiteForCookies } siteForCookies
   * @param { !network.mojom.IsolationInfo } isolationInfo
   * @param { !Array<!network.mojom.HttpHeader> } additionalHeaders
   * @param { !number } processId
   * @param { !number } renderFrameId
   * @param { !url.mojom.Origin } origin
   * @param { !number } options
   * @param { !network.mojom.WebSocketHandshakeClientRemote } handshakeClient
   * @param { ?network.mojom.AuthenticationHandlerRemote } authHandler
   * @param { ?network.mojom.TrustedHeaderClientRemote } headerClient
   */

  createWebSocket(
      url,
      requestedProtocols,
      siteForCookies,
      isolationInfo,
      additionalHeaders,
      processId,
      renderFrameId,
      origin,
      options,
      handshakeClient,
      authHandler,
      headerClient) {
    this.proxy.sendMessage(
        587582804,
        network.mojom.NetworkContext_CreateWebSocket_ParamsSpec.$,
        null,
        [
          url,
          requestedProtocols,
          siteForCookies,
          isolationInfo,
          additionalHeaders,
          processId,
          renderFrameId,
          origin,
          options,
          handshakeClient,
          authHandler,
          headerClient
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !url.mojom.Origin } origin
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !Array<!network.mojom.QuicTransportCertificateFingerprint> } fingerprints
   * @param { !network.mojom.QuicTransportHandshakeClientRemote } handshakeClient
   */

  createQuicTransport(
      url,
      origin,
      networkIsolationKey,
      fingerprints,
      handshakeClient) {
    this.proxy.sendMessage(
        59130933,
        network.mojom.NetworkContext_CreateQuicTransport_ParamsSpec.$,
        null,
        [
          url,
          origin,
          networkIsolationKey,
          fingerprints,
          handshakeClient
        ]);
  }

  
  /**
   * @param { !network.mojom.NetLogExporterPendingReceiver } receiver
   */

  createNetLogExporter(
      receiver) {
    this.proxy.sendMessage(
        1133762250,
        network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec.$,
        null,
        [
          receiver
        ]);
  }

  
  /**
   * @param { !number } numStreams
   * @param { !url.mojom.Url } url
   * @param { !boolean } allowCredentials
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   */

  preconnectSockets(
      numStreams,
      url,
      allowCredentials,
      networkIsolationKey) {
    this.proxy.sendMessage(
        1050353814,
        network.mojom.NetworkContext_PreconnectSockets_ParamsSpec.$,
        null,
        [
          numStreams,
          url,
          allowCredentials,
          networkIsolationKey
        ]);
  }

  
  /**
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.P2PTrustedSocketManagerClientRemote } client
   * @param { !network.mojom.P2PTrustedSocketManagerPendingReceiver } trustedSocketManager
   * @param { !network.mojom.P2PSocketManagerPendingReceiver } socketManager
   */

  createP2PSocketManager(
      networkIsolationKey,
      client,
      trustedSocketManager,
      socketManager) {
    this.proxy.sendMessage(
        1569525828,
        network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
        null,
        [
          networkIsolationKey,
          client,
          trustedSocketManager,
          socketManager
        ]);
  }

  
  /**
   * @param { !network.mojom.MdnsResponderPendingReceiver } responderReceiver
   */

  createMdnsResponder(
      responderReceiver) {
    this.proxy.sendMessage(
        2035934868,
        network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec.$,
        null,
        [
          responderReceiver
        ]);
  }

  
  /**
   * @param { !network.mojom.HostPortPair } host
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { ?network.mojom.ResolveHostParameters } optionalParameters
   * @param { !network.mojom.ResolveHostClientRemote } responseClient
   */

  resolveHost(
      host,
      networkIsolationKey,
      optionalParameters,
      responseClient) {
    this.proxy.sendMessage(
        29462906,
        network.mojom.NetworkContext_ResolveHost_ParamsSpec.$,
        null,
        [
          host,
          networkIsolationKey,
          optionalParameters,
          responseClient
        ]);
  }

  
  /**
   * @param { ?network.mojom.DnsConfigOverrides } configOverrides
   * @param { !network.mojom.HostResolverPendingReceiver } hostResolver
   */

  createHostResolver(
      configOverrides,
      hostResolver) {
    this.proxy.sendMessage(
        687559073,
        network.mojom.NetworkContext_CreateHostResolver_ParamsSpec.$,
        null,
        [
          configOverrides,
          hostResolver
        ]);
  }

  
  /**
   * @param { !network.mojom.X509Certificate } certificate
   * @param { !url.mojom.Url } url
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {Promise<{
        errorCode: !number,
        cvResult: !network.mojom.CertVerifyResult,
        ctResult: !network.mojom.CTVerifyResult,
   *  }>}
   */

  verifyCertForSignedExchange(
      certificate,
      url,
      ocspResponse,
      sctList) {
    return this.proxy.sendMessage(
        486203830,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
        [
          certificate,
          url,
          ocspResponse,
          sctList
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.HttpResponseHeaders } headers
   * @return {Promise<{
        parsedHeaders: !network.mojom.ParsedHeaders,
   *  }>}
   */

  parseHeaders(
      url,
      headers) {
    return this.proxy.sendMessage(
        1574770170,
        network.mojom.NetworkContext_ParseHeaders_ParamsSpec.$,
        network.mojom.NetworkContext_ParseHeaders_ResponseParamsSpec.$,
        [
          url,
          headers
        ]);
  }

  
  /**
   * @param { !string } host
   * @param { !mojoBase.mojom.Time } expiry
   * @param { !boolean } includeSubdomains
   * @return {Promise}
   */

  addHSTS(
      host,
      expiry,
      includeSubdomains) {
    return this.proxy.sendMessage(
        511403860,
        network.mojom.NetworkContext_AddHSTS_ParamsSpec.$,
        network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec.$,
        [
          host,
          expiry,
          includeSubdomains
        ]);
  }

  
  /**
   * @param { !string } host
   * @return {Promise<{
        result: !boolean,
   *  }>}
   */

  isHSTSActiveForHost(
      host) {
    return this.proxy.sendMessage(
        65127984,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
        [
          host
        ]);
  }

  
  /**
   * @param { !string } domain
   * @return {Promise<{
        state: !mojoBase.mojom.DictionaryValue,
   *  }>}
   */

  getHSTSState(
      domain) {
    return this.proxy.sendMessage(
        319220939,
        network.mojom.NetworkContext_GetHSTSState_ParamsSpec.$,
        network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec.$,
        [
          domain
        ]);
  }

  
  /**
   * @param { !url.mojom.Origin } sourceOrigin
   * @param { !Array<!network.mojom.CorsOriginPattern> } allowPatterns
   * @param { !Array<!network.mojom.CorsOriginPattern> } blockPatterns
   * @return {Promise}
   */

  setCorsOriginAccessListsForOrigin(
      sourceOrigin,
      allowPatterns,
      blockPatterns) {
    return this.proxy.sendMessage(
        2015503833,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
        [
          sourceOrigin,
          allowPatterns,
          blockPatterns
        ]);
  }

  
  /**
   * @param { !Array<!string> } corsExtraSafelistedRequestHeaderNames
   */

  setCorsExtraSafelistedRequestHeaderNames(
      corsExtraSafelistedRequestHeaderNames) {
    this.proxy.sendMessage(
        784875438,
        network.mojom.NetworkContext_SetCorsExtraSafelistedRequestHeaderNames_ParamsSpec.$,
        null,
        [
          corsExtraSafelistedRequestHeaderNames
        ]);
  }

  
  /**
   * @param { !string } host
   * @return {Promise<{
        result: !boolean,
   *  }>}
   */

  deleteDynamicDataForHost(
      host) {
    return this.proxy.sendMessage(
        580687138,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
        [
          host
        ]);
  }

  
  /**
   * @param { !boolean } splitAuthCacheByNetworkIsolationKey
   */

  setSplitAuthCacheByNetworkIsolationKey(
      splitAuthCacheByNetworkIsolationKey) {
    this.proxy.sendMessage(
        401443471,
        network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
        null,
        [
          splitAuthCacheByNetworkIsolationKey
        ]);
  }

  
  /**
   * @return {Promise<{
        cacheKey: !mojoBase.mojom.UnguessableToken,
   *  }>}
   */

  saveHttpAuthCacheProxyEntries() {
    return this.proxy.sendMessage(
        1026779730,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !mojoBase.mojom.UnguessableToken } cacheKey
   * @return {Promise}
   */

  loadHttpAuthCacheProxyEntries(
      cacheKey) {
    return this.proxy.sendMessage(
        902513749,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        [
          cacheKey
        ]);
  }

  
  /**
   * @param { !network.mojom.AuthChallengeInfo } challenge
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @param { !network.mojom.AuthCredentials } credentials
   * @return {Promise}
   */

  addAuthCacheEntry(
      challenge,
      networkIsolationKey,
      credentials) {
    return this.proxy.sendMessage(
        1995256504,
        network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
        network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
        [
          challenge,
          networkIsolationKey,
          credentials
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } url
   * @param { !network.mojom.NetworkIsolationKey } networkIsolationKey
   * @return {Promise<{
        credentials: ?network.mojom.AuthCredentials,
   *  }>}
   */

  lookupServerBasicAuthCredentials(
      url,
      networkIsolationKey) {
    return this.proxy.sendMessage(
        1695470539,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
        [
          url,
          networkIsolationKey
        ]);
  }

  
  /**
   * @return {Promise}
   */

  enableStaticKeyPinningForTesting() {
    return this.proxy.sendMessage(
        966862504,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !network.mojom.X509Certificate } certificate
   * @param { !string } hostname
   * @param { !string } ocspResponse
   * @param { !string } sctList
   * @return {Promise<{
        errorCode: !number,
   *  }>}
   */

  verifyCertificateForTesting(
      certificate,
      hostname,
      ocspResponse,
      sctList) {
    return this.proxy.sendMessage(
        1035685688,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
        [
          certificate,
          hostname,
          ocspResponse,
          sctList
        ]);
  }

  
  /**
   * @param { !url.mojom.Url } origin
   * @param { !url.mojom.Url } uploadUrl
   * @return {Promise}
   */

  addDomainReliabilityContextForTesting(
      origin,
      uploadUrl) {
    return this.proxy.sendMessage(
        1553896885,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
        [
          origin,
          uploadUrl
        ]);
  }

  
  /**
   * @return {Promise}
   */

  forceDomainReliabilityUploadsForTesting() {
    return this.proxy.sendMessage(
        1740651170,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !network.mojom.OriginPolicyManagerPendingReceiver } originPolicyManager
   */

  getOriginPolicyManager(
      originPolicyManager) {
    this.proxy.sendMessage(
        286796416,
        network.mojom.NetworkContext_GetOriginPolicyManager_ParamsSpec.$,
        null,
        [
          originPolicyManager
        ]);
  }
};

/**
 * An object which receives request messages for the NetworkContext
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.NetworkContextReceiver = class {
  /**
   * @param {!network.mojom.NetworkContextInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.NetworkContextRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.NetworkContextRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.NetworkContextRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        216922779,
        network.mojom.NetworkContext_SetClient_ParamsSpec.$,
        null,
        impl.setClient.bind(impl));
    this.helper_internal_.registerHandler(
        880048848,
        network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
        null,
        impl.createURLLoaderFactory.bind(impl));
    this.helper_internal_.registerHandler(
        647033224,
        network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
        null,
        impl.resetURLLoaderFactories.bind(impl));
    this.helper_internal_.registerHandler(
        1823877985,
        network.mojom.NetworkContext_GetCookieManager_ParamsSpec.$,
        null,
        impl.getCookieManager.bind(impl));
    this.helper_internal_.registerHandler(
        1352545329,
        network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
        null,
        impl.getRestrictedCookieManager.bind(impl));
    this.helper_internal_.registerHandler(
        1372283282,
        network.mojom.NetworkContext_GetHasTrustTokensAnswerer_ParamsSpec.$,
        null,
        impl.getHasTrustTokensAnswerer.bind(impl));
    this.helper_internal_.registerHandler(
        1975211222,
        network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec.$,
        network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
        impl.clearTrustTokenData.bind(impl));
    this.helper_internal_.registerHandler(
        891190236,
        network.mojom.NetworkContext_ClearNetworkingHistorySince_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkingHistorySince_ResponseParamsSpec.$,
        impl.clearNetworkingHistorySince.bind(impl));
    this.helper_internal_.registerHandler(
        51272481,
        network.mojom.NetworkContext_ClearHttpCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
        impl.clearHttpCache.bind(impl));
    this.helper_internal_.registerHandler(
        135095796,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
        impl.computeHttpCacheSize.bind(impl));
    this.helper_internal_.registerHandler(
        190214603,
        network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
        null,
        impl.notifyExternalCacheHit.bind(impl));
    this.helper_internal_.registerHandler(
        1743857347,
        network.mojom.NetworkContext_ClearHostCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec.$,
        impl.clearHostCache.bind(impl));
    this.helper_internal_.registerHandler(
        1563746879,
        network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
        impl.clearHttpAuthCache.bind(impl));
    this.helper_internal_.registerHandler(
        617143980,
        network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
        impl.clearReportingCacheReports.bind(impl));
    this.helper_internal_.registerHandler(
        1434283458,
        network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
        impl.clearReportingCacheClients.bind(impl));
    this.helper_internal_.registerHandler(
        1066602619,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
        impl.clearNetworkErrorLogging.bind(impl));
    this.helper_internal_.registerHandler(
        463902774,
        network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec.$,
        network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
        impl.clearDomainReliability.bind(impl));
    this.helper_internal_.registerHandler(
        1064661002,
        network.mojom.NetworkContext_GetDomainReliabilityJSON_ParamsSpec.$,
        network.mojom.NetworkContext_GetDomainReliabilityJSON_ResponseParamsSpec.$,
        impl.getDomainReliabilityJSON.bind(impl));
    this.helper_internal_.registerHandler(
        435932712,
        network.mojom.NetworkContext_QueueReport_ParamsSpec.$,
        null,
        impl.queueReport.bind(impl));
    this.helper_internal_.registerHandler(
        314016158,
        network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
        null,
        impl.queueSignedExchangeReport.bind(impl));
    this.helper_internal_.registerHandler(
        1411136539,
        network.mojom.NetworkContext_CloseAllConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
        impl.closeAllConnections.bind(impl));
    this.helper_internal_.registerHandler(
        1754964273,
        network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
        impl.closeIdleConnections.bind(impl));
    this.helper_internal_.registerHandler(
        148365804,
        network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec.$,
        null,
        impl.setNetworkConditions.bind(impl));
    this.helper_internal_.registerHandler(
        1806036477,
        network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec.$,
        null,
        impl.setAcceptLanguage.bind(impl));
    this.helper_internal_.registerHandler(
        51129693,
        network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec.$,
        null,
        impl.setEnableReferrers.bind(impl));
    this.helper_internal_.registerHandler(
        939530602,
        network.mojom.NetworkContext_SetCTPolicy_ParamsSpec.$,
        null,
        impl.setCTPolicy.bind(impl));
    this.helper_internal_.registerHandler(
        739810070,
        network.mojom.NetworkContext_AddExpectCT_ParamsSpec.$,
        network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec.$,
        impl.addExpectCT.bind(impl));
    this.helper_internal_.registerHandler(
        1482668219,
        network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
        network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
        impl.setExpectCTTestReport.bind(impl));
    this.helper_internal_.registerHandler(
        1794890382,
        network.mojom.NetworkContext_GetExpectCTState_ParamsSpec.$,
        network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
        impl.getExpectCTState.bind(impl));
    this.helper_internal_.registerHandler(
        988668856,
        network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec.$,
        null,
        impl.createUDPSocket.bind(impl));
    this.helper_internal_.registerHandler(
        1121920220,
        network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
        impl.createTCPServerSocket.bind(impl));
    this.helper_internal_.registerHandler(
        342316660,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
        impl.createTCPConnectedSocket.bind(impl));
    this.helper_internal_.registerHandler(
        1492598671,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
        impl.createTCPBoundSocket.bind(impl));
    this.helper_internal_.registerHandler(
        1107722363,
        network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
        null,
        impl.createProxyResolvingSocketFactory.bind(impl));
    this.helper_internal_.registerHandler(
        1679088351,
        network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec.$,
        null,
        impl.lookUpProxyForURL.bind(impl));
    this.helper_internal_.registerHandler(
        1298253961,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
        impl.forceReloadProxyConfig.bind(impl));
    this.helper_internal_.registerHandler(
        1672065233,
        network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
        impl.clearBadProxiesCache.bind(impl));
    this.helper_internal_.registerHandler(
        587582804,
        network.mojom.NetworkContext_CreateWebSocket_ParamsSpec.$,
        null,
        impl.createWebSocket.bind(impl));
    this.helper_internal_.registerHandler(
        59130933,
        network.mojom.NetworkContext_CreateQuicTransport_ParamsSpec.$,
        null,
        impl.createQuicTransport.bind(impl));
    this.helper_internal_.registerHandler(
        1133762250,
        network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec.$,
        null,
        impl.createNetLogExporter.bind(impl));
    this.helper_internal_.registerHandler(
        1050353814,
        network.mojom.NetworkContext_PreconnectSockets_ParamsSpec.$,
        null,
        impl.preconnectSockets.bind(impl));
    this.helper_internal_.registerHandler(
        1569525828,
        network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
        null,
        impl.createP2PSocketManager.bind(impl));
    this.helper_internal_.registerHandler(
        2035934868,
        network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec.$,
        null,
        impl.createMdnsResponder.bind(impl));
    this.helper_internal_.registerHandler(
        29462906,
        network.mojom.NetworkContext_ResolveHost_ParamsSpec.$,
        null,
        impl.resolveHost.bind(impl));
    this.helper_internal_.registerHandler(
        687559073,
        network.mojom.NetworkContext_CreateHostResolver_ParamsSpec.$,
        null,
        impl.createHostResolver.bind(impl));
    this.helper_internal_.registerHandler(
        486203830,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
        impl.verifyCertForSignedExchange.bind(impl));
    this.helper_internal_.registerHandler(
        1574770170,
        network.mojom.NetworkContext_ParseHeaders_ParamsSpec.$,
        network.mojom.NetworkContext_ParseHeaders_ResponseParamsSpec.$,
        impl.parseHeaders.bind(impl));
    this.helper_internal_.registerHandler(
        511403860,
        network.mojom.NetworkContext_AddHSTS_ParamsSpec.$,
        network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec.$,
        impl.addHSTS.bind(impl));
    this.helper_internal_.registerHandler(
        65127984,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
        impl.isHSTSActiveForHost.bind(impl));
    this.helper_internal_.registerHandler(
        319220939,
        network.mojom.NetworkContext_GetHSTSState_ParamsSpec.$,
        network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec.$,
        impl.getHSTSState.bind(impl));
    this.helper_internal_.registerHandler(
        2015503833,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
        impl.setCorsOriginAccessListsForOrigin.bind(impl));
    this.helper_internal_.registerHandler(
        784875438,
        network.mojom.NetworkContext_SetCorsExtraSafelistedRequestHeaderNames_ParamsSpec.$,
        null,
        impl.setCorsExtraSafelistedRequestHeaderNames.bind(impl));
    this.helper_internal_.registerHandler(
        580687138,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
        impl.deleteDynamicDataForHost.bind(impl));
    this.helper_internal_.registerHandler(
        401443471,
        network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
        null,
        impl.setSplitAuthCacheByNetworkIsolationKey.bind(impl));
    this.helper_internal_.registerHandler(
        1026779730,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        impl.saveHttpAuthCacheProxyEntries.bind(impl));
    this.helper_internal_.registerHandler(
        902513749,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        impl.loadHttpAuthCacheProxyEntries.bind(impl));
    this.helper_internal_.registerHandler(
        1995256504,
        network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
        network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
        impl.addAuthCacheEntry.bind(impl));
    this.helper_internal_.registerHandler(
        1695470539,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
        impl.lookupServerBasicAuthCredentials.bind(impl));
    this.helper_internal_.registerHandler(
        966862504,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
        impl.enableStaticKeyPinningForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        1035685688,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
        impl.verifyCertificateForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        1553896885,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
        impl.addDomainReliabilityContextForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        1740651170,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
        impl.forceDomainReliabilityUploadsForTesting.bind(impl));
    this.helper_internal_.registerHandler(
        286796416,
        network.mojom.NetworkContext_GetOriginPolicyManager_ParamsSpec.$,
        null,
        impl.getOriginPolicyManager.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.NetworkContext = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.NetworkContext";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.NetworkContextRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.NetworkContextRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
network.mojom.NetworkContext.DomainReliabilityClearModeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
network.mojom.NetworkContext_DomainReliabilityClearMode = {
  
  CLEAR_CONTEXTS: 0,
  CLEAR_BEACONS: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};

/**
 * An object which receives request messages for the NetworkContext
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.NetworkContextCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.NetworkContextRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.NetworkContextRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setClient =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        216922779,
        network.mojom.NetworkContext_SetClient_ParamsSpec.$,
        null,
        this.setClient.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createURLLoaderFactory =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        880048848,
        network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
        null,
        this.createURLLoaderFactory.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.resetURLLoaderFactories =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        647033224,
        network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
        null,
        this.resetURLLoaderFactories.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getCookieManager =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1823877985,
        network.mojom.NetworkContext_GetCookieManager_ParamsSpec.$,
        null,
        this.getCookieManager.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getRestrictedCookieManager =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1352545329,
        network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
        null,
        this.getRestrictedCookieManager.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getHasTrustTokensAnswerer =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1372283282,
        network.mojom.NetworkContext_GetHasTrustTokensAnswerer_ParamsSpec.$,
        null,
        this.getHasTrustTokensAnswerer.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearTrustTokenData =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1975211222,
        network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec.$,
        network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
        this.clearTrustTokenData.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearNetworkingHistorySince =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        891190236,
        network.mojom.NetworkContext_ClearNetworkingHistorySince_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkingHistorySince_ResponseParamsSpec.$,
        this.clearNetworkingHistorySince.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearHttpCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        51272481,
        network.mojom.NetworkContext_ClearHttpCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
        this.clearHttpCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.computeHttpCacheSize =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        135095796,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
        network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
        this.computeHttpCacheSize.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.notifyExternalCacheHit =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        190214603,
        network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
        null,
        this.notifyExternalCacheHit.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearHostCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1743857347,
        network.mojom.NetworkContext_ClearHostCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec.$,
        this.clearHostCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearHttpAuthCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1563746879,
        network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
        this.clearHttpAuthCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearReportingCacheReports =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        617143980,
        network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
        this.clearReportingCacheReports.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearReportingCacheClients =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1434283458,
        network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
        network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
        this.clearReportingCacheClients.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearNetworkErrorLogging =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1066602619,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
        network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
        this.clearNetworkErrorLogging.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearDomainReliability =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        463902774,
        network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec.$,
        network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
        this.clearDomainReliability.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getDomainReliabilityJSON =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1064661002,
        network.mojom.NetworkContext_GetDomainReliabilityJSON_ParamsSpec.$,
        network.mojom.NetworkContext_GetDomainReliabilityJSON_ResponseParamsSpec.$,
        this.getDomainReliabilityJSON.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.queueReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        435932712,
        network.mojom.NetworkContext_QueueReport_ParamsSpec.$,
        null,
        this.queueReport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.queueSignedExchangeReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        314016158,
        network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
        null,
        this.queueSignedExchangeReport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.closeAllConnections =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1411136539,
        network.mojom.NetworkContext_CloseAllConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
        this.closeAllConnections.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.closeIdleConnections =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1754964273,
        network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec.$,
        network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
        this.closeIdleConnections.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setNetworkConditions =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        148365804,
        network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec.$,
        null,
        this.setNetworkConditions.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setAcceptLanguage =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1806036477,
        network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec.$,
        null,
        this.setAcceptLanguage.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setEnableReferrers =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        51129693,
        network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec.$,
        null,
        this.setEnableReferrers.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCTPolicy =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        939530602,
        network.mojom.NetworkContext_SetCTPolicy_ParamsSpec.$,
        null,
        this.setCTPolicy.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addExpectCT =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        739810070,
        network.mojom.NetworkContext_AddExpectCT_ParamsSpec.$,
        network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec.$,
        this.addExpectCT.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setExpectCTTestReport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1482668219,
        network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
        network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
        this.setExpectCTTestReport.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getExpectCTState =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1794890382,
        network.mojom.NetworkContext_GetExpectCTState_ParamsSpec.$,
        network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
        this.getExpectCTState.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createUDPSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        988668856,
        network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec.$,
        null,
        this.createUDPSocket.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createTCPServerSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1121920220,
        network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
        this.createTCPServerSocket.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createTCPConnectedSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        342316660,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
        this.createTCPConnectedSocket.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createTCPBoundSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1492598671,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
        network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
        this.createTCPBoundSocket.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createProxyResolvingSocketFactory =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1107722363,
        network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
        null,
        this.createProxyResolvingSocketFactory.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.lookUpProxyForURL =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1679088351,
        network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec.$,
        null,
        this.lookUpProxyForURL.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.forceReloadProxyConfig =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1298253961,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
        network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
        this.forceReloadProxyConfig.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.clearBadProxiesCache =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1672065233,
        network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
        network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
        this.clearBadProxiesCache.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createWebSocket =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        587582804,
        network.mojom.NetworkContext_CreateWebSocket_ParamsSpec.$,
        null,
        this.createWebSocket.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createQuicTransport =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        59130933,
        network.mojom.NetworkContext_CreateQuicTransport_ParamsSpec.$,
        null,
        this.createQuicTransport.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createNetLogExporter =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1133762250,
        network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec.$,
        null,
        this.createNetLogExporter.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.preconnectSockets =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1050353814,
        network.mojom.NetworkContext_PreconnectSockets_ParamsSpec.$,
        null,
        this.preconnectSockets.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createP2PSocketManager =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1569525828,
        network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
        null,
        this.createP2PSocketManager.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createMdnsResponder =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2035934868,
        network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec.$,
        null,
        this.createMdnsResponder.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.resolveHost =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        29462906,
        network.mojom.NetworkContext_ResolveHost_ParamsSpec.$,
        null,
        this.resolveHost.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createHostResolver =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        687559073,
        network.mojom.NetworkContext_CreateHostResolver_ParamsSpec.$,
        null,
        this.createHostResolver.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.verifyCertForSignedExchange =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        486203830,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
        this.verifyCertForSignedExchange.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.parseHeaders =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1574770170,
        network.mojom.NetworkContext_ParseHeaders_ParamsSpec.$,
        network.mojom.NetworkContext_ParseHeaders_ResponseParamsSpec.$,
        this.parseHeaders.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addHSTS =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        511403860,
        network.mojom.NetworkContext_AddHSTS_ParamsSpec.$,
        network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec.$,
        this.addHSTS.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.isHSTSActiveForHost =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        65127984,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
        network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
        this.isHSTSActiveForHost.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getHSTSState =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        319220939,
        network.mojom.NetworkContext_GetHSTSState_ParamsSpec.$,
        network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec.$,
        this.getHSTSState.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCorsOriginAccessListsForOrigin =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        2015503833,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
        network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
        this.setCorsOriginAccessListsForOrigin.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setCorsExtraSafelistedRequestHeaderNames =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        784875438,
        network.mojom.NetworkContext_SetCorsExtraSafelistedRequestHeaderNames_ParamsSpec.$,
        null,
        this.setCorsExtraSafelistedRequestHeaderNames.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.deleteDynamicDataForHost =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        580687138,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
        network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
        this.deleteDynamicDataForHost.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.setSplitAuthCacheByNetworkIsolationKey =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        401443471,
        network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
        null,
        this.setSplitAuthCacheByNetworkIsolationKey.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.saveHttpAuthCacheProxyEntries =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1026779730,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        this.saveHttpAuthCacheProxyEntries.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.loadHttpAuthCacheProxyEntries =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        902513749,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
        network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
        this.loadHttpAuthCacheProxyEntries.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addAuthCacheEntry =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1995256504,
        network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
        network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
        this.addAuthCacheEntry.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.lookupServerBasicAuthCredentials =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1695470539,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
        network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
        this.lookupServerBasicAuthCredentials.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.enableStaticKeyPinningForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        966862504,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
        this.enableStaticKeyPinningForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.verifyCertificateForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1035685688,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
        this.verifyCertificateForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.addDomainReliabilityContextForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1553896885,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
        this.addDomainReliabilityContextForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.forceDomainReliabilityUploadsForTesting =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1740651170,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
        network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
        this.forceDomainReliabilityUploadsForTesting.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.getOriginPolicyManager =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        286796416,
        network.mojom.NetworkContext_GetOriginPolicyManager_ParamsSpec.$,
        null,
        this.getOriginPolicyManager.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};



/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CertVerifierCreationParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CertVerifierServiceRemoteParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.HttpAuthStaticNetworkContextParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CTPolicySpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkConditionsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.ClearDataFilterSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkUsageSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.SignedExchangeReportSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.URLLoaderFactoryOverrideSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.ClientSecurityStateSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.URLLoaderFactoryParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.AuthChallengeResponder_OnAuthCredentials_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.ClientCertificateResponder_ContinueWithCertificate_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.ClientCertificateResponder_ContinueWithoutCertificate_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.ClientCertificateResponder_CancelRequest_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.SSLPrivateKey_Sign_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.SSLPrivateKey_Sign_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnAuthRequired_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCertificateRequested_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnSSLCertificateError_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnSSLCertificateError_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnClearSiteData_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContextClient_OnClearSiteData_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetClient_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetCookieManager_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetHasTrustTokensAnswerer_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearNetworkingHistorySince_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearNetworkingHistorySince_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHttpCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHostCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetDomainReliabilityJSON_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetDomainReliabilityJSON_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_QueueReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CloseAllConnections_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetCTPolicy_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddExpectCT_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetExpectCTState_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateWebSocket_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateQuicTransport_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_PreconnectSockets_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ResolveHost_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_CreateHostResolver_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ParseHeaders_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ParseHeaders_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddHSTS_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetHSTSState_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetCorsExtraSafelistedRequestHeaderNames_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.NetworkContext_GetOriginPolicyManager_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType} }
 * @export
 */
network.mojom.CertVerifierParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    network.mojom.CustomProxyConfigSpec.$,
    'CustomProxyConfig',
    24,
    [
      mojo.internal.StructField(
        'rules', 0,
        0,
        network.mojom.ProxyRulesSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'shouldOverrideExistingConfig', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'allowNonIdempotentMethods', 8,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'connectTunnelHeaders', 16,
        0,
        network.mojom.HttpRequestHeadersSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.CertVerifierCreationParamsSpec.$,
    'CertVerifierCreationParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.CertVerifierServiceRemoteParamsSpec.$,
    'CertVerifierServiceRemoteParams',
    8,
    [
      mojo.internal.StructField(
        'certVerifierService', 0,
        0,
        mojo.internal.InterfaceProxy(certVerifier.mojom.CertVerifierServiceRemote),
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.HttpAuthStaticNetworkContextParamsSpec.$,
    'HttpAuthStaticNetworkContextParams',
    8,
    [
      mojo.internal.StructField(
        'allowDefaultCredentials', 0,
        0,
        network.mojom.DefaultCredentialsSpec.$,
        network.mojom.DefaultCredentials.ALLOW_DEFAULT_CREDENTIALS,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.CTPolicySpec.$,
    'CTPolicy',
    32,
    [
      mojo.internal.StructField(
        'requiredHosts', 0,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'excludedHosts', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'excludedSpkis', 16,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'excludedLegacySpkis', 24,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
    ]);







/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
network.mojom.NetworkContextParamsSpec.CorsModeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
network.mojom.NetworkContextParams_CorsMode = {
  
  kDefault: 0,
  kDisable: 1,
  kEnable: 2,
  MIN_VALUE: 0,
  MAX_VALUE: 2,
};


mojo.internal.Struct(
    network.mojom.NetworkContextParamsSpec.$,
    'NetworkContextParams',
    256,
    [
      mojo.internal.StructField(
        'contextName', 0,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'userAgent', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'acceptLanguage', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'enableBrotli', 24,
        0,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'quicUserAgentId', 32,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'enableReferrers', 24,
        1,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'validateReferrerPolicyOnInitialRequest', 24,
        2,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'proxyResolverFactory', 40,
        0,
        mojo.internal.InterfaceProxy(proxyResolver.mojom.ProxyResolverFactoryRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'cookiePath', 48,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'trustTokenPath', 56,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'enableEncryptedCookies', 24,
        3,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'restoreOldSessionCookies', 24,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'persistSessionCookies', 24,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'httpCacheEnabled', 24,
        6,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'httpCacheMaxSize', 28,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'httpCachePath', 64,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'httpServerPropertiesPath', 72,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'transportSecurityPersisterPath', 80,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'enableFtpUrlSupport', 24,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'disableIdleSocketsCloseOnMemoryPressure', 25,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'initialSslConfig', 88,
        0,
        network.mojom.SSLConfigSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'sslConfigClientReceiver', 96,
        0,
        mojo.internal.InterfaceRequest(network.mojom.SSLConfigClientPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'initialProxyConfig', 104,
        0,
        network.mojom.ProxyConfigWithAnnotationSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'proxyConfigClientReceiver', 100,
        0,
        mojo.internal.InterfaceRequest(network.mojom.ProxyConfigClientPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'initialCustomProxyConfig', 112,
        0,
        network.mojom.CustomProxyConfigSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'customProxyConfigClientReceiver', 120,
        0,
        mojo.internal.InterfaceRequest(network.mojom.CustomProxyConfigClientPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'proxyConfigPollerClient', 124,
        0,
        mojo.internal.InterfaceProxy(network.mojom.ProxyConfigPollerClientRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'proxyErrorClient', 132,
        0,
        mojo.internal.InterfaceProxy(network.mojom.ProxyErrorClientRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'pacQuickCheckEnabled', 25,
        1,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'enableCertificateReporting', 25,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'enforceChromeCtPolicy', 25,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'enableExpectCtReporting', 25,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'ctLogs', 144,
        0,
        mojo.internal.Array(network.mojom.CTLogInfoSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'ctPolicy', 152,
        0,
        network.mojom.CTPolicySpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'ctLogUpdateTime', 160,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'certVerifierParams', 168,
        0,
        network.mojom.CertVerifierParamsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'cookieManagerParams', 184,
        0,
        network.mojom.CookieManagerParamsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'enableDomainReliability', 25,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'domainReliabilityUploadReporter', 192,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'discardDomainReliablityUploads', 25,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'reportingDeliveryInterval', 200,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'skipReportingSendPermissionCheck', 25,
        7,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'corsOriginAccessList', 208,
        0,
        mojo.internal.Array(network.mojom.CorsOriginAccessPatternsSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'corsExemptHeaderList', 216,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'allowAnyCorsExemptHeaderForBrowser', 26,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'hstsPolicyBypassList', 224,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'corsExtraSafelistedRequestHeaderNames', 232,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'corsMode', 140,
        0,
        network.mojom.NetworkContextParamsSpec.CorsModeSpec.$,
        network.mojom.NetworkContextParams_CorsMode.kDefault,
        false /* nullable */),
      mojo.internal.StructField(
        'reportingAndNelStorePath', 240,
        0,
        mojoBase.mojom.FilePathSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'httpAuthStaticNetworkContextParams', 248,
        0,
        network.mojom.HttpAuthStaticNetworkContextParamsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'resetHttpCacheBackend', 26,
        1,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'splitAuthCacheByNetworkIsolationKey', 26,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'requireNetworkIsolationKey', 26,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkConditionsSpec.$,
    'NetworkConditions',
    32,
    [
      mojo.internal.StructField(
        'offline', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'latency', 8,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'downloadThroughput', 16,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'uploadThroughput', 24,
        0,
        mojo.internal.Double,
        0,
        false /* nullable */),
    ]);







/**
 * @const { {$: !mojo.internal.MojomType} }
 * @export
 */
network.mojom.ClearDataFilterSpec.TypeSpec = { $: mojo.internal.Enum() };

/**
 * @enum {number}
 * @export
 */
network.mojom.ClearDataFilter_Type = {
  
  DELETE_MATCHES: 0,
  KEEP_MATCHES: 1,
  MIN_VALUE: 0,
  MAX_VALUE: 1,
};


mojo.internal.Struct(
    network.mojom.ClearDataFilterSpec.$,
    'ClearDataFilter',
    24,
    [
      mojo.internal.StructField(
        'type', 0,
        0,
        network.mojom.ClearDataFilterSpec.TypeSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'domains', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'origins', 16,
        0,
        mojo.internal.Array(url.mojom.OriginSpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkUsageSpec.$,
    'NetworkUsage',
    24,
    [
      mojo.internal.StructField(
        'processId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'routingId', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'totalBytesReceived', 8,
        0,
        mojo.internal.Int64,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'totalBytesSent', 16,
        0,
        mojo.internal.Int64,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.SignedExchangeReportSpec.$,
    'SignedExchangeReport',
    80,
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'type', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'outerUrl', 16,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'innerUrl', 24,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'certUrl', 32,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'referrer', 40,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'serverIpAddress', 48,
        0,
        network.mojom.IPAddressSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'protocol', 56,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'method', 64,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'statusCode', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'elapsedTime', 72,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.URLLoaderFactoryOverrideSpec.$,
    'URLLoaderFactoryOverride',
    16,
    [
      mojo.internal.StructField(
        'overridingFactory', 0,
        0,
        mojo.internal.InterfaceProxy(network.mojom.URLLoaderFactoryRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'overriddenFactoryReceiver', 8,
        0,
        mojo.internal.InterfaceRequest(network.mojom.URLLoaderFactoryPendingReceiver),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'skipCorsEnabledSchemeCheck', 12,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.ClientSecurityStateSpec.$,
    'ClientSecurityState',
    16,
    [
      mojo.internal.StructField(
        'crossOriginEmbedderPolicy', 0,
        0,
        network.mojom.CrossOriginEmbedderPolicySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'isWebSecureContext', 8,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'ipAddressSpace', 12,
        0,
        network.mojom.IPAddressSpaceSpec.$,
        network.mojom.IPAddressSpace.kUnknown,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.URLLoaderFactoryParamsSpec.$,
    'URLLoaderFactoryParams',
    88,
    [
      mojo.internal.StructField(
        'processId', 0,
        0,
        mojo.internal.Int32,
        network.mojom.INVALID_PROCESS_ID,
        false /* nullable */),
      mojo.internal.StructField(
        'requestInitiatorSiteLock', 8,
        0,
        url.mojom.OriginSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'isCorbEnabled', 4,
        0,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'ignoreIsolatedWorldOrigin', 4,
        1,
        mojo.internal.Bool,
        true,
        false /* nullable */),
      mojo.internal.StructField(
        'unsafeNonWebbyInitiator', 4,
        2,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'disableWebSecurity', 4,
        3,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'headerClient', 16,
        0,
        mojo.internal.InterfaceProxy(network.mojom.TrustedURLLoaderHeaderClientRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'factoryBoundAccessPatterns', 24,
        0,
        network.mojom.CorsOriginAccessPatternsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'isolationInfo', 32,
        0,
        network.mojom.IsolationInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'disableSecureDns', 4,
        4,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'isTrusted', 4,
        5,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'automaticallyAssignIsolationInfo', 4,
        6,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'topFrameId', 40,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'factoryOverride', 48,
        0,
        network.mojom.URLLoaderFactoryOverrideSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'clientSecurityState', 56,
        0,
        network.mojom.ClientSecurityStateSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'coepReporter', 64,
        0,
        mojo.internal.InterfaceProxy(network.mojom.CrossOriginEmbedderPolicyReporterRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'cookieObserver', 72,
        0,
        mojo.internal.InterfaceProxy(network.mojom.CookieAccessObserverRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'trustTokenRedemptionPolicy', 80,
        0,
        network.mojom.TrustTokenRedemptionPolicySpec.$,
        network.mojom.TrustTokenRedemptionPolicy.kPotentiallyPermit,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.CustomProxyConfigClient_OnCustomProxyConfigUpdated_ParamsSpec.$,
    'CustomProxyConfigClient_OnCustomProxyConfigUpdated_Params',
    8,
    [
      mojo.internal.StructField(
        'proxyConfig', 0,
        0,
        network.mojom.CustomProxyConfigSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ParamsSpec.$,
    'CustomProxyConfigClient_MarkProxiesAsBad_Params',
    16,
    [
      mojo.internal.StructField(
        'bypassDuration', 0,
        0,
        mojoBase.mojom.TimeDeltaSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'badProxies', 8,
        0,
        network.mojom.ProxyListSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.CustomProxyConfigClient_MarkProxiesAsBad_ResponseParamsSpec.$,
    'CustomProxyConfigClient_MarkProxiesAsBad_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.CustomProxyConfigClient_ClearBadProxiesCache_ParamsSpec.$,
    'CustomProxyConfigClient_ClearBadProxiesCache_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ParamsSpec.$,
    'TrustedHeaderClient_OnBeforeSendHeaders_Params',
    8,
    [
      mojo.internal.StructField(
        'headers', 0,
        0,
        network.mojom.HttpRequestHeadersSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.TrustedHeaderClient_OnBeforeSendHeaders_ResponseParamsSpec.$,
    'TrustedHeaderClient_OnBeforeSendHeaders_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'headers', 8,
        0,
        network.mojom.HttpRequestHeadersSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.TrustedHeaderClient_OnHeadersReceived_ParamsSpec.$,
    'TrustedHeaderClient_OnHeadersReceived_Params',
    16,
    [
      mojo.internal.StructField(
        'headers', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'remoteEndpoint', 8,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.TrustedHeaderClient_OnHeadersReceived_ResponseParamsSpec.$,
    'TrustedHeaderClient_OnHeadersReceived_ResponseParams',
    24,
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'headers', 8,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'preserveFragmentOnRedirectUrl', 16,
        0,
        url.mojom.UrlSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.TrustedURLLoaderHeaderClient_OnLoaderCreated_ParamsSpec.$,
    'TrustedURLLoaderHeaderClient_OnLoaderCreated_Params',
    8,
    [
      mojo.internal.StructField(
        'requestId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'headerClient', 4,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TrustedHeaderClientPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_ParamsSpec.$,
    'TrustedURLLoaderHeaderClient_OnLoaderForCorsPreflightCreated_Params',
    16,
    [
      mojo.internal.StructField(
        'request', 0,
        0,
        network.mojom.URLRequestSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'headerClient', 8,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TrustedHeaderClientPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.AuthChallengeResponder_OnAuthCredentials_ParamsSpec.$,
    'AuthChallengeResponder_OnAuthCredentials_Params',
    8,
    [
      mojo.internal.StructField(
        'credentials', 0,
        0,
        network.mojom.AuthCredentialsSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.ClientCertificateResponder_ContinueWithCertificate_ParamsSpec.$,
    'ClientCertificateResponder_ContinueWithCertificate_Params',
    32,
    [
      mojo.internal.StructField(
        'x509Certificate', 0,
        0,
        network.mojom.X509CertificateSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'providerName', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'algorithmPreferences', 16,
        0,
        mojo.internal.Array(mojo.internal.Uint16, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'sslPrivateKey', 24,
        0,
        mojo.internal.InterfaceProxy(network.mojom.SSLPrivateKeyRemote),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.ClientCertificateResponder_ContinueWithoutCertificate_ParamsSpec.$,
    'ClientCertificateResponder_ContinueWithoutCertificate_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.ClientCertificateResponder_CancelRequest_ParamsSpec.$,
    'ClientCertificateResponder_CancelRequest_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.SSLPrivateKey_Sign_ParamsSpec.$,
    'SSLPrivateKey_Sign_Params',
    16,
    [
      mojo.internal.StructField(
        'algorithm', 0,
        0,
        mojo.internal.Uint16,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'input', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.SSLPrivateKey_Sign_ResponseParamsSpec.$,
    'SSLPrivateKey_Sign_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'netError', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'signature', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnAuthRequired_ParamsSpec.$,
    'NetworkContextClient_OnAuthRequired_Params',
    56,
    [
      mojo.internal.StructField(
        'windowId', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'processId', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'routingId', 12,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'requestId', 16,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 24,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'firstAuthAttempt', 20,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'authInfo', 32,
        0,
        network.mojom.AuthChallengeInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'head', 40,
        0,
        network.mojom.URLResponseHeadSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'authChallengeResponder', 48,
        0,
        mojo.internal.InterfaceProxy(network.mojom.AuthChallengeResponderRemote),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCertificateRequested_ParamsSpec.$,
    'NetworkContextClient_OnCertificateRequested_Params',
    40,
    [
      mojo.internal.StructField(
        'windowId', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'processId', 8,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'routingId', 12,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'requestId', 16,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'certInfo', 24,
        0,
        network.mojom.SSLCertRequestInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'certResponder', 32,
        0,
        mojo.internal.InterfaceProxy(network.mojom.ClientCertificateResponderRemote),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnSSLCertificateError_ParamsSpec.$,
    'NetworkContextClient_OnSSLCertificateError_Params',
    32,
    [
      mojo.internal.StructField(
        'processId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'routingId', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'netError', 16,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'sslInfo', 24,
        0,
        network.mojom.SSLInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'fatal', 20,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnSSLCertificateError_ResponseParamsSpec.$,
    'NetworkContextClient_OnSSLCertificateError_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'netError', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnFileUploadRequested_ParamsSpec.$,
    'NetworkContextClient_OnFileUploadRequested_Params',
    16,
    [
      mojo.internal.StructField(
        'processId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'async', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'filePaths', 8,
        0,
        mojo.internal.Array(mojoBase.mojom.FilePathSpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnFileUploadRequested_ResponseParamsSpec.$,
    'NetworkContextClient_OnFileUploadRequested_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'netError', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'files', 8,
        0,
        mojo.internal.Array(mojoBase.mojom.FileSpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCanSendReportingReports_ParamsSpec.$,
    'NetworkContextClient_OnCanSendReportingReports_Params',
    8,
    [
      mojo.internal.StructField(
        'origins', 0,
        0,
        mojo.internal.Array(url.mojom.OriginSpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCanSendReportingReports_ResponseParamsSpec.$,
    'NetworkContextClient_OnCanSendReportingReports_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'origins', 0,
        0,
        mojo.internal.Array(url.mojom.OriginSpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ParamsSpec.$,
    'NetworkContextClient_OnCanSendDomainReliabilityUpload_Params',
    8,
    [
      mojo.internal.StructField(
        'origin', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParamsSpec.$,
    'NetworkContextClient_OnCanSendDomainReliabilityUpload_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'allowed', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnClearSiteData_ParamsSpec.$,
    'NetworkContextClient_OnClearSiteData_Params',
    32,
    [
      mojo.internal.StructField(
        'processId', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'routingId', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'headerValue', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'loadFlags', 24,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContextClient_OnClearSiteData_ResponseParamsSpec.$,
    'NetworkContextClient_OnClearSiteData_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetClient_ParamsSpec.$,
    'NetworkContext_SetClient_Params',
    8,
    [
      mojo.internal.StructField(
        'client', 0,
        0,
        mojo.internal.InterfaceProxy(network.mojom.NetworkContextClientRemote),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateURLLoaderFactory_ParamsSpec.$,
    'NetworkContext_CreateURLLoaderFactory_Params',
    16,
    [
      mojo.internal.StructField(
        'urlLoaderFactory', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.URLLoaderFactoryPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'params', 8,
        0,
        network.mojom.URLLoaderFactoryParamsSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ResetURLLoaderFactories_ParamsSpec.$,
    'NetworkContext_ResetURLLoaderFactories_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_GetCookieManager_ParamsSpec.$,
    'NetworkContext_GetCookieManager_Params',
    8,
    [
      mojo.internal.StructField(
        'cookieManager', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.CookieManagerPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_GetRestrictedCookieManager_ParamsSpec.$,
    'NetworkContext_GetRestrictedCookieManager_Params',
    40,
    [
      mojo.internal.StructField(
        'restrictedCookieManager', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.RestrictedCookieManagerPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'role', 4,
        0,
        network.mojom.RestrictedCookieManagerRoleSpec.$,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'origin', 8,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'siteForCookies', 16,
        0,
        network.mojom.SiteForCookiesSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'topFrameOrigin', 24,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'cookieObserver', 32,
        0,
        mojo.internal.InterfaceProxy(network.mojom.CookieAccessObserverRemote),
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_GetHasTrustTokensAnswerer_ParamsSpec.$,
    'NetworkContext_GetHasTrustTokensAnswerer_Params',
    16,
    [
      mojo.internal.StructField(
        'hasTrustTokensAnswerer', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.HasTrustTokensAnswererPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'topFrameOrigin', 8,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearTrustTokenData_ParamsSpec.$,
    'NetworkContext_ClearTrustTokenData_Params',
    8,
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearTrustTokenData_ResponseParamsSpec.$,
    'NetworkContext_ClearTrustTokenData_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearNetworkingHistorySince_ParamsSpec.$,
    'NetworkContext_ClearNetworkingHistorySince_Params',
    8,
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearNetworkingHistorySince_ResponseParamsSpec.$,
    'NetworkContext_ClearNetworkingHistorySince_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHttpCache_ParamsSpec.$,
    'NetworkContext_ClearHttpCache_Params',
    24,
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'endTime', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'filter', 16,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHttpCache_ResponseParamsSpec.$,
    'NetworkContext_ClearHttpCache_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ComputeHttpCacheSize_ParamsSpec.$,
    'NetworkContext_ComputeHttpCacheSize_Params',
    16,
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'endTime', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ComputeHttpCacheSize_ResponseParamsSpec.$,
    'NetworkContext_ComputeHttpCacheSize_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'isUpperBound', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'sizeOrError', 8,
        0,
        mojo.internal.Int64,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_NotifyExternalCacheHit_ParamsSpec.$,
    'NetworkContext_NotifyExternalCacheHit_Params',
    24,
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'httpMethod', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'key', 16,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHostCache_ParamsSpec.$,
    'NetworkContext_ClearHostCache_Params',
    8,
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHostCache_ResponseParamsSpec.$,
    'NetworkContext_ClearHostCache_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHttpAuthCache_ParamsSpec.$,
    'NetworkContext_ClearHttpAuthCache_Params',
    8,
    [
      mojo.internal.StructField(
        'startTime', 0,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearHttpAuthCache_ResponseParamsSpec.$,
    'NetworkContext_ClearHttpAuthCache_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearReportingCacheReports_ParamsSpec.$,
    'NetworkContext_ClearReportingCacheReports_Params',
    8,
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearReportingCacheReports_ResponseParamsSpec.$,
    'NetworkContext_ClearReportingCacheReports_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearReportingCacheClients_ParamsSpec.$,
    'NetworkContext_ClearReportingCacheClients_Params',
    8,
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearReportingCacheClients_ResponseParamsSpec.$,
    'NetworkContext_ClearReportingCacheClients_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearNetworkErrorLogging_ParamsSpec.$,
    'NetworkContext_ClearNetworkErrorLogging_Params',
    8,
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearNetworkErrorLogging_ResponseParamsSpec.$,
    'NetworkContext_ClearNetworkErrorLogging_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearDomainReliability_ParamsSpec.$,
    'NetworkContext_ClearDomainReliability_Params',
    16,
    [
      mojo.internal.StructField(
        'filter', 0,
        0,
        network.mojom.ClearDataFilterSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'mode', 8,
        0,
        network.mojom.NetworkContext.DomainReliabilityClearModeSpec.$,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearDomainReliability_ResponseParamsSpec.$,
    'NetworkContext_ClearDomainReliability_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_GetDomainReliabilityJSON_ParamsSpec.$,
    'NetworkContext_GetDomainReliabilityJSON_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_GetDomainReliabilityJSON_ResponseParamsSpec.$,
    'NetworkContext_GetDomainReliabilityJSON_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'data', 0,
        0,
        mojoBase.mojom.ValueSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_QueueReport_ParamsSpec.$,
    'NetworkContext_QueueReport_Params',
    40,
    [
      mojo.internal.StructField(
        'type', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'group', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 16,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'userAgent', 24,
        0,
        mojo.internal.String,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'body', 32,
        0,
        mojoBase.mojom.DictionaryValueSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_QueueSignedExchangeReport_ParamsSpec.$,
    'NetworkContext_QueueSignedExchangeReport_Params',
    8,
    [
      mojo.internal.StructField(
        'report', 0,
        0,
        network.mojom.SignedExchangeReportSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CloseAllConnections_ParamsSpec.$,
    'NetworkContext_CloseAllConnections_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CloseAllConnections_ResponseParamsSpec.$,
    'NetworkContext_CloseAllConnections_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CloseIdleConnections_ParamsSpec.$,
    'NetworkContext_CloseIdleConnections_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CloseIdleConnections_ResponseParamsSpec.$,
    'NetworkContext_CloseIdleConnections_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetNetworkConditions_ParamsSpec.$,
    'NetworkContext_SetNetworkConditions_Params',
    16,
    [
      mojo.internal.StructField(
        'throttlingProfileId', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'conditions', 8,
        0,
        network.mojom.NetworkConditionsSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetAcceptLanguage_ParamsSpec.$,
    'NetworkContext_SetAcceptLanguage_Params',
    8,
    [
      mojo.internal.StructField(
        'newAcceptLanguage', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetEnableReferrers_ParamsSpec.$,
    'NetworkContext_SetEnableReferrers_Params',
    8,
    [
      mojo.internal.StructField(
        'enableReferrers', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetCTPolicy_ParamsSpec.$,
    'NetworkContext_SetCTPolicy_Params',
    8,
    [
      mojo.internal.StructField(
        'ctPolicy', 0,
        0,
        network.mojom.CTPolicySpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_AddExpectCT_ParamsSpec.$,
    'NetworkContext_AddExpectCT_Params',
    40,
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'expiry', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'enforce', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'reportUri', 24,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 32,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_AddExpectCT_ResponseParamsSpec.$,
    'NetworkContext_AddExpectCT_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetExpectCTTestReport_ParamsSpec.$,
    'NetworkContext_SetExpectCTTestReport_Params',
    8,
    [
      mojo.internal.StructField(
        'reportUri', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetExpectCTTestReport_ResponseParamsSpec.$,
    'NetworkContext_SetExpectCTTestReport_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'success', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_GetExpectCTState_ParamsSpec.$,
    'NetworkContext_GetExpectCTState_Params',
    16,
    [
      mojo.internal.StructField(
        'domain', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_GetExpectCTState_ResponseParamsSpec.$,
    'NetworkContext_GetExpectCTState_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'state', 0,
        0,
        mojoBase.mojom.DictionaryValueSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateUDPSocket_ParamsSpec.$,
    'NetworkContext_CreateUDPSocket_Params',
    16,
    [
      mojo.internal.StructField(
        'receiver', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.UDPSocketPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'listener', 4,
        0,
        mojo.internal.InterfaceProxy(network.mojom.UDPSocketListenerRemote),
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPServerSocket_ParamsSpec.$,
    'NetworkContext_CreateTCPServerSocket_Params',
    24,
    [
      mojo.internal.StructField(
        'localAddr', 0,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'backlog', 8,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'trafficAnnotation', 16,
        0,
        network.mojom.MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'socket', 12,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TCPServerSocketPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPServerSocket_ResponseParamsSpec.$,
    'NetworkContext_CreateTCPServerSocket_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'localAddrOut', 8,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPConnectedSocket_ParamsSpec.$,
    'NetworkContext_CreateTCPConnectedSocket_Params',
    48,
    [
      mojo.internal.StructField(
        'localAddr', 0,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'remoteAddrList', 8,
        0,
        network.mojom.AddressListSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'tcpConnectedSocketOptions', 16,
        0,
        network.mojom.TCPConnectedSocketOptionsSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'trafficAnnotation', 24,
        0,
        network.mojom.MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'socket', 32,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TCPConnectedSocketPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'observer', 36,
        0,
        mojo.internal.InterfaceProxy(network.mojom.SocketObserverRemote),
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPConnectedSocket_ResponseParamsSpec.$,
    'NetworkContext_CreateTCPConnectedSocket_ResponseParams',
    32,
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'localAddr', 8,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'peerAddr', 16,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'receiveStream', 4,
        0,
        mojo.internal.Handle,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'sendStream', 24,
        0,
        mojo.internal.Handle,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPBoundSocket_ParamsSpec.$,
    'NetworkContext_CreateTCPBoundSocket_Params',
    24,
    [
      mojo.internal.StructField(
        'localAddr', 0,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'trafficAnnotation', 8,
        0,
        network.mojom.MutableNetworkTrafficAnnotationTagSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'socket', 16,
        0,
        mojo.internal.InterfaceRequest(network.mojom.TCPBoundSocketPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateTCPBoundSocket_ResponseParamsSpec.$,
    'NetworkContext_CreateTCPBoundSocket_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'localAddr', 8,
        0,
        network.mojom.IPEndPointSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateProxyResolvingSocketFactory_ParamsSpec.$,
    'NetworkContext_CreateProxyResolvingSocketFactory_Params',
    8,
    [
      mojo.internal.StructField(
        'factory', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.ProxyResolvingSocketFactoryPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_LookUpProxyForURL_ParamsSpec.$,
    'NetworkContext_LookUpProxyForURL_Params',
    24,
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'proxyLookupClient', 16,
        0,
        mojo.internal.InterfaceProxy(network.mojom.ProxyLookupClientRemote),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ForceReloadProxyConfig_ParamsSpec.$,
    'NetworkContext_ForceReloadProxyConfig_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ForceReloadProxyConfig_ResponseParamsSpec.$,
    'NetworkContext_ForceReloadProxyConfig_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearBadProxiesCache_ParamsSpec.$,
    'NetworkContext_ClearBadProxiesCache_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ClearBadProxiesCache_ResponseParamsSpec.$,
    'NetworkContext_ClearBadProxiesCache_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateWebSocket_ParamsSpec.$,
    'NetworkContext_CreateWebSocket_Params',
    88,
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'requestedProtocols', 8,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'siteForCookies', 16,
        0,
        network.mojom.SiteForCookiesSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'isolationInfo', 24,
        0,
        network.mojom.IsolationInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'additionalHeaders', 32,
        0,
        mojo.internal.Array(network.mojom.HttpHeaderSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'processId', 40,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'renderFrameId', 44,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'origin', 48,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'options', 56,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'handshakeClient', 60,
        0,
        mojo.internal.InterfaceProxy(network.mojom.WebSocketHandshakeClientRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'authHandler', 68,
        0,
        mojo.internal.InterfaceProxy(network.mojom.AuthenticationHandlerRemote),
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'headerClient', 76,
        0,
        mojo.internal.InterfaceProxy(network.mojom.TrustedHeaderClientRemote),
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateQuicTransport_ParamsSpec.$,
    'NetworkContext_CreateQuicTransport_Params',
    40,
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'origin', 8,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 16,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'fingerprints', 24,
        0,
        mojo.internal.Array(network.mojom.QuicTransportCertificateFingerprintSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'handshakeClient', 32,
        0,
        mojo.internal.InterfaceProxy(network.mojom.QuicTransportHandshakeClientRemote),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateNetLogExporter_ParamsSpec.$,
    'NetworkContext_CreateNetLogExporter_Params',
    8,
    [
      mojo.internal.StructField(
        'receiver', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.NetLogExporterPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_PreconnectSockets_ParamsSpec.$,
    'NetworkContext_PreconnectSockets_Params',
    24,
    [
      mojo.internal.StructField(
        'numStreams', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'allowCredentials', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 16,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateP2PSocketManager_ParamsSpec.$,
    'NetworkContext_CreateP2PSocketManager_Params',
    24,
    [
      mojo.internal.StructField(
        'networkIsolationKey', 0,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'client', 8,
        0,
        mojo.internal.InterfaceProxy(network.mojom.P2PTrustedSocketManagerClientRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'trustedSocketManager', 16,
        0,
        mojo.internal.InterfaceRequest(network.mojom.P2PTrustedSocketManagerPendingReceiver),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'socketManager', 20,
        0,
        mojo.internal.InterfaceRequest(network.mojom.P2PSocketManagerPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateMdnsResponder_ParamsSpec.$,
    'NetworkContext_CreateMdnsResponder_Params',
    8,
    [
      mojo.internal.StructField(
        'responderReceiver', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.MdnsResponderPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ResolveHost_ParamsSpec.$,
    'NetworkContext_ResolveHost_Params',
    32,
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        network.mojom.HostPortPairSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'optionalParameters', 16,
        0,
        network.mojom.ResolveHostParametersSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'responseClient', 24,
        0,
        mojo.internal.InterfaceProxy(network.mojom.ResolveHostClientRemote),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_CreateHostResolver_ParamsSpec.$,
    'NetworkContext_CreateHostResolver_Params',
    16,
    [
      mojo.internal.StructField(
        'configOverrides', 0,
        0,
        network.mojom.DnsConfigOverridesSpec.$,
        null,
        true /* nullable */),
      mojo.internal.StructField(
        'hostResolver', 8,
        0,
        mojo.internal.InterfaceRequest(network.mojom.HostResolverPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_VerifyCertForSignedExchange_ParamsSpec.$,
    'NetworkContext_VerifyCertForSignedExchange_Params',
    32,
    [
      mojo.internal.StructField(
        'certificate', 0,
        0,
        network.mojom.X509CertificateSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'url', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'ocspResponse', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'sctList', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_VerifyCertForSignedExchange_ResponseParamsSpec.$,
    'NetworkContext_VerifyCertForSignedExchange_ResponseParams',
    24,
    [
      mojo.internal.StructField(
        'errorCode', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'cvResult', 8,
        0,
        network.mojom.CertVerifyResultSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'ctResult', 16,
        0,
        network.mojom.CTVerifyResultSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ParseHeaders_ParamsSpec.$,
    'NetworkContext_ParseHeaders_Params',
    16,
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'headers', 8,
        0,
        network.mojom.HttpResponseHeadersSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ParseHeaders_ResponseParamsSpec.$,
    'NetworkContext_ParseHeaders_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'parsedHeaders', 0,
        0,
        network.mojom.ParsedHeadersSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_AddHSTS_ParamsSpec.$,
    'NetworkContext_AddHSTS_Params',
    24,
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'expiry', 8,
        0,
        mojoBase.mojom.TimeSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'includeSubdomains', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_AddHSTS_ResponseParamsSpec.$,
    'NetworkContext_AddHSTS_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_IsHSTSActiveForHost_ParamsSpec.$,
    'NetworkContext_IsHSTSActiveForHost_Params',
    8,
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_IsHSTSActiveForHost_ResponseParamsSpec.$,
    'NetworkContext_IsHSTSActiveForHost_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_GetHSTSState_ParamsSpec.$,
    'NetworkContext_GetHSTSState_Params',
    8,
    [
      mojo.internal.StructField(
        'domain', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_GetHSTSState_ResponseParamsSpec.$,
    'NetworkContext_GetHSTSState_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'state', 0,
        0,
        mojoBase.mojom.DictionaryValueSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ParamsSpec.$,
    'NetworkContext_SetCorsOriginAccessListsForOrigin_Params',
    24,
    [
      mojo.internal.StructField(
        'sourceOrigin', 0,
        0,
        url.mojom.OriginSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'allowPatterns', 8,
        0,
        mojo.internal.Array(network.mojom.CorsOriginPatternSpec.$, false),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'blockPatterns', 16,
        0,
        mojo.internal.Array(network.mojom.CorsOriginPatternSpec.$, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParamsSpec.$,
    'NetworkContext_SetCorsOriginAccessListsForOrigin_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetCorsExtraSafelistedRequestHeaderNames_ParamsSpec.$,
    'NetworkContext_SetCorsExtraSafelistedRequestHeaderNames_Params',
    8,
    [
      mojo.internal.StructField(
        'corsExtraSafelistedRequestHeaderNames', 0,
        0,
        mojo.internal.Array(mojo.internal.String, false),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_DeleteDynamicDataForHost_ParamsSpec.$,
    'NetworkContext_DeleteDynamicDataForHost_Params',
    8,
    [
      mojo.internal.StructField(
        'host', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_DeleteDynamicDataForHost_ResponseParamsSpec.$,
    'NetworkContext_DeleteDynamicDataForHost_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_ParamsSpec.$,
    'NetworkContext_SetSplitAuthCacheByNetworkIsolationKey_Params',
    8,
    [
      mojo.internal.StructField(
        'splitAuthCacheByNetworkIsolationKey', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ParamsSpec.$,
    'NetworkContext_SaveHttpAuthCacheProxyEntries_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
    'NetworkContext_SaveHttpAuthCacheProxyEntries_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'cacheKey', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ParamsSpec.$,
    'NetworkContext_LoadHttpAuthCacheProxyEntries_Params',
    8,
    [
      mojo.internal.StructField(
        'cacheKey', 0,
        0,
        mojoBase.mojom.UnguessableTokenSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParamsSpec.$,
    'NetworkContext_LoadHttpAuthCacheProxyEntries_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_AddAuthCacheEntry_ParamsSpec.$,
    'NetworkContext_AddAuthCacheEntry_Params',
    24,
    [
      mojo.internal.StructField(
        'challenge', 0,
        0,
        network.mojom.AuthChallengeInfoSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'credentials', 16,
        0,
        network.mojom.AuthCredentialsSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_AddAuthCacheEntry_ResponseParamsSpec.$,
    'NetworkContext_AddAuthCacheEntry_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ParamsSpec.$,
    'NetworkContext_LookupServerBasicAuthCredentials_Params',
    16,
    [
      mojo.internal.StructField(
        'url', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'networkIsolationKey', 8,
        0,
        network.mojom.NetworkIsolationKeySpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_LookupServerBasicAuthCredentials_ResponseParamsSpec.$,
    'NetworkContext_LookupServerBasicAuthCredentials_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'credentials', 0,
        0,
        network.mojom.AuthCredentialsSpec.$,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ParamsSpec.$,
    'NetworkContext_EnableStaticKeyPinningForTesting_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_EnableStaticKeyPinningForTesting_ResponseParamsSpec.$,
    'NetworkContext_EnableStaticKeyPinningForTesting_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_VerifyCertificateForTesting_ParamsSpec.$,
    'NetworkContext_VerifyCertificateForTesting_Params',
    32,
    [
      mojo.internal.StructField(
        'certificate', 0,
        0,
        network.mojom.X509CertificateSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'hostname', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'ocspResponse', 16,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'sctList', 24,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_VerifyCertificateForTesting_ResponseParamsSpec.$,
    'NetworkContext_VerifyCertificateForTesting_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'errorCode', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ParamsSpec.$,
    'NetworkContext_AddDomainReliabilityContextForTesting_Params',
    16,
    [
      mojo.internal.StructField(
        'origin', 0,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'uploadUrl', 8,
        0,
        url.mojom.UrlSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_AddDomainReliabilityContextForTesting_ResponseParamsSpec.$,
    'NetworkContext_AddDomainReliabilityContextForTesting_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ParamsSpec.$,
    'NetworkContext_ForceDomainReliabilityUploadsForTesting_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParamsSpec.$,
    'NetworkContext_ForceDomainReliabilityUploadsForTesting_ResponseParams',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.NetworkContext_GetOriginPolicyManager_ParamsSpec.$,
    'NetworkContext_GetOriginPolicyManager_Params',
    8,
    [
      mojo.internal.StructField(
        'originPolicyManager', 0,
        0,
        mojo.internal.InterfaceRequest(network.mojom.OriginPolicyManagerPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Union(
    network.mojom.CertVerifierParamsSpec.$, 'CertVerifierParams',
    {
      'remoteParams': {
        'ordinal': 0,
        'type': network.mojom.CertVerifierServiceRemoteParamsSpec.$,
      },
      'creationParams': {
        'ordinal': 1,
        'type': network.mojom.CertVerifierCreationParamsSpec.$,
      },
    });

/**
 * @typedef { {
 *   remoteParams: (!network.mojom.CertVerifierServiceRemoteParams|undefined),
 *   creationParams: (!network.mojom.CertVerifierCreationParams|undefined),
 * } }
 */
network.mojom.CertVerifierParams;
