// services/network/public/mojom/quic_transport.mojom-lite.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
'use strict';


mojo.internal.exportModule('network.mojom');








/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.QuicTransportPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.QuicTransportInterface }
 */
network.mojom.QuicTransportRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.QuicTransportPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.QuicTransportPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.QuicTransportPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } data
   * @return {Promise<{
        result: !boolean,
   *  }>}
   */

  sendDatagram(
      data) {
    return this.proxy.sendMessage(
        1072735991,
        network.mojom.QuicTransport_SendDatagram_ParamsSpec.$,
        network.mojom.QuicTransport_SendDatagram_ResponseParamsSpec.$,
        [
          data
        ]);
  }

  
  /**
   * @param { !MojoHandle } readable
   * @param { ?MojoHandle } writable
   * @return {Promise<{
        succeeded: !boolean,
        streamId: !number,
   *  }>}
   */

  createStream(
      readable,
      writable) {
    return this.proxy.sendMessage(
        1015127911,
        network.mojom.QuicTransport_CreateStream_ParamsSpec.$,
        network.mojom.QuicTransport_CreateStream_ResponseParamsSpec.$,
        [
          readable,
          writable
        ]);
  }

  
  /**
   * @return {Promise<{
        streamId: !number,
        readable: !MojoHandle,
        writable: !MojoHandle,
   *  }>}
   */

  acceptBidirectionalStream() {
    return this.proxy.sendMessage(
        40805026,
        network.mojom.QuicTransport_AcceptBidirectionalStream_ParamsSpec.$,
        network.mojom.QuicTransport_AcceptBidirectionalStream_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @return {Promise<{
        streamId: !number,
        readable: !MojoHandle,
   *  }>}
   */

  acceptUnidirectionalStream() {
    return this.proxy.sendMessage(
        898108270,
        network.mojom.QuicTransport_AcceptUnidirectionalStream_ParamsSpec.$,
        network.mojom.QuicTransport_AcceptUnidirectionalStream_ResponseParamsSpec.$,
        [
        ]);
  }

  
  /**
   * @param { !number } streamId
   */

  sendFin(
      streamId) {
    this.proxy.sendMessage(
        1375382162,
        network.mojom.QuicTransport_SendFin_ParamsSpec.$,
        null,
        [
          streamId
        ]);
  }

  
  /**
   * @param { !number } streamId
   * @param { !number } code
   */

  abortStream(
      streamId,
      code) {
    this.proxy.sendMessage(
        1949431953,
        network.mojom.QuicTransport_AbortStream_ParamsSpec.$,
        null,
        [
          streamId,
          code
        ]);
  }
};

/**
 * An object which receives request messages for the QuicTransport
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.QuicTransportReceiver = class {
  /**
   * @param {!network.mojom.QuicTransportInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.QuicTransportRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.QuicTransportRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.QuicTransportRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1072735991,
        network.mojom.QuicTransport_SendDatagram_ParamsSpec.$,
        network.mojom.QuicTransport_SendDatagram_ResponseParamsSpec.$,
        impl.sendDatagram.bind(impl));
    this.helper_internal_.registerHandler(
        1015127911,
        network.mojom.QuicTransport_CreateStream_ParamsSpec.$,
        network.mojom.QuicTransport_CreateStream_ResponseParamsSpec.$,
        impl.createStream.bind(impl));
    this.helper_internal_.registerHandler(
        40805026,
        network.mojom.QuicTransport_AcceptBidirectionalStream_ParamsSpec.$,
        network.mojom.QuicTransport_AcceptBidirectionalStream_ResponseParamsSpec.$,
        impl.acceptBidirectionalStream.bind(impl));
    this.helper_internal_.registerHandler(
        898108270,
        network.mojom.QuicTransport_AcceptUnidirectionalStream_ParamsSpec.$,
        network.mojom.QuicTransport_AcceptUnidirectionalStream_ResponseParamsSpec.$,
        impl.acceptUnidirectionalStream.bind(impl));
    this.helper_internal_.registerHandler(
        1375382162,
        network.mojom.QuicTransport_SendFin_ParamsSpec.$,
        null,
        impl.sendFin.bind(impl));
    this.helper_internal_.registerHandler(
        1949431953,
        network.mojom.QuicTransport_AbortStream_ParamsSpec.$,
        null,
        impl.abortStream.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.QuicTransport = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.QuicTransport";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.QuicTransportRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.QuicTransportRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the QuicTransport
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.QuicTransportCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.QuicTransportRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.QuicTransportRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sendDatagram =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1072735991,
        network.mojom.QuicTransport_SendDatagram_ParamsSpec.$,
        network.mojom.QuicTransport_SendDatagram_ResponseParamsSpec.$,
        this.sendDatagram.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.createStream =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1015127911,
        network.mojom.QuicTransport_CreateStream_ParamsSpec.$,
        network.mojom.QuicTransport_CreateStream_ResponseParamsSpec.$,
        this.createStream.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.acceptBidirectionalStream =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        40805026,
        network.mojom.QuicTransport_AcceptBidirectionalStream_ParamsSpec.$,
        network.mojom.QuicTransport_AcceptBidirectionalStream_ResponseParamsSpec.$,
        this.acceptBidirectionalStream.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.acceptUnidirectionalStream =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        898108270,
        network.mojom.QuicTransport_AcceptUnidirectionalStream_ParamsSpec.$,
        network.mojom.QuicTransport_AcceptUnidirectionalStream_ResponseParamsSpec.$,
        this.acceptUnidirectionalStream.createReceiverHandler(true /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.sendFin =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1375382162,
        network.mojom.QuicTransport_SendFin_ParamsSpec.$,
        null,
        this.sendFin.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.abortStream =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1949431953,
        network.mojom.QuicTransport_AbortStream_ParamsSpec.$,
        null,
        this.abortStream.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.QuicTransportClientPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.QuicTransportClientInterface }
 */
network.mojom.QuicTransportClientRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.QuicTransportClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.QuicTransportClientPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.QuicTransportClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !mojoBase.mojom.ReadOnlyBuffer } data
   */

  onDatagramReceived(
      data) {
    this.proxy.sendMessage(
        1690041224,
        network.mojom.QuicTransportClient_OnDatagramReceived_ParamsSpec.$,
        null,
        [
          data
        ]);
  }

  
  /**
   * @param { !number } streamId
   * @param { !boolean } finReceived
   */

  onIncomingStreamClosed(
      streamId,
      finReceived) {
    this.proxy.sendMessage(
        1856875139,
        network.mojom.QuicTransportClient_OnIncomingStreamClosed_ParamsSpec.$,
        null,
        [
          streamId,
          finReceived
        ]);
  }
};

/**
 * An object which receives request messages for the QuicTransportClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.QuicTransportClientReceiver = class {
  /**
   * @param {!network.mojom.QuicTransportClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.QuicTransportClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.QuicTransportClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.QuicTransportClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        1690041224,
        network.mojom.QuicTransportClient_OnDatagramReceived_ParamsSpec.$,
        null,
        impl.onDatagramReceived.bind(impl));
    this.helper_internal_.registerHandler(
        1856875139,
        network.mojom.QuicTransportClient_OnIncomingStreamClosed_ParamsSpec.$,
        null,
        impl.onIncomingStreamClosed.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.QuicTransportClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.QuicTransportClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.QuicTransportClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.QuicTransportClientRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the QuicTransportClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.QuicTransportClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.QuicTransportClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.QuicTransportClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onDatagramReceived =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1690041224,
        network.mojom.QuicTransportClient_OnDatagramReceived_ParamsSpec.$,
        null,
        this.onDatagramReceived.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onIncomingStreamClosed =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        1856875139,
        network.mojom.QuicTransportClient_OnIncomingStreamClosed_ParamsSpec.$,
        null,
        this.onIncomingStreamClosed.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};




/**
 * @implements {mojo.internal.interfaceSupport.PendingReceiver}
 * @export
 */
network.mojom.QuicTransportHandshakeClientPendingReceiver = class {
  /** @param {!MojoHandle} handle */
  constructor(handle) {
    /** @public {!MojoHandle} */
    this.handle = handle;
  }
};



/**
 * @export
 * @implements { network.mojom.QuicTransportHandshakeClientInterface }
 */
network.mojom.QuicTransportHandshakeClientRemote = class {
  /** @param {MojoHandle=} opt_handle */
  constructor(opt_handle) {
    /**
     * @private {!mojo.internal.interfaceSupport.InterfaceRemoteBase<!network.mojom.QuicTransportHandshakeClientPendingReceiver>}
     */
    this.proxy =
        new mojo.internal.interfaceSupport.InterfaceRemoteBase(
          network.mojom.QuicTransportHandshakeClientPendingReceiver,
          opt_handle);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper<!network.mojom.QuicTransportHandshakeClientPendingReceiver>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceRemoteBaseWrapper(this.proxy);

    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.proxy.getConnectionErrorEventRouter();
  }

  
  /**
   * @param { !network.mojom.QuicTransportRemote } transport
   * @param { !network.mojom.QuicTransportClientPendingReceiver } client
   */

  onConnectionEstablished(
      transport,
      client) {
    this.proxy.sendMessage(
        473142065,
        network.mojom.QuicTransportHandshakeClient_OnConnectionEstablished_ParamsSpec.$,
        null,
        [
          transport,
          client
        ]);
  }

  
  /**
   * @param { ?network.mojom.QuicTransportError } error
   */

  onHandshakeFailed(
      error) {
    this.proxy.sendMessage(
        161088508,
        network.mojom.QuicTransportHandshakeClient_OnHandshakeFailed_ParamsSpec.$,
        null,
        [
          error
        ]);
  }
};

/**
 * An object which receives request messages for the QuicTransportHandshakeClient
 * mojom interface. Must be constructed over an object which implements that
 * interface.
 *
 * @export
 */
network.mojom.QuicTransportHandshakeClientReceiver = class {
  /**
   * @param {!network.mojom.QuicTransportHandshakeClientInterface } impl
   */
  constructor(impl) {
    /** @private {!mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal<!network.mojom.QuicTransportHandshakeClientRemote>} */
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
        network.mojom.QuicTransportHandshakeClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.QuicTransportHandshakeClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);


    this.helper_internal_.registerHandler(
        473142065,
        network.mojom.QuicTransportHandshakeClient_OnConnectionEstablished_ParamsSpec.$,
        null,
        impl.onConnectionEstablished.bind(impl));
    this.helper_internal_.registerHandler(
        161088508,
        network.mojom.QuicTransportHandshakeClient_OnHandshakeFailed_ParamsSpec.$,
        null,
        impl.onHandshakeFailed.bind(impl));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }
};

/**
 *  @export
 */
network.mojom.QuicTransportHandshakeClient = class {
  /**
   * @return {!string}
   */
  static get $interfaceName() {
    return "network.mojom.QuicTransportHandshakeClient";
  }

  /**
   * Returns a remote for this interface which sends messages to the browser.
   * The browser must have an interface request binder registered for this
   * interface and accessible to the calling document's frame.
   *
   * @return {!network.mojom.QuicTransportHandshakeClientRemote}
   * @export
   */
  static getRemote() {
    let remote = new network.mojom.QuicTransportHandshakeClientRemote;
    Mojo.bindInterface(this.$interfaceName,
                       remote.$.bindNewPipeAndPassReceiver().handle);
    return remote;
  }
};


/**
 * An object which receives request messages for the QuicTransportHandshakeClient
 * mojom interface and dispatches them as callbacks. One callback receiver exists
 * on this object for each message defined in the mojom interface, and each
 * receiver can have any number of listeners added to it.
 *
 * @export
 */
network.mojom.QuicTransportHandshakeClientCallbackRouter = class {
  constructor() {
    this.helper_internal_ = new mojo.internal.interfaceSupport.InterfaceReceiverHelperInternal(
      network.mojom.QuicTransportHandshakeClientRemote);

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceReceiverHelper<!network.mojom.QuicTransportHandshakeClientRemote>}
     */
    this.$ = new mojo.internal.interfaceSupport.InterfaceReceiverHelper(this.helper_internal_);

    this.router_ = new mojo.internal.interfaceSupport.CallbackRouter;

    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onConnectionEstablished =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        473142065,
        network.mojom.QuicTransportHandshakeClient_OnConnectionEstablished_ParamsSpec.$,
        null,
        this.onConnectionEstablished.createReceiverHandler(false /* expectsResponse */));
    /**
     * @public {!mojo.internal.interfaceSupport.InterfaceCallbackReceiver}
     */
    this.onHandshakeFailed =
        new mojo.internal.interfaceSupport.InterfaceCallbackReceiver(
            this.router_);

    this.helper_internal_.registerHandler(
        161088508,
        network.mojom.QuicTransportHandshakeClient_OnHandshakeFailed_ParamsSpec.$,
        null,
        this.onHandshakeFailed.createReceiverHandler(false /* expectsResponse */));
    /** @public {!mojo.internal.interfaceSupport.ConnectionErrorEventRouter} */
    this.onConnectionError = this.helper_internal_.getConnectionErrorEventRouter();
  }

  /**
   * @param {number} id An ID returned by a prior call to addListener.
   * @return {boolean} True iff the identified listener was found and removed.
   * @export
   */
  removeListener(id) {
    return this.router_.removeListener(id);
  }
};



/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransportErrorSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransportCertificateFingerprintSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransport_SendDatagram_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransport_SendDatagram_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransport_CreateStream_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransport_CreateStream_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransport_AcceptBidirectionalStream_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransport_AcceptBidirectionalStream_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransport_AcceptUnidirectionalStream_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransport_AcceptUnidirectionalStream_ResponseParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransport_SendFin_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransport_AbortStream_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransportClient_OnDatagramReceived_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransportClient_OnIncomingStreamClosed_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransportHandshakeClient_OnConnectionEstablished_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };


/**
 * @const { {$:!mojo.internal.MojomType}}
 * @export
 */
network.mojom.QuicTransportHandshakeClient_OnHandshakeFailed_ParamsSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    network.mojom.QuicTransportErrorSpec.$,
    'QuicTransportError',
    24,
    [
      mojo.internal.StructField(
        'netError', 0,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'quicError', 4,
        0,
        mojo.internal.Int32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'details', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'safeToReportDetails', 16,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransportCertificateFingerprintSpec.$,
    'QuicTransportCertificateFingerprint',
    16,
    [
      mojo.internal.StructField(
        'algorithm', 0,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'fingerprint', 8,
        0,
        mojo.internal.String,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransport_SendDatagram_ParamsSpec.$,
    'QuicTransport_SendDatagram_Params',
    8,
    [
      mojo.internal.StructField(
        'data', 0,
        0,
        mojoBase.mojom.ReadOnlyBufferSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransport_SendDatagram_ResponseParamsSpec.$,
    'QuicTransport_SendDatagram_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'result', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransport_CreateStream_ParamsSpec.$,
    'QuicTransport_CreateStream_Params',
    8,
    [
      mojo.internal.StructField(
        'readable', 0,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'writable', 4,
        0,
        mojo.internal.Handle,
        null,
        true /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransport_CreateStream_ResponseParamsSpec.$,
    'QuicTransport_CreateStream_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'succeeded', 0,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
      mojo.internal.StructField(
        'streamId', 4,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransport_AcceptBidirectionalStream_ParamsSpec.$,
    'QuicTransport_AcceptBidirectionalStream_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransport_AcceptBidirectionalStream_ResponseParamsSpec.$,
    'QuicTransport_AcceptBidirectionalStream_ResponseParams',
    16,
    [
      mojo.internal.StructField(
        'streamId', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'readable', 4,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'writable', 8,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransport_AcceptUnidirectionalStream_ParamsSpec.$,
    'QuicTransport_AcceptUnidirectionalStream_Params',
    0,
    [
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransport_AcceptUnidirectionalStream_ResponseParamsSpec.$,
    'QuicTransport_AcceptUnidirectionalStream_ResponseParams',
    8,
    [
      mojo.internal.StructField(
        'streamId', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'readable', 4,
        0,
        mojo.internal.Handle,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransport_SendFin_ParamsSpec.$,
    'QuicTransport_SendFin_Params',
    8,
    [
      mojo.internal.StructField(
        'streamId', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransport_AbortStream_ParamsSpec.$,
    'QuicTransport_AbortStream_Params',
    16,
    [
      mojo.internal.StructField(
        'streamId', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'code', 8,
        0,
        mojo.internal.Uint64,
        0,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransportClient_OnDatagramReceived_ParamsSpec.$,
    'QuicTransportClient_OnDatagramReceived_Params',
    8,
    [
      mojo.internal.StructField(
        'data', 0,
        0,
        mojoBase.mojom.ReadOnlyBufferSpec.$,
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransportClient_OnIncomingStreamClosed_ParamsSpec.$,
    'QuicTransportClient_OnIncomingStreamClosed_Params',
    8,
    [
      mojo.internal.StructField(
        'streamId', 0,
        0,
        mojo.internal.Uint32,
        0,
        false /* nullable */),
      mojo.internal.StructField(
        'finReceived', 4,
        0,
        mojo.internal.Bool,
        false,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransportHandshakeClient_OnConnectionEstablished_ParamsSpec.$,
    'QuicTransportHandshakeClient_OnConnectionEstablished_Params',
    16,
    [
      mojo.internal.StructField(
        'transport', 0,
        0,
        mojo.internal.InterfaceProxy(network.mojom.QuicTransportRemote),
        null,
        false /* nullable */),
      mojo.internal.StructField(
        'client', 8,
        0,
        mojo.internal.InterfaceRequest(network.mojom.QuicTransportClientPendingReceiver),
        null,
        false /* nullable */),
    ]);







mojo.internal.Struct(
    network.mojom.QuicTransportHandshakeClient_OnHandshakeFailed_ParamsSpec.$,
    'QuicTransportHandshakeClient_OnHandshakeFailed_Params',
    8,
    [
      mojo.internal.StructField(
        'error', 0,
        0,
        network.mojom.QuicTransportErrorSpec.$,
        null,
        true /* nullable */),
    ]);





