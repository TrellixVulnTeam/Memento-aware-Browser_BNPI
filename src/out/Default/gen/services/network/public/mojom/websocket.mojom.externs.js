// services/network/public/mojom/websocket.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
network.mojom.WebSocketMessageType = {};
network.mojom.WebSocketMessageType.CONTINUATION;
network.mojom.WebSocketMessageType.TEXT;
network.mojom.WebSocketMessageType.BINARY;
network.mojom.WebSocketMessageType.LAST;
goog.provide('network.mojom.AuthenticationHandler');
goog.provide('network.mojom.AuthenticationHandlerImpl');
goog.provide('network.mojom.AuthenticationHandlerPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.AuthenticationHandler;

/** @interface */
network.mojom.AuthenticationHandlerImpl = class {
  /**
   * @param { !network.mojom.AuthChallengeInfo } info
   * @param { !network.mojom.HttpResponseHeaders } headers
   * @param { !network.mojom.IPEndPoint } remoteEndpoint
   * @return {Promise}
   */
  onAuthRequired(info, headers, remoteEndpoint) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.AuthenticationHandlerImpl }
 */
network.mojom.AuthenticationHandlerPtr = class {
  /**
   * @param { !network.mojom.AuthChallengeInfo } info
   * @param { !network.mojom.HttpResponseHeaders } headers
   * @param { !network.mojom.IPEndPoint } remoteEndpoint
   * @return {Promise}
   */
  onAuthRequired(info, headers, remoteEndpoint) {}
};

goog.provide('network.mojom.WebSocketHandshakeClient');
goog.provide('network.mojom.WebSocketHandshakeClientImpl');
goog.provide('network.mojom.WebSocketHandshakeClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.WebSocketHandshakeClient;

/** @interface */
network.mojom.WebSocketHandshakeClientImpl = class {
  /**
   * @param { !network.mojom.WebSocketHandshakeRequest } request
   */
  onOpeningHandshakeStarted(request) {}
  /**
   * @param { !network.mojom.WebSocketPtr } socket
   * @param { !mojo.InterfaceRequest } clientReceiver
   * @param { !network.mojom.WebSocketHandshakeResponse } response
   * @param { !MojoHandle } readable
   * @param { !MojoHandle } writable
   */
  onConnectionEstablished(socket, clientReceiver, response, readable, writable) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.WebSocketHandshakeClientImpl }
 */
network.mojom.WebSocketHandshakeClientPtr = class {
  /**
   * @param { !network.mojom.WebSocketHandshakeRequest } request
   */
  onOpeningHandshakeStarted(request) {}
  /**
   * @param { !network.mojom.WebSocketPtr } socket
   * @param { !mojo.InterfaceRequest } clientReceiver
   * @param { !network.mojom.WebSocketHandshakeResponse } response
   * @param { !MojoHandle } readable
   * @param { !MojoHandle } writable
   */
  onConnectionEstablished(socket, clientReceiver, response, readable, writable) {}
};

goog.provide('network.mojom.WebSocketClient');
goog.provide('network.mojom.WebSocketClientImpl');
goog.provide('network.mojom.WebSocketClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.WebSocketClient;

/** @interface */
network.mojom.WebSocketClientImpl = class {
  /**
   * @param { !boolean } fin
   * @param { !network.mojom.WebSocketMessageType } type
   * @param { !number } dataLength
   */
  onDataFrame(fin, type, dataLength) {}
  /**
   * @param { !boolean } wasClean
   * @param { !number } code
   * @param { !string } reason
   */
  onDropChannel(wasClean, code, reason) {}
  /**
   */
  onClosingHandshake() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.WebSocketClientImpl }
 */
network.mojom.WebSocketClientPtr = class {
  /**
   * @param { !boolean } fin
   * @param { !network.mojom.WebSocketMessageType } type
   * @param { !number } dataLength
   */
  onDataFrame(fin, type, dataLength) {}
  /**
   * @param { !boolean } wasClean
   * @param { !number } code
   * @param { !string } reason
   */
  onDropChannel(wasClean, code, reason) {}
  /**
   */
  onClosingHandshake() {}
};

goog.provide('network.mojom.WebSocket');
goog.provide('network.mojom.WebSocketImpl');
goog.provide('network.mojom.WebSocketPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.WebSocket;

/** @interface */
network.mojom.WebSocketImpl = class {
  /**
   * @param { !network.mojom.WebSocketMessageType } type
   * @param { !number } dataLength
   */
  sendMessage(type, dataLength) {}
  /**
   */
  startReceiving() {}
  /**
   * @param { !number } code
   * @param { !string } reason
   */
  startClosingHandshake(code, reason) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.WebSocketImpl }
 */
network.mojom.WebSocketPtr = class {
  /**
   * @param { !network.mojom.WebSocketMessageType } type
   * @param { !number } dataLength
   */
  sendMessage(type, dataLength) {}
  /**
   */
  startReceiving() {}
  /**
   * @param { !number } code
   * @param { !string } reason
   */
  startClosingHandshake(code, reason) {}
};

goog.provide('network.mojom.HttpHeader');

network.mojom.HttpHeader = class {
  constructor() {
    /** @type { !string } */
    this.name;
    /** @type { !string } */
    this.value;
  }
};

goog.provide('network.mojom.WebSocketHandshakeRequest');

network.mojom.WebSocketHandshakeRequest = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !Array<network.mojom.HttpHeader> } */
    this.headers;
    /** @type { !string } */
    this.headersText;
  }
};

goog.provide('network.mojom.WebSocketHandshakeResponse');

network.mojom.WebSocketHandshakeResponse = class {
  constructor() {
    /** @type { !url.mojom.Url } */
    this.url;
    /** @type { !network.mojom.HttpVersion } */
    this.httpVersion;
    /** @type { !number } */
    this.statusCode;
    /** @type { !string } */
    this.statusText;
    /** @type { !network.mojom.IPEndPoint } */
    this.remoteEndpoint;
    /** @type { !Array<network.mojom.HttpHeader> } */
    this.headers;
    /** @type { !string } */
    this.headersText;
    /** @type { !string } */
    this.selectedProtocol;
    /** @type { !string } */
    this.extensions;
  }
};

goog.provide('network.mojom.AuthenticationHandler_OnAuthRequired_Params');

network.mojom.AuthenticationHandler_OnAuthRequired_Params = class {
  constructor() {
    /** @type { !network.mojom.AuthChallengeInfo } */
    this.info;
    /** @type { !network.mojom.HttpResponseHeaders } */
    this.headers;
    /** @type { !network.mojom.IPEndPoint } */
    this.remoteEndpoint;
  }
};

goog.provide('network.mojom.AuthenticationHandler_OnAuthRequired_ResponseParams');

network.mojom.AuthenticationHandler_OnAuthRequired_ResponseParams = class {
  constructor() {
    /** @type { network.mojom.AuthCredentials } */
    this.credentials;
  }
};

goog.provide('network.mojom.WebSocketHandshakeClient_OnOpeningHandshakeStarted_Params');

network.mojom.WebSocketHandshakeClient_OnOpeningHandshakeStarted_Params = class {
  constructor() {
    /** @type { !network.mojom.WebSocketHandshakeRequest } */
    this.request;
  }
};

goog.provide('network.mojom.WebSocketHandshakeClient_OnConnectionEstablished_Params');

network.mojom.WebSocketHandshakeClient_OnConnectionEstablished_Params = class {
  constructor() {
    /** @type { !network.mojom.WebSocketPtr } */
    this.socket;
    /** @type { !mojo.InterfaceRequest } */
    this.clientReceiver;
    /** @type { !MojoHandle } */
    this.readable;
    /** @type { !network.mojom.WebSocketHandshakeResponse } */
    this.response;
    /** @type { !MojoHandle } */
    this.writable;
  }
};

goog.provide('network.mojom.WebSocketClient_OnDataFrame_Params');

network.mojom.WebSocketClient_OnDataFrame_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.fin;
    /** @type { !network.mojom.WebSocketMessageType } */
    this.type;
    /** @type { !number } */
    this.dataLength;
  }
};

goog.provide('network.mojom.WebSocketClient_OnDropChannel_Params');

network.mojom.WebSocketClient_OnDropChannel_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.wasClean;
    /** @type { !number } */
    this.code;
    /** @type { !string } */
    this.reason;
  }
};

goog.provide('network.mojom.WebSocketClient_OnClosingHandshake_Params');

network.mojom.WebSocketClient_OnClosingHandshake_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.WebSocket_SendMessage_Params');

network.mojom.WebSocket_SendMessage_Params = class {
  constructor() {
    /** @type { !network.mojom.WebSocketMessageType } */
    this.type;
    /** @type { !number } */
    this.dataLength;
  }
};

goog.provide('network.mojom.WebSocket_StartReceiving_Params');

network.mojom.WebSocket_StartReceiving_Params = class {
  constructor() {
  }
};

goog.provide('network.mojom.WebSocket_StartClosingHandshake_Params');

network.mojom.WebSocket_StartClosingHandshake_Params = class {
  constructor() {
    /** @type { !number } */
    this.code;
    /** @type { !string } */
    this.reason;
  }
};
