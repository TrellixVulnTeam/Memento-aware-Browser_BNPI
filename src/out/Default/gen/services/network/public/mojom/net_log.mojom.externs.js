// services/network/public/mojom/net_log.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
network.mojom.NetLogCaptureMode = {};
network.mojom.NetLogCaptureMode.DEFAULT;
network.mojom.NetLogCaptureMode.INCLUDE_PRIVACY_INFO;
network.mojom.NetLogCaptureMode.EVERYTHING;
/** @enum {number} */
network.mojom.NetLogEventPhase = {};
network.mojom.NetLogEventPhase.BEGIN;
network.mojom.NetLogEventPhase.END;
network.mojom.NetLogEventPhase.NONE;
goog.provide('network.mojom.NetLogExporter');
goog.provide('network.mojom.NetLogExporterImpl');
goog.provide('network.mojom.NetLogExporterPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.NetLogExporter;

/** @interface */
network.mojom.NetLogExporterImpl = class {
  /**
   * @param { !mojoBase.mojom.File } destination
   * @param { !mojoBase.mojom.DictionaryValue } extraConstants
   * @param { !network.mojom.NetLogCaptureMode } captureMode
   * @param { !number } maxFileSize
   * @return {Promise}
   */
  start(destination, extraConstants, captureMode, maxFileSize) {}
  /**
   * @param { !mojoBase.mojom.DictionaryValue } polledValues
   * @return {Promise}
   */
  stop(polledValues) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.NetLogExporterImpl }
 */
network.mojom.NetLogExporterPtr = class {
  /**
   * @param { !mojoBase.mojom.File } destination
   * @param { !mojoBase.mojom.DictionaryValue } extraConstants
   * @param { !network.mojom.NetLogCaptureMode } captureMode
   * @param { !number } maxFileSize
   * @return {Promise}
   */
  start(destination, extraConstants, captureMode, maxFileSize) {}
  /**
   * @param { !mojoBase.mojom.DictionaryValue } polledValues
   * @return {Promise}
   */
  stop(polledValues) {}
};

goog.provide('network.mojom.NetLogProxySource');
goog.provide('network.mojom.NetLogProxySourceImpl');
goog.provide('network.mojom.NetLogProxySourcePtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.NetLogProxySource;

/** @interface */
network.mojom.NetLogProxySourceImpl = class {
  /**
   * @param { !number } modes
   */
  updateCaptureModes(modes) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.NetLogProxySourceImpl }
 */
network.mojom.NetLogProxySourcePtr = class {
  /**
   * @param { !number } modes
   */
  updateCaptureModes(modes) {}
};

goog.provide('network.mojom.NetLogProxySink');
goog.provide('network.mojom.NetLogProxySinkImpl');
goog.provide('network.mojom.NetLogProxySinkPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
network.mojom.NetLogProxySink;

/** @interface */
network.mojom.NetLogProxySinkImpl = class {
  /**
   * @param { !number } type
   * @param { !number } sourceType
   * @param { !number } sourceId
   * @param { !mojoBase.mojom.TimeTicks } sourceStartTime
   * @param { !network.mojom.NetLogEventPhase } phase
   * @param { !mojoBase.mojom.TimeTicks } time
   * @param { !Object } params
   */
  addEntry(type, sourceType, sourceId, sourceStartTime, phase, time, params) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { network.mojom.NetLogProxySinkImpl }
 */
network.mojom.NetLogProxySinkPtr = class {
  /**
   * @param { !number } type
   * @param { !number } sourceType
   * @param { !number } sourceId
   * @param { !mojoBase.mojom.TimeTicks } sourceStartTime
   * @param { !network.mojom.NetLogEventPhase } phase
   * @param { !mojoBase.mojom.TimeTicks } time
   * @param { !Object } params
   */
  addEntry(type, sourceType, sourceId, sourceStartTime, phase, time, params) {}
};

goog.provide('network.mojom.NetLogExporter_Start_Params');

network.mojom.NetLogExporter_Start_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.File } */
    this.destination;
    /** @type { !mojoBase.mojom.DictionaryValue } */
    this.extraConstants;
    /** @type { !network.mojom.NetLogCaptureMode } */
    this.captureMode;
    /** @type { !number } */
    this.maxFileSize;
  }
};

goog.provide('network.mojom.NetLogExporter_Start_ResponseParams');

network.mojom.NetLogExporter_Start_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.netError;
  }
};

goog.provide('network.mojom.NetLogExporter_Stop_Params');

network.mojom.NetLogExporter_Stop_Params = class {
  constructor() {
    /** @type { !mojoBase.mojom.DictionaryValue } */
    this.polledValues;
  }
};

goog.provide('network.mojom.NetLogExporter_Stop_ResponseParams');

network.mojom.NetLogExporter_Stop_ResponseParams = class {
  constructor() {
    /** @type { !number } */
    this.netError;
  }
};

goog.provide('network.mojom.NetLogProxySource_UpdateCaptureModes_Params');

network.mojom.NetLogProxySource_UpdateCaptureModes_Params = class {
  constructor() {
    /** @type { !number } */
    this.modes;
  }
};

goog.provide('network.mojom.NetLogProxySink_AddEntry_Params');

network.mojom.NetLogProxySink_AddEntry_Params = class {
  constructor() {
    /** @type { !number } */
    this.type;
    /** @type { !number } */
    this.sourceType;
    /** @type { !number } */
    this.sourceId;
    /** @type { !network.mojom.NetLogEventPhase } */
    this.phase;
    /** @type { !mojoBase.mojom.TimeTicks } */
    this.sourceStartTime;
    /** @type { !mojoBase.mojom.TimeTicks } */
    this.time;
    /** @type { !Object } */
    this.params;
  }
};
