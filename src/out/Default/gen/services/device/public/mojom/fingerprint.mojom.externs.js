// services/device/public/mojom/fingerprint.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
device.mojom.ScanResult = {};
device.mojom.ScanResult.SUCCESS;
device.mojom.ScanResult.PARTIAL;
device.mojom.ScanResult.INSUFFICIENT;
device.mojom.ScanResult.SENSOR_DIRTY;
device.mojom.ScanResult.TOO_SLOW;
device.mojom.ScanResult.TOO_FAST;
device.mojom.ScanResult.IMMOBILE;
/** @enum {number} */
device.mojom.BiometricType = {};
device.mojom.BiometricType.UNKNOWN;
device.mojom.BiometricType.FINGERPRINT;
goog.provide('device.mojom.FingerprintObserver');
goog.provide('device.mojom.FingerprintObserverImpl');
goog.provide('device.mojom.FingerprintObserverPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.FingerprintObserver;

/** @interface */
device.mojom.FingerprintObserverImpl = class {
  /**
   */
  onRestarted() {}
  /**
   * @param { !device.mojom.ScanResult } scanResult
   * @param { !boolean } isComplete
   * @param { !number } percentComplete
   */
  onEnrollScanDone(scanResult, isComplete, percentComplete) {}
  /**
   * @param { !device.mojom.ScanResult } scanResult
   * @param { !Map<string, Array<string>> } matches
   */
  onAuthScanDone(scanResult, matches) {}
  /**
   */
  onSessionFailed() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.FingerprintObserverImpl }
 */
device.mojom.FingerprintObserverPtr = class {
  /**
   */
  onRestarted() {}
  /**
   * @param { !device.mojom.ScanResult } scanResult
   * @param { !boolean } isComplete
   * @param { !number } percentComplete
   */
  onEnrollScanDone(scanResult, isComplete, percentComplete) {}
  /**
   * @param { !device.mojom.ScanResult } scanResult
   * @param { !Map<string, Array<string>> } matches
   */
  onAuthScanDone(scanResult, matches) {}
  /**
   */
  onSessionFailed() {}
};

goog.provide('device.mojom.Fingerprint');
goog.provide('device.mojom.FingerprintImpl');
goog.provide('device.mojom.FingerprintPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.Fingerprint;

/** @interface */
device.mojom.FingerprintImpl = class {
  /**
   * @param { !string } userId
   * @return {Promise}
   */
  getRecordsForUser(userId) {}
  /**
   * @param { !string } userId
   * @param { !string } label
   */
  startEnrollSession(userId, label) {}
  /**
   * @return {Promise}
   */
  cancelCurrentEnrollSession() {}
  /**
   * @param { !string } recordPath
   * @return {Promise}
   */
  requestRecordLabel(recordPath) {}
  /**
   * @param { !string } recordPath
   * @param { !string } newLabel
   * @return {Promise}
   */
  setRecordLabel(recordPath, newLabel) {}
  /**
   * @param { !string } recordPath
   * @return {Promise}
   */
  removeRecord(recordPath) {}
  /**
   */
  startAuthSession() {}
  /**
   * @return {Promise}
   */
  endCurrentAuthSession() {}
  /**
   * @return {Promise}
   */
  destroyAllRecords() {}
  /**
   * @param { !device.mojom.FingerprintObserverPtr } observer
   */
  addFingerprintObserver(observer) {}
  /**
   * @return {Promise}
   */
  requestType() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.FingerprintImpl }
 */
device.mojom.FingerprintPtr = class {
  /**
   * @param { !string } userId
   * @return {Promise}
   */
  getRecordsForUser(userId) {}
  /**
   * @param { !string } userId
   * @param { !string } label
   */
  startEnrollSession(userId, label) {}
  /**
   * @return {Promise}
   */
  cancelCurrentEnrollSession() {}
  /**
   * @param { !string } recordPath
   * @return {Promise}
   */
  requestRecordLabel(recordPath) {}
  /**
   * @param { !string } recordPath
   * @param { !string } newLabel
   * @return {Promise}
   */
  setRecordLabel(recordPath, newLabel) {}
  /**
   * @param { !string } recordPath
   * @return {Promise}
   */
  removeRecord(recordPath) {}
  /**
   */
  startAuthSession() {}
  /**
   * @return {Promise}
   */
  endCurrentAuthSession() {}
  /**
   * @return {Promise}
   */
  destroyAllRecords() {}
  /**
   * @param { !device.mojom.FingerprintObserverPtr } observer
   */
  addFingerprintObserver(observer) {}
  /**
   * @return {Promise}
   */
  requestType() {}
};

goog.provide('device.mojom.FingerprintObserver_OnRestarted_Params');

device.mojom.FingerprintObserver_OnRestarted_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.FingerprintObserver_OnEnrollScanDone_Params');

device.mojom.FingerprintObserver_OnEnrollScanDone_Params = class {
  constructor() {
    /** @type { !device.mojom.ScanResult } */
    this.scanResult;
    /** @type { !boolean } */
    this.isComplete;
    /** @type { !number } */
    this.percentComplete;
  }
};

goog.provide('device.mojom.FingerprintObserver_OnAuthScanDone_Params');

device.mojom.FingerprintObserver_OnAuthScanDone_Params = class {
  constructor() {
    /** @type { !device.mojom.ScanResult } */
    this.scanResult;
    /** @type { !Map<string, Array<string>> } */
    this.matches;
  }
};

goog.provide('device.mojom.FingerprintObserver_OnSessionFailed_Params');

device.mojom.FingerprintObserver_OnSessionFailed_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.Fingerprint_GetRecordsForUser_Params');

device.mojom.Fingerprint_GetRecordsForUser_Params = class {
  constructor() {
    /** @type { !string } */
    this.userId;
  }
};

goog.provide('device.mojom.Fingerprint_GetRecordsForUser_ResponseParams');

device.mojom.Fingerprint_GetRecordsForUser_ResponseParams = class {
  constructor() {
    /** @type { !Map<string, string> } */
    this.records;
  }
};

goog.provide('device.mojom.Fingerprint_StartEnrollSession_Params');

device.mojom.Fingerprint_StartEnrollSession_Params = class {
  constructor() {
    /** @type { !string } */
    this.userId;
    /** @type { !string } */
    this.label;
  }
};

goog.provide('device.mojom.Fingerprint_CancelCurrentEnrollSession_Params');

device.mojom.Fingerprint_CancelCurrentEnrollSession_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.Fingerprint_CancelCurrentEnrollSession_ResponseParams');

device.mojom.Fingerprint_CancelCurrentEnrollSession_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('device.mojom.Fingerprint_RequestRecordLabel_Params');

device.mojom.Fingerprint_RequestRecordLabel_Params = class {
  constructor() {
    /** @type { !string } */
    this.recordPath;
  }
};

goog.provide('device.mojom.Fingerprint_RequestRecordLabel_ResponseParams');

device.mojom.Fingerprint_RequestRecordLabel_ResponseParams = class {
  constructor() {
    /** @type { !string } */
    this.label;
  }
};

goog.provide('device.mojom.Fingerprint_SetRecordLabel_Params');

device.mojom.Fingerprint_SetRecordLabel_Params = class {
  constructor() {
    /** @type { !string } */
    this.recordPath;
    /** @type { !string } */
    this.newLabel;
  }
};

goog.provide('device.mojom.Fingerprint_SetRecordLabel_ResponseParams');

device.mojom.Fingerprint_SetRecordLabel_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('device.mojom.Fingerprint_RemoveRecord_Params');

device.mojom.Fingerprint_RemoveRecord_Params = class {
  constructor() {
    /** @type { !string } */
    this.recordPath;
  }
};

goog.provide('device.mojom.Fingerprint_RemoveRecord_ResponseParams');

device.mojom.Fingerprint_RemoveRecord_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('device.mojom.Fingerprint_StartAuthSession_Params');

device.mojom.Fingerprint_StartAuthSession_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.Fingerprint_EndCurrentAuthSession_Params');

device.mojom.Fingerprint_EndCurrentAuthSession_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.Fingerprint_EndCurrentAuthSession_ResponseParams');

device.mojom.Fingerprint_EndCurrentAuthSession_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('device.mojom.Fingerprint_DestroyAllRecords_Params');

device.mojom.Fingerprint_DestroyAllRecords_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.Fingerprint_DestroyAllRecords_ResponseParams');

device.mojom.Fingerprint_DestroyAllRecords_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.success;
  }
};

goog.provide('device.mojom.Fingerprint_AddFingerprintObserver_Params');

device.mojom.Fingerprint_AddFingerprintObserver_Params = class {
  constructor() {
    /** @type { !device.mojom.FingerprintObserverPtr } */
    this.observer;
  }
};

goog.provide('device.mojom.Fingerprint_RequestType_Params');

device.mojom.Fingerprint_RequestType_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.Fingerprint_RequestType_ResponseParams');

device.mojom.Fingerprint_RequestType_ResponseParams = class {
  constructor() {
    /** @type { !device.mojom.BiometricType } */
    this.type;
  }
};
