// services/device/public/mojom/bluetooth_system.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



goog.provide('device.mojom.BluetoothSystemFactory');
goog.provide('device.mojom.BluetoothSystemFactoryImpl');
goog.provide('device.mojom.BluetoothSystemFactoryPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.BluetoothSystemFactory;

/** @interface */
device.mojom.BluetoothSystemFactoryImpl = class {
  /**
   * @param { !mojo.InterfaceRequest } system
   * @param { !device.mojom.BluetoothSystemClientPtr } systemClient
   */
  create(system, systemClient) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.BluetoothSystemFactoryImpl }
 */
device.mojom.BluetoothSystemFactoryPtr = class {
  /**
   * @param { !mojo.InterfaceRequest } system
   * @param { !device.mojom.BluetoothSystemClientPtr } systemClient
   */
  create(system, systemClient) {}
};

goog.provide('device.mojom.BluetoothSystem');
goog.provide('device.mojom.BluetoothSystemImpl');
goog.provide('device.mojom.BluetoothSystemPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.BluetoothSystem;

/** @interface */
device.mojom.BluetoothSystemImpl = class {
  /**
   * @return {Promise}
   */
  getState() {}
  /**
   * @param { !boolean } powered
   * @return {Promise}
   */
  setPowered(powered) {}
  /**
   * @return {Promise}
   */
  getScanState() {}
  /**
   * @return {Promise}
   */
  startScan() {}
  /**
   * @return {Promise}
   */
  stopScan() {}
  /**
   * @return {Promise}
   */
  getAvailableDevices() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.BluetoothSystemImpl }
 */
device.mojom.BluetoothSystemPtr = class {
  /**
   * @return {Promise}
   */
  getState() {}
  /**
   * @param { !boolean } powered
   * @return {Promise}
   */
  setPowered(powered) {}
  /**
   * @return {Promise}
   */
  getScanState() {}
  /**
   * @return {Promise}
   */
  startScan() {}
  /**
   * @return {Promise}
   */
  stopScan() {}
  /**
   * @return {Promise}
   */
  getAvailableDevices() {}
};

goog.provide('device.mojom.BluetoothSystemClient');
goog.provide('device.mojom.BluetoothSystemClientImpl');
goog.provide('device.mojom.BluetoothSystemClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.BluetoothSystemClient;

/** @interface */
device.mojom.BluetoothSystemClientImpl = class {
  /**
   * @param { !device.mojom.State } newState
   */
  onStateChanged(newState) {}
  /**
   * @param { !device.mojom.ScanState } newState
   */
  onScanStateChanged(newState) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.BluetoothSystemClientImpl }
 */
device.mojom.BluetoothSystemClientPtr = class {
  /**
   * @param { !device.mojom.State } newState
   */
  onStateChanged(newState) {}
  /**
   * @param { !device.mojom.ScanState } newState
   */
  onScanStateChanged(newState) {}
};

goog.provide('device.mojom.BluetoothAddress');

device.mojom.BluetoothAddress = class {
  constructor() {
    /** @type { !Array<number> } */
    this.address;
  }
};

goog.provide('device.mojom.BluetoothDeviceBatteryInfo');

device.mojom.BluetoothDeviceBatteryInfo = class {
  constructor() {
    /** @type { !number } */
    this.batteryPercentage;
  }
};

goog.provide('device.mojom.BluetoothDeviceInfo');

device.mojom.BluetoothDeviceInfo = class {
  constructor() {
    /** @type { !device.mojom.BluetoothAddress } */
    this.address;
    /** @type { string } */
    this.name;
    /** @type { !device.mojom.ConnectionState } */
    this.connectionState;
    /** @type { !boolean } */
    this.isPaired;
    /** @type { !device.mojom.DeviceType } */
    this.deviceType;
    /** @type { device.mojom.BluetoothDeviceBatteryInfo } */
    this.batteryInfo;
  }
};

goog.provide('device.mojom.BluetoothSystemFactory_Create_Params');

device.mojom.BluetoothSystemFactory_Create_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.system;
    /** @type { !device.mojom.BluetoothSystemClientPtr } */
    this.systemClient;
  }
};

goog.provide('device.mojom.BluetoothSystem_GetState_Params');

device.mojom.BluetoothSystem_GetState_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.BluetoothSystem_GetState_ResponseParams');

device.mojom.BluetoothSystem_GetState_ResponseParams = class {
  constructor() {
    /** @type { !device.mojom.State } */
    this.state;
  }
};

goog.provide('device.mojom.BluetoothSystem_SetPowered_Params');

device.mojom.BluetoothSystem_SetPowered_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.powered;
  }
};

goog.provide('device.mojom.BluetoothSystem_SetPowered_ResponseParams');

device.mojom.BluetoothSystem_SetPowered_ResponseParams = class {
  constructor() {
    /** @type { !device.mojom.SetPoweredResult } */
    this.result;
  }
};

goog.provide('device.mojom.BluetoothSystem_GetScanState_Params');

device.mojom.BluetoothSystem_GetScanState_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.BluetoothSystem_GetScanState_ResponseParams');

device.mojom.BluetoothSystem_GetScanState_ResponseParams = class {
  constructor() {
    /** @type { !device.mojom.ScanState } */
    this.scanState;
  }
};

goog.provide('device.mojom.BluetoothSystem_StartScan_Params');

device.mojom.BluetoothSystem_StartScan_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.BluetoothSystem_StartScan_ResponseParams');

device.mojom.BluetoothSystem_StartScan_ResponseParams = class {
  constructor() {
    /** @type { !device.mojom.StartScanResult } */
    this.result;
  }
};

goog.provide('device.mojom.BluetoothSystem_StopScan_Params');

device.mojom.BluetoothSystem_StopScan_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.BluetoothSystem_StopScan_ResponseParams');

device.mojom.BluetoothSystem_StopScan_ResponseParams = class {
  constructor() {
    /** @type { !device.mojom.StopScanResult } */
    this.result;
  }
};

goog.provide('device.mojom.BluetoothSystem_GetAvailableDevices_Params');

device.mojom.BluetoothSystem_GetAvailableDevices_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.BluetoothSystem_GetAvailableDevices_ResponseParams');

device.mojom.BluetoothSystem_GetAvailableDevices_ResponseParams = class {
  constructor() {
    /** @type { !Array<device.mojom.BluetoothDeviceInfo> } */
    this.devices;
  }
};

goog.provide('device.mojom.BluetoothSystemClient_OnStateChanged_Params');

device.mojom.BluetoothSystemClient_OnStateChanged_Params = class {
  constructor() {
    /** @type { !device.mojom.State } */
    this.newState;
  }
};

goog.provide('device.mojom.BluetoothSystemClient_OnScanStateChanged_Params');

device.mojom.BluetoothSystemClient_OnScanStateChanged_Params = class {
  constructor() {
    /** @type { !device.mojom.ScanState } */
    this.newState;
  }
};
