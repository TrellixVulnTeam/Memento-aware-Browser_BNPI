// services/device/public/mojom/nfc.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
device.mojom.NDEFErrorType = {};
device.mojom.NDEFErrorType.NOT_ALLOWED;
device.mojom.NDEFErrorType.NOT_SUPPORTED;
device.mojom.NDEFErrorType.NOT_READABLE;
device.mojom.NDEFErrorType.NOT_FOUND;
device.mojom.NDEFErrorType.INVALID_MESSAGE;
device.mojom.NDEFErrorType.OPERATION_CANCELLED;
device.mojom.NDEFErrorType.CANNOT_CANCEL;
device.mojom.NDEFErrorType.IO_ERROR;
/** @enum {number} */
device.mojom.NDEFRecordTypeCategory = {};
device.mojom.NDEFRecordTypeCategory.kStandardized;
device.mojom.NDEFRecordTypeCategory.kExternal;
device.mojom.NDEFRecordTypeCategory.kLocal;
goog.provide('device.mojom.NFC');
goog.provide('device.mojom.NFCImpl');
goog.provide('device.mojom.NFCPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.NFC;

/** @interface */
device.mojom.NFCImpl = class {
  /**
   * @param { !device.mojom.NFCClientPtr } client
   */
  setClient(client) {}
  /**
   * @param { !device.mojom.NDEFMessage } message
   * @param { device.mojom.NDEFWriteOptions } options
   * @return {Promise}
   */
  push(message, options) {}
  /**
   * @return {Promise}
   */
  cancelPush() {}
  /**
   * @param { !device.mojom.NDEFScanOptions } options
   * @param { !number } id
   * @return {Promise}
   */
  watch(options, id) {}
  /**
   * @param { !number } id
   * @return {Promise}
   */
  cancelWatch(id) {}
  /**
   * @return {Promise}
   */
  cancelAllWatches() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.NFCImpl }
 */
device.mojom.NFCPtr = class {
  /**
   * @param { !device.mojom.NFCClientPtr } client
   */
  setClient(client) {}
  /**
   * @param { !device.mojom.NDEFMessage } message
   * @param { device.mojom.NDEFWriteOptions } options
   * @return {Promise}
   */
  push(message, options) {}
  /**
   * @return {Promise}
   */
  cancelPush() {}
  /**
   * @param { !device.mojom.NDEFScanOptions } options
   * @param { !number } id
   * @return {Promise}
   */
  watch(options, id) {}
  /**
   * @param { !number } id
   * @return {Promise}
   */
  cancelWatch(id) {}
  /**
   * @return {Promise}
   */
  cancelAllWatches() {}
};

goog.provide('device.mojom.NFCClient');
goog.provide('device.mojom.NFCClientImpl');
goog.provide('device.mojom.NFCClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.NFCClient;

/** @interface */
device.mojom.NFCClientImpl = class {
  /**
   * @param { !Array<number> } watchIds
   * @param { string } serialNumber
   * @param { !device.mojom.NDEFMessage } message
   */
  onWatch(watchIds, serialNumber, message) {}
  /**
   * @param { !device.mojom.NDEFError } error
   */
  onError(error) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.NFCClientImpl }
 */
device.mojom.NFCClientPtr = class {
  /**
   * @param { !Array<number> } watchIds
   * @param { string } serialNumber
   * @param { !device.mojom.NDEFMessage } message
   */
  onWatch(watchIds, serialNumber, message) {}
  /**
   * @param { !device.mojom.NDEFError } error
   */
  onError(error) {}
};

goog.provide('device.mojom.NDEFError');

device.mojom.NDEFError = class {
  constructor() {
    /** @type { !device.mojom.NDEFErrorType } */
    this.errorType;
    /** @type { !string } */
    this.errorMessage;
  }
};

goog.provide('device.mojom.NDEFRecord');

device.mojom.NDEFRecord = class {
  constructor() {
    /** @type { !device.mojom.NDEFRecordTypeCategory } */
    this.category;
    /** @type { !string } */
    this.recordType;
    /** @type { string } */
    this.mediaType;
    /** @type { string } */
    this.id;
    /** @type { string } */
    this.encoding;
    /** @type { string } */
    this.lang;
    /** @type { !Array<number> } */
    this.data;
    /** @type { device.mojom.NDEFMessage } */
    this.payloadMessage;
  }
};

goog.provide('device.mojom.NDEFMessage');

device.mojom.NDEFMessage = class {
  constructor() {
    /** @type { !Array<device.mojom.NDEFRecord> } */
    this.data;
  }
};

goog.provide('device.mojom.NDEFWriteOptions');

device.mojom.NDEFWriteOptions = class {
  constructor() {
    /** @type { !boolean } */
    this.ignoreRead;
    /** @type { !boolean } */
    this.overwrite;
  }
};

goog.provide('device.mojom.NDEFScanOptions');

device.mojom.NDEFScanOptions = class {
  constructor() {
    /** @type { string } */
    this.id;
    /** @type { string } */
    this.recordType;
    /** @type { string } */
    this.mediaType;
  }
};

goog.provide('device.mojom.NFC_SetClient_Params');

device.mojom.NFC_SetClient_Params = class {
  constructor() {
    /** @type { !device.mojom.NFCClientPtr } */
    this.client;
  }
};

goog.provide('device.mojom.NFC_Push_Params');

device.mojom.NFC_Push_Params = class {
  constructor() {
    /** @type { !device.mojom.NDEFMessage } */
    this.message;
    /** @type { device.mojom.NDEFWriteOptions } */
    this.options;
  }
};

goog.provide('device.mojom.NFC_Push_ResponseParams');

device.mojom.NFC_Push_ResponseParams = class {
  constructor() {
    /** @type { device.mojom.NDEFError } */
    this.error;
  }
};

goog.provide('device.mojom.NFC_CancelPush_Params');

device.mojom.NFC_CancelPush_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.NFC_CancelPush_ResponseParams');

device.mojom.NFC_CancelPush_ResponseParams = class {
  constructor() {
    /** @type { device.mojom.NDEFError } */
    this.error;
  }
};

goog.provide('device.mojom.NFC_Watch_Params');

device.mojom.NFC_Watch_Params = class {
  constructor() {
    /** @type { !device.mojom.NDEFScanOptions } */
    this.options;
    /** @type { !number } */
    this.id;
  }
};

goog.provide('device.mojom.NFC_Watch_ResponseParams');

device.mojom.NFC_Watch_ResponseParams = class {
  constructor() {
    /** @type { device.mojom.NDEFError } */
    this.error;
  }
};

goog.provide('device.mojom.NFC_CancelWatch_Params');

device.mojom.NFC_CancelWatch_Params = class {
  constructor() {
    /** @type { !number } */
    this.id;
  }
};

goog.provide('device.mojom.NFC_CancelWatch_ResponseParams');

device.mojom.NFC_CancelWatch_ResponseParams = class {
  constructor() {
    /** @type { device.mojom.NDEFError } */
    this.error;
  }
};

goog.provide('device.mojom.NFC_CancelAllWatches_Params');

device.mojom.NFC_CancelAllWatches_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.NFC_CancelAllWatches_ResponseParams');

device.mojom.NFC_CancelAllWatches_ResponseParams = class {
  constructor() {
    /** @type { device.mojom.NDEFError } */
    this.error;
  }
};

goog.provide('device.mojom.NFCClient_OnWatch_Params');

device.mojom.NFCClient_OnWatch_Params = class {
  constructor() {
    /** @type { !Array<number> } */
    this.watchIds;
    /** @type { string } */
    this.serialNumber;
    /** @type { !device.mojom.NDEFMessage } */
    this.message;
  }
};

goog.provide('device.mojom.NFCClient_OnError_Params');

device.mojom.NFCClient_OnError_Params = class {
  constructor() {
    /** @type { !device.mojom.NDEFError } */
    this.error;
  }
};
