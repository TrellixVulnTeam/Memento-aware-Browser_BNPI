// services/device/public/mojom/wake_lock.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
device.mojom.WakeLockType = {};
device.mojom.WakeLockType.kPreventAppSuspension;
device.mojom.WakeLockType.kPreventDisplaySleep;
device.mojom.WakeLockType.kPreventDisplaySleepAllowDimming;
/** @enum {number} */
device.mojom.WakeLockReason = {};
device.mojom.WakeLockReason.kAudioPlayback;
device.mojom.WakeLockReason.kVideoPlayback;
device.mojom.WakeLockReason.kOther;
goog.provide('device.mojom.WakeLock');
goog.provide('device.mojom.WakeLockImpl');
goog.provide('device.mojom.WakeLockPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.WakeLock;

/** @interface */
device.mojom.WakeLockImpl = class {
  /**
   */
  requestWakeLock() {}
  /**
   */
  cancelWakeLock() {}
  /**
   * @param { !mojo.InterfaceRequest } wakeLock
   */
  addClient(wakeLock) {}
  /**
   * @param { !device.mojom.WakeLockType } type
   * @return {Promise}
   */
  changeType(type) {}
  /**
   * @return {Promise}
   */
  hasWakeLockForTests() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.WakeLockImpl }
 */
device.mojom.WakeLockPtr = class {
  /**
   */
  requestWakeLock() {}
  /**
   */
  cancelWakeLock() {}
  /**
   * @param { !mojo.InterfaceRequest } wakeLock
   */
  addClient(wakeLock) {}
  /**
   * @param { !device.mojom.WakeLockType } type
   * @return {Promise}
   */
  changeType(type) {}
  /**
   * @return {Promise}
   */
  hasWakeLockForTests() {}
};

goog.provide('device.mojom.WakeLock_RequestWakeLock_Params');

device.mojom.WakeLock_RequestWakeLock_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.WakeLock_CancelWakeLock_Params');

device.mojom.WakeLock_CancelWakeLock_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.WakeLock_AddClient_Params');

device.mojom.WakeLock_AddClient_Params = class {
  constructor() {
    /** @type { !mojo.InterfaceRequest } */
    this.wakeLock;
  }
};

goog.provide('device.mojom.WakeLock_ChangeType_Params');

device.mojom.WakeLock_ChangeType_Params = class {
  constructor() {
    /** @type { !device.mojom.WakeLockType } */
    this.type;
  }
};

goog.provide('device.mojom.WakeLock_ChangeType_ResponseParams');

device.mojom.WakeLock_ChangeType_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.result;
  }
};

goog.provide('device.mojom.WakeLock_HasWakeLockForTests_Params');

device.mojom.WakeLock_HasWakeLockForTests_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.WakeLock_HasWakeLockForTests_ResponseParams');

device.mojom.WakeLock_HasWakeLockForTests_ResponseParams = class {
  constructor() {
    /** @type { !boolean } */
    this.result;
  }
};
