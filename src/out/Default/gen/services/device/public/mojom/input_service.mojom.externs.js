// services/device/public/mojom/input_service.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



/** @enum {number} */
device.mojom.InputDeviceSubsystem = {};
device.mojom.InputDeviceSubsystem.SUBSYSTEM_HID;
device.mojom.InputDeviceSubsystem.SUBSYSTEM_INPUT;
device.mojom.InputDeviceSubsystem.SUBSYSTEM_UNKNOWN;
/** @enum {number} */
device.mojom.InputDeviceType = {};
device.mojom.InputDeviceType.TYPE_BLUETOOTH;
device.mojom.InputDeviceType.TYPE_USB;
device.mojom.InputDeviceType.TYPE_SERIO;
device.mojom.InputDeviceType.TYPE_UNKNOWN;
goog.provide('device.mojom.InputDeviceManagerClient');
goog.provide('device.mojom.InputDeviceManagerClientImpl');
goog.provide('device.mojom.InputDeviceManagerClientPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.InputDeviceManagerClient;

/** @interface */
device.mojom.InputDeviceManagerClientImpl = class {
  /**
   * @param { !device.mojom.InputDeviceInfo } deviceInfo
   */
  inputDeviceAdded(deviceInfo) {}
  /**
   * @param { !string } id
   */
  inputDeviceRemoved(id) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.InputDeviceManagerClientImpl }
 */
device.mojom.InputDeviceManagerClientPtr = class {
  /**
   * @param { !device.mojom.InputDeviceInfo } deviceInfo
   */
  inputDeviceAdded(deviceInfo) {}
  /**
   * @param { !string } id
   */
  inputDeviceRemoved(id) {}
};

goog.provide('device.mojom.InputDeviceManager');
goog.provide('device.mojom.InputDeviceManagerImpl');
goog.provide('device.mojom.InputDeviceManagerPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.InputDeviceManager;

/** @interface */
device.mojom.InputDeviceManagerImpl = class {
  /**
   * @param { !mojo.AssociatedInterfacePtrInfo } client
   * @return {Promise}
   */
  getDevicesAndSetClient(client) {}
  /**
   * @return {Promise}
   */
  getDevices() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.InputDeviceManagerImpl }
 */
device.mojom.InputDeviceManagerPtr = class {
  /**
   * @param { !mojo.AssociatedInterfacePtrInfo } client
   * @return {Promise}
   */
  getDevicesAndSetClient(client) {}
  /**
   * @return {Promise}
   */
  getDevices() {}
};

goog.provide('device.mojom.InputDeviceInfo');

device.mojom.InputDeviceInfo = class {
  constructor() {
    /** @type { !string } */
    this.id;
    /** @type { !string } */
    this.name;
    /** @type { !device.mojom.InputDeviceSubsystem } */
    this.subsystem;
    /** @type { !device.mojom.InputDeviceType } */
    this.type;
    /** @type { !boolean } */
    this.isAccelerometer;
    /** @type { !boolean } */
    this.isJoystick;
    /** @type { !boolean } */
    this.isKey;
    /** @type { !boolean } */
    this.isKeyboard;
    /** @type { !boolean } */
    this.isMouse;
    /** @type { !boolean } */
    this.isTablet;
    /** @type { !boolean } */
    this.isTouchpad;
    /** @type { !boolean } */
    this.isTouchscreen;
  }
};

goog.provide('device.mojom.InputDeviceManagerClient_InputDeviceAdded_Params');

device.mojom.InputDeviceManagerClient_InputDeviceAdded_Params = class {
  constructor() {
    /** @type { !device.mojom.InputDeviceInfo } */
    this.deviceInfo;
  }
};

goog.provide('device.mojom.InputDeviceManagerClient_InputDeviceRemoved_Params');

device.mojom.InputDeviceManagerClient_InputDeviceRemoved_Params = class {
  constructor() {
    /** @type { !string } */
    this.id;
  }
};

goog.provide('device.mojom.InputDeviceManager_GetDevicesAndSetClient_Params');

device.mojom.InputDeviceManager_GetDevicesAndSetClient_Params = class {
  constructor() {
    /** @type { !mojo.AssociatedInterfacePtrInfo } */
    this.client;
  }
};

goog.provide('device.mojom.InputDeviceManager_GetDevicesAndSetClient_ResponseParams');

device.mojom.InputDeviceManager_GetDevicesAndSetClient_ResponseParams = class {
  constructor() {
    /** @type { !Array<device.mojom.InputDeviceInfo> } */
    this.devices;
  }
};

goog.provide('device.mojom.InputDeviceManager_GetDevices_Params');

device.mojom.InputDeviceManager_GetDevices_Params = class {
  constructor() {
  }
};

goog.provide('device.mojom.InputDeviceManager_GetDevices_ResponseParams');

device.mojom.InputDeviceManager_GetDevices_ResponseParams = class {
  constructor() {
    /** @type { !Array<device.mojom.InputDeviceInfo> } */
    this.devices;
  }
};
