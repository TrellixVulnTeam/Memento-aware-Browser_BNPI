// services/device/public/mojom/usb_manager.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



goog.provide('device.mojom.UsbDeviceManager');
goog.provide('device.mojom.UsbDeviceManagerImpl');
goog.provide('device.mojom.UsbDeviceManagerPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
device.mojom.UsbDeviceManager;

/** @interface */
device.mojom.UsbDeviceManagerImpl = class {
  /**
   * @param { !mojo.AssociatedInterfacePtrInfo } client
   * @return {Promise}
   */
  enumerateDevicesAndSetClient(client) {}
  /**
   * @param { device.mojom.UsbEnumerationOptions } options
   * @return {Promise}
   */
  getDevices(options) {}
  /**
   * @param { !string } guid
   * @param { !mojo.InterfaceRequest } deviceReceiver
   * @param { device.mojom.UsbDeviceClientPtr } deviceClient
   */
  getDevice(guid, deviceReceiver, deviceClient) {}
  /**
   * @param { !mojo.AssociatedInterfacePtrInfo } client
   */
  setClient(client) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { device.mojom.UsbDeviceManagerImpl }
 */
device.mojom.UsbDeviceManagerPtr = class {
  /**
   * @param { !mojo.AssociatedInterfacePtrInfo } client
   * @return {Promise}
   */
  enumerateDevicesAndSetClient(client) {}
  /**
   * @param { device.mojom.UsbEnumerationOptions } options
   * @return {Promise}
   */
  getDevices(options) {}
  /**
   * @param { !string } guid
   * @param { !mojo.InterfaceRequest } deviceReceiver
   * @param { device.mojom.UsbDeviceClientPtr } deviceClient
   */
  getDevice(guid, deviceReceiver, deviceClient) {}
  /**
   * @param { !mojo.AssociatedInterfacePtrInfo } client
   */
  setClient(client) {}
};

goog.provide('device.mojom.UsbDeviceManager_EnumerateDevicesAndSetClient_Params');

device.mojom.UsbDeviceManager_EnumerateDevicesAndSetClient_Params = class {
  constructor() {
    /** @type { !mojo.AssociatedInterfacePtrInfo } */
    this.client;
  }
};

goog.provide('device.mojom.UsbDeviceManager_EnumerateDevicesAndSetClient_ResponseParams');

device.mojom.UsbDeviceManager_EnumerateDevicesAndSetClient_ResponseParams = class {
  constructor() {
    /** @type { !Array<device.mojom.UsbDeviceInfo> } */
    this.results;
  }
};

goog.provide('device.mojom.UsbDeviceManager_GetDevices_Params');

device.mojom.UsbDeviceManager_GetDevices_Params = class {
  constructor() {
    /** @type { device.mojom.UsbEnumerationOptions } */
    this.options;
  }
};

goog.provide('device.mojom.UsbDeviceManager_GetDevices_ResponseParams');

device.mojom.UsbDeviceManager_GetDevices_ResponseParams = class {
  constructor() {
    /** @type { !Array<device.mojom.UsbDeviceInfo> } */
    this.results;
  }
};

goog.provide('device.mojom.UsbDeviceManager_GetDevice_Params');

device.mojom.UsbDeviceManager_GetDevice_Params = class {
  constructor() {
    /** @type { !string } */
    this.guid;
    /** @type { !mojo.InterfaceRequest } */
    this.deviceReceiver;
    /** @type { device.mojom.UsbDeviceClientPtr } */
    this.deviceClient;
  }
};

goog.provide('device.mojom.UsbDeviceManager_SetClient_Params');

device.mojom.UsbDeviceManager_SetClient_Params = class {
  constructor() {
    /** @type { !mojo.AssociatedInterfacePtrInfo } */
    this.client;
  }
};
