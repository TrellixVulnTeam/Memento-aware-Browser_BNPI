// extensions/common/api/mime_handler.mojom.externs.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2018 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.



goog.provide('extensions.mimeHandler.MimeHandlerService');
goog.provide('extensions.mimeHandler.MimeHandlerServiceImpl');
goog.provide('extensions.mimeHandler.MimeHandlerServicePtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
extensions.mimeHandler.MimeHandlerService;

/** @interface */
extensions.mimeHandler.MimeHandlerServiceImpl = class {
  /**
   * @return {Promise}
   */
  getStreamInfo() {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { extensions.mimeHandler.MimeHandlerServiceImpl }
 */
extensions.mimeHandler.MimeHandlerServicePtr = class {
  /**
   * @return {Promise}
   */
  getStreamInfo() {}
};

goog.provide('extensions.mimeHandler.BeforeUnloadControl');
goog.provide('extensions.mimeHandler.BeforeUnloadControlImpl');
goog.provide('extensions.mimeHandler.BeforeUnloadControlPtr');



/**
 * @const
 * @type { !mojo.Interface };
 */
extensions.mimeHandler.BeforeUnloadControl;

/** @interface */
extensions.mimeHandler.BeforeUnloadControlImpl = class {
  /**
   * @param { !boolean } showDialog
   * @return {Promise}
   */
  setShowBeforeUnloadDialog(showDialog) {}
};

/**
 * @implements { mojo.InterfacePtr }
 * @implements { extensions.mimeHandler.BeforeUnloadControlImpl }
 */
extensions.mimeHandler.BeforeUnloadControlPtr = class {
  /**
   * @param { !boolean } showDialog
   * @return {Promise}
   */
  setShowBeforeUnloadDialog(showDialog) {}
};

goog.provide('extensions.mimeHandler.StreamInfo');

extensions.mimeHandler.StreamInfo = class {
  constructor() {
    /** @type { !string } */
    this.mimeType;
    /** @type { !string } */
    this.originalUrl;
    /** @type { !string } */
    this.streamUrl;
    /** @type { !number } */
    this.tabId;
    /** @type { !boolean } */
    this.embedded;
    /** @type { !Map<string, string> } */
    this.responseHeaders;
  }
};

goog.provide('extensions.mimeHandler.MimeHandlerService_GetStreamInfo_Params');

extensions.mimeHandler.MimeHandlerService_GetStreamInfo_Params = class {
  constructor() {
  }
};

goog.provide('extensions.mimeHandler.MimeHandlerService_GetStreamInfo_ResponseParams');

extensions.mimeHandler.MimeHandlerService_GetStreamInfo_ResponseParams = class {
  constructor() {
    /** @type { extensions.mimeHandler.StreamInfo } */
    this.streamInfo;
  }
};

goog.provide('extensions.mimeHandler.BeforeUnloadControl_SetShowBeforeUnloadDialog_Params');

extensions.mimeHandler.BeforeUnloadControl_SetShowBeforeUnloadDialog_Params = class {
  constructor() {
    /** @type { !boolean } */
    this.showDialog;
  }
};

goog.provide('extensions.mimeHandler.BeforeUnloadControl_SetShowBeforeUnloadDialog_ResponseParams');

extensions.mimeHandler.BeforeUnloadControl_SetShowBeforeUnloadDialog_ResponseParams = class {
  constructor() {
  }
};
