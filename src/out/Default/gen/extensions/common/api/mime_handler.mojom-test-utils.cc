// extensions/common/api/mime_handler.mojom-test-utils.cc is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-private-field"
#endif


#include "extensions/common/api/mime_handler.mojom-test-utils.h"

#include <utility>

#include "base/bind.h"
#include "base/run_loop.h"


#ifndef EXTENSIONS_COMMON_API_MIME_HANDLER_MOJOM_JUMBO_H_
#define EXTENSIONS_COMMON_API_MIME_HANDLER_MOJOM_JUMBO_H_
#endif


namespace extensions {
namespace mime_handler {


void MimeHandlerServiceInterceptorForTesting::GetStreamInfo(GetStreamInfoCallback callback) {
  GetForwardingInterface()->GetStreamInfo(std::move(callback));
}
MimeHandlerServiceAsyncWaiter::MimeHandlerServiceAsyncWaiter(
    MimeHandlerService* proxy) : proxy_(proxy) {}

MimeHandlerServiceAsyncWaiter::~MimeHandlerServiceAsyncWaiter() = default;

void MimeHandlerServiceAsyncWaiter::GetStreamInfo(
    StreamInfoPtr* out_stream_info) {
  base::RunLoop loop;
  proxy_->GetStreamInfo(
      base::BindOnce(
          [](base::RunLoop* loop,
             StreamInfoPtr* out_stream_info
,
             StreamInfoPtr stream_info) {*out_stream_info = std::move(stream_info);
            loop->Quit();
          },
          &loop,
          out_stream_info));
  loop.Run();
}



void BeforeUnloadControlInterceptorForTesting::SetShowBeforeUnloadDialog(bool show_dialog, SetShowBeforeUnloadDialogCallback callback) {
  GetForwardingInterface()->SetShowBeforeUnloadDialog(std::move(show_dialog), std::move(callback));
}
BeforeUnloadControlAsyncWaiter::BeforeUnloadControlAsyncWaiter(
    BeforeUnloadControl* proxy) : proxy_(proxy) {}

BeforeUnloadControlAsyncWaiter::~BeforeUnloadControlAsyncWaiter() = default;

void BeforeUnloadControlAsyncWaiter::SetShowBeforeUnloadDialog(
    bool show_dialog) {
  base::RunLoop loop;
  proxy_->SetShowBeforeUnloadDialog(std::move(show_dialog),
      base::BindOnce(
          [](base::RunLoop* loop) {
            loop->Quit();
          },
          &loop));
  loop.Run();
}





}  // namespace mime_handler
}  // namespace extensions

#if defined(__clang__)
#pragma clang diagnostic pop
#endif