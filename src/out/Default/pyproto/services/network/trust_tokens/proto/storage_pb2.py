# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: storage.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import public_pb2 as public__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='storage.proto',
  package='network',
  syntax='proto2',
  serialized_options=_b('H\003'),
  serialized_pb=_b('\n\rstorage.proto\x12\x07network\x1a\x0cpublic.proto\"T\n\x16TrustTokenIssuerConfig\x12#\n\x06tokens\x18\x03 \x03(\x0b\x32\x13.network.TrustToken\x12\x15\n\rlast_issuance\x18\x04 \x01(\t\"6\n\x18TrustTokenToplevelConfig\x12\x1a\n\x12\x61ssociated_issuers\x18\x01 \x03(\t\"\x8a\x01\n\"TrustTokenIssuerToplevelPairConfig\x12\x17\n\x0flast_redemption\x18\x01 \x01(\t\x12K\n\x18signed_redemption_record\x18\x02 \x01(\x0b\x32).network.SignedTrustTokenRedemptionRecordB\x02H\x03')
  ,
  dependencies=[public__pb2.DESCRIPTOR,])




_TRUSTTOKENISSUERCONFIG = _descriptor.Descriptor(
  name='TrustTokenIssuerConfig',
  full_name='network.TrustTokenIssuerConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tokens', full_name='network.TrustTokenIssuerConfig.tokens', index=0,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='last_issuance', full_name='network.TrustTokenIssuerConfig.last_issuance', index=1,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=40,
  serialized_end=124,
)


_TRUSTTOKENTOPLEVELCONFIG = _descriptor.Descriptor(
  name='TrustTokenToplevelConfig',
  full_name='network.TrustTokenToplevelConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='associated_issuers', full_name='network.TrustTokenToplevelConfig.associated_issuers', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=126,
  serialized_end=180,
)


_TRUSTTOKENISSUERTOPLEVELPAIRCONFIG = _descriptor.Descriptor(
  name='TrustTokenIssuerToplevelPairConfig',
  full_name='network.TrustTokenIssuerToplevelPairConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='last_redemption', full_name='network.TrustTokenIssuerToplevelPairConfig.last_redemption', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signed_redemption_record', full_name='network.TrustTokenIssuerToplevelPairConfig.signed_redemption_record', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=183,
  serialized_end=321,
)

_TRUSTTOKENISSUERCONFIG.fields_by_name['tokens'].message_type = public__pb2._TRUSTTOKEN
_TRUSTTOKENISSUERTOPLEVELPAIRCONFIG.fields_by_name['signed_redemption_record'].message_type = public__pb2._SIGNEDTRUSTTOKENREDEMPTIONRECORD
DESCRIPTOR.message_types_by_name['TrustTokenIssuerConfig'] = _TRUSTTOKENISSUERCONFIG
DESCRIPTOR.message_types_by_name['TrustTokenToplevelConfig'] = _TRUSTTOKENTOPLEVELCONFIG
DESCRIPTOR.message_types_by_name['TrustTokenIssuerToplevelPairConfig'] = _TRUSTTOKENISSUERTOPLEVELPAIRCONFIG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TrustTokenIssuerConfig = _reflection.GeneratedProtocolMessageType('TrustTokenIssuerConfig', (_message.Message,), {
  'DESCRIPTOR' : _TRUSTTOKENISSUERCONFIG,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:network.TrustTokenIssuerConfig)
  })
_sym_db.RegisterMessage(TrustTokenIssuerConfig)

TrustTokenToplevelConfig = _reflection.GeneratedProtocolMessageType('TrustTokenToplevelConfig', (_message.Message,), {
  'DESCRIPTOR' : _TRUSTTOKENTOPLEVELCONFIG,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:network.TrustTokenToplevelConfig)
  })
_sym_db.RegisterMessage(TrustTokenToplevelConfig)

TrustTokenIssuerToplevelPairConfig = _reflection.GeneratedProtocolMessageType('TrustTokenIssuerToplevelPairConfig', (_message.Message,), {
  'DESCRIPTOR' : _TRUSTTOKENISSUERTOPLEVELPAIRCONFIG,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:network.TrustTokenIssuerToplevelPairConfig)
  })
_sym_db.RegisterMessage(TrustTokenIssuerToplevelPairConfig)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
