# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/ui.gni")

# This component was split from :cursor to allow Blink to depend on it without
# bringing all of //ui/base/cursor.
component("cursor_base") {
  output_name = "ui_base_cursor_base"
  sources = [
    "cursor.cc",
    "cursor.h",
    "cursor_factory.cc",
    "cursor_factory.h",
    "cursor_size.h",
  ]
  defines = [ "IS_UI_BASE_CURSOR_BASE_IMPL" ]
  public_deps = [
    "//base",
    "//skia",
    "//ui/base/cursor/mojom:cursor_type",
    "//ui/gfx/geometry",
  ]
  deps = [ "//ui/gfx:geometry_skia" ]

  if (use_x11) {
    sources += [ "cursor_x11.cc" ]
    deps += [ "//ui/base/x" ]
  }

  if (use_ozone) {
    sources += [ "cursor_ozone.cc" ]
  }

  if (is_win) {
    sources += [ "cursor_win.cc" ]
  }
}

if (use_aura) {
  component("cursor") {
    output_name = "ui_base_cursor"
    sources = [
      "cursor_loader.h",
      "cursor_lookup.cc",
      "cursor_lookup.h",
      "cursor_util.cc",
      "cursor_util.h",
      "cursors_aura.cc",
      "cursors_aura.h",
      "image_cursors.cc",
      "image_cursors.h",
    ]
    defines = [ "IS_UI_BASE_CURSOR_IMPL" ]
    public_deps = [
      ":cursor_base",
      "//base",
      "//ui/base/cursor/mojom:cursor_type",
      "//ui/display",
      "//ui/gfx:native_widget_types",
    ]
    deps = [
      "//skia",
      "//ui/base",
      "//ui/gfx",
      "//ui/gfx:geometry_skia",
      "//ui/gfx/geometry",
      "//ui/resources:ui_resources_grd",
    ]

    if (is_desktop_linux) {
      sources += [
        "cursor_theme_manager_linux.cc",
        "cursor_theme_manager_linux.h",
        "cursor_theme_manager_linux_observer.h",
      ]
    }

    if (is_win) {
      sources += [
        "cursor_loader_win.cc",
        "cursor_loader_win.h",
      ]
      deps += [ "//ui/resources:ui_unscaled_resources_grd" ]
    }

    if (use_x11) {
      sources += [
        "cursor_loader_x11.cc",
        "cursor_loader_x11.h",
      ]
      public_deps += [
        "//ui/base/x",
        "//ui/gfx/x",
      ]
    }

    if (use_ozone) {
      sources += [
        "cursor_loader_ozone.cc",
        "cursor_loader_ozone.h",
        "ozone/bitmap_cursor_factory_ozone.cc",
        "ozone/bitmap_cursor_factory_ozone.h",
      ]
      public_deps += [
        "//skia",
        "//ui/gfx/geometry",
      ]
    }
  }
}

source_set("unittests") {
  testonly = true
  sources = []
  deps = [
    "//skia",
    "//testing/gtest",
    "//ui/gfx/geometry",
  ]

  if (!is_ios) {
    sources += [ "cursor_unittest.cc" ]
    deps += [
      ":cursor_base",
      "//ui/base/cursor/mojom:cursor_type",
      "//ui/gfx:geometry_skia",
    ]
  }

  if (use_aura) {
    sources += [ "cursor_util_unittest.cc" ]
    deps += [ ":cursor" ]
  }
}
